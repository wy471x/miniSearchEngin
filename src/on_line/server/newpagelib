<doc>     <docid>1<docid>     <title>德国高校研发采矿机器人，安全省钱两不误</title>     <link>http://www.leiphone.com/news/201610/zob8fscJXxMkYvrS.html</link>     <content>众所周知，矿工是世界上最辛苦、最危险的工作之一。几个世纪以来，包括坍塌、爆炸在内的各类矿难无时无刻都在威胁着广大矿工的生命安全。与危险相伴的，还有矿井下恶劣的工作环境——炎热、潮湿，而且含氧量很低。但悲剧的是，因为地表的矿产资源已经被人类消耗殆尽，所以矿井就需要挖得越来越深，其中最深的矿井已经到达地下四千米！相当于十幢帝国大厦！由于采矿工作的危险系数不断攀升，采矿机器人便应运而生了。日前，来自德国弗莱贝格工业大学（TU Freiberg）的 Mining-ROX 项目研发了一款叫作 Julilus 的机器人，它不但可以为整个采矿过程省下一大笔钱，还可以提升采矿的安全系数。下面，就让我们一起走进 Mining-ROX，一探究竟。Mining-ROX 到底是什么？Mining-ROX 是由TU Freiberg主导的研发项目。而TU Freiberg 是全欧洲唯一一个开展此类研究，并且拥有教学矿井的高校。这个研发团队希望利用自动化机器人去采矿，从而避免矿工继续从事危险的工作。另外，采矿机器人也可以参与矿难救援。这个项目其实是&nbsp;Robots in Saxony（ROX） 的一部分—— ROX 是德国多所高校的合作项目，旨在将自动服务机器人应用于非结构化的环境中。而德累斯顿工业大学的兄弟项目 Teaching Robots in Saxony（T-ROX）在今年以 Team WEIR 的身份进入了 KUKA Innovation Award at Hannover Messe 的决赛。目前，Mining-ROX 项目拥有两个机器人：Alexander 和 Julius（都是以德国著名科学家的名字命名的）。下面，就让我们来认识一下这两个机器人吧！Alexander 是一个四轮驱动电动移动平台，它利用了 ROS Indigo 系统。这个平台是基于 Clearpath robotics Husky 打造的。它有两个激光扫描器，一个照明系统，以太网摄像机和&nbsp;RGB-D 摄像机。Julius 也是一个四轮驱动电动移动平台，但它是基于&nbsp;Innok 机械车打造的。它也用了ROS Indigo系统，但是感应器比 Alexander 少。它还拥有一个 UR5 操控器和 Robotiq 三指抓握器。Mining-ROX 项目的第三个机器人叫 Elisabeth，目前还处于研发中。接下来，笔者针对“在未来的采矿业中，机器人有多重要”这个问题，采访了来自 TU Freiberg 的 Bernhard Jung 教授。Robotiq：您为什么认为像 Julius 这样的自动化机器人对未来的采矿业而言非常重要？Bernhard Jung 教授：你懂的，矿下的工作环境实在是太恶劣了。而且随着矿井越挖越深，井内将会变得非常炎热，而通风系统和空调的建设造价昂贵。这种时候，就需要机器人登场，它们可以去到那些环境特别艰苦以及缺少“老司机”矿工的地方。实际上，只要我们把眼光放长远一些，就会知道在未来，矿工会越来越少。Robotiq：目前，您使用 Julilus 在哪些场景中进行勘探了呢？Bernhard Jung 教授：Julius 的一个作用是在勘探过程中扮演人类的小助手。它可以陪同一个调查员下井，搬一些重物，同时收集感应到的数据。另外，它可以手握并且操作一些测量设备——这些设备如果是由调查员一直拿着的话，一定会筋疲力尽。另外，Julius 还可以在危险系数很高的矿井下进行勘探，包括哪些矿难发生地、废弃矿井或者是完全无人的矿井。Robotiq：目前，您有两款研究型机器人。它们二者肩负的研究目标有什么不同呢？Bernhard Jung 教授：我们希望用 Julius 在矿井中扮演移动控制器的角色。它可以收集感应数据，而这些数据可以通过视觉定位功能进行自动归类。同时，它可以操作那些为人类而设的手持设备。在勘探环境下，Julius 可以被人类远程遥控。另外，这些机器人需要和基站之间建立通讯联系——这是靠贯穿矿井下的 WLAN 站实现的。而 Alexander 是我们用于井下 3D 测绘的另一个移动机器人。它带有几个摄像机和激光雷达传感器。Robotiq：为什么您为 Julius 的控制器选择了 Robotiq 三指抓握器&nbsp;？Bernhard Jung 教授：我们想要寻找多功能，并且可以抓住形状各异的物体的抓握器。但是因为囊中羞涩，所以我们的备选范围真的很小。这款机器人如果需要抓住人类使用的扫描设备（比如用于现场材料分析的 XRF-scanner），就需要拥有像手一样的抓握器，所以这款三指抓握器就是我们最好的选择了。另外，在地下采矿环境中，它还需要避免酸水腐蚀。幸运的是，Robotiq 自带一副防酸手套。Robotiq：您使用了&nbsp;ROS Indigo 系统来控制 Julius，那么 ROS 的兼容性会影响你对抓握器的选择吗？Bernhard Jung 教授：ROS 的兼容性非常重要。我们所有的控制软件都基于 ROS 系统：移动机器人平台，UR5 机械臂以及抓握器。没有了 ROS 的支持，我们就不会选择 Robotiq 抓握器了。Robotiq：UR5 的协作性对采矿机器人而言很重要吗？Bernhard Jung 教授：&nbsp;UR5 的轻量级设计对有效载荷以及电量都十分有限的移动机器人而言非常重要。但是，更重要的是保证安全。UR5 的安全系统已经通过 TÜV 的认证，所以我们才在 Julius 机器人中使用它。Robotiq：Mining-RO 和 Julius 机器人的下一步计划是什么？Bernhard Jung 教授：我们想做的事情还有很多。Julius 下一步的计划是，在一个废弃矿井内建立无线通讯网络。而就 Mining-ROX 项目而言，我们的目标是脑洞大开，看看移动机器人扫描的 3D 矿井模型还可以有什么用途——比如给矿工和救援团队定制 VR 训练模拟器等等。Via Robohub推荐阅读：WRC 2016| 世界机器人大会创办以来的第一个Demo Day，王田苗、徐小平助力科学家“下海”创业WRC 2016｜日本东北大学Kazuhiro Kosuge教授：通用型工业机器人才是未来WRC 2016 | 真格基金徐小平：资本和科技的关系</content></doc>
<doc>     <docid>2<docid>     <title>CNCC 2016 | 出门问问李志飞：AI 创业路上的那些坑和机遇</title>     <link>http://www.leiphone.com/news/201610/WWKIbKzUk4Gh2J4i.html</link>     <content>雷锋网按：本文根据出门问问创始人兼 CEO&nbsp;李志飞博士 10 月 22日在 CNCC 2016 上所做的大会特邀报告《&nbsp;AI 创业路上的那些坑与机遇&nbsp;&nbsp;》编辑整理而来，在未改变其原意的基础上略作了删减。简介：李志飞毕业于约翰霍普金斯大学，获得计算机博士，身为自然语言处理专家的他是前谷歌总部 Research Scientist、谷歌翻译的开发者、机器翻译专家。2012 年，李志飞回国创办人工智能公司出门问问，携团队独立开发了包括语音交互、智能推送、手势交互、计算机视觉、以及机器人&nbsp;SLAM 在内的一整套综合性人工智能交互技术。同时研发了 Ticwatch（问问手表）智能手表、Ticmirror（问问魔镜）智能车载后视镜等人工智能落地产品，在海内外市场获得极大肯定。2015 年出门问问还成为谷歌官方合作伙伴，并获得来自谷歌的 C 轮融资。AI 创业路上的那些坑与机遇在过去这几年，人工智能获得了非常大的关注。2012 年刚刚创业时，很多人还不太清楚人工智能是什么。到了今天，大家每天都会看到关于人工智能的新闻，无论是“人工智能将会引起机器革命”，还是“AlphaGo 战胜围棋大师李世石”，甚至是“学界大佬警告称：人工智能可能是人类的最后一个科技发明”等等，都占据了许多媒体的头版头条。众多的言论吸引着大众的目光，舆论的关注也影响着投资界的判断，很多人工智能领域的创业者越来越容易获得投资。一方面来说是个好事，很多学者已经不仅仅只能局限于自己做研究、发论文，还能选择利用自己的技术出来创业，把它产品化、商业化，真正把技术推到大家的日常生活中。但另一方面来说，AI 的创业究竟是什么情况呢？是像很多人听说的那样吗？其实并不一定。AI 创业可能和中国的很多偏交易型的创业（ O2O、电商、P2P ）或偏运营型的创业（ 滴滴 ）都不同，它有一些自己独特的规律，当然也有很多独有的困难。阶段一：打怪升级根据出门问问一路走来的历程，也许大家能了解到 AI 创业公司是如何完成自身的蜕变与重生的，如何一次次地跳出自己原本的框架不断向外拓展。由于之前长期从事自然语言处理、语音交互、机器学习等相关技术研究和产品开发的背景，在公司成立之初，我们出门问问团队仅仅用了十个月左右的时间就开发出了一套人工智能语音交互系统，包括技术的研发和内容的对接，以“出门问问”APP 的形式推入市场。做这个产品的初衷就是语音搜索，当用户出门时，只需要拿起手机，打开 APP，问一个问题，就可以得到相关的信息或解决提出的问题。进行了一年的准备工作后，到了 2013 年，“出门问问”公众号上线，语音搜索引擎也有了基本的雏形。一经推出，立马在微信中风靡一时。大家觉得这个产品非常棒，语音产品、语音交互做的很好，于是用户纷纷关注了“出门问问”公众号。大家主要还是出于好奇的“调戏”，比如会问“我帅吗？”、“我是男的还是女的？”等等有趣的问题，但问完之后也就没有然后了。直到今天，不管是 Siri 还是出门问问自己的产品，或多或少还是会有这样的问题。对于语音交互来说，大家都认为这是未来，很有发展前景，很有意思。但是，当用户真正使用这项技术的时候，总是浅尝辄止，或者仍然感觉非常笨拙。鉴于这种情况，我们进一步思考更好的语音搜索应用场景究竟在哪里呢？如果要使用出门问问 APP，我们要拿出手机、解锁屏幕、找到 APP、打开应用、点击按钮、说话提问、搜索结果，之后在进行进一步操作，比如订票等等，这是一个非常繁琐的过程。举个例子，我要订一张从上海飞往北京的南航机票。就像刚刚所说，语音搜索可能只是一系列操作中的一步，所以语音搜索 APP 的形态可能无法给用户带来很多实际价值。再比如 Siri，可能就不需要之前的那些操作步骤。|&nbsp;语音入口？那么语音搜索作为一个入口是否会效果更好呢？那么当时国内没有合适的产品，谷歌的 Google Glass 那段时间正好特别火。于是我们开始思考自己可以做点什么呢？答案是基于&nbsp;Google Glass 开发了一个语音搜索引擎。这是一个入口级别的应用，用户可以带着&nbsp;Google Glass 说：“你好，镜哥哥。我想看下附近有什么好看的电影。”仅仅通过这一句话，就可以完成整个过程。但很不幸的是最后&nbsp;Google Glass 并不是很成功。2014 年上半年中国大约有 2000 副&nbsp;Google Glass， 其中 80% 的用户都装了我们的应用，到了今天，我们的后台可能都看不到一个活跃的用户。所以，硬件的确是一个很好的入口，但问题在于这个硬件产品本身能存在多久。| 产品形态？究竟应该选择怎样的产品形态呢？机器人？车载？可穿戴？在 2014 年，我们认为智能手表是比较合适的类别。这并不是大家想象中非常高大上的品类，因为那时的用户还不会大量去购买机器人这些成本较高的品类。那么事实上，到今天来看，智能手表趋势是智能设备、智能硬件中最大的一个品类。当我们准备进入智能硬件的领域时，发现我们没有操作系统，没有硬件，也没有人能给我们入口。于是，我们只能咬牙自己先做了一个操作系统，叫做 Ticwear，“Tic”即“Time in control”。但操作系统是需要硬件去承载的，我们自己没有硬件，别人的硬件产品又不能用或者不兼容我们的系统，那怎么办呢？我们决定自己做硬件，这成为了一个关键点。从此以后，一入硬件深似海，这其中有非常多的艰难不能道明。到今年上半年，我们的智能手表做的不错，但考虑到 AI 是一个平台级的技术，如果仅仅用在智能手表一款产品中，可能无法发挥所有的想象力。所以，接下来我们在积极地拓展其他的智能硬件产品，比如马上要推向市场的智能车载的一个产品 TicMirror（问问魔镜）。出门问问“打怪升级”这一路，从语音应用开发及人工智能技术积累，到软硬结合，将技术落地智能可穿戴设备，再到今天的把领域拓展到车载和其他品类。其实回想起来这些是我一开始想做的吗？并不尽然，我们一直以来的梦想还是想把人工智能的技术落实到大众日常的生活中。在实现梦想的过程中，到现在来看可能我们是走了这样的一条路。梦想是很宏大、很激动人心的，但实现梦想的道路是曲折的，只有落实到细节上才有可能实现梦想。这个过程可能是人工智能领域的创业者未来都会遇到的情况，无论你现在融资多么成功，媒体多么吹捧，最后还是要回归到有多少用户在使用你的产品，这就是商业的本质。阶段二：商业化AI 是非常高科技的一项技术，过去也的确没有非常好的案例。这几年人工智能领域受到追捧，甚至炒作，一定有内在的原因。|AI 商业化的两条路所以，AI 的商业化之路应该有一些方向，我认为常见的 AI 产业化路线主要有两条：在已有的产品中实现 AI first 战略，比如 Google；AI 作为技术 API 提供给第三方。“前者适用于大公司，后者适用于小公司。”比如谷歌，之前是移动优先，现在是 AI 优先。这不是说 AI 是公司的唯一业务，而是说公司会把这个战略贯彻到所有的产品中去，包括Google Map、YouTube、社交网络等等，这是非常靠谱的做法。比如说，通过 AI 的算法，改进 YouTube 的分类推荐。人工智能在提升效率、提升用户体验等方面，一定是大公司未来可以着力的方向。除了谷歌，国内的大公司，包括百度、阿里巴巴等也是这么一个思路。但是对于小公司来说，刚刚提到的是不可行的。比如说 Google Translate，上线任何一个 feature（特性）都会有成千上百万的用户在使用。对于一个创业公司来说，它没有这样的产品，而拥有这样产品的大公司往往会选择自己去开发相关的 AI 技术。可能全世界 99% 的创业公司选择的都是 To B 的商业模式，就是把我的技术包装成一个 API，提供给企业用户，让他们用于开发自己的产品。目前来看，这是最经典、最靠谱的一条路。|&nbsp;最终我们选择了 To C&nbsp;To B 的优势在于：初期就能赚到钱；更专注，不需要全栈式团队；实现应用更丰富。To B 的劣势在于：难以扩大规模。To C 的优势在于：打造自主的品牌；逐渐形成规模和商业模式。To C 的劣势在于：需要更长时间的积累；需要全栈式的团队。跟主流的 To B 业务模式不同，我们选择了更加没有天花板的 To C。我们的策略是：针对特定场景进行优化；实现综合性的 AI 技术。但是在从软到硬的过程中，有几个需要注意的方面：必须发现并尊重硬件规律；必须依循硬件的生命周期；硬件的个性化交互创新很难实现。总结所以，总结一下出门问问区别于主流 To B 公司的战略就是：坚持做 C 端产品；横向打通品类；纵向产品深度集成。</content></doc>
<doc>     <docid>3<docid>     <title>WRC 2016｜这次RoboCup机器人足球比赛，中外团队差距在哪儿？</title>     <link>http://www.leiphone.com/news/201610/U3li2miRcufWbrE6.html</link>     <content>10 月份的世界机器人大会，其实可以分为三个部分：学术会议、企业展览、机器人比赛。这其中最具人气的，自然是机器人比赛了。比赛共有 6 种类型，其中的 RoboCup SPL 仿人机器人足球比赛( NAO )为国际机器人领域的专业赛事，极具趣味性，持续 4 天的正式比赛几乎每场观众都“爆满”。机器人常常摔倒，那笨拙可爱的样子会引发一阵大笑，但是当它自己又“咔咔咔”几下，像变形金刚一样站起来时，又会引发更大的一波赞叹声浪。最后取得胜利的是美国 UT Austin （德克萨斯大学奥斯汀分校）队，亚军是澳大利亚 UNSW（新南威尔士大学）队，季军是同济大学队。（冠军 UT Austin 队 )交流赛，但水平很强此次大会是属于交流赛，英文名称为“Pre-RoboCup Asia-Pacific Competition”，所以并非Robocup 每年一度的全球选拔赛。参赛队伍本来有 8 支，中途有 2 支队伍退赛了。所以最后参加的队伍有澳大利亚 UNSW（新南威尔士大学）、美国 UT Austin （德克萨斯大学奥斯汀分校）、同济大学、大连理工、华中科技大学和鲁东大学。（参赛队伍合影留恋）虽然队伍不多，但作为交流赛来说，算是比较高的水平了，因为邀请来了世界级的冠亚军队伍：澳大利亚 UNSW 队是 2015、2014 年世界冠军；美国 UT Austin 队是 2016 年的世界亚军。对于国内的团队来说，与国际顶级高手正面对战，无论从哪个方面来说，都是非常好的切磋学习的机会。“球员”犯规要被罚下场RoboCup SPL 的全称是 “RoboCup Standard Platform League”，参赛队伍使用统一的机器人硬件平台（这次是软银公司的 NAO 机器人），进行纯软件技术的比拼。比赛在一个缩小的足球场上进行，两队机器人按照人类足球赛类似的规则，自主地(非人工遥控)进行足球比赛，进球就算得分。主要比赛规则如下：　　每队进场参赛机器人不得超过 5 个，其中至多 1 个机器人可设置为守门员。　　场地铺设绿色地毯，球门为白色，使用指定的比赛用球（此次分红球、黑白球两种）。　　比赛分上下半场，每个半场各10分钟。球的颜色会影响比赛的难度，由于球门和边线都是白色的，那么黑白球的识别难度就会大很多。机器球员也存在“犯规”的情况，其实当时的比赛经常有球员被罚下场“面壁思过”，惩罚时间为 45 秒，而这样的惩罚其实对得分影响颇大。雷锋网所观看的决赛中，两个球员正在争夺一个球时，其中一个由于“推搡”对手而被罚下场，中场一下子就空了，对方立马轻松进了一球。而这样的情况连续发生了好几次。一般一支队伍里，至多同时 2 个机器人被罚下场，但如果再碰上 1 个故障，那场上就只剩 2 名球员了，2：5 的对垒，胜算可想而知。发生“推搡”的情况，通常是因为避障功能没有做好。“避障其实不难，难在怎么让机器人自己判断应不应该避障。”同济大学参赛队伍 TJArk （同济方舟）队长曾志颖告诉雷锋网，“避障可以用机器学习的方法来做，但是比较麻烦......一般都是让它满足一定条件就去避障。”中外团队的差距在哪里？关于 RoboCup SPL 中涉及的技术，曾志颖表示主要有 4 个部分：模式识别、自主定位、机器人行走和智能决策。机器人首先要识别出球、球门、边界线等，然后根据图像、里程等信息对这些目标物进行定位，再快速平稳地行走，同时多个机器人要相互配合，规划路径选择行动策略。同济大学 TJArk 队参加 RoboCup SPL 有 10 年历史，是中国顶尖团队，最好的成绩是 2016 年的世界八强。同济是以实验室的形式维护着 RoboCup 的传统，由陈启军教授指导，12 名队员几乎都是同一个课题组的。此次 TJArk 团队，由 6 名研究生和 6 名本科生组成。一般来说，一个学生会待 2 年时间，“大四待一年，熟悉比赛，升研一之后作为主力”，曾志颖说道。而雷锋网所了解的另外两支中国队伍，就没有同济这么多队员和系统化的组织结构。但同济还在羡慕着国外团队，因为对方甚至有教授帮着写代码。这次澳大利亚 UNSW 队来了两名队员：Jeremy Collette 和 Kenji Brameld，前者大四，后者才大一。（Jeremy Collette 和 Kenji Brameld）Collette 告诉雷锋网：“几年前，我们的机器人行走使用了强化学习（Reinforcement Learning），这是由我们的一个教授所构建。他使用了仿真模拟（Simulation），然后把学会了行走能力的仿真系统放到真正的机器人上。所以我们的行走能力是最强的。但这个系统的代码已经开源了，这次美国队使用的就是我们的行走系统。”Brameld 补充道：“我们正在开发一些机器学习技术，会在黑白球项目上用到。这个系统目前还没有放到机器人上面，但是已经在测试了。”Collette 和 Brameld 称，UNSW 的 Robocup 队伍每年大概有 5-10 个人，但是今年他们觉得需要更多人，所以今年大概总共有 27 个人，其中大部分是大一新生，另有一些硕士生和博士生。前辈们带着大一新生学习，把他们培养成日后的团队主力。美国队把机器人借给澳大利亚队最终进入决赛争夺冠亚军的，是美国&nbsp;UT Austin 队和澳大利亚&nbsp;UNSW 队。本来 UNSW 胜算很大，但是决赛中系统几乎“崩溃”了。Collette 和 Brameld 从澳大利亚只带来了 2 个机器人，另外从中国科学技术大学借了 3 个机器人。不幸的是，他们自己带的一个机器人在决赛开场前 5 分钟硬件坏了，而且 WiFi 连接还出了问题，雪上加霜。“所以基本情况是这样的：1 个动不了、2-3 个的 WiFi 有问题......其实两个队都进了 5 个球，但我们把 2 个球踢进自己的门，所以最后的比分是 7：3。”&nbsp;说到这儿两位自己都笑了。&quot;不过这让我们意识到很多问题。其中一个就是，就算是 WiFi 有问题，也应该有方法在离线的情况下识别出球门，比如依据守门员球衣的颜色。 我们习惯于根据自己实验室里的环境来设计机器人，但这次让我们意识到比赛现场有很多突发状况需要考虑。”另外，他们还提到美国队使用了一种很特别的 “Walking Kick”的方法，机器人能一边走一边踢球，所以速度很快，给他们很大启发。虽然有点可惜，没有拿第一，但 Collette 和 Brameld 心情还不错。当时 UNSW 的机器人坏掉时，“美国队很快就借给我们一个机器人，非常 Nice“ ，Collette 说道。另外跟中国团队的交流，他们觉得很有意思。有一次，Brameld 跟一个中国队员聊天，相互交流有点困难。但是聊到了霍夫变换（Hough Transform）算法，发现两人都用了这个算法，就聊起来了。“这很酷，两个完全不同文化不同国家的人有这么一个共同的东西，进行讨论，这很令人兴奋”，Collette 说道。虽然“友谊第一，比赛第二”这种说法已经很老套了，但真的发生了，还是很令人高兴。延伸阅读：WRC 2016 | 李泽湘讲“从研究到创业”：我是如何孵化大疆的WRC 2016 | 加州大学Homayoon Kazerooni教授：钢铁侠并不炫酷，减轻普通人艰辛才能激励机器人发展</content></doc>
<doc>     <docid>4<docid>     <title>段永朝为CSS安全峰会破题：连接赋能 安全升维</title>     <link>http://www.leiphone.com/news/201610/yZqgKlrzvU4Eeng3.html</link>     <content>10月10日，在第二届中国互联网安全领袖峰会(Cyber Security Summit，简称CSS)召开前，主办方联合腾讯研究院《腾云》期刊组织了一场关于互联网安全的沙龙，邀请了行业知名专家学者、一线安全工程师，为本届CSS安全峰会做了统筹思想、主题定调的会前准备。作为《腾云》杂志客座主编，财经传媒集团首席战略官段永朝出席此次沙龙，并担任特邀主持人。段永朝是互联网与新技术力量的资深研究者，曾出席第一届中国互联网安全领袖峰会，并对今年大会主题有着独到见解。他认为今年“智慧安全，连接赋能”的主题是在去年“智慧互联，安全新生态”基础上的一个递进，是对安全观、治理理念和策略、平台协同和责任的一次全面“升维”。智慧安全，“你中有我 我中有你”段永朝在沙龙中表示，今年提出的“智慧安全”，其含义是要从更高维度，更加多维的角度看待网络安全，做到“你中有我，我中有你”。如今，网络安全已发生改变，它面临隐匿性、模糊性、复杂性、易变性、脆弱性、广域性的特点。这些特点对安全策略和行动提出了新的需求——从过去威胁式、攻防式的安全应对和基于联合博弈的安全策略，过渡到融合治理时代。这也契合了CSS安全峰会构建安全生态圈的重要理念。针对网络安全的新特质，段永朝表示：首先，网络安全是一个长期、广域、动态演进的过程，安全既是一个长效机制，又是一个长期使命。第二，实时多变的信息环境成为安全的新挑战。在腾讯平台上，分分秒秒发生着交往、交易，这些传播行为是大数据基础基于十亿、数十亿人口的实时、整体、融合、演进、连接一切的网络环境和态势。第三，安全事务发生变化。传统的安全事务已经与网络数据应用、软件、群体与个体行为、多元目标实现了相互交叉，多维交织。连接赋能，发挥安全生态价值据悉，腾讯在五年前已提出“连接一切”的口号。本届CSS安全峰会提出“连接赋能”，并再次强调“连接一切”的重要性，基于“连接一切”的总体态势构建一个安全有效的保障体系。段永朝认为，从策略层面上看，“连接赋能”首先是一个生态格局。在连接一切的背景下，应关注新工具、新技术、新设备、新场景、新模式对安全形态的影响，并且做持续的评估、跟踪。数据不是孤立的，安全企业也不是孤立的，安全产业更不能孤立，需要关注数据的互联互通、资源流动性、多模式交互环境下的安全挑战。在这个网络信息高速发展的时代，我们在享受互联网带来便捷生活的同时，也面临着诸如信息泄露、电信诈骗等安全问题，公众对互联网的认知也急需迭代更新，进行一次全方位的安全“升维”。CSS安全峰会正是基于此背景提出共同构建持续生长的全球安全新生态，提高互联网产业整体安全能力，为互联网+建设发展赋予更多的能量和动力。据悉，本届峰会将深讨包括量子通信的产业应用、智慧连接与全球协同、人工智能与网络安全、云安全与数据安全、智能汽车信息安全、国际安全技术新趋势、互联网金融安全挑战等前沿话题。主办方还将携手国际顶尖企业的技术专家开设首届“国际安全技术峰会”，聚焦十大热门产业的安全趋势与技术研究成果，探讨国际技术交流合作的协同机制。本届峰会预计将有近万人次参与，全球范围的与会企业将突破500家，包括苹果、微软、高通、谷歌、思科、英特尔、McAfee等国际顶尖企业。值得关注的是，包括量子通讯领军人物潘建伟，移动设备和云端的技术专家，来自Check Point亚太、中东及非洲地区总经理Evan Dumas，以及人工智能等前沿安全技术领域的顶级专家将献计献策。</content></doc>
<doc>     <docid>5<docid>     <title>Yoli口语：一个美国人的微信生意</title>     <link>http://www.leiphone.com/news/201610/ZrLUUomU67afORa9.html</link>     <content>1994年，James LaLonde 第一次来中国，当时的北京还没有三环，一眼望去，路面上全是自行车。如今，James 俨然是中国通，能听出别人的南方口音，也能在被问及“为什么把精力从 Native App 转移到Web App”时，脱口而出“从夏天到秋天，我感觉最大的区别就是风有点凉，时候到了”，这种诗意且贴切的句子。Drew 是&nbsp;James 的员工，来中国的时间比&nbsp;James 晚17年。和 James 一样，在 Drew 看来，“那时候的中国很落后，美国已经有了 Facebook、Twitter，而中国却只有抄袭。”所以在 Drew 的认知里，中国人最擅长的事情是从1到很多，而不是从0到1。凡事皆有例外，“微信是中国第一个从0到1的产品。”Drew 表示。而 James 所谓的“凉风”也多少与此相关。黄金时代2012年，James 有一半的时间在中国，一半在美国。他走在北京的街头巷尾，观察着每个人在用手机干什么。同一个时代会在不同的人群里留下不同的痕迹，对 James 来说，这些“不同”是一个肉眼可见的商机。“美国是Computer first，回家的第一件事是打开电脑。你不可能在地铁里看到一个人用手机看电影。日本有，韩国有，中国也有，但美国没有。”同时，中国是世界上人口最多的国家。所以，James 决定在中国做一个代理公司——游道易，分发优秀的海外游戏软件。业务范围是：国内做 iOS 与“各种 Android ”，国外做 Google Play。Drew 2013 年加入这个公司，在他看来，那是手游的黄金时期。“花5万美金就可以做一款好的手游，收益也很高。&nbsp;”而他需要做的事情只是说服国外的开发者接受免费下载：“2013年之前，在国外几乎所有的游戏都是1美金，需要付费。我跟他们说，如果跟我们合作，我们能保证你赚更多的钱，但是必须免费下载。”开发者表示：“那不可能。”事实胜于雄辩，Drew 常举的例子是，“一款1美金的游戏在中国上线6个月，它的下载量能达到3万，可当它免费后，依靠应用内消费，收入反而会增长10~20倍。”那时候，钱太好赚了。到了后期，游道易基本上停掉了代理业务，开始自己开发游戏。拐点暴利的行业从来不缺跟随者，手游的拐点出现在2014年。虽然 Drew 不太愿意透露他们当年的状况，但他跟我分享了一篇文章，上面写着：“2014年如果要做一个手机游戏，要用至少100万美金去做广告，包括电视台广告。”另外，指数级增长的成本并不是唯一障碍，由于同时负责不同渠道在不同区域的分发，Drew 能真切地品尝到 Android 碎片化在中国产生的恶果，并对此心有余悸：“Google Play的话，我只需要把 APK 上传就完事，5分钟就能把游戏软件发布到全世界，但是中国的 Android 市场我可能要花一个多月，给每一个渠道适配，还要花钱，太麻烦了，我不想再做。 ”对此，James 倒没有太困扰，作为一个生意人，他认为自己的专业是判断。按照以往的节奏，在这三到五年的节骨眼上，他往往会选择开一个新公司。不过与以往又不太一样的是，他有一种感觉，这次的转变或许会暗合一个时代的拐点。作为从业多年的互联网人士，Drew 和&nbsp;James 有一个共识，“Tech Circle一般就是 8 年到 10 年，而 2008 年到现在已经 8 年了。”至于为什么从 2008 年开始算，“因为那是 App Store 出来的时间。”疯狂的微信2012 年圣诞，James 在 Facebook 上更新了最后一条动态，“Merry Christmas，bye-bye。”此时，他用了一年微信，很确定这是一款自己一直在等的软件。当时，这是一个纯个人的判断，不久后，他才见识到了微信更“疯狂”的一面：“美国 90 后也用很多类似软件，但用这些的比老人多。在中国，老人们也在用微信，几乎所有人都在用，这在美国是不可能的。”当然，James 倒没有远见卓识到，有一天自己会把生意也放在上面。毕竟，那时候微信支付还没出现。Drew 收到的第一个微信红包是在 2014 年的年会上，他毫不掩饰自己当时的震惊：“OMG，this is real，大家都在发红包，我吓一跳，这个是真钱。我疯掉了，不会相信这是真的，这在国外不会发生。”“在美国，有人用 Apple Pay，但用的人很少，我感觉未来在这里。”James 补充道。那时他们的办公室在望京SOHO，根据 Drew 的体会，楼下的店铺几乎在半年时间内就普及了微信支付，“现在我们已经习惯了，非常快，你不会记得以前没有微信支付的生活，记不住的，这个太爽了。”至此，他开始寻思，也许“微信 App”是个好主意，这里离钱近，离用户也近。微信App--Yoli“这是中国人最熟悉的一个页面，Yoli 就在这里。”Drew 指着微信第一屏告诉雷锋网。Yoli 是一款完全依托在微信上的英语教育应用，学生用公众号，老师用企业号，两者通过微信对话。Yoli 的商业模式类似滴滴，课时被控制在 15 分钟，通过筛选的老师会在大洋彼岸抢单，及时响应学生的对话诉求。根据历史轨迹，平台的更迭往往是游戏打头阵，不过与很多 H5 开发者有所不同的是，Drew 和 James 都不认为游戏是第一选择。一方面，“游戏是强体验的东西，如果要做这个东西，最好还是做&nbsp;Native&nbsp;App”；另一方面，H5 游戏曾经在微信上火过，但很快销声匿迹。除了官方口径的诱导分享以外，Drew 不惮说出腾讯本质上是一个游戏公司的事实。所以他们选择了受众同样广泛的教育，同时，在体验方面，严格围绕微信原生的交互做文章。“如果要加载很多页面，速度会非常慢。Yoli 的核心就是微信沟通，比如发语音发文字都在微信的对话栏里，H5 页面放在外围，用户会觉得很爽。”产品上线的那天，Drew 毫不意外地失眠了。他深知自己提供的服务是有价值的，所以并不担心没人用，但他很怕大洋彼岸的同胞不抢单，自己得疯狂地上课。但这种状况并没有发生，产品上线之后，他们几乎没上过课。而在谈话间隙，James 出去买了一杯咖啡，回来时他拿出手机告诉我，“就在刚才，12 节课上完了。”</content></doc>
<doc>     <docid>6<docid>     <title>潘柱廷：循互联网安全之路，助力CSS峰会连接赋能</title>     <link>http://www.leiphone.com/news/201610/LCOD9ZUUtPeBoCJa.html</link>     <content>2016第二届中国互联网安全领袖峰会(Cyber Security Summit，简称CSS)将于11月9日－10日在北京国家会议中心召开。峰会召开前夕，主办方于10月10日联合腾讯研究院《腾云》期刊在北京举办了一场关于互联网安全的沙龙。北京启明星辰信息技术有限公司首席战略官潘柱廷，在沙龙中发表了以《循路，互联网安全》为主题的演讲。作为大数据专家委员会副秘书长、中国人民银行信息安全顾问，潘柱廷对互联网信息安全前沿技术具有敏锐的把握。在本次演讲中，他从互联网安全的战略、体系与治理三大方面，对互联网安全进行了全面的解读。破题互联网安全 构建无边界协同平台随着互联网技术的飞速发展，互联网面对的安全威胁正日益加剧。但是，每一个人对“互联网安全”的理解都是不同的，因此，在潘柱廷看来，谈“互联网安全”就需要首先对其进行破题。潘柱廷拆分出“互联网”与“安全”两个核心词，分别进行了阐释。潘柱廷认为“互联网”已从过去的系统、工具、关键基础设施转换为“网络空间”，我们存在于这个空间中，意味着我们讨论互联网要从空间这个格局去看互联网安全问题；同时，原有聚焦于保密性、完整性、可用性理论的安全观也需要升级，更应该关注安全的本源——守护边界圈内的安全，防护圈外势力的入侵。结合“空间属性”与“安全边界”这两点要素，潘柱廷认为在理解互联网安全问题上就能达成一致意见，进而化解这种困境。因为不同的主体、不同的角色都有各自的安全立场和诉求，而这种诉求和立场是错综交织的，是一种“分别心”，于是就形成了互联网空间中的各种安全问题。因此，需要从战略角度去构建一个互联网安全协同平台，寻求共同的网络安全利益点。事实上，CSS安全峰会正是一个致力于由全球企业共同构建的无边界网络安全平台，让更多企业可以实现全球范围内的技术与数据共享，乃至开发合作，实现优势互补，并为全球网络安全构筑一道强强联合的重要防线。而即将召开的2016 CSS安全峰会将以“智慧安全，连接赋能”为主题，邀请全球企业家、专家、学者共同探讨全球化背景下的国际安全协作新趋势。“修齐治平” 协调个体与群体客观需求在潘柱廷看来，在互联网安全新生态中，对每个参与新生态建设的主体和立场予以关注也是必不可少的。因为互联网安全是有主体和立场的，如果我们不去看这个安全措施是谁要的、谁想的、谁有顾虑的，而产出了一个貌似很快并且不错的解决方案和工具，那往往不能达到很好的效果，因此在考虑整个互联网安全时，我们必须把对每一个主体和立场的尊重放在首位。但是，若关注每一个个体的诉求，就会导致问题复杂化并且无法管理。因此，潘柱廷提出以中国传统的“修齐治平”理论进行简化与归类，来解决这种矛盾。“修身”就是个人安全；“齐家”是机构安全；“治国”是社会安全；而“平天下”则是让国与国之间能够平和、平衡的存在。“修齐治平”理论，把所有的安全的各个角度、维度和立场进行了一个聚类，可看到每一个不同个体或群体的诉求，这样就能在尊重群体诉求的同时，也看到个体之间的差异。在这个框架下，对安全问题势必能有更清晰的认识。这一理论与CSS安全峰会所极力倡导的共建安全生态理念是相通的。因为CSS安全峰会倡导建立的安全新生态圈是在个人、机构社会、国家的多层面构建有机协同的安全系统， 让安全生态全面、健康、可持续发展。以治理替管控 连接赋能安全新生态去年的CSS安全峰会确立了建设安全生态的目标，而今年CSS安全峰会的重心则转向如何良好的管理已经构建的安全生态，让安全生态持续生长、连接赋能。在谈到互联网安全管控与治理时，潘柱廷表示，整个网络空间治理中很重要的一个大原则，就是网络治理并不追求没有问题，而是网络空间秩序度达到让人满意的程度。一切风平浪静不是好的网络，而是小有波澜但没有大风大浪，才是我们期待的网络态势和网络治理目标。在整个治理过程当中，潘柱廷认为应该调动每一个主体的主观能动性和智慧去做对整体有利的事情。因为互联网安全，绝不仅仅是一个技术问题、工程问题、攻防问题，它现在已经是一个真正的、很深刻的社会问题，因此在面对这一日趋复杂的问题时，我们应逐渐放松管控的诉求，而追求治理的诉求。这一观点正契合CSS安全峰会“智慧安全，连接赋能”的主题，CSS安全峰会并不希望管制互联网安全，而是倡导大家聚集在一起，每个人作为其中一个正在转动小齿轮，大家连接在一起互相带动，每个人都有能量，但又借助了他人的能量，然后带动整体转起来，这就是一个连接赋能。事实上，早在第一届CSS安全峰会召开时，就首次向社会提出了“互联网安全新生态”议题，希望调动各方力量，构建一个全新的安全+新生态圈，并以开放、共享、融合的理念搭建平台，建立互联网安全新秩序。预计今年CSS安全峰会将有近万人次参与，全球范围的与会企业将突破500家，包括苹果、微软、高通、谷歌、思科、英特尔、McAfee等国际顶尖企业将会派出重量级嘉宾参会，他们将与腾讯、百度、京东等中国领袖企业的顶级专家在此基础上，深入探讨如何加速构建安全生态，让安全生态持续生长、智慧生长。</content></doc>
<doc>     <docid>7<docid>     <title>韩国大力度拥抱数字货币，拨款 26 亿美元支持区块链 </title>     <link>http://www.leiphone.com/news/201610/Eg7xUHYKXJv4blKz.html</link>     <content>据《韩国先驱报》消息，为了促进金融科技的发展，韩国近日宣布将开展数字货币普及的系统性计划，进一步推广数字货币，比如比特币。为了赶上美国、日本等其他国家数字货币快速发展的脚步，韩国政府此次将拨款 26.5 亿美元用于未来三年的金融技术发展。一些区块链财团也会和政府联手在今年年底开展一些试点项目和综合研究。区块链是数字货币比特币的关键性技术，通过个人电脑网络进行数据共享，能够跟踪且记录所有比特币交易。前不久，韩国金融服务委员会（FSC）主席严钟勇（Yim Jong yong）在第 12 届金融科技中心演示日发表讲话表示，韩国政府将参照美国、日本及其他国家的政策，全方位实现数字货币的系统化。”今年，政府和当地金融企业会成立一个行业联盟，对区块链技术进行联合研究，并研发各种试点项目。”此外，在明年第一季度，韩国将公布金融科技发展路线图，而此次的拨款是为该计划第二阶段的发展定打下基础。严钟勇说：”在计划的第二阶段，政府会致力于重塑现有系统，构建一个积极的金融科技环境。”韩国正在努力取消部分不必要的金融科技监管措施。同时，韩国金融服务委员会还和新加坡金融管理局（MAS）签订了“谅解备忘录”（双方经过协商、谈判达成共识后，用文本的方式记录下来的文书），建立了金融科技领域的双边合作关系。这项协议规定，双方必须共享相关信息、知识和人才。事实上，这并不是韩国第一次为发展区块链技术而努力。在比特币和区块链市场中，韩国一直都是积极的参与者。据报道，去年 2 月 28 日，韩国开设了一个比特币中心，为加密货币爱好者敞开大门。今年，为了建立场外交易（OTC）中买卖双方的联系，使他们可以直接进行证券交易并且降低成本，韩国证券交易所（KRX）开始构建并强化场外交易市场，创建区块链平台。韩国证券交易所并不是韩国唯一一家对区块链技术感兴趣的金融机构。今年四月，韩国最大的银行控股公司之一韩亚金融集团（Hana Financial Group）成为了全球区块链联盟 R3 的一员。报道称韩亚金融集团可以使用区块链技术来防止操纵、篡改数据的黑客。今年九月，韩国金融科技公司还向该国公平贸易委员会（FTC）提起上诉，控告苹果拒绝向他们开放近场通讯 API（应用程序接口）。随着全球多个国家宣布将扩大数字货币的使用率，以赶上金融科技的浪潮，现在韩国政府也开始为赢得未来加大力度了。Via&nbsp;Cryptocoinsnews推荐阅读：登上毕马威“2016全球FinTech100强”榜单的8家中国公司是什么来头？彭博社：亚洲银行都在利用区块链做什么？</content></doc>
<doc>     <docid>8<docid>     <title>打破壁垒玩跨界  黑客大赛GeekPwn上演机器人版“碟中谍”</title>     <link>http://www.leiphone.com/news/201610/qWUrG40Xzazk9X8t.html</link>     <content>10月24日， GeekPwn2016上海·硅谷站落幕。除了与以往相比，技术难度更高的智能设备破解挑战，GeekPwn2016创新性的设置了机器人特工挑战赛和打破结界的跨次元CTF对抗赛。这在以往任何黑客大赛中从未出现过的比赛项目，让人眼前一亮。从物理世界突破数字世界，GeekPwn2016上演机器人版“碟中谍”（窃取信息的机器人“特工”）数位来自全国各地的机器人爱好者，带着他们的“钢铁战士”为我们演示了一场机器人版“碟中谍”。在经历现场手机磁场信号干扰、机器人图像传输模块损坏、机器人冒烟等险象环生的意外后，选手薛恩鹏制作的机器人以绳索吊降的形式，成功打开快递包裹，偷偷潜入主办方设定的“办公区”，将U盘插入USB接口窃取电脑中的数据，完成了设定的规则，摘得桂冠。从数字世界突破物理世界，无人机对抗点燃赛场激情&nbsp;（极棒跨次元CTF）不同于以往的CTF对抗赛，极棒跨次元CTF赛同样开启“跨维打击”。进入决赛的天枢战队、Phrack战队、FlappyPig战队及Nu1L战队四支队伍，以代码为武器，争夺无人机的控制权，在经过1个多小时的脑力鏖战后，Phrack战队抢先获取密钥，操控Nu1L方的无人机发动攻击，紧接着Phrack战队又以同样的方式，控制了天枢战队的无人机。几轮激烈的代码攻防后，正当Phrack战队前进之时，FlappyPig战队后来者居上，打败Phrack战队夺得冠军。打破维度壁垒，GeekPwn重新定义网络安全思考维度（被操控的无人机）提起网络攻击，我们总是想到躲在电脑背后的黑客利用代码搞破坏。然而，随着物联网与人工智能的发展，物理世界与现实世界的界限逐渐模糊，两者在特定条件下，能够发生互动。复杂的网络安全环境，也对信息安全从业者提出了更高的要求。“我们开创性地设置机器人特工和跨次元CTF这种前所未见的比赛形式，是寻求一种打破固有思维的方式来看安全——跨维打击”，GeekPwn主办方，KEEN公司CEO王琦表示，“这要求黑客们的技术需要在现实和虚拟的世界中切换，这拓宽了大家对于网络安全的思考维度。“</content></doc>
<doc>     <docid>9<docid>     <title>GeekPwn大赛黑客实现远程入侵Aldebaran NAO机器人</title>     <link>http://www.leiphone.com/news/201610/r1DJHIYtDFfmGBml.html</link>     <content>10月24日，研究安全防御工作的白泽安全团队在GeekPwn2016黑客大赛上展示了远程控制Aldebaran NAO机器人的技术。他们通过网络触发漏洞，进而远程入侵并控制了Aldebaran NAO机器人，看机器人所见，听机器人所听，成功实现对其远程监视和窃听。NAO机器人是一款在学术领域世界范围内运用最广泛的人工智能机器人。因其具有讨巧的外形、类人化的亲切性和较强的体验感，被Aldebaran Robotics公司开放给所有的高等教育项目，成为了教与学的得力助手，更是改变了传统的教育方式。白泽安全团队成员都在大型金融科技公司负责过安全防御工作，有丰富的Fintech安全对抗和安全防御体系建设经验。此次白泽安全团队通过触发漏洞，实现对机器人进行任意监控。而这一漏洞若被利用，极有可能对全球范围内的NAO机器人产生影响。除此之外，此次GeekPwn黑客大赛还上演了机器特工挑战，机器人入侵模拟的办公室环境，完成插U盘、开机等高难度动作，最终窃取隔离网络电脑中的机密信息。而另一项目“无人机CTF”也颇有看点，选手通过网络攻防技术控制无人机进行对战。在这些前所未见的“人机博弈”中，GeekPwn前瞻性地带来了未来科技安全问题的思索。</content></doc>
<doc>     <docid>10<docid>     <title>谷歌和OpenAI开发“学生”算法：AI如何在不接触数据的情况下学习？</title>     <link>http://www.leiphone.com/news/201610/wXtcXn9aMYOpIQWu.html</link>     <content>跟所有软件一样，人工智能也避免不了遭受黑客入侵的命运。近几个月，安全研究员已经向人们表明，机器学习算法可以被逆向工程化，而且会像个人照片和健康数据一样暴露用户数据。所以，为了保护这些信息，我们该怎么做呢？近日，一份来自 OpenAI 和谷歌的调查结果显示，他们可以让人工智能在不利用个人数据的前提下正常工作。OpenAI 的研究人员 Ian Goodfellow 拿这种系统与医学院的学校教育系统做对比。“医生这个行当干了几十年之后，能积累到非常有用的医学案例，但同时也会知道一些比较私密的个人病史，” Goodfellow&nbsp; 说，“这些医生来到医学院教书时，无需把那些私密的个人病史透露给学生，就能让他们的医术有所长进。”这个即将推出的学生算法能通过学习上百万次仿真决策，不借教师算法赖以形成的基础性信息而模仿老师们做决策的过程。学生算法还通过非敏感的公共数据进行学习以调和结果，并进一步使教师的数据集变得更大众化。OpenAI 和谷歌这次的成果以先前的研究为基础：教会一个学生算法同时使用多个教师算法，结果是，学生算法能运行得更快，结果也更准确。同时，这两家公司也向其他人公开了学生算法的编码程序以让其适应各自系统。但让算法进行反向工程更困难的一点是，学生算法的老师可不止一个。在测试中，研究员用 250 个教师来训练一个学生算法，这意味着学生不会依赖任何特殊敏感数据，而是会综合所有的数据信息。甚至当该人工智能被进行反向工程操作时，黑客也无法从中得到任何信息。Goodfellow 拿医学院来解释这个新型算法非常恰当。因为医学院有大量的信息可以使用，所以在研发医疗人工智能的时候，这种系统会相当受益，同时，它又能保护个人医疗信息不外泄。一个算法能够从每一家医院的数据（像放射性扫描结果或病人信息）中进行学习，而一个学生人工智能系统可以自动从医院网络中进行学习。像谷歌等公司也能用这种技术从用户照片中进行学习，当然，也不用看用户的照片。但是这种人工智能仅限于从用户账号中的图片进行学习。这种技术可以把每个用户的人工智能当做老师，为谷歌照片软件训练更精准的，能自动识别人脸和物体的学生。这种方法能使大数据中的个体信息受到保护，它属于差别隐私的一种。比如，在医院中一名的患者数据就是差别隐私较弱的一种形式。另外，苹果 iOS 10 也使用了差别隐私技术，使系统在不影响个人隐私的前提下，帮助发现大批量用户的使用模式。为了掩盖个人身份，差别隐私会像个人使用模式的小样本中加入数学噪音。随着更多的用户呈现出相同的模式，总体模式就会开始显现，这可以用来增强用户体验。“差别隐私引起了一个悖论，即算法不会从个体中直接学习，但是却能从一大批人群当中学到最有用的信息，”微软研究院 Cynthia Dwork 和宾夕法尼亚大学 Aaron Roth 在书中写道。一个算法越是会模仿它的老师，作出的决策就越有可能和老师的数据集不相符。这是差别隐私的运行准则。“该领域内的所有研究都在探索隐私和实用性这两者之间的平衡点。因为获取更多隐私代表着使的人就会减少，” 机器学习安全研究员 Thomas Ristenpart 在一封给 Quartz 的电子邮件中说道。via：qz.com延伸阅读：差别隐私，iOS 10 更新升级的保护伞</content></doc>
<doc>     <docid>11<docid>     <title>数字货币的一大步：Visa合作公司 Chain 宣布进行区块链开源</title>     <link>http://www.leiphone.com/news/201610/To1ks6Y6lvSqx7As.html</link>     <content>银行和财经公司过去一直都是自己对代码进行修修补补，这些代码的主要功能是用于加密数字货币，例如比特币，同时也对基础模型进行彻底的检查。但是现在这些财经公司打算开放进行数字货币加密的源代码。Chain公司就是其中之一。Chain 是一家刚成立两年的创业公司，位于美国旧金山。最近 Chain 公司决定将其平台开源，将其 Chain Core 软件的开源式版本向广大开发者公开。并且在开源平台 Github 的网站上，可以看到其专属区块链和分布式总账的源代码。Chain 通过将加密技术的源代码进行开放，可以让更多的人在其软件上增加应用或是建立专属网络。Adam Ludwin，Chain公司的创建人兼CEO表示：“我们想通过这一转变，将区块链的相关描述从 PPT变成活生生的实例。现在世界上的任何人都可以随时免费下载和安装我们的平台，并且还可以在平台上免费地创建专属网络或是连接相关网络。”并且在上周，该公司还表示将会发行一个产品，能让交易跨越区块链的界限，还能省去了不必要的中间环节。Chain 公司的主要业务是帮助银行建立区块链，所以在以前要是想要使用 Chain 的相关服务，还必须强制使用其合作公司 Visa，Nasdaq，Fidelity，Capital one 和 Citigroup 提供的银行业务服务。但在 Chain 公司将区块链开源之前，位于纽约的另一家公司 R3 CEV 主要为超过 50 家银行提供服务，早就公开表示愿意开源其区块链代码，这一开源计划称为 Corda。同时还联合多家创业公司开展一个名为 Hyperledger 的开源合作项目。例如， Digital Asset Holdings 是另一家在纽约的区块链创业公司，这一公司就参与了 Hyperledger Project，同时也是 Linux Foundation 一个非盈利组织的主要成员。比特币最开始是在 2009 年进行开源项目，一经开放就吸引了无数的热情志愿者和核心开发者的参与。Chain 也将会开始逐步开放其各个源代码，其中包括分布式总账户的源代码。Ethereum 是另外一家对开源加密数字货币有巨大贡献的开源网站。 此前还被 J.P. Morgan Chase 和 Banco Santander 在实验阶段采用过。Chain 最近对开源代码发行了测试网站，并且还与微软展开了合作。微软为其提供了云计算操作系统，Azure。这两家公司同时还与多所大学合作，对区块链技术展开了研究，这一合作项目称为IC3。其最初的目的是对加密数字货币进行研究，这一项目包含的大学有康奈尔大学和加尼福尼亚大学。微软公司 Azure 区块链工程师团队的主要项目经理，Marley Gray 表示：“微软相信能改变金融行业的区块链技术具有无限大的潜能。”Via Fortune相关阅读：区块链与比特币公司融资量或首次下滑，这可能意味着什么？彭博社：亚洲银行都在利用区块链做什么？</content></doc>
<doc>     <docid>12<docid>     <title>搜狗Q3财报：移动搜索流量同比翻倍，多领域与百度正面竞争</title>     <link>http://www.leiphone.com/news/201610/k09mrotpKZoJpkGh.html</link>     <content>搜狗最新财报显示，第三季度搜狗移动搜索流量较上年同期增长一倍以上，高于行业整体增速。贡献接近整体流量的 3/4；流量的提升，相应最明显地体现在搜索收入：移动搜索收入对整体搜索收入的贡献从去年同期的 30% 增长到 58%。搜狗在搜索行业整体低迷的大趋势下依然保持较强的上升势头，那么搜狗是如何保证这个增速的，它手中有哪些别人看不到的底牌。归纳起来，这些重要底牌就是以下四个被圈红的功能：&nbsp; 搜狗争夺流量三板斧在合适的时候打出医疗搜索牌“魏则西事件”刚过去不久后，搜狗迅速上线了搜狗明医搜索。在百度陷入医疗搜索竞价排名的舆论危机浪潮最顶峰的时候，明医搜索的推出可谓是给百度当头一棒。搜狗明医在当时的环境下，最重要的一个亮点是，“搜狗明医”是一项完全免费、无商业推广的服务。在百度成为众矢之的的情况下，搜狗更容易打入用户的内心，获得用户青睐。据悉，明医在搜索结果中聚合了用户提问和专业医生的回答，包括国内外医疗专业网站、药品数据、问答、医生科普文章等内容。自 5 月份上线以来，明医搜索流量增长了 150%。推出跨语言检索搜狗以往的搜索功能稍微过于单一，近些年搜狗也着重改变这一问题，推出一些处于市场空缺的功能：英语不好的用户经常会遇到这个问题，搜索外文信息时，先用网页版有道或者百度翻译把自己的中文搜索任务翻译为英文，然后再粘贴到搜索引擎的搜索框进行检索，过程比较繁杂。为此搜狗英文搜索推出了跨语言检索功能，用户可以直接输入中文词语搜索出英文结果。目前，在搜狗英文搜索中使用这项新功能的用户比例达到 20%。中文搜索引擎搜索外网信息，内容从来哪里来？今年 5 月份，搜狗与微软必应达成合作，合作的英文搜索和学术搜索服务将对接全球范围多达万亿的英文信息。既然用中文搜索英文信息，这里面的大部分用户也是需要英文网页翻译为中文的需求，这可通过搜狗浏览器添加相应插件来完成。合作方引流在搜狗上搜索微信公众号内容和知乎内容，可谓是为众多用户提供了一个便利。这两项功能虽然已经推出已有些时日，但经过调查发现，目前市场上仍旧有不少人不知道搜狗上可以直接搜索知乎和微信公众号里的内容。随着公众号内容和知乎内容搜索功能慢慢被用户熟知，这无疑是为搜狗持续带量的重要渠道。&nbsp; 仍旧难以逾越百度这座大山搜狗能在当前的环境下保持高于行业平均水平的增速，无疑离不开上述这几点。总结起来就是、善于把握关键时机、着实解决用户需求、占据流量巨大的上游内容提供商。当然，百度这座大山仍旧难以逾越。在医疗上搜狗本想出奇制胜，但百度在本月推出医疗大脑项目，产品已落地，未来将直接与搜狗明医展开正面竞争。而搜狗近些年一直在大力宣传人工智能，也正是百度的拿手好戏。此外，跨语言检索功能在技术层面对百度而言不难实现，业内人士分析称百度也可能会在不久后推出该项功能。搜狗在百度处于谷底的时候实现高速增长其实也并不难理解，但当百度重新从谷底爬出时，搜狗接下来是否依旧能打好手中这四张底牌？我们拭目以待。</content></doc>
<doc>     <docid>13<docid>     <title>Uber 无人卡车送货全球首秀！5 万瓶啤酒，跑完 120 英里</title>     <link>http://www.leiphone.com/news/201610/h328VgZ77j2OGlUM.html</link>     <content>（图源：Wired）据 Wired 杂志报道，最近 Uber 用无人驾驶卡车把 5 万瓶百威啤酒从科罗拉多州柯林斯堡市运送到了距离 120 英里外的科泉市。连线表示，这是全球首个使用无人驾驶卡车送货的案例。Uber 的无人驾驶卡车子公司 Otto 完成了此次任务，司机在卡车的卧铺对两个小时的路程进行了全程监控。Otto 联合创始人 Lior Ron 表示，根据市场价，他们获得了 470 美元的报酬。据了解，在此次运输前，Otto 已经获得了科罗拉多州的支持，该州的巡逻队也对运输进行了监控。Otto 的系统跟特斯拉的 Autopilot 系统并不一样，前者是真正的“L4”级自动驾驶（最近公布的 Autopilot 2.0 系统已经实现 L5 级自动驾驶标准）。Otto&nbsp;卡车在州际公路行驶时可以完全接手驾驶员的工作，让司机有时间来处理工作文件、查看手机信息，甚至连眯个小觉都是可能的。Lior Ron 介绍说：“ 我们已经把技术准备好，并且做好了商业化的准备。未来几年我们还会继续研发新技术，以便应对各种路况。”一旦实现，Ron 表示长度司机的工作就变得不必要了。他说：“你可以想象这样一个未来，那些卡车好像是在‘软件’道路上行驶，成为了高速公路上的虚拟火车。”他预测有朝一日，那些卡车会在州际公路完成行程后停靠在指定的仓库，而人类司机就会前来接管，只要再开完最后几公里就能到达目的地。司机实际上就变成了一个个的港口引航员。Otto 的硬件能够适用于任何具备自动换挡功能的的卡车，而且改装量似乎也不大。这套价值三万美元的自动驾驶软硬件包含六个激光雷达、一个普通雷达以及一个高精度摄像头。车头跟拖车各安装三个激光雷达探测单元，保险杠配备了一个雷达，挡风玻璃顶部再装一个高精度的摄像头。此外，Ron 还向媒体透露，Otto 计划与更多的商业伙伴合作，并且计划和使用这项技术的独立司机联手提高驾驶的安全指数。这样一来，还能够减少运输成本，因为无人驾驶卡车能够 24 小时不间断工作，不像人类需要休息。不过 Ron 也承认，“在可预见的未来内”司机仍然会留在卡车内。去年，Uber 以 6.8 亿美元收购了无人车初创企业 Otto ，现在看来，该公司已经迫不及待要在无人驾驶卡车上做些动作了。Via&nbsp;wired推荐阅读：不仅送外卖，还要做无人驾驶卡车，Uber 忙得过来吗？Elon Musk的全自动驾驶计划很疯狂？它很可能会实现面对自动驾驶的浪潮，我们或许应该看看历史的“后视镜”</content></doc>
<doc>     <docid>14<docid>     <title>CNCC 2016 | 山世光：深度化的人脸检测与识别技术—进展与展望</title>     <link>http://www.leiphone.com/news/201610/rZ2Mn9UFF3x8FaEt.html</link>     <content>雷锋网按：本文根据山世光在 CNCC 2016 可视媒体计算论坛上所做的报告《深度化的人脸检测与识别技术：进展与问题》编辑整理而来，在未改变原意的基础上略有删减。山世光，中科院计算所研究员，中科院智能信息处理重点实验室常务副主任。主要从事计算机视觉、模式识别、机器学习等相关研究工作。迄今已发表CCF A类论文50余篇，全部论文被Google Scholar引用9000余次。曾应邀担任过ICCV，ACCV，ICPR，FG等多个国际会议的领域主席（Area Chair）。现任IEEE Trans. on Image Processing，Neurocomputing和Pattern Recogintion Letters等国际学术刊物的编委（AE）。研究成果曾获2005年国家科技进步二等奖和2015年度国家自然科学二等奖。2008年度中国科学院卢嘉锡青年人才奖获得者，2009年度北京市科技新星获得者，2009年获首届Scopus寻找未来科学之星银奖(信息领域共2名)，2012年获得基金委“优青”支持。今天我所做的报告的题目是《深度化的人脸检测与识别技术》，在过去三四年里，人脸识别领域非常快速地从非深度学习方法切换到了深度学习这样一个新的范式里面。本次报告主要介绍最近几年在人脸识别领域几个关键流程上面，深度学习的应用情况。主要给大家介绍这几部分内容：人脸识别总体情况人脸检测面部特征点定位SeetaFace开源引擎| 总体情况全自动人脸识别系统流程本质——对比两个照片是否是同一个人。举例来说对于上图中两张照片，人脸识别需要去做的是计算其相似度是不是足够高。这个过程可以分为以下几个步骤：第一步是要找到脸在哪里第二步是找到五官的位置第三步是把关键人脸区域提取出来第四步是用特征提取器F把图像变成特征向量（y=F（x））第五步对比向量y1、y2的相似度是否足够高，据此来进行判断在这里面最核心的其实有三个步骤，第一个是找到脸在哪里，第二个是找到五官在哪里，第三个是f（x）函数的设置，这也是人脸识别系统中最本质的三个内容。人脸识别近期发展的最大特点人脸识别能在过去的三四年的时间里能有一个快速的发展是得益于深度学习。&nbsp;在这期间有一个非常重要的变化是人脸识别变得和狗脸识别、猫脸识别没什么太大区别了。也就是说在技术上，不用再把人脸识别特别来看待了。卷积神经网络（CNN）在深度学习之后，我们发现深度学习对于人脸识别这项帮助非常大。为什么？其实是实现了深度化。在计算机视觉领域，深度学习中应用得最好、最成功的就是卷积神经网络（CNN）。卷积神经网络（CNN）变迁事实上卷积神经网络不是2016年发明的，也不是2012年发明的，它大约是在20世纪80年代出现的，到1998年这期间出现了一些卷积神经网络的雏形。可以从上图中看到，1998年出现的卷积神经网络和当下的在本质上其实已经没什么区别了。卷积神经网络实质上是对输入进行加权求和之后，去做一个非线性变化的过程。输入图像通过滤波器组进行非线性卷积，卷积后在每一层产生特征映射图，然后特征映射图中的值再进行加权求和并进行非线性变换。在此过程中这些像素在池化层被池化，最终得到输出值。| 人脸检测技术具体到人脸检测的问题，在深度学习技术出现之前，几乎所有人脸检测都是采用滑动窗口式的方法。也就是说，我们会首先设计一个分类器。拿上图中图片举例来说，我们会设计一个40x40的窗口，然后去检测那个部分是不是人脸。此外我们还需要对图片进行缩放再进行检测，这个方式其实是2000-2012年以来主流的方法。物体检测：内涵与总体思路不管是人脸检测还是物体检测，都需要进行考虑的是这两个问题：有没有？在哪里？2014年以来的变迁“有没有”部分从人脸特征——分类器学习“两步法”转变为特征和分类器End—to—End学习从二类分类转变为多类分类“在哪里&amp;有多大？”部分从Check所有可能位置和大小转变为只Check可能位置和大小或者回归位置和大小（更准确）基于深度学习的物体检测在过去的几年时间里出现了一系列的方法，包括Region CNN系列R-CNN——SPP R-CNN——Fast R-CNN——Faster R-CNN回归位置YOLO传统方法与深度方法结合FacenessNETCascade CNN（coarse-to-fine）R-CNN关键点：Selective Search产生约2000个候选窗口每个候选窗缩放到227*227（用CNN提取特征）SVM分类需要2000多次CNN过程，速度很慢。SPP-NetFast R-CNNFaster R-CNNYOLO（You Only Look Once）这个方法更加的简单粗暴一些将输入图像划分为SxS grid对grid cell预测网络全连接层——张量用NMS去除冗余FacenessNETCascade CNN（coarse-to-fine）物体（人脸）检测：总结与问题小结：深度学习方法带了性能上的大提升Bounding Box Regression（BBR）兴起样本组织方式的变革问题：高精度、全姿态时的速度问题小尺度、大遮挡、复杂光照情况下可能漏检| 面部特征点定位技术深度级联回归基于多级DCNN实现f函数（CVPR2013）基于多级Auto-encoder实现f函数（ECCV2014）对遮挡鲁棒性地特征点定位方法（CVPR2016）| 判别特征学习与匹配方法在深度学习出现之前，和传统方法一致。（两步法）人工（卷积）特征特征变换人脸识别测试集和性能的变迁特别要提到的是学术界的里程碑（数据库）：ORL——FERET——FRGC v2.0——LFWLFW人脸识别评测LFW数据库来源于因特网上的数据，对于名人明星的图像进行识别。过去三年错误率从5%下降到0.4%。在深度学习出现之后，直接从图像开始学习特征。过去2年的新进展最开始将深度学习应用到人脸特征提取的是Facebook的DeepFace，使用一个8层的神经网络，对4000人的440万图像进行训练学习。Google的FaceNet则是使用800万人的2亿张图像进行训练学习，这个数据量是及其庞大的。我们有理由相信这样一个网络在如此庞大数据量训练之后，它的人脸识别能力是比普通人要好的。待解决问题人脸识别应用现状1：N配合照片检索应用，目前基本成熟1：1验证配合用户，可以应用1：N+1万级以上非配合用户，任重道远| SeetaFace引擎SeetaFace DetectorSeetaFace AlignmentSeetaFace Identification| 总结人脸检测与识别不再具有特殊性深度模型（&amp;大数据&amp;高性能计算）极大推进了人脸识别能力，在一些（用户配合的）任务上能超过人眼万人规模的黑名单视频监控场景尚不成熟SeetaFace为大家提供了一个不错的baseline</content></doc>
<doc>     <docid>15<docid>     <title>销售疲软？苹果十五年来首次营收下滑； 微信群新功能：群聊能收钱、进群需确认 | 雷锋早报</title>     <link>http://www.leiphone.com/news/201610/ahPH5CNQxCWDUubJ.html</link>     <content>iPhone 7 疲软？苹果Q4财报十五年来首次营收下滑苹果在今年发布 iPhone 7 之后，由于其产品并没有重大的突破，所以当时就有分析师预测，此次iPhone的销售可能会比往年稍差，而iPhone的销量占目前苹果比重的很大一部分，直接影响着苹果的营收问题。苹果在今天公布了2016年第四季度财务业绩报告。本季度，苹果公司的收入为469亿美元，净利润为90亿美元，每股收益1.67美元。相比去年同期而言，这个数据处于下滑状态。去年第四季度苹果净收入为515亿美元，净利润为111亿美元，每股收益1.96美元。根据数据显示，苹果三大生产线的产品销量均较去年有所下降。今年第四季度，苹果共卖出iPhone 4550万部，去年同期为4800万部，iPad销量为930万部，去年同期销售了990万部。Mac今年共销售490万部，去年同期为570万。由此看来并不是 iPhone 7 的问题，而是其他产品线全幅下降，而iPhone的销售下降比例最低。微信升级群功能：群聊能收钱 群主可开启进群确认腾讯科技10月25日，微信发布新版本，在最新版本6.3.28中，对群功能进行了两项功能升级。首先是群主可启用需群主确认才能邀请朋友进群功能。在最新版微信中，微信群群主可在群详情页的群管理选项中，开启此项功能。开启此项功能后，群主将对群成员拥有更高的管理权限。另外，新版微信中在群聊页面添加了收款功能。此前，微信已经上线AA收款功能，但需进入“我”—“钱包”后才能发起AA收款，操作流程较长。此次微信在群内直接加入收款功能，可以更方便的满足用户进行AA支付、收班费等需求。MacBook新键盘布局泄露，新产品真的有OLED触控功能了？今天，据外媒报道，有网友在macOS 10.12.1中发现一张新式键盘布局图。根据该布局图显示，苹果将用OLED取代传统功能键的说法似乎是真的。在版本号为10.12.0的macOS中，系统偏好设置的键盘条目下会用图片等形式列出用户所用电脑的键盘布局，包括全高、半高轴以及不同国家不同的键盘布局。在过往的所有系统内，这些缩略图均包含着数字键上方那一排功能键。而在昨日释放出来的10.21.1中，外国网友细心地发觉到新的键盘设置中将这一排功能键取消了。这也就意味着苹果将在出厂预装10.21.1（或之后）系统的MacBook中采用这种新的键盘布局。根据传言的信息，苹果新MacBook的触控条除了替代传统功能（亮度、音量调节等）之外，还加入了指纹识别模块。并且，触控条上的功能会随用户使用的软件而变更。白板电视多合一 谷歌发布 Google Jamboard网易科技不久前谷歌将其众多家族产品整合成G Suit服务，包括Gmail、Google Drive 和 Google Docs等等。这些工具能大大提高远程协作的效率，不过当团队中所有人真的聚集在一个房间里时，再用Gmail去交流显得多此一举。于是一个适用于现场交流的工具应运而生， Jamboard便是G Suit为此打造的最新硬件产品。谈及产品设计的初衷，G Suit 团队负责人 Jonathan Rochelle 表示，Jamboard 旨在弥补我们现场交流不足的短板。不能实时地记录下灵感和创意是团队交流时的缺憾，Jamboard让现场与会者随时随地展示并分享创意与想法。亚马逊微型无人机专利曝光，小到可以停驻在警察肩章上近日，亚马逊一项关于“微型个人助理无人机”的专利被曝光。据专利显示，这款微型无人机的体积非常迷你，只有“口袋大小”，甚至可以停驻在警察叔叔的肩章上。除了体积小之外，这款无人机的性能也十分强大。它搭载了生物识别和声控技术，不仅能够认识人脸，还能识别主人的声音。作为一款警方的随身助理，警察叔叔通过语音控制命令就可以指挥这款无人机在特定的区域徘徊，提供稳定可靠的视频录制。看起来，曾经推出过 Echo 智能家居语音助手以及获得众多物流无人机专利的亚马逊，这次似乎计划打造一款融合自身各项技术积累的微型无人机版个人助理。挑战HoloLens？谷歌新头显或支持眼球追踪技术据国外科技网站 Engadget 消息，谷歌正在努力研发新的虚拟现实头显。和之前该公司推出的亲民式 VR设备 Daydream 不同的是，新的头显将能够独立使用，不再需要 PC 或智能手机的配合。此外，有国外媒体称新的虚拟现实头显还将支持眼球追踪技术（谷歌刚刚收购了眼球追踪技术公司Eyefluence），谷歌将会增强头显前方的现实，把数字对象叠加在现实世界中。这个想法和微软 HoloLens 有些类似。此外，有传言此前被英特尔收购人工智能公司 Movidius 将会向谷歌提供芯片，以提高新设备的追踪性能和位置感知。该消息人士解释说，这款与 Daydream VR 平台不同的头显将不再需要计算机或手机为其供电。Movidius携手海康威视: 研发抓拍开车玩手机等违章行为的新技术Movidius 是一家人工智能和计算机视觉芯片制造商，它 上个月刚被Intel所收购 。现在，Movidius又与中国安防摄像头制造商海康威视（Hikvision）达成了合作。两家公司将携手开发“智能型”摄像头，除了常规任务之外，执法机构还能够借此捕捉开车发短信等危险行为，然后通过电子邮件向车主发去罚单。当然，我们并不指望这项技术能够彻底禁绝开车玩手机等危险驾驶行为，但至少可以在一定程度上遏制驾驶者手痒的心理。不过Quartz也指出，这类智能安防摄像头或许会被政府执法机构所滥用，因此需要在隐私保护和遏止违章上取得更好的平衡。</content></doc>
<doc>     <docid>16<docid>     <title>MacBook新键盘布局泄露，新产品真的有OLED触控功能了？</title>     <link>http://www.leiphone.com/news/201610/Zn8bkekI4NXBdva1.html</link>     <content>9月份的苹果秋季发布会上，很多人都认为苹果会更新新的MacBook Pro的产品线，然而苹果让人失望了。不过在那次发布会过后不久，苹果又发出了邀请函，将于10月27日（北京时间28日凌晨一点）举办今年第四场发布会，而外界普遍认为这次发布会是对笔记本产品线的一次非常大的改动。今天，据外媒报道，有网友在macOS 10.12.1中发现一张新式键盘布局图。根据该布局图显示，苹果将用OLED取代传统功能键的说法似乎是真的。在版本号为10.12.0的macOS中，系统偏好设置的键盘条目下会用图片等形式列出用户所用电脑的键盘布局，包括全高、半高轴以及不同国家不同的键盘布局。在过往的所有系统内，这些缩略图均包含着数字键上方那一排功能键。而在昨日释放出来的10.21.1中，外国网友细心地发觉到新的键盘设置中将这一排功能键取消了。这也就意味着苹果将在出厂预装10.21.1（或之后）系统的MacBook中采用这种新的键盘布局。根据传言的信息，苹果新MacBook的触控条除了替代传统功能（亮度、音量调节等）之外，还加入了指纹识别模块。并且，触控条上的功能会随用户使用的软件而变更。网友发现的虚拟图中并没有显示更多关于OLED触控条的更多信息，但是就凭该信息来说，确实是一个好消息，MacBook重大更新应该是跑不了了。不过最终的结果只能等到后天凌晨揭晓。</content></doc>
<doc>     <docid>17<docid>     <title>iPhone 7疲软了？苹果Q4财报十五年来首次营收下滑</title>     <link>http://www.leiphone.com/news/201610/yruRWzXlPbl3egeQ.html</link>     <content>苹果在今年发布iPhone 7之后，由于其产品并没有重大的突破，所以当时就有分析师预测，此次iPhone的销售可能会比往年稍差，而iPhone的销量占目前苹果比重的很大一部分，直接影响着苹果的营收问题。苹果在今天公布了2016年第四季度财务业绩报告。本季度，苹果公司的收入为469亿美元，净利润为90亿美元，每股收益1.67美元。相比去年同期而言，这个数据处于下滑状态。去年第四季度苹果净收入为515亿美元，净利润为111亿美元，每股收益1.96美元。根据数据显示，苹果三大生产线的产品销量均较去年有所下降。今年第四季度，苹果共卖出iPhone 4550万部，去年同期为4800万部，iPad销量为930万部，去年同期销售了990万部。Mac今年共销售490万部，去年同期为570万。由此看来并不是iPhone 7的问题，而是其他产品线全幅下降，而iPhone的销售下降比例最低。本季度毛利率为38％，而去年同期为39.9％，国际销售占收入的62％。 苹果也宣布即将到来的股息为每股0.57美元，于11月10日支付给11月7日前登记的股东。苹果目前持有2376亿美元的现金和有价证券。在整个财政年度，苹果的销售额为2156亿美元，净收入为457亿美元，低于2015年的2337亿美元和534亿美元。与预期相同，2016年是自2001年开始苹果首次全年收入下降的一年。不过，苹果2017财年第一季度的预期收入会增加不少，为770-780亿美元，毛利率在38%-38.5%之间。</content></doc>
<doc>     <docid>18<docid>     <title>打败华为小米！2016第三季度OPPO和vivo称霸国内市场</title>     <link>http://www.leiphone.com/news/201610/Dbtr4WVqSfbdXQz2.html</link>     <content>昨日，调研公司 Counterpoint Research 发布了一份报告。该报告称，2016年第三季度，OPPO 在国内的市场份额为16.6%（去年同期仅为9.9%），高居榜首；vivo的市场份额以微弱的差距屈居次席（16.2%），而去年同期仅为8.8%。也就是说， OPPO 和 vivo 同时超越华为，一跃成为国内前两大智能手机厂商。对此，来自 Counterpoint Research 的分析师称，第三季度 OPPO 智能手机销量同比增长82%，这主要归功于 OPPO R9 的惊艳表现——第三季度，OPPO R9 的销量超过 iPhone，在国内市场占据了主导地位。与此同时，vivo 智能手机的销量同比增长了114%，这主要是因为广大消费者对旗舰产品 X7 系列的狂热。Counterpoint Research 的分析师认为，OPPO 和 vivo 的成功有赖于传统的线下零售和分销网络的建立。反观在前两个季度均拔得头筹的华为，第三季度的市场份额为15%，排名瞬间跌至第三。但是，华为极有可能通过即将发布的旗舰机 Mate 9 扳回一城。至于曾经风光无限的小米，第三季度的市场份额为10.6%，远低于去年同期的14.6%，目前屈居第四；而它在第三季度的智能手机出货量同比增长量仅1%。有分析师认为，线下渠道的匮乏是小米的硬伤。</content></doc>
<doc>     <docid>19<docid>     <title>Beats推出Powerbeats3无线耳机，售价不到200美元</title>     <link>http://www.leiphone.com/news/201610/lCyp2hcPTNOu0rSh.html</link>     <content>昨天，苹果旗下的 Beats 正式推出了 Powerbeats3无线耳机。这款耳机采用了 W1芯片，因此它的电池可以在5分钟内完成基本充电，然后连续使用1小时，而最长使用时间可达12小时。另外，W1 芯片的配置使得 Powerbeats3无线耳机能够和苹果设备实现更为便捷的配对。同时，由于使用了1类蓝牙规格，所以它的通讯距离更远。目前，它是市面上第二款采用苹果 W1无线芯片的音频产品。与 Powerbeats2相比，Powerbeats3采用了更高端的人体工程学和集成控制设计，这使得用户可以更加方便地触发 Siri、接听电话和控制音乐。至于颜控们最关心的外观颜色，这款&nbsp;Powerbeats3无线耳机有黑色，白色，黄色，蓝色和红色，供君任选。目前，大家可以在 B&amp;H 网站上预定这款 Powerbeats3无线耳机，价格为198.46美元；如果在苹果官网上订购的话，价格要稍贵一些（199.95美元）。颤抖吧，剁手党们！</content></doc>
<doc>     <docid>20<docid>     <title>Google 发布了一款办公神器，剑指微软的 Surface Hub</title>     <link>http://www.ifanr.com/737451?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>在微软的 Surface 系列产品线中，除了面向个人消费者的 Surface Pro 系列和 Surface Book 笔记本，还有一款专门面向企业用户的巨屏设备 Surface Hub；其典型的使用场景就是会议室办公协作。图自：microsoft如今，Google 也推出了一款与 Surface Hub 功能相似的产品，名为 Jamboard。图自：Google基于云端的 Jamboard在 Google 官方描述中，Jamboard 是一款用来协作的数码白板（digital whiteboard）,它能够让团队成员实时分享和合作完成创意；更重要的是，按照 Google 的一贯思维，Jamboard 同样也是基于云端服务的。在具体的配置上，Jamboard 搭载了一块 55 英寸的可触控 4K 分辨率屏幕，拥有高清摄像头、扬声器和 WiFi 连接功能。为了让 Jamboard 能够在更多场合下使用，Google 还为它设计了一个配有轮子的底盘，可以方便用户移动。软件方面，它所搭载的是经过特殊定制的 Android 系统。由于是基于云端，Jamboard 可以实现不同成员在不同设备之间的同步操作，而操作的结果在可以 Jamboard 上同步显示；不仅如此，它还可以实现基于网络的远程协作。图自：YouTubeJamboard 还与 Google 的 G Suite 套件实现了深度整合。G Suite 套件中集合了一系列办公专用的 app，可以更加方便地实现办公功能。举个例子，在会议中，用户可以直接将文档从 Drive 中拖动到 Jamboard 上，非常方便。另外，为了让 Jamboard 更好地运作，Google 为它专门提供了两个附件：一个可以精准操作的电子手写笔和一个电子橡皮擦。这两个附件都不需要充电，当用户使用它们在 Jamboard 上操作时，Jamboard 能够识别并给予相应的反馈。电子手写笔和电子橡皮擦不仅如此，Jamboard 还能自动识别用户用手指做出的擦拭动作。按照 Google 官方的说法，Jamboard 的售价会低于 6000 美元，将会在明年开卖。作为对比，微软推出的 55 英寸版 Surface Hub 售价为 8999 美元。G Suite 的硬件外壳虽然 Google 已经声明 Jamboard 的售价不高于 6000 美元，但它的定位非常明显，就是面向企业级用户，而与个人消费者没有太大的关系。另外值得注意的是，在 Google 官方博客宣布将要推出 Jamboard 的，正是 Google 方面负责 G Suite 的产品经理 TJ Varghese。实际上，Jamboard 与 G Suite 之间的关系无比密切。图自：slickmediaG Suite 成立于不到一个月之前。今年 9 月 30 日，Google 在官网宣布，将在原有的企业办公应用（Google Apps for Work）的基础之上，组建一个全新的企业办公服务，并命名为 G Suite。G Suite 包含了一系列可以被应用于办公领域的服务，其中有 Gmail，Docs，Slides，Drive，Calendar，Hangouts 等。它们之所以被整合在一起，一方面是品牌方面的统一，但另一方面可以说是 Google 在向企业办公市场的一次重大迈进。图自：networkedindia而 G Suite 的直接对手，恰恰是微软的 Office、OneDive、Skype for Work 等一系列办公应用。值得注意的是，G Suite 中不仅仅加入了 Google 原有的应用，还集合了 Google 包括自然语言处理、图像识别、智能分析在内的多项人工技能技术。不过，G Suite 虽然优秀，但它毕竟是不存在实体的服务；从功能实现的角度，它还缺乏一个适用于办公场景的硬件承载者。而 Jamboard 的出现，恰恰扮演了这个角色。因此可以说，Jamboard 是 G Suite 的硬件外壳，也可以说是 Google 迈向企业办公市场的另外一个重大决策。图自：Google另外，鉴于 Google 的 Chromebook 在教育市场已经有所积累，其与 Jamboard 同样也可以在教育办公领域形成犄角之势。这也可以认为是 Google 的另一个布局。图自：Google正面对抗 Surface Hub简单来说，Jamboard 的出现，是 Google 在企业办公市场针对微软 Surface Hub 的一次正面挑战。从目前的情况来看，Jamboard 应该是处于 Google 规划中的硬件产品；Google 在官方的介绍中，只是提到 2017 年可以买到，但是关于这项产品的配置介绍，却是非常笼统的。图自：Microsoft而相比较而言，微软的 Surface Hub 早已经在今年 3 月份发货，而且在实际的办公体验上，Surface Hub 并不差。虽然价格相对高了一点，但 Surface Hub 依然不失为一个有力的竞争对手。题图来自：YouTube#欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>21<docid>     <title>为了让你在国外花钱更方便，这些公司也是拼了</title>     <link>http://www.ifanr.com/737392?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>在刚刚过去没多久的十一假期里，我们足不出户也能在朋友圈里看遍世界。出境游成为了不少年轻人规避出游高峰，享受假期的优选。国家旅游局发布的数据显示，2016 年上半年中国公民出境旅游人数达 5903 万人次，比上年同期增长 4.3％。中国已经成为泰国、日本、韩国、越南、俄罗斯、朝鲜、马尔代夫、英国等国的第一大入境旅游客源地。盯上出境游的可不只是游客，不少中国互联网公司也希望借此机遇，实现自己“梦寐以求”的国际化战略。出境游：携程的下一个强劲增长点10 月 24 日，携程宣布与美国纵横、海鸥、途风等三大旅行社企业达成战略投资与合作，全面布局北美旅游市场，携程集团高级副总裁、携程旅游 CEO 杨涛表示，走向国际化、布局出境游目的地是携程的重要战略。在线旅游平台配合目的地旅行社推出在线旅游产品，这样的模式或许会不断推动携程出境游业务总交易额（GMV）的提高。目前携程出境游业务除常规的跟团游之外，还囊括了包括接送机、国际租车、门票预订、Wi-Fi、保险等独立业务，若能够通过旅行团的形式向消费者打包出售旅游产品，对于携程的收入是一个利好消息。现阶段，出境游既是投资者非常关注的一块业务，也是携程目前增长最为快速的业务。在今年 3 月份的 2015 财年第四季度财报电话会议上，高盛集团分析师 David Jin 询问了携程出境游和境内游总交易额比例问题，携程联席总裁兼 COO 孙洁表示：目前，出境游业务在公司总 GMV 中的占比仍然很小，但是出境游业务在公司总 GMV 中的占比增长速度远远快于境内游业务。我们预计，到 2020 年，出境游业务 GMV 将在公司总 GMV 中占到相当大的比重。类似的高管发言还出现在 2016 财年第一、第二财季中，方便我们对携程出境游业务的发展趋势有所了解：出境游对公司各个业务的营收均有贡献。具体来看，出境游对携程酒店业务的贡献有 15%－20%，对机票营收的贡献有 30%，度假业务占 60%－70%。——携程 CFO 王肖璠（2016 财年第一季度）&nbsp;我们将会通过专注于提供一站式在线旅游平台，扩展出境游业务覆盖度，提高运营效率，以强化携程的行业领导地位。——携程 CEO 梁建章（2016 财年第二季度）根据艾瑞咨询发布的《2016 年中国在线旅游度假市场研究报告》，2015 年出境游业务占据了国内在线旅游市场 52.6% 的份额，市场规模非常可观，携程网则在此占据了 25.1% 的市场份额，高居市场首位。移动支付：银联、蚂蚁金服形成两大重要势力中国是目前世界上移动支付最为发达的国家，没有之一。这样的市场环境也促使中国银联、支付宝等国字号银行机构及互联网公司加快海外布局，为中国人在海外放心买买买打好支付基础。而在这场商战中，中国银联显然依靠官方地位走得更快更好。10 月 21 日，银联国际宣布与德国两大收单机构 B+S Card Service、CardProcess 公司达成合作，总计开通当地 5 万多家商户受理银联卡，使德国商户的银联卡受理覆盖率从现在的 30% 提升到 50%。银联还透露在英国、法国、瑞士、捷克等国家有超过 100 所大学支持使用银联卡支付学费。（图片来自：Business Insider）银联官方数据显示，截止至今年 9 月 13 日，银联卡可以在境外 1800 万家商家和 130 万台 ATM 使用。服务方面，如在境外发生卡片丢失、被盗等情况，持卡人能在 220 多个国家和地区超过 40 万个服务网点，申请最高等值 5000 美元的现金支援。除了商业上的合作，银联还在向境外输出芯片卡标准。10 月 16 日，银联宣布与亚洲支付联盟 7 家会员机构达成芯片卡标准授权合作，这也意味着银联主推的云闪付功能未来很有可能会出现在新加坡、泰国、韩国、马来西亚、印尼等亚太国家，进一步降低中国消费者境外刷卡的门槛。不过，考虑到银联是直接由央行批准成立的金融服务机构，既是金融市场的参与者，也一定程度上影响着市场规则的制定，所以银联的境外发展路径具有唯一性，不可复制。以支付宝为代表的互联网金融公司，更多地是凭借自己在移动端上的优势及对用户需求的把握，在消费者和商户需求最旺盛的领域展开激烈竞争。（一家支持支付宝消费的韩国店铺，图片来自：新华社）以韩国为例，根据第一财经报道，拉卡拉在今年 8 月末宣布与韩国友利银行达成合作推出本地结算业务。至此，得益于中国游客赴韩旅游、购物的巨大需求，中国已有支付宝、微信支付和拉卡拉三大移动支付品牌进驻韩国。早在 2015 年 5 月，韩国副总理崔炅焕就与马云会面，表示将全力支持支付宝在韩国普及。目前，韩国不少主流免税店都已经支持使用支付宝结算。在几大互联网金融公司里，蚂蚁金服的海外布局规模或许是最庞大的。在此前有关双 11 启动仪式以及蚂蚁金服与 First Data、惠尔丰（Verifone）达成合作的报道中，爱范儿（微信号：ifanr）曾经提到目前支付宝“全球收全球付”服务覆盖全球超过 200 个国家和地区，支持美元、英镑、欧元等 18 种货币一键结算。在 9 月份刚刚结束的二十国集团工商峰会（B20）中，马云提出并倡议的 eWTP（世界电子贸易平台）得到了极高的关注，若 eWTP 最终能成为现实，那蚂蚁金服及旗下支付宝作为阿里的金融“触手”，势必会借 eWTP 的发展，进一步推动其全球支付网络的建设。将中国企业推向海外的不一定是战略，也可能是消费者的欲望国际化一直都是中国互联网公司的难题，不少在国际化稍有起色的互联网公司都还仅仅停留在东南亚地区的发展中国家。但是在对出境游市场有所研究之后，爱范儿（微信号：ifanr）却发现了国际化发展在这个领域独特的呈现方式。伴随着中国游客的脚步走出国门的，既有蚂蚁金服、微信支付、携程、中国银联这样的互联网巨头及金融机构和他们成规模的境外业务，也有小米 MIUI 境外漫游、滴滴出行海外版等偏重于给消费者提供多一点便利的特殊服务。而这些公司的业务之所以能在海外开花，无一例外不是与他们最熟悉的消费群体——中国消费者的需求保持紧密联系。不过在看似充满成就的“布局”之下，这些互联网公司也要花更多精力确保自己的海外业务的基层执行能力，否则即使将自己的 Logo 贴得满大街都是，也不一定能确保海外服务的体验能够与国内保持一致。毕竟向消费者提供服务的并不是行业大佬，而是分布在街头巷尾的便利店收银员、专车司机等典型的本土服务业劳动者。题图来自：Frontier Magazine                              麦玮琪 (Michael)                    关注无人机、汽车，探讨商业模式和科技产品与社会的结合。工作邮箱：michael@ifanr.com                                                                                            邮箱                                  #欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>22<docid>     <title>“美国滴滴”Lyft CEO 否认公司在售，但靠“补贴大法”还可以撑多久？</title>     <link>http://www.ifanr.com/737357?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>昨日《华尔街日报》主办的 WSJDLive 全球科技大会上，Uber 在美国最大的竞争对手、美国第二大打车应用 Lyft 的联合创始人 John Zimmer 出席，并当场否认了 Lyft 正在对外出售的传闻，并称 10 月订单量实现翻倍。订单量翻倍，营利能力还是堪忧John Zimmer 透露，自去年年底以来 Lyft 在美国的订单数量已经实现翻倍，今年 10 月已达到 1700 万份，而去年 12 月仅为约 700 万份。今年 6 月份，Lyft 聘请了投资银行 Qatalyst Partners LP 作战略顾问，而 Qatalyst Partners LP 以擅长公司买卖交易著称，因此引来部分分析师怀疑出售 Lyft 的大门已经打开，竞购方可能是资金充裕又对共享专车领域兴趣盎然的通用汽车。这一怀疑也部分源于 Lyft 自身的状况。自 2007 年创立以来，Lyft 通过多轮融资募集到 20 多亿美元，与 Uber 在美国本土的交战还在持续，目前仍处于亏损状态。对此，齐默在大会上仍对 Lyft 的盈利时间表缄口不言。但他透露 Lyft 有在未来几年内 IPO（首次公开招股）的计划。“我们并不急于上市，IPO 才是最接近的事。”John Zimmer 说。虽然今年还有 2 个月左右才结束，但 John Zimmer 估计今年 Lyft 的订单总量会是去年的三倍。目前 Lyft 主要的业务拓展方式仍是共享专车平台的“土办法”：通过大量的现金补贴吸引新用户和专车司机。因此，Lyft 的盈利能力被这部分支出大大压缩，成为目前为止还没有实现盈利的主要原因。John Zimmer 不断强调 Lyft 订单数量的上升，却避而不谈盈利计划，反而让 Lyft 尴尬处境欲盖弥彰——订单越多，亏得越多。在“反 Uber”这件事上，Lyft 越来越孤单在 Lyft 努力扩大美国市场份额，老对手 Uber 则更多把精力投向全球业务。另外，反吞下 Uber 在华业务的滴滴出行也不满足于中国市场，开始思考扩张全球业务。同样是 WSJDLive 大会上，滴滴出行总裁柳青高调宣布公司将向中国以外的市场扩张，夺取全球份额。美国这块沃土当然也在滴滴考虑范围内。而去年滴滴还是 Lyft 带头的“反 Uber 同盟”成员之一，成员包括新加坡共享专车平台 Grab 和印度的 Ola。这个联盟试图引导乘客在另一个国家选择联盟成员服务，借此抵抗 Uber 的全球拓展步伐。而滴滴一旦进入美国市场，自然就成为 Lyft 的直接对手。对此，John Zimmer 表示，Lyft 与滴滴出行的关系有点类似美剧《摩登家庭》 中成员相互独立的关系。他发言称，滴滴出行与 Uber 中国业务合并“很大程度上不会影响到双方的工作或是业务”。和 Uber、滴滴相比，Lyft 目前独有的优势在于和通用汽车的良好的关系。今年年初，通用汽车向 Lyft 投资 5 亿美元，而且双方计划在未来五年内合作进军无人驾驶市场。在分工上看，Lyft 能为通用汽车提供丰富的客户资源，而通用汽车作用实力雄厚的老牌汽车制造商能为 Lyft 提供硬件和技术支持。如果这个无人驾驶计划能落地， Lyft 能将每公里的费用降至 5 美元。更低的价格意味着 Lyft 有希望逃脱目前“补贴多越亏，为了市场份额又不能不补贴”的怪圈。进入 2016 年下半年，包括 Uber 在内的共享专车平台们都在苦苦寻觅新的盈利模式。都说“补贴烧钱一时，占领市场一世”，但烧的钱什么时候才能转变为真正的盈利，除了视乎平台本身财政状况外，还要看投资人们对这一领域的信心。从 Lyft 目前的状况看来，投资人们的耐心极限已经临近了。无人驾驶开发也好，市场兼并也好，全球共享专车平台思考变现方式的进程将显著加快。题图自：《华尔街日报》插图自：《华尔街日报》、Bidnessetc                              刘 浩南                    请指教~工作邮箱：liuhaonan@ifanr.com                                                            邮箱                                  #欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>23<docid>     <title>逼宫亚马逊，Google Express 又放大招了</title>     <link>http://www.ifanr.com/737296?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>据今日美国报道，Google 宣布旗下 Google Express 服务将在美国新增 13 个州，真正做到“只要你掏钱，我哪里都可以送”。&nbsp;（图片来自：Google Express 官方 Facebook 截图）&nbsp;从 Google Express 官方 Facebook 帐号 10 月 25 日发布的消息可以看到，目前 Google Express 已经覆盖了美国的东西两岸。而据统计其辐射范围将接近美国本土的 90% 区域，近 7000 万消费者将因此受益。不求最全，但求最远&nbsp;我们的宗旨是让人们能够更加便利地从他们真正喜爱的商店购物。Google Express 总经理布莱恩•艾略特 （Brian•Elliott）的发言强调了 Google Express 存在的核心价值：便利以及独特。自 2013 年 3 月在美国旧金山和硅谷范围内上线以来，Google Express 的扩张脚步一直没停下来。艾略特曾在九月份表示，其计划在今年底将 Google Express 的在线购物速运从目前的 20 个州和区域拓展至全国范围。&nbsp;（图片来自：SiliconBeat）&nbsp;为了与电商大佬亚马逊（Amazon）进行竞争，Google 这次也是下了血本了。为了加快在全国范围内的扩张，Google 表示将“忍痛”放弃一部分业务，如部分生鲜和食品杂货的运送，以与已占先机的亚马逊 Prime 服务一较高下。&nbsp;（图片来自：TechCrunch）&nbsp;与亚马逊提供的海量商品不同，Google Express 目前合作的 50 多个商家均是经过“精挑细选”的，“我们挑选的商家都是人们真正喜欢的，他们会有种自己不是在网购的感觉。” 艾略特指出了 Google Express 的精品化战略。与此同时，Google 还计划与第三方运输机构进行合作，以降低其运营成本。&nbsp;赶超亚马逊，道阻且长&nbsp;从 Google Express 上线以来，一直拿来与亚马逊旗下的 Prime 进行比较。但无论是从运输效率、价格竞争还是渠道铺设来看，Google Express 要走的路还很远。运输效率—— Google Express 和 亚马逊 Prime 都支持最快当日送达。 价格—— 尽管现在都是付费服务，Google Express 提供两种付费方式供消费者选择：95 美元的年费会员或者 4.99 美元起的单次付费；亚马逊则比较单一，需花费 99 美元订购 Prime 的年费会员才可获得当日送达服务。 渠道——这一直以来是 Google 的短板，与亚马逊的直接供货渠道相比，Google Express 只能借助与传统经销商的合作完成货源供给。&nbsp;（图片来自：Bidness Etc）&nbsp;雪上加霜的是，一直引以为豪的访问流量优势也被亚马逊拿走了。据彭博社报道，几乎将近一半的美国在线购物消费者选择在亚马逊网站或者移动客户端上直接搜索购物信息，这对于以搜索引擎作为核心业务又渴望在电商领域突围的的 Google 来说无疑是一个不好的信号。可以预见的是，Google Express 这一波大招尽管炫目，但要狙击亚马逊还要多修炼。题图来自：TechCrunch#欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>24<docid>     <title>柳青说滴滴要展开国际化扩张，但这是一件不容易的事</title>     <link>http://www.ifanr.com/737354?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>据新浪科技，滴滴出行总裁柳青在 WSJDLive 2016 全球科技大会表示，滴滴将向中国以外的市场扩张，夺取全球份额。在此过程中，滴滴有可能与一些国家的当地专车服务展开合作。我们希望全球化。与 Uber 直接在全球建立业务的全球化做法不同， 一直以来，滴滴更多的是通过投资入股海外的打车出行平台的方式形成自己的全球化布局。例如说，滴滴与 Uber 中国合并后不久，就投资了东南亚地区最大出行软件 Grab。但这不是滴滴第一次投资 Grab 了，也不是它第一次投资海外打车平台。2015 年 9 月，滴滴入股美国本土打车软件 Lyft 1 亿美元，之后又投资入股印度 Ola 3000 万美元。这是滴滴在海外扩张至今采取的主要策略：曲线救国，通过投资进入其他海外市场。除此之外，滴滴还通过打通产品线的做法进行扩张。今年 4 月，滴滴还在美国上线了“滴滴海外”，用户可以用滴滴 app 呼叫到 Lyft 的汽车。值得一提的是，为方便中国用户使用，“滴滴海外”界面均为中文显示，整体叫车发单流程与国内保持一致。与 Lyft 产品互通这一做法让滴滴在形式上直接进入了美国市场。去年年底，滴滴、Lyft、Grab、Ola 四方曾宣布建立全球合作框架，这次合作除了能够为他们带来更多收益和更大的用户群体之外，全球无缝连接的服务也让他们具有和 Uber 一样的全球竞争力。图自：Tech in Asia这次四方合作也被视为形成了“全球反 Uber 联盟”。但这个联盟却在滴滴与 Uber 中国合并后陷入了尴尬甚至瓦解的境地。Lyft 与 Uber 在美国市场的竞争已有很长时间，本来 Lyft 与滴滴合作，前者以为有了合作伙伴能一起对抗 Uber，但却没想到合作方转而又与竞争对手合作。Lyft 官方发言人 Alecandra LaManna 曾说：“我们将进一步评估与滴滴之间的伙伴关系。”除了 Lyft，Grab 和 Ola 也得重新审视和思考自己和滴滴的合作得到哪个层面合适。外媒在对 Ola 相关人士采访时获知，Ola 仍坚持认为滴滴出行收购 Uber 中国不会给公司业务构成影响，因为滴滴只是 Ola 的小股东，且虽然 Ola 和滴滴出行有结盟关系，但好在尚未发布合作产品。滴滴没有像 Uber 一样亲力亲为地去开拓疆土，而是通过与本土化的打车软件合作形成海外格局，但也由于复杂和不确定的合作关系，让自己的全球计划变得有些窘迫和尴尬。图自：PitchBook如今，滴滴柳青重新表示，滴滴正在评估应该进军哪些新市场，既有可能与当地现有的专车公司合作，也有可能与之竞争。如果滴滴认为当地的企业实力不够强大，便有可能与之竞争。这是一场艰难的比赛，但我们乐在其中。也就是说，滴滴可能不仅仅通过各种嫁接形式来进入海外市场，也将会采取和 Uber 相似的做法，直接进入当地市场提供打车服务。当然，Uber 在进军国际市场时引起了不少争议和冲突，这也将是滴滴全球化进程里不得不面对的问题。题图自：新浪科技                              陈 诗蔚 (chenshiwei)                    VR/AR/新兴媒介，工作邮箱：chenshiwei@ifanr.com                                                            邮箱                                  #欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>25<docid>     <title>Uber 自动驾驶全球首秀：193 公里和 5 万罐啤酒的完美征途</title>     <link>http://www.ifanr.com/737231?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>今年 8 月被 Uber 以 6.8 亿美元收购的自动驾驶卡车公司 Otto ，终于在本月 20 日清晨，完成了全球首次自动驾驶卡车送货任务。司机沃尔特‧马丁将这辆 18 轮卡车从柯林斯堡的啤酒厂开上 25 号州际公路后，打开了“接管”开关，卡车进入自动驾驶模式，他随即起身离开驾驶座，来到后座系好安全带闭目养神。图片来自：视频截图在无人干扰的情况下，Otto 的卡车自动行驶了 120 英里（约 193 公里）到达科罗拉多的斯普林斯，为安海斯-布希啤酒厂（Anheuser-Busch）运送了 5 万罐百威啤酒。科罗拉多州运输部的官员参与了线路规划，并监督了自动驾驶的整个流程。卡车在行驶过程中，科罗拉多的巡逻队全程跟随。交货后，啤酒厂支付了 470 美元的运费。卡车司机要失业了？这并不是一次普通的测试，193 公里的路程意味着 Otto 自动驾驶系统已具有实际使用价值。不同于特斯拉的 Autopilot 自动驾驶系统，Otto 的系统提供真正的“4 级”自主权，一旦进入州际公路，它便能完全接管驾驶，解放司机双手。这一原理与飞机的自动驾驶类似：飞行员操纵飞机起飞到一定高度后开启自动驾驶仪，使飞机自动按指定的姿态、航向、高度和速度飞行，而飞行员则集中精力完成其它与飞行安全相关的工作。不过司机们无需为此担心，Otto 的自动驾驶系统仅能用于高速公路，因为高速路的路况较为简单，不必避让行人、自行车或停靠在路边的车辆等。同时，它会让车辆保持安全的车距，并且只有当绝对有必要时才会变道。而在到达目的地的最后几公里，由于进入到路况复杂的市区，还是需要切换到手动驾驶模式。图片来自：The VergeOtto 也表示他们的系统并不打算跟司机们抢饭碗，其联合创始人 Lior Ron 认为，在未来，司机的角色可能更像“港口引航员”，负责引导卡车到达目的地。至少在可预见的未来，驾驶员仍然是自动驾驶中不可或缺的一员，但除了处理复杂道路情况外，他们也能做些其他事。“我觉得我得练习一下瑜伽。”马丁在采访中开玩笑说道。卡车有望率先实现大规模自动驾驶图片来自：The VergeOtto 安装在测试卡车的自动驾驶装备并不复杂，包括位于驾驶室和拖车的 3 个激光雷达检测单元、一个连接到保险杠的雷达螺栓、一个位于挡风玻璃上方的高精度摄像头。车内还有两个红色按钮用于控制自动驾驶系统开关，一个靠近方向盘，另一个在座位后面的卧铺旁。Otto 表示这些硬件适用于任何具有自动变速器的卡车，而他们的最终目标，无疑是想要实现美国 430 万卡车的自动化。至于为何选择从卡车行业切入自动驾驶市场，Otto 自有其考量。卡车运输占据了美国 70%的运费，每年运送货物达 105 亿吨。然而，卡车司机的数量却远远无法满足需求。美国卡车协会估计，当前卡车司机的缺口约为 4.8 万名，到了 2024 年，这一数字可能会扩大至 17.5 万。Otto 的自动驾驶系统虽然不能完全取代司机，但无疑能提高运输效率，缓解日益短缺的卡车司机资源缺口。更重要的是，自动驾驶技术还能进一步提高道路的安全性。图片来自： MashableAsia美国交通部数据显示，美国卡车年行驶里程占所有车型里程数的 5.6%，但事故率却高达 9.5％。每年约有 400 万起卡车交通事故，造成约 4000 人死亡，而几乎每一起事故都是人为因素造成的。而在长途驾驶中，电脑往往人脑更为靠谱，因为电脑并不存在疲劳驾驶的情况。此外，有研究表明，使用自动驾驶卡车可以使排放量降低 15% ，行驶 10 万英里可以节约 5000 英镑。然而，Otto 自动驾驶硬件成本高达 3 万美元，在投入商用之前，还需要解决成本过高的问题。目前，Otto 正在致力于提升自动驾驶系统的基本体验，比如让加速和制动过程更为平滑稳定，以及提高车道控制等。他们的长期目标还包括预测其他司机的可能行为、建筑区域导航、处理突发恶劣天气等危险。题图来自：The Verge                              吴羚                    工作邮箱：wuling@ifanr.com                                                            邮箱                                  #欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>26<docid>     <title>瑞典政府：只要带相机的无人机都不能飞！</title>     <link>http://www.ifanr.com/737080?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>摄像无人机 = 监控摄像头？这是瑞典最新法规给带摄像头的无人机所下的定义。自无人机出现以来，有关于 “偷拍”、“窥视” 等词就一直跟在它的后面，无论在搜索引擎还是视频网站搜索都能有大量相关信息。由于无人机可以进行远程操控，飞离机主对他人进行拍摄。对于瑞典来说，这严重违反了他们的监视法。图片来源：Drones Globe因此在近日，瑞典法院裁定，将带摄像头的无人机列入禁用名单，除非是为了调查犯罪案件或事故，否则像是婚礼、新闻等需要使用无人机的活动都要申请许可证。虽然这一法规可以有效保护个人隐私不被泄露，但却严重打击了瑞典正在蓬勃发展的无人机市场。据统计，仅 2015 年瑞典就售出了 2 万多台无人机，其中有 1000 多台都用于商业目的。题图来源：PetaPixel瑞典本土工商业组织就带头反对，他们不仅认为该法案过于严格，而且执行起来也相当困难。哪怕摄像无人机被禁止，其他类型的无人机却没有，所以执法机构将很难判断无人机是否在飞行时进行偷拍，也很难采集偷拍的证据。也许瑞典在反对声音下可以考虑更改这一法案，毕竟 2014 年的时候他们还裁决摄像无人机合法可用。瑞典可以学习一下友邻英国的无人机法案：小型无人机（SUA）操作员必须保持时时刻刻能看见无人机，对无人机能够完全掌控，在飞行时为其他飞行器、人群、车辆以及建筑保持一定的空间以免发生碰撞事故。配备相机的无人机不得在距离人群、车辆、建筑等 50 米内飞行，在拥挤的地段，无人机不得在距离拥挤物体 150 米以内的空间里飞行。&nbsp;题图来源：YouTube#欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>27<docid>     <title>苹果的汽车操作系统，可能是“黑莓出品”</title>     <link>http://www.ifanr.com/737136?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>据彭博（Bloomberg）最新报道，苹果安排了数十名软件工程师在其加拿大办公室里研发自动驾驶汽车操作系统，并且其中二十多位都是从黑莓（BlackBerry）QNX 公司挖过来的。这些工程师现工作于苹果在渥太华市郊坎纳塔的办公室，离 QNX 办公室只有五分钟步行距离。坎纳塔办公室成立于今年年初，据说是苹果为了能够更好地吸纳当地自动驾驶软件人才的举措。图片来自 TechCrunch虽然 QNX 最为广为人知是建造车内娱乐系统，但其于去年就开始研发自动驾驶车辆软件了。苹果看似特别青睐黑莓 QNX 成员，不仅挖来了工程师，早于今年 7 月，已经聘请前黑莓 QNX 负责人 Dan Dodge 参与到苹果汽车项目 Project Titan 中，而另一位关键人物则是 QNX 前资深工程师 Derrick Keefe。Dan Dodge（图片来自 investottawa.ca）由于苹果不是在建造实体车，因此有传闻说他们已经开始用 VR 模拟测试自动驾驶平台了。该 VR 技术由另一 Project Titan 的小队研发而成，由 VR/AR 专家 Doug Bowman 带领。虽然在过去的一年里， Project Titan 招来了很多“大人物”，但在上个月的时候，项目组经历一次大型裁员。该项目目前应该仍处于一个不太稳定的状态，并且工程师也面临着一个强硬的最后期限 —— 要在 2017 年秋季推出可行的自动驾驶操作系统。题图来自：汽车科技#欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>28<docid>     <title>Google 光纤撂挑子了，超高速网络想说爱你不容易</title>     <link>http://www.ifanr.com/737040?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>&nbsp;曾经羡慕嫉妒恨美国人可以使用比传统光纤快近 100 倍的 Google 光纤 （Google Fiber），此前为了升级服务， Google 光纤更是刚与高速无线网络服务商 Webpass 达成合作，现如今推出这一试验性服务的 Google 却表示撑不住了。美国时间 10 月 25 日，Google 光纤宣布暂停其在十座“有潜力城市”的光纤拓展计划。Google 光纤 CEO 克里格•巴瑞特（Craig•Barratt）在官方博客上发表文章称:我们必须坚持不只是攻城掠地，更要稳固城池——不断扩展科技、商业、政策的边界——坚持做提供超高速网络服务的行业领导者。因此我们决定重塑我们的计划去达到这样的目标。我们必须做出改变去更加关注商业和产品体系。更为重要的是，这个计划将强化我们在新科技和资源调度方法的关注度，以此带来比今天更为丰富的超高速网络资源。Google 光纤从 2011 年 3 月开始上线，目前该服务已经拓展至美国的 13 个城市地区，而此次关停的 10 座“有潜力城市”包括：达拉斯、杰克森维尔、洛杉矶、俄克拉荷马城、凤凰城、波特兰、圣何塞以及坦帕。&nbsp;（图片来自：Google Fiber Official Blog）据 engadget 消息，此次关停并不会影响之前已铺设及确定上线 Google 光纤的城市，而此前处于公司“扩张版图”内的城市包括芝加哥、达拉斯、波特兰、坦帕以及圣迭戈，其继续 Google 光纤服务的前景不容乐观。尽管巴瑞特指出 Google 光纤的服务订阅数以及营收在不断增长，但基于高额的光纤网络运营费用和未达标的订阅人数之间的矛盾，Google 可能会考虑暂缓其在物理光纤缆线方面的铺设。（图片来自：Tech News Today）此外有消息称，Google 光纤将同时裁减这些城市的员工，受影响人数近百分之九。巴瑞特同样在博客文章中表达了自己离开 Google 光纤 CEO 职位的意愿，称其将继续担任顾问。题图来自：VentureBeat#欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>29<docid>     <title>为了运送 88 包棉花，这两家银行用上了区块链和物联网</title>     <link>http://www.ifanr.com/736607?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>比特币的“激情不再”，让人们愈发不再通过各大“投机者斗兽场”去尝试暴富。这也让人们对于区块链愈发正视和乐于尝试。图片来自 BusinessInsider前天，澳洲联邦银行（CBA）、富国银行（Wells Fargo）就利用区块链、物联网进行了一次银行间贸易事物的试验，目的只有一个：验证区块链技术和物联网技术的实用性。此次交易的双方实际上同属博瑞棉花（Brighann Cotton），只不过分别为美国部和澳大利亚部，交易的内容是将一批 88 包的棉花从美国的德克萨斯州运到中国的青岛。图片来自 Skuchain而他们使用的区块链技术是美国区块链公司 Skuchain 的 Brackets 系统，而在 Skuchain 上也有这套系统主要优势的简短介绍：它能够促进金融家对常见的交易物如采购订单、发票、库存和付款约定进行贷款，同时允许贷款成为抵押资产，放款操作将会直接由真实世界中的事件触发。它提供了一个实时可信的交易状态查看能力，这也大幅度的提升了交易中所有参与者的信息透明度，并且帮助他们建立更加强的相互信任，从而建立稳定的供应链生态。它增强了市场中抵押资产的流动性，同时也大幅提升了常见的“贸易融资”工具，比如保理，融资 PO，供应商库存管理等。这同时也提供了进行更深层次金融的机会。在这次交易中，这些特点也有所体现。原来交易中的大量的纸质信用证通过存储在私有分布式账本上的一个数字智能合约来执行。这份智能合约由计算机代码编写，一旦达到合约条件，交易就会自动执行。图片来自 Wikipedia而合约条件自然就是棉花到达目的地，博瑞棉花使用了一个 GPS 设备来追踪运输中货物的地理定位。一旦他们到达最终目的地青岛，智能合约就会自动放出资金。澳洲联邦银行的现金流和交易服务处执行总经理 Michael Eidel 表示：我们想要证明区块链、智能合约与物联网可以实现结合。从客户的角度看，三项技术的结合可以实实在在地带来令人兴奋、简单便捷和直接的用户体验。通过这三项技术，原来需花费数日的人工处理程序如今可以在几分钟内完成，这就降低了成本，提高了效率。除此之外信息的透明度也有所上升，因为所有数据都在同一个私有分布式账本之上，并且数据还不可篡改，发生业务欺诈的可能心也大大减少。Eidel 还表示：我们追求的并不是建立一个完全灵活的模型，而是开始真正使用一些非常重要的新技术，把各种技术结合起来并带来一个可行的良好用户体验。下一步，他们打算拓展物联网部分——尝试将他们运用在保险行业中，提高对投保货物的监控。Eidel表示：可以进行一个试验，添加一些传感器来测试湿度和温度是否超出范围。然后对这些条件进行编码的智能合约就会发出通知，告知保险公司货物可能已经损坏。用这种方法，在出现一些失误情况时会变得十分有用，因为这些设备可以准确展示什么时候发生了事故，事故当时的货物所有权归谁所有。从技术的角度来看，这一次尝试想要推广开来还将面对各种各样的困难，但是很明显，各种各样的测试必然会成为区块链接下来发展的一个重要阶段。尤其是对于很多只利用部分特性的应用场景，能否真得对现有模式形成冲击，也只有试过才知道。题图来自 Myrugshop                              李 赓                    鲜衣怒马少年。                                                            邮箱                                  #欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>30<docid>     <title>刚拿到 5000 万美元的 Hyperloop One，打算再融资 2.5 亿美元</title>     <link>http://www.ifanr.com/737087?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>尽管 Hyperloop One 刚在本月中旬拿到了 5000 万美元融资，但他们将在明年初启动新一轮融资，这一次的目标是 2.5 亿美元。《福布斯》最先爆出这一消息，他们声称获得了该公司的一份融资文件，并透露 Hyperloop One 目前的项目经费预算已经超出了提出这一概念的马斯克当初的估计。这份文件的真实性已经得到了其 CEO 罗博·洛依德(Rob Lloyd) 的证实。图片来自：ForbesHyperloop One 自成立以来，筹集的资金已达 1.6 亿美元。Hyperloop One 计划在 2020 年建成货物运输系统以及 2021 年完成乘客输送系统，但《福布斯》获得的文件显示，这两个项目的成本与预期有很大出入。马斯克在 2013 年提交的白皮书中，预计从洛杉矶到湾区的 Hyperloop 线路成本只需要 60 亿美元，即每英里不超过 1150 万，远低于高铁。然而，Hyperloop One 在 7 月和 10 月提交给潜在投资者和地产开发商的报告却显示，许多项目的成本比“钢铁侠”预估的要高得多，比如一条长为 107 英里的环湾区隧道或隧道+高架轨道组合，花费就将达到 90 亿至 130 亿美元，即每英里成本为 8400 万至 1.21 亿美元。图片来自：Time此外，在上一轮融资中，Hyperloop One 透露他们打算在迪拜的杰贝阿里港建设超级高铁运输系统，这条从迪拜到阿布扎比的线路长达 93 英里，预计成本为 48 亿美元。也就是说，在 Hyperloop One 第一期总计长达 520 英里的超级高铁项目中，成本预算达到了 640 亿美元。尽管 Hyperloop One 一直强调一旦项目上马，利润将相当可观，单个项目至少也有 35% 的利润率，到 2030 年可能会更高。但 Hyperloop One 至今仍只是一个原型产品，公司在自身发展和证明概念的可行性上耗资巨大。这也是为什么在短短两年内，虽然手握 1.6 亿美元投资，Hyperloop One 却仍在继续寻求融资的原因。融资文件表明， Hyperloop One 已经开始在以每年 5% 的收益与 15%的 C 轮最终股价折让，向投资者提供额外的可换股票据。一些风投专家认为这可能表明该公司正在进行大量现金积累，用于 Pishevar（创始人）所说的“资本密集型业务”。对于 Hyperloop One 画的大饼，很多人始终持怀疑态度，而 Hyperloop One 一直也是麻烦不断，比如与其联合创始人布罗根·班布罗根（BroganBamBrogan）之间的官司及内讧等。但外界依然认为，Hyperloop One 是最有可能实现“超级高铁”这一设想的公司。题图来自：Tech Crunch                              吴羚                    工作邮箱：wuling@ifanr.com                                                            邮箱                                  #欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>31<docid>     <title>词错率降低至 5.9%，微软今日发布用于语音识别技术的“认知工具包”</title>     <link>http://www.ifanr.com/737013?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>一个月前，微软的对话语音识别技术在产业标准 Switchboard 语音识别基准测试中实现了词错率（word error rate, 简称 WER）低至 6.3% 的突破 ，创造当时该领域内错误率最低纪录。近期，微软进一步将词错率降低至 5.9%，首次达成与专业速记员持平而优于绝大多数人的表现。微软的语音识别技术可以一次又一次刷新纪录，在很大程度上要归功于 CNTK (Computational Network Toolkit) 这个开源工具。该系统最初是为了研究语音应用而建立，后来拓展发展成为微软本地化深度学习系统。CNTK 工具包已于一年前在 GitHub 上开源，目前包括微软人工智能个人助理小娜和 HoloLens 的语音识别都是基于 CNTK 实现的。CNTK 跟其他开源软件最大的区别是它能做大规模、分布式的机器学习，同时保证强大的性能。今天，该工具包进行了更新，新增一个被称为“认知工具包”的测试版。针对语音识别的研究可以追溯到上个世纪七十年代 DARPA（Defense Advanced Research Projects Agency，美国国防部先进研究项目局，主要致力于美国国防高新技术的研究、开发和应用）资助的一个相关项目。此后几十年，越来越多研究机构和大型公司陆续加入其中。“这次突破是过去二十多年语音识别技术不断积累的结果，”微软主管语言及对话研究组的研究员 Geoffrey Zweig 称。现在微软达到的 5.9% 的词错率是什么概念？在行业标准 Switchboard 语音识别任务测试中，人类对照组（由专业速记员组成）将对话语音转录成文字，目前有记录的最低词错率就是 5.9%，这就意味着微软的语音识别系统的语音识别能力已经高于世界上绝大多数人而与人类专业高手持平，创造了一项新的世界纪录。此次语音识别的里程碑式突破将对消费者和商业产品产生深远影响，因为语音识别技术能够显著增强人们的日常计算体验。这些产品包括像 XBOX 的娱乐设备、像微软小娜（Cortana）的生产力工具以及能实现实时语音到文本转录的个人人工智能助手。微软团队的词错率虽然实现了与人类专业速记员持平的 5.9%，但这并不代表计算机就能完美识别出每一个单词。如果哪天计算机能完美识别“蓝瘦”、“香菇”，那语音识别技术又将达到一个新的高度。                              陈 诗蔚 (chenshiwei)                    VR/AR/新兴媒介，工作邮箱：chenshiwei@ifanr.com                                                            邮箱                                  #欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>32<docid>     <title>美国《消费者报告》汽车可靠性排名出炉，特斯拉沦为垫底之一</title>     <link>http://www.ifanr.com/736513?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>以权威性著称的《消费者报告》（Consumer Reports，CR）最新发布了《2017 年车辆品牌可靠性调查报告》。这份调查报告采用给读者发放问卷的形式，调查读者自己驾驶的车辆在过去 12 个月内出现的故障和质量问题，并且派专人在指定道路对车辆进行试驾，再加上安全性数据。综合统计调查结果后，依据车型可靠性分数来预测出品牌平均分数。今年，CR 共收集了超过 50 万辆车的数据，涵盖了从 2000 年到 2016 年的 300 多个车型，还有 2017 年初的几个车型，以下是品牌排名：表现依旧优异在 CR 的分析报告中，使用了 “不足为奇” 这一词来形容排在榜单一、二位的雷克萨斯和丰田。它们以一贯优异的表现继续留在了榜首，CR 还称赞其造车模式已相当稳定。同时，在十大可靠车型报告中，丰田普锐斯、4Runner 车型和雷克萨斯 CT 200h、GX、GS 车型均有上榜，两家就已经占比一半。图片来源：Motor Trend紧随其后的别克由于其核心产品线成熟，车辆的大多数问题也已经解决，同时别克推出的几款新车也相当亮眼，可能对未来的品牌表现产生影响。今年别克生产线还进行了调整，将 SUV 的产量下调，轿车占比更多。都是 Model X 惹的祸排在末尾的几家品牌中，第一次上榜的特斯拉特别显眼。这是由于在去年年底发布的 2016 年最佳车型中，CR 给予了特斯拉 Model S 的两款车型超过 100 分的超高评分。这在当时相当轰动，因为这是 CR 所给予过的最高评分。对于 Model S 《消费者报告》给予的评价是：Model S P85D 具有里程碑式的意义。虽然 Model S 表现优异，却也难以补上 Model X 的大窟窿。看了标题的你，可能以为给特斯拉背锅的会是他们的自动驾驶系统，然而 Model X 车型的硬件隐患更多。从灵敏传感器误判到漏雨，再到鹰翼门故障，系统升级后又再次故障…… 这一系列的问题让车主不胜其烦。（爱范儿（微信号：ifanr）曾经报道过《用 8 万美元的 Tesla Model X“鹰翼门” 切黄瓜？这并不是玩笑》）图片来源：YouTube因此 Model X 也被 CR 列入了今年排名最低的 10 款车型之一。 有起有落与 2016 年的汽车品牌可靠度排名相比，英菲尼迪完成了一次逆袭。从 24 名到第 8 名，足足上升了 16 个名次，除了看好他们发布的几款新车，CR 也把 Q70 车型列入了十大可靠性车辆，从而拉动了品牌平均分，CR 评价到：Q70 操作相当敏捷，转向和行驶稳定，后排宽敞的 L 型座椅十分舒适，并且和同类车辆比价格更为优惠。图片来源：Motor Trend反观跌幅中最为意外的，是一向 “稳重” 的本田，这次它跌出了最可靠品牌的名单，在这方面可谓是第二个“特斯拉”。本田思域的问题接连不断，断轴隐患、引擎故障、电子系统故障…… 停售、召回一系列风波使这个可靠的日系品牌丧失了一大批忠实顾客。电子化系统关于品牌榜单，CR 调查了十几个车辆可能存在不足的方面，包括嘈杂的制动器、糟糕的内饰、主要保险杠的损坏，还有保修期外变速器维修或四轮驱动系统的故障……图片来源：YouTube大部分品牌的下跌，都是因为自己某一款车型出现了非常严重的问题。并且由于近年来，汽车厂商大量加入复杂的电子化操作系统，而系统故障导致的差评也存在很多。鉴于这是一份纵观行业的榜单，而如果消费者需要依据榜单选购车辆，那么车型可靠性榜单可能会更加有参考性。&nbsp;题图来源：Wired#欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>33<docid>     <title>几乎确认：新款 MacBook Pro 将搭配 OLED 触控按键和 Touch ID</title>     <link>http://www.ifanr.com/737015?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>当地时间 10 月 27 日苹果新品发布会的看点，已经没有悬念地落在了新款 MacBook Pro 的身上；而且这一次，人们不仅需要一款新产品，还需要一个新设计。据外媒 MacRumors 报道，在最新发布的 macOS Sierra 10.12.1 版本中，有一张关于在 MacBook 电脑上使用 Apple Pay 的图片。而在这种图片中，一款标有 MacBook Pro 的产品赫然出现，而且它的键盘上方拥有一个黑色长条，这个长条取代了现有的一排按键。图片显示，这台 MacBook Pro 正在请求用户确认是否使用 Apple Pay；长条上同时显示了一些内容，这些内容是在提示用户将手指按在长条最右侧的一个模块来使用 Apple Pay。从这些细节来看，几乎可以确认，这个长条就是一个能够显示不同内容的 OLED 可触控屏幕，而长条右侧则配置了一个可以进行指纹识别的 Touch ID 模块。根据此前的消息，这块 OLED 屏幕将可能被命名为“Magic Toolbar”。另外还有一张细节图，可以隐约看到在 OLED 屏幕的右侧，有一个相对独立的模块；二者从视觉上几乎是一体的，但细看依然能分辨出来。注意细看 OLED 长条右侧关于上述内容的真实性，还可以从此前新款 MacBook Pro 的泄露图中得到佐证。今年五六月份，一组关于新款 MacBook Pro 外壳的泄露图曝光。其中一张泄露图显示，在键盘上方的确取消了一排实体功能键，留出了给 OLED 屏的空间；此空间右侧有一个小的相对独立模块，可以用来放置 Touch ID 模块。这张泄露图所展示的信息，与我们目前所看到的新款 MacBook Pro 设计完全相符合。另外，从这组泄露图中也能看到关于新款 MacBook Pro 在外观上的其他设计。比如说，机身两侧将会有 4 个 USB Type-C 接口和一个 3.5 毫米耳机接口；而 SD 卡槽、HDMI 接口和 MagSafe 接口将会被取消。关于新款 MacBook Pro 的相关配置预测，可以参见爱范儿（微信 ID：ifanr）此前的文章。不过正如文章所言：这次新的 MacBook Pro 真的不需要期待，你所需要做的只有存钱和买。另外，爱范儿（微信 ID:ifanr）目前也已经受邀参加此次苹果新品发布会，届时我们将第一时间带来新款 MacBook Pro 的相关信息，敬请关注。#欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>34<docid>     <title>对话网约车：外地司机的愤怒，京籍司机的尴尬</title>     <link>http://www.ifanr.com/736986?utm_source=rss&utm_medium=rss&utm_campaign=</link>     <content>整理 | 崔神与我一同坐在直播间里的，是三位西服笔挺、皮鞋锃亮的网约车师傅，他们都是模范专车司机。这与我们上次在街上抓的形色各异的网约车司机看上去很不一样。之前我在问领英要这些师傅介绍的时候，对方扔过来的是网上对他们的新闻报道。所以真聊起来，感觉他们显然对采访这事儿并不陌生。他们的观点表述没有那么凌厉，却有另一种独特。三位网约车师傅：边师傅 户籍燕郊 京牌车 做网约车 1 年多王师傅 户籍河南 公司车 做网约车 1 年多张师傅 户籍北京 京牌车 做网约车 1 年半壹博望志：新政关于网约车的排量和轴距要求，会带来哪些影响？张师傅：排量的 T 是个关键问题，我感觉现在德系车一般带 T 的多一些，你像日系车就不带 T，它就是 1.8，这就非常尴尬。滴滴专车现在主要路上跑的，有几项大车，天籁、本田雅阁、帕萨特、凯美瑞，那毫无疑问帕萨特是大众的车，一般都是 1.8T 以上的。那凯美瑞、本田雅阁包括天籁，它没有带 T 的，要么就 2.0，要么就 1.8。但是一般我们拉活儿的人都会买 1.8 的，终归要省油，成本减少了。一旦出台 1.8T，那可以想象一下……所以我不太赞成这个 1.8T。因为轴距我认为差不多都能达到，因为专车属于 B 级车，它都会这样设计，就是这个 T 我觉得比较敏感一点。边师傅：我觉得排量这个出来以后，限制了很多快车，快车这部分消费群体很大，他们觉得我只想把它作为代步工具，我就是从 A 点到 B 点，你把我带到那就行了，我就是这个要求。但是我不想花太多钱，因为我工资没那么高，只想作为代步工具，他这样直接就把这么大一部分的消费群体给砍掉了。有这个 T 以后肯定都要 B 级车以上，这对普通老百姓来说是不公平的。对于赚钱多的人没影响，我就打专车嘛，本身我也想舒适一些，对于我挣钱少的人，我就没办法了。所以对这个群体是有影响的。这对老百姓来说是不利的，还有就是本身也不环保。排量越大肯定污染越多嘛，那还用说啊。那就违背了国家提倡的这个绿色出行，那你要那么大的排量，肯定污染就会多。博望志：现在买新车也是 1.6 以下的购置税低？边师傅：对呀，这就是为了绿色出行，所以才有补贴的。那前面说补贴鼓励大家买小排量的，这样减少环境污染，结果后边出这个政策，这个（1.8T 以下小排量）不能干（网约车）。这本身就跟大的政策、大方向相违背了。王师傅：我觉得新政一出来，大部分车就不能干网约车了，专车有一部分，快车就更别提了。你想国内自主品牌的国产车，可能有一半以上都做不了网约车了。把咱们民族产业就给打压下去了。我前两天查了一下资料，奥迪 A3 和宝马 3 系都够不了这个标准，更何况国产车了，更做不了了，轴距达不到。排量国家倡导新能源和环保，都出 1.4 和 1.6 的。我觉得其实只要是合乎国家标准出厂的车辆，应该都能在路上运行。一个是干净整洁，服务质量跟得上，符合大众的出行就可以了。对国家发展经济，拉动内需，都有利嘛。张师傅：我也有个观点，专车跟快车肯定有区别之分，专车就是要高端，因为价位是不一样的，所以要求车的档次也是不一样的。应该是两个政策，细分化，快车有快车的政策，有不同需求的人，坐不一样的车。一刀切车就少了，大家的出行费用就增加了。就会出现车挑人了，不是人挑车了。我肯定选哪个活儿大挑哪个，就跟以前出租车一样了。贰博望志：关于户籍的问题，大家有什么想说的？王师傅：我认为是歧视外地人，我首先就受到影响了，我就不能工作了。我认为我已经融入这个城市了，已经有感情了，对这个城市也做出了很多贡献。保险啊，纳税啊该做的都做了，就是缺了一纸户口。我在北京也 10 多年了，我自认我比北京有的司机也不差。张师傅：我对京籍还是挺赞同的，主要是北京实在是太拥堵了。如果把外地车都砍掉，我觉得北京也会缓解压力。再加上如果自私地说的话，我们的收入更有保障了。关于京牌我觉得这个可以推给滴滴公司，它自己应该有一些车辆。滴滴应该有些自营的车辆，滴滴可以招聘司机，司机打工有个合理的工资定价，这也是解决问题的办法。边师傅：京牌对于我来说我是赞成的，因为本身你就是在北京的路面上跑，如果不是京牌的话，他所有的档案全在外地，北京的交管部门什么都没有，存在安全隐患问题。所以京牌还是应该限的，要不然北京本身就很拥堵了。我听说确实有一些村里的几个小伙子，家里有车，一想北京活儿多，拉滴滴能挣钱。从外地基本都是张家口或者河北周边的，说周一一大早开着车来北京了，然后天天拉，也不租房，困了累了就睡车里，睡几个小时起来再接着跑，到周六的时候开回去。回家休息两天，周一又回来了。这肯定是增加了北京路面的交通拥堵，肯定是疲劳驾驶，这么干肯定存在危险，他不光是对自己安全不负责任，对别人，对乘客和别的车带来危险。户籍的话限制有点苛刻了，像我就是外地户籍司机，我就是燕郊的，我依然会在北京生活，依然在北京工作，人还是在北京。因为我的家整个都在北京，顶多我换一个行业，难道我就不在北京了么？减少北京的人口了么？互联网 + 的时代，是共享经济的时代，是为了把像我这样的，我自己的车本身自己闲着也是闲着。其实我就是不拉网约车，我的车依然是在北京路上跑，就是把这些闲置的车给利用起来，改善大家的出行。所以如果把这块限制起来的话，对改善整个北京的出行是不利的。据我了解很多公司的老板和上班族，他们现在已经习惯于用网约车了。因为用网约车很方便，不用我自己开车。他们可以在车上完成很多办公，在去公司的路上接电话，安排工作上的事儿。他自己不开车了，也减少了路上的车辆，从这点上，是可以缓解北京交通压力的。我遇到过坐我车的乘客跟我说，突然觉得我们家的车没用了，上班打滴滴挺好，又方便还省钱。自己不用开车，因为到公司楼下，像国贸地区，又堵车停车又贵。我原来在国贸招商局大厦，停车第一小时 10 块，第二小时起每小时 15，一天停车费 100 多。有这钱完全够打车的了。互联网 + 是很好的方式，把大家的车利用起来，其实也减少了很多人开车了。这个政策如果限制得很严，路上的网约车一定会少，他们打不着车的情况下，肯定又开始开自己的车了，这样对北京的发展是不利的。叁博望志：如果政策落地，下一步有什么打算？王师傅：如果政策落地的话，第一我在（滴滴）公司肯定是干不了了。但我个人有车，我是京牌的车呀，你说我在北京干不了，我是回老家干？回老家干我是京牌车，如果老家也限制外地车的话。因为北京出台的政策，外地是效仿的，包括限购啊、摇号啊各地不是都效仿么。我要开着北京的车回去也不能干对吧？这样的话我就处于尴尬的状态了。车是北京的牌，人是外地的户口，回到原籍也被限呢？更多访谈内容：语音&nbsp;题图来源：South China Morning Post#欢迎关注爱范儿认证微信公众号：AppSolution（微信号：appsolution），发现新酷精华应用。爱范儿 |原文链接 ·查看评论 ·新浪微博 </content></doc>
<doc>     <docid>35<docid>     <title>苹果第四财季净利润下滑19% 这次大中华区也不给力了</title>     <link>http://www.techweb.com.cn/it/2016-10-26/2420458.shtml</link>     <content>【TechWeb报道】10月26日消息，苹果周二发布了该公司2016财年第四财季业绩。财报显示，苹果第四财季营收为468.52亿美元，比去年同期的515.01亿美元下滑9%；净利润为90.14亿美元，比去年同期的111.24亿美元下滑19%；毛利率为38%，低于去年同期的39.9%。其中，大中华区营收为87.87亿美元，比去年同期的125.18亿美元下滑30%。手机电脑营收全部下滑苹果第四财季共售出488.6万台Mac，比去年同期的523.9万台减少14%；营收为57.39亿美元，比去年同期的68.82亿美元减少17%。共售出4551.3万部iPhone，比年同期的4804.6万部减少5%；营收为281.60亿美元，比去年同期的322.09亿美元减少13%。共售出926.7万台iPad，比去年同期的988.3万台下滑6%；营收为42.55亿美元，与去年同期的42.76亿美元基本持平。其它产品营收为23.73亿美元，比去年同期的30.48亿美元减少22%。大中华区&ldquo;翻船&rdquo;了欧洲部门营收为108.42亿美元，比去年同期的105.77亿美元增长3%；大中华区营收为87.85亿美元，比去年同期的125.18亿美元减少30%；日本部门营收为43.24亿美元，比去年同期的39.29亿美元增长10%；亚太其他地区营收为26.72亿美元，比去年同期的27.04亿美元减少1%。苹果预计，2017财年第一财季营收为760亿美元到780亿美元，毛利率为38%到38.5%，运营支出为69亿美元到70亿美元，其他收入(支出)为4亿美元，税率为26%。（明宇）您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;苹果造汽车之心不死？消息称苹果在加拿大研发汽车OS&nbsp;&nbsp;&nbsp;&nbsp;小米Note2综合评测：工业设计有质感 再次冲高端市场&nbsp;&nbsp;&nbsp;&nbsp;华纳《神奇动物在哪里》《萨利机长》内地公映改档</content></doc>
<doc>     <docid>36<docid>     <title>微信发布新版本：群聊能收钱 拉人需群主确认</title>     <link>http://www.techweb.com.cn/internet/2016-10-26/2420487.shtml</link>     <content>【TechWeb报道】10月26日消息，微信发布新版本6.3.28，对群功能进行了两项功能升级。一是群主可启用需群主确认才能邀请朋友进群功能。微信群群主可在群详情页的群管理选项中，开启此项功能。开启此项功能后，群主将对群成员拥有更高的管理权限。二是新版微信中在群聊页面添加了收款功能。群活动或者聚餐后，可直接在群里发出收款。（明宇）&nbsp;&nbsp;您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;土豪100万元打赏主播这事还没完了：银行卡被家人冻结   &nbsp;&nbsp;&nbsp;&nbsp;小米全面屏手机MIX为何这么便宜？这才是真相</content></doc>
<doc>     <docid>37<docid>     <title>民航局：10月27日起三星Note7不能带上飞机</title>     <link>http://www.techweb.com.cn/tele/2016-10-26/2421161.shtml</link>     <content>【TechWeb报道】10月26日消息，中国民用航空局（以下简称民航局）再次发布与三星Note 7相关的公告，称自明日起严禁旅客和机组成员随身携带三星Note 7。民航局：10月27日起三星Note7不能带上飞机民航局官网26日公告称，为确保航空运输安全，从2016年10月27日起，民航局严禁旅客和机组成员随身或在手提行李中携带三星Galaxy Note 7手机；严禁将三星Galaxy Note 7手机放入托运行李中托运；严禁将三星Galaxy Note 7手机作为航空货物收运。这意味，三星Note 7被禁止携带上飞机。今年9月份，在Note 7自燃案例集中爆发之时，民航局曾禁止乘客使用Note 7或为其充电，但并未禁止乘客将该款手机带上飞机。在9月14日的一份公告中，民航局提醒旅客不得在飞机上使用三星Note7或为其充电，不要将三星Note7放入托运行李中托运，不允许将三星Note7作为货物运输。也就是说，旅客如果随身携带三星Note7，关机便可。民航局26日公告之前，三星已在全球范围内召回、停止销售全部Note 7手机，其中也包括在中国范围内召回全部国行Note 7。（张衣）以下为民航局26日公告全文：民航局禁止携带和运输三星Galaxy Note 7手机针对三星Galaxy Note 7手机存在的问题，为确保航空运输安全，从2016年10月27日起，民航局严禁旅客和机组成员随身或在手提行李中携带三星Galaxy Note 7手机；严禁将三星Galaxy Note 7手机放入托运行李中托运；严禁将三星Galaxy Note 7手机作为航空货物收运。民航局要求航空公司及其地面服务代理人、航空销售代理人在售票、办理乘机手续、货物收运等环节针对上述规定内容履行告知义务。对于违反上述规定者，公安机关、民航行政机关将根据情节，依照国家有关法律、法规严肃处理。您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;小米MIX评测：超大屏占比 电量胜小米Note2 &nbsp;&nbsp;&nbsp;&nbsp;张雨绮再婚 老公曾任申万证券投资经理&nbsp;&nbsp;&nbsp;&nbsp;电魂网络挂牌上交所 成国内首家A股主板IPO上市游戏公司</content></doc>
<doc>     <docid>38<docid>     <title>新华网前三季度营收增长近五成</title>     <link>http://www.techweb.com.cn/finance/2016-10-26/2421257.shtml</link>     <content>【TechWeb报道】10月26日消息，定于10月28日登陆A股的新华网公布了前三季财报，营业收入同比增长47.06%，至近8亿元。财报显示，2016年1-9月，公司实现营业收入79,494.61万元，较上年同期54,055.52万元上升47.06%。网络广告、信息服务、移动互联网等主营业务收入的快速增长对新华网经营业绩增长起到了重要的推动作用。在前三季度，新华网营业利润同比增8.58%，至1.58亿元，归属于新华网股东的净利润同比增5.64%，至1.6亿元，归属于新华网股东的扣除非经常性损益后的净利润同比增7.63%，至1.58亿元。新华网定于10月28日在上交所挂牌，股票代码为603888，本次IPO发行股份数量5,190.2936万股，发行价格为27.69元/股，募集资金总额为143,719.23万元，扣除发行费用后，募集资金净额为137,988.57万元。募集资金的主要用途为：全媒体信息应用服务云平台项目、新华网移动互联网集成、加工、分发及运营系统业务项目、新华网政务类大数据智能分析系统项目、新华网新媒体应用技术研发中心项目和新华网在线教育项目。IPO后，新华网股权结构为：新华社直接持股59.79%，中国联通持股1.45%，南方报业持股1.45%，中国电信持股0.73%。（麻晓超）您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;OPPO R9s上市时间确定 OPPO R9s首批备货量、价格曝光&nbsp;&nbsp;&nbsp;&nbsp;《我不是潘金莲》还未公映 冯小刚下一部新片曝剧情&nbsp;&nbsp;&nbsp;&nbsp;小米Note2开箱图赏：亮黑双曲面屏 买不买就看这篇了</content></doc>
<doc>     <docid>39<docid>     <title>中国代购们在澳洲被BBC盯上了 他们普遍加价50%</title>     <link>http://www.techweb.com.cn/world/2016-10-26/2420817.shtml</link>     <content>&nbsp;TechWeb 10月26日报道&nbsp;文/露天英国广播公司BBC作为全球最大的新闻机构之一，真的对中国很感兴趣。前段时间宝强离婚曾登上BBC头条，现在BBC又将目光放到远在澳大利亚的一群中国人，对，就是常在朋友圈直播购物的&mdash;&mdash;Daigou，代购们。中国代购们在澳洲被BBC盯上了 他们普遍加价50%约4万名讲普通话的代购在澳洲代购在国外除了叫&ldquo;Daigou&rdquo;之外，还有一个非常专业的称谓&ldquo;Freelance Shopping Consultant（自由职业购物顾问）&rdquo;。BBC报道称，在澳大利亚，大约有4万名代购，他们都讲汉语普通话。这些线上线下从事代购的人基本都来自中国大陆，主要是年轻的移民或是国际学生，希望通过代购挣房租或是学费。代购生意的集中地是悉尼，在这里，中国社群越来越壮大，并且来往中国的直达航班很频繁，这让代购们做起生意更加便捷。报道的两位主人公分别是一名24岁毕业于武汉的会计Rika Wenjing，业余从事代购生意两年，手上有300名稳定客户。另一位则来自大连，目前在悉尼读书的Bob Sun，学习会计专业，并和3名好友租了一间仓库，上课之外专门做代购。Rika Wenjing来自武汉，24岁Bob Sun来自大连，24岁接受采访时，Rika Wenjing正提着两大袋刚买好产品，各种瓶瓶罐罐沉得快要把胳膊扯断。她每天盯着自己的手机和平板电脑，随时和客户沟通。碰到需要，直接去商店采购，寄走。Wenjing展示了她经常代购的产品，保健品、护肤品、衣服鞋子什么都有，但最火的是婴儿奶粉。她说：&ldquo;因为大家在中国买不到高质量和放心的奶粉，所以他们想要买澳洲生产的。哪怕澳洲的会贵，他们不在乎价格，只在乎质量。&rdquo;BBC提及2008年震惊全国的毒奶粉事件，至少6名儿童因毒奶粉致死，约30万儿童被殃及生病。从那时起，中国的富裕家庭和中产阶级就开始推崇买国外婴儿奶粉。尽管今年年初，北京对代购收紧控制，但这个行业仍然有利可图，特别是婴儿奶粉，甚至被商人看作是&ldquo;白色黄金&rdquo;。您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;小米Note 2发布 外媒们竟这样评价！&nbsp;&nbsp;&nbsp;&nbsp;Gary将退出RM 已获Running Man官方证实&nbsp;&nbsp;&nbsp;&nbsp;苹果说新MacBook Pro就长这样！苹果发布会明晚举行</content></doc>
<doc>     <docid>40<docid>     <title>国行Note 7机主：被三星韩国高管晾在办公室1天1夜</title>     <link>http://www.techweb.com.cn/tele/2016-10-26/2420858.shtml</link>     <content>【TechWeb报道】10月26日消息，一位自称是&ldquo;三星安全版Note&nbsp;7全球首炸亲历者&rdquo;的微博用户，在微博上吐槽赴约前往三星北京总部同韩国高管见面，但被后者&ldquo;晾在办公室1天1夜&rdquo;。微博@不老的老回过去两天在微博发布了其在三星北京总部&ldquo;维权&rdquo;的视频直播内容，吐槽9月25日购买的国行Note&nbsp;7自燃后至今已一个月，三星方面仍未满足其提出的&ldquo;善后&rdquo;要求。根据该用户的说法，2016年9月25日下午5点14分，收到全新国行安全版Note&nbsp;7，更新系统后有绿电池，没想到9月26日早上6点11分，第一次充满电后，手机自燃。该用户此前发布的视频内容显示，其恰好视频拍摄下了手机自燃时的状况，当时手机正放在一款MacBook&nbsp;Pro上，因为手机自燃，MacBook&nbsp;Pro也被烫坏。该用户称，事件发生后，他向三星方面提出，希望&ldquo;赔偿电脑，同型号，手机在三星有个官方说法的前提下退机，&rdquo;以及他与三星共同检测事故原因。但三星方面&ldquo;拒绝与我共同检测&rdquo;，&ldquo;给三星中国打了至少50个电话&rdquo;，一直被告知等待处理意见。10月24日，&ldquo;我在（三星北京总部）电梯口的公共区域无任何不当行为，三星电子&nbsp;的韩国管理人员指责我非法入侵并动起了手，&rdquo;该用户发布的一条信息这样说道。10月25日，距离事发近1个月，该用户称，其&ldquo;赴约&rdquo;前往三星北京总部与&ldquo;三星韩国高管&rdquo;会谈。结果，&ldquo;说好的25日上午9点韩方管理层与法务团队一起与我面谈，一天里超过10次催促都是正在联系马上来人&rdquo;。&ldquo;三星中国（籍）的员工，（对我）态度不错，午饭是三星买单，中国员工很支持（我）&hellip;&hellip;&rdquo;三星韩国高管最终未出现，&ldquo;下班人都跑光了，都没人个能管这事的人告诉我会不会来人&rdquo;。该用户称当天（10月25日）他在三星北京总部内部会议室里过夜。10月26日早上，该用户再次开通视频直播，表示对三星中国的&ldquo;冷处理&rdquo;已无可奈何，准备离开。&ldquo;第一次玩直播，不想当网红&rdquo;，&ldquo;（三星赔不赔）钱不是问题&rdquo;，他在视频直播中回答网友提问时称，主要是为了让三星承担起企业责任，对中国消费者负责。家住广东的他为了&ldquo;维权&rdquo;，来到北京已近1个月。&ldquo;三星安全版Note7全球首炸亲历者，资深键盘党，骑行台爱好者，前和谐号驾驶员，软尾刷街裂架党，酱油型比赛选手，&rdquo;这位机主在微博上这样介绍自己。（张衣）&nbsp;您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;华为Mate 9下个月就要发布！麒麟960性能评测汇总：太强悍了！&nbsp;&nbsp;&nbsp;&nbsp;麒麟960详细解析：性能可怕！&nbsp;&nbsp;&nbsp;&nbsp;Gary将退出RM 已获Running Man官方证实</content></doc>
<doc>     <docid>41<docid>     <title>谷歌光纤项目受挫：不仅CEO下课 还要展开裁员 </title>     <link>http://www.techweb.com.cn/internet/2016-10-26/2420690.shtml</link>     <content>新浪科技讯 北京时间10月26日上午消息，由于CEO克雷格&middot;巴拉特（Craig Barratt）离职，导致谷歌光纤暂停了在10座城市的推广计划，并展开裁员。此举对谷歌在全美部署超高速上网服务的野心构成了沉重打击。巴拉特是Alphabet旗下Access部门CEO，负责运营谷歌光纤项目。他在博客中表示，今后将继续担任该公司的顾问。巴拉特表示，谷歌光纤也将调整商业和产品战略，以便关注新的技术和部署方法，从而&ldquo;让超高速上网服务比现在更加普及&rdquo;。已经开始部署谷歌光纤的城市将继续推进，但巴拉特表示，可能部署这项服务的地方将会暂停。&ldquo;我们相信，一旦技术和解决方案取得进步，我们就有机会重启合作谈判。在少数仍处于探索阶段的城市，以及部分与支持业务相关的领域，我们将会展开裁员。&rdquo;巴拉特写道。谷歌光纤已经部署到8大都市圈，今后还将向另外4个地区拓展。该公司一直在思考如何提供高速宽带，如何转向无线网络，以及如何降低布线成本。谷歌光纤希望为用户提供1Gbps的上网速度，但进展却非常缓慢。谷歌光纤最近宣布将收购Webpass，这家公司可以通过在建筑物顶部安装的发射器来传输数据，从而为家庭和企业提供服务。谷歌光纤希望将Webpass与该公司自家的无线技术进行整合，同时通过租赁现有的光纤和市政宽带网络来加速扩张。在谷歌重组为Alphabet之后，谷歌光纤成为Alphabet旗下Access部门的一部分。谷歌和Alphabet CFO露丝&middot;珀拉特（Ruth Porat）最近在电话会议上为谷歌光纤的相关投资展开了辩护。这是除谷歌之外，Alphabet内部成本最高的部门。（书聿）您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;周星驰电影《功夫》里的小哑女长大了 被赞是上海美女的代表&nbsp;&nbsp;&nbsp;&nbsp;打脸华师？范冰冰工作室晒宣传海报 暗指早已报备&nbsp;&nbsp;&nbsp;&nbsp;苹果年度营收、利润15年来首次下滑 股价盘后下跌2.8%</content></doc>
<doc>     <docid>42<docid>     <title>苹果大战微软 这次发布会都有什么新品发布？</title>     <link>http://app.techweb.com.cn/ios/2016-10-26/2420581.shtml</link>     <content>&nbsp;本周是10月份最后一个完整的自然周，过了这几天&ldquo;金九银十&rdquo;也就过去了，这一周的手机圈乃至科技圈都会非常的热闹。国内方面，会有小米Note2、360N4S骁龙版、中兴天机Max等新机亮相；此外还有苹果和微软两个国际巨头也在本周有新品发布。苹果和微软作为科技圈的巨头，他们的一举一动都备受用户和行业关注，如今他们又在同一周召开发布会发布新品这无疑会成为科技圈的焦点，那么苹果和微软此次的发布会都会发布哪些产品，他们之间的PK又将会碰触怎样的火花呢？按照时间顺序我们先来说说微软，北京时间10月26号23点微软将在纽约举办Windows 10大会，按照惯例以及各种曝光消息看来，微软应该会在此次大会上带来多款新品。新的Windows10Windows系统可以说是微软的基础，此次大会被称作&ldquo;Windows 10大会&rdquo;则更加说明Windows 10的重要地位。有消息称RedStone 2正式版的Windows 10将会在大会上亮相，新版的Windows 10系统将会加入OneClip、Paint 3D等特色功能，同时也会于Windows 10 Mobile更加的统一，或许还有UWP应用方面的新计划。您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;林依晨当场泪奔：胡歌夺第十一届金鹰双料视帝&nbsp;&nbsp;&nbsp;&nbsp;唐嫣担任金鹰女神！杨幂孙杨将现身金鹰节开幕式文艺晚会</content></doc>
<doc>     <docid>43<docid>     <title>复制阿里神话？传软银3亿美元投资印度版滴滴Ola</title>     <link>http://www.techweb.com.cn/internet/2016-10-26/2420598.shtml</link>     <content>Ola凤凰科技讯 北京时间10月26日消息，据外媒报道，两位知情人士透露，印度最大的打车服务Ola正在进行新一轮融资，而日本互联网巨头软银将会领投，对Ola注资2.5亿至3亿美元。&ldquo;软银将领投这新一轮融资，第一期款项将在数天内结束，&rdquo;一位消息人士说。他表示，软银希望进行更多注资，但是Ola希望控制股权稀释。软银上个月还领投东南亚打车服务Grabtaxi的新一轮7.5亿美元融资。Ola此次融资的具体规模还没有确定，该公司希望融资5亿美元，但也有可能提高至7亿美元。据悉，Ola此次的估值将与上一次持平，这显示出本轮融资的规模可能并不会显著增加。Ola在去年11月的5亿美元融资中的估值约为50亿美元。滴滴出行和苏格兰投资公司Baillie Gifford当时入局，成为Ola的新投资者。一位熟知Ola想法的人士表示：&ldquo;Ola现在更关心的是其业务质量和规模，并且筹集更多的资金，而不是获得更高的估值。&rdquo;Ola和软银目前均未回复置评请求。Ola的这轮融资正值全球打车巨头Uber加大对印度的投资之际。在退出中国市场后，印度已成为Uber最重要的海外市场。为了继续与Uber竞争，迅速完成融资对Ola非常关键，因为前者是全球资金最雄厚的创业公司之一，已经通过股权或发行债务融资150亿美元。Ola迄今已融资12亿美元，软银、老虎环球基金、俄罗斯亿万富翁尤里&middot;米尔纳的DST等是其最大的股东。Ola由孟买理工学院毕业生Bhavish Aggarwal和Ankit Bhati创立。Ola和Uber眼下正在印度市场大肆烧钱。据媒体报道称，Ola今年上半年平均每月亏损4000万美元，不过该公司眼下已经减少了对司机的补贴并提高了乘车费用。（编译/扬帆）您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;土豪100万元打赏主播这事还没完了：银行卡被家人冻结   &nbsp;&nbsp;&nbsp;&nbsp;9岁小学生发明电脑字体 6元下载一次&nbsp;&nbsp;&nbsp;&nbsp;360云盘关闭 360云盘资料怎么办？用这一招轻松解决</content></doc>
<doc>     <docid>44<docid>     <title>明年初三星支付Samsung Pay将在全球范围支持网购</title>     <link>http://www.techweb.com.cn/internet/2016-10-26/2421249.shtml</link>     <content>Samsung Pay凤凰科技讯 北京时间10月26日消息，据外媒报道，从明年年初开始，三星移动支付服务Samsung Pay将在全球范围内支持在线购物。三星公司今天宣布，其与万事达卡达成一项合作协议，从明年年初开始，三星将使用后者的Materpass数字支付系统拓展Samsung Pay的服务范围。万事达卡的Masterpass系统已获全球33个国家数千家零售商支持。除支持网上购物外，从今年11月份起，美国用户还能使用Samsung Pay进行应用内购买、享受当地商店提供的折扣服务。当前三星Samsung Pay仅对韩国市场开放了在线支付，其在韩国支付市场份额达到25%，总交易额突破2万亿韩元。从2017年初开始，三星将把这一新功能拓展至其他国家，Samsung Pay用户将能够在他们的手机、平板或者是电脑进行在线支付，以及实现快速结帐（Express Checkou）。预计最早在今年11月份，三星Samsung Pay将在美国市场支持应用内购买、提供折扣服务。预计酒类应用Hello Vino和订餐应用Velocity将成为首批支持三星应用内购买的App。但目前尚不清楚三星如何通过Samsung Pay向用户提供商品折扣服务。在当前移动支付市场，除了三星外，苹果、谷歌也都推出有类似竞争产品。但随着Samsung Pay版图不断拓展，该服务在全球移动支付市场将更具吸引力。（编译/若水）</content></doc>
<doc>     <docid>45<docid>     <title>奥巴马：美国互联网瘫痪 现在还没弄清楚原因！</title>     <link>http://www.techweb.com.cn/world/2016-10-26/2421013.shtml</link>     <content>【TechWeb报道】10月26日消息，据国外媒体报道，按照奥巴马总统的说法，现在仍然不清楚是谁导致了上周五的大规模互联网中断。这次攻击包括几十万、甚至数百万的互联网连接设备，发送垃圾流量给主要域名服务提供商Dyn，导致美国各地互联网瘫痪长达几个小时。根据中国设备制造商杭州熊猫科技公司的说法，网络摄像头和其他互联网连接的录音设备，因存在基本安全漏洞而受到了攻击。它承认它们的产品有部分原因。目前，召回杭州熊猫产品已经启动，但其他物联网设备制造商仍在排查之中。然而，似乎没有人知道谁是主犯，而且可能需要几个星期才能找到。奥巴马总统昨晚在&ldquo;Jimmy Kimmel Live！&rdquo;上，提到互联网中断称，我们不知道是谁做的。（周林）您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;美国互联网瘫痪 中国企业的摄像头躺枪！&nbsp;&nbsp;&nbsp;&nbsp;美国互联网瘫痪 史无前例！&nbsp;&nbsp;&nbsp;&nbsp;张雨绮老公被曝：多金又低调 上海大老板</content></doc>
<doc>     <docid>46<docid>     <title>不止玩游戏这么简单 VR和AR还可以治疗视力问题</title>     <link>http://www.techweb.com.cn/it/2016-10-26/2420642.shtml</link>     <content>VR与AR可以提高视力凤凰科技讯 北京时间10月26日消息，在许多人看来，VR（虚拟现实）和AR（增强现实）主要和游戏有关。一些人之所以感兴趣，主要是想拜访外星世界，或者欣赏一下外国名胜，去一些无法亲自前往的地方，做一些无法亲自做的事。将世界联系起来似乎是VR/AR技术最诱人的地方。尽管如此，VR和AR并不一定非要将用户带到遥远而虚幻的世界。在某些场合，VR和AR可以帮助视力有问题的人与世界更好接触。坐在电脑前工作，在屏幕上阅读文本信息，在家中或者办公室自由行走&hellip;&hellip;大多人都将它们当成理所当然的事情。有些人则不然，他们可能失去了一定的视力，有了VR和AR技术，这些人的视力可以增强。世界卫生组织估计，全球有2.46亿人视力很低，包括模糊视力、管状视力、无法纠正盲点等等。在视力存在问题的人群中（不单单只是低视力），约90%来自低收入群体。弗兰克&middot;魏布林（Frank Werblin）是加州大学伯克利分校的神经学教授，他要向低视力群体提供低成本助视器。一年半以前，魏布林发现他可以用VR技术来实现目标。IrisVision是一个APP，可以用在三星Gear VR头盔上。当穿戴者的头部移动时，APP可以瞬间响应，放大用户注视的东西，同时还可以提供很宽的视野。也就是说APP可以帮助用户更好地观看世界，在电脑上阅读也可以有所改善。最大的挑战在于成本，可穿戴视力助视器最高需要15000美元。魏布林表示，买一幅放大镜，价格只要25或者50美元，如果要购买可穿戴便携设备，需要几千美元，价格差距太大。IrisVision产品已经在线上销售，定价2500美元，美国一些诊所也用它来做实验。2500美元包括了软件、头盔以及驱动Gear VR的手机。在过去44年里，魏布林一直在研究人的视网膜功能。解决弱视问题事实上，在魏布林之前已经有人用VR硬件增强视力。詹姆斯&middot;布拉哈（James Blaha）的眼睛是弱视，他的一生备受困扰。拿到早期推出的Oculus Rift头盔之后，他深入研究，胡乱鼓捣，发现头盔可以来治疗弱视。最终布拉哈成立了一家名叫Vivid Vison的公司，他成了创始人兼CEO，Vivid Vison向患者提供整套治疗方案。一只眼睛的视力比另一只眼睛差很远，大脑就会抑制眼睛，从而形成弱视。弱视眼在感知深度时存在问题。当弱视患者穿过街道或者开车时，深度感知能力太弱就会造成困扰。医学的传统观点认为，如果在8岁之前没有及时治疗，患者就很难恢复了。布拉哈认为这一看法是错误的。布拉哈的一只眼睛弱视，他将该眼睛上方的头盔镜片亮度调高，从而强迫大脑不要抑制眼睛。此时，布拉哈就可以看到3D图像了，之前他从未看到过，布拉哈可以看到按键从键盘中凸出。在使用头盔的日子里，他拥有了90%的普通深度感知能力。Vivid Vison在美国和加拿大设立了约50家诊所，在欧洲和澳大利亚也有一些。布拉哈说，公司主要针对的是使用VR的病人，以及不怎么玩VR游戏的医生。Vivid Vison还与加州大学伯克利分校建立了合作关系，共同提高成年患者的深度感知能力。让法定盲人看见世界如果视力问题太严重，就会变成&ldquo;法定盲人&rdquo;，也就是说法律承认他是盲人。所谓的&ldquo;法定盲人&rdquo;，并非全盲或者什么都看不见。VA-ST是一家创业公司，源自牛津大学，它为视力存在问题的人开发应用。VA-ST开发了SmartSpecs头盔，它是一款便携设备，供&ldquo;法定盲人&rdquo;或者视力部分残疾的人使用。SmartSpecs的具体售价目前还不清楚，它可以让背景变暗，让目标物及目标物的边缘加深，从而提高目标物、脸的可视度。在黑暗环境中，SmartSpecs同样可以派上用场，它能够帮助用户找到正门，或者绕开家具。SmartSpecs的算法可以搜索某些特定对象，比如脸，包括脸部表情，或者是实时文本。VA-ST联合创始人史蒂芬&middot;希克斯（Stephen Hicks）认为：&ldquo;真正的关键在于向用户传输关联的信息，不要让无关的信息干扰用户。&rdquo;希克斯是牛津大学的研究讲师，他还是皇家工程院的企业会员。SmartSpecs能够让用户更自信，更独立，产品将于2017年年中推出。（编译/虎涛）您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;土豪100万元打赏主播这事还没完了：银行卡被家人冻结   &nbsp;&nbsp;&nbsp;&nbsp;游族网络第三季营收增长近九成&nbsp;&nbsp;&nbsp;&nbsp;超级高铁公司Hyperloop One拟再融资2.5亿美元</content></doc>
<doc>     <docid>47<docid>     <title>小米note 2发布会没耍猴 锤子Big Bang随意发车</title>     <link>http://www.techweb.com.cn/wanbao/2016-10-25/2420331.shtml</link>     <content>在微博时代，每个人的生活都深深的被知识浪潮所影响，而互联网则是永不过时的课堂。TechWeb团队将每天挑选出精彩评论，以飨读者。&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;正文分割线&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;&mdash;今天下午的小米note 2发布会大家都看了伐？不得不说，信仰真的是一个很神奇的东西，特别是当小米概念机&mdash;&mdash;MIX隆重登场后，有那么一瞬间，我竟然头晕眼花的看成了夏普Aquos crystal，罪过罪过。毕竟一个摄像头放左下角，一个放右下角呢。当然很明显这场发布会雷军将重头戏交给你开场的梁朝伟男神和末尾的MIX，中间的note 2部分节奏有点快。整场发布会还是颇有看点的，不禁让人想起了上周的锤子M1，也是让人眼前一亮。特别是BIG BANG功能，方便了不少老司机。真是一不小心就坐上了高科技的顺风车，现在的人啊动不动就那么污可怎么好，有时间多看看文学，欣赏艺术不好吗。一些韩国日本文化里不好的东西就坚决杜绝，不要看了，比如：再来看下最近金融公司的近况：咨询公司毕马威（KPMG）与澳大利亚知名金融科技风投机构H2 Ventures发布了三季度全球金融科技公司排名，全球排名前五的金融科技创新企业中有四家都来自中国，另有一家中国公司进入前十。在其发布的金融科技公司排名中，蚂蚁金服排名第一，学生贷款网站趣店排第二，P2P平台陆金所排名第四，众安保险排在第五位，京东旗下的京东金融也进入了前十。谁说蚂蚁金服得第一名不是无数剁手好儿媳和资深宅男的贡献呢。不过有人赚钱多花钱痛快就同样有人饭碗不保面临失业。近日，有员工爆料，美团的品控和摄影师全部被裁，这其中还包括哺乳期的员工。据悉，这已经是今年美团的第四次裁员风波。不过，消息一出，美团便发表了声明，表示要依法追究造谣传谣者责任。此前有分析人士指出，美团和点评现在员工3.5万，里面有2.5万人是销售、地推。裁员2.5或许有点夸张，但削减开支却是不争的事实。马上就双11了，各位选手在准备好买买买后，也可以考虑看下晚会，毕竟这届晚会可谓是&ldquo;巨星云集&rdquo;，几乎半个娱乐圈的都被请过来了（夸张点）。张艺兴、华晨宇、刘昊然、宋茜将登台表演；国民开心果&ldquo;小岳岳&rdquo;岳云鹏、《感觉身体被掏空》的&ldquo;彩虹合唱团&rdquo;会继续他们的傲娇搞怪&ldquo;网红&rdquo;之旅；由陆毅、李小鹏、品冠组成的奶爸天团，将和王祖蓝、李亚男组成的&ldquo;最萌cp&rdquo;。此外众多外国明星也将加盟双11晚会。此前公布的晚会全球&ldquo;推广大使&rdquo;水果姐凯蒂-佩里(Katy&nbsp;Perry)，美剧《破产姐妹花》中饰演富家女卡洛琳(Caroline)的贝丝-比厄、世界杯金靴得主托马斯-穆勒等也将加盟。还记得去年小岳岳的《五折之歌》吗？今年刚拍了新片口碑不错的他会有什么新神曲呢？</content></doc>
<doc>     <docid>48<docid>     <title>库克：苹果对于打造原创节目非常感兴趣</title>     <link>http://people.techweb.com.cn/2016-10-26/2420595.shtml</link>     <content>我们都想看看苹果能&rdquo;折腾&ldquo;出什么样的原创节目~其实不少人都很期待苹果到底能打造出什么样的原创节目。而在今天面对媒体的问答中，蒂姆库克也谈到了关于这方面的问题。库克：苹果对于打造原创节目非常感兴趣让我们先来回顾一下这个问题是什么，&ldquo;库克，你提及了你对电视的兴趣，你可以为我们详细说一下这个事情吗？你觉得苹果已经开始在有限的基础上创建自己的内容了吗？你觉得原创内容或者说所有权对于苹果是不是很重要呢？你认为苹果是否会更专注于生态系统和分布？当然，库克的回答已经引发了不少猜测，很显然大家都认为苹果正在致力于创造一些原创内容，或者说收购一个高度知名的内容制造商。之前，苹果已经宣布要打造属于自己的真人秀节目，而他们也邀请了各行各业的明星担任&ldquo;Planet of the Apps&rdquo;的导师，而且这档节目还将会登陆 Apple Music 。除此之外，Drake 在 12 月为 Apple Music 带来的独家内容同样很值得我们期待。&ldquo;我们已经开始打造一些原创节目，正如你提到的，这对于我们来说是一个非常棒的机会，而从创作和所有权的角度来看，这同样也是我们所关心的领域。&rdquo;库克回答。库克的回应也被解读为，苹果已经在行动。不过之前，一直都有传闻称苹果要收购时代华纳，不过，最终苹果与时代华纳之间也没有再进一步，如今反而被别人捷足先登，这不得不说是一个遗憾。视频流媒体服务和音乐流媒体服务对于众多的科技公司来说，重要性正在不断上升，苹果到底能为我们带来什么样的原创节目？让我们拭目以待吧。您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;《勇士》艰苦拍摄全纪录 全景还原生死之战&nbsp;&nbsp;&nbsp;&nbsp;《湄公河》破10亿庆功 彭于晏：续集肯定没我了&nbsp;&nbsp;&nbsp;&nbsp;《摆渡人》王家卫赞准妈妈baby：比刘德华还拼</content></doc>
<doc>     <docid>49<docid>     <title>纳德拉坦承微软在手机市场上失败了</title>     <link>http://www.techweb.com.cn/world/2016-10-26/2420608.shtml</link>     <content>【TechWeb报道】10月26日消息，据国外媒体报道，微软CEO纳德拉日前在参加WSJDLive 2016全球科技大会时表示，微软在手机市场上失败了，不过纳德拉称，微软正进军新的领域。纳德拉坦承微软在手机市场上失败了（资料图）纳德拉表示，微软确实错过了智能手机这波大潮，在手机市场上失败了，但他同时也表示，微软现在的目标是在新的领域取得较快增长。纳德拉称，微软正进军新的领域。微软通过其HoloLens设备在增强现实领域进行了大手笔押注，并在人工智能方面进行投资。纳德拉称，微软必须不断寻找下一个业务大类。纳德拉在会议上还表示，微软希望推动无所不学的公司文化，而不是无所不知的文化。您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;小米Note2与魅族Pro6买哪个好？小米Note2对比魅族Pro6&nbsp;&nbsp;&nbsp;&nbsp;小学生发电脑字体 花了2个月时间 下载一次收费6元&nbsp;&nbsp;&nbsp;&nbsp;土豪100万元打赏主播这事还没完了：银行卡被家人冻结   </content></doc>
<doc>     <docid>50<docid>     <title>孙正义：20年内物联网设备数量有望超过1万亿台</title>     <link>http://people.techweb.com.cn/2016-10-26/2420509.shtml</link>     <content>凤凰科技讯 北京时间10月26日消息，ARM公司与许多企业建立了合作关系，2015年，这些合作伙伴出货的产品数量超过150亿，芯片销售额达到了500亿美元。今年9月，软银以310亿美元收购ARM，CEO孙正义成为ARM的新主人。最近，ARM召开开发者大会，发表主题演讲的正是孙正义。孙正义在ARM开发者大会上演讲ARM TechCon大会在加州Santa Clara举行，孙正义在主题演讲中表示，物联网（让一切产品智能化、联网化）将会引领下一轮技术爆炸，正如在地球演变历史上寒武纪爆发形成了无数新物种一样，用不了多久，联网的物联网设备数量将会达到1万亿。孙正义认为，这一趋势将会形成&ldquo;奇点&rdquo;，意思就是说机器的智力超过人类的集体智慧。在演讲开始时，孙正义播放了一张与进化有关的幻灯片。他说，三叶虫是地球上第一种拥有眼睛的生物，它可以感知环境，处理环境信息。这种生物生活在寒武纪，离今天约5000万年，在寒武纪时期，有成千上万种新生物出现。&ldquo;物联网大爆发即将到来。&rdquo;孙正义断言，&ldquo;如果真的存在寒武纪爆发，那么物联网爆发也会来临。&rdquo;孙正义还给出一组数据：到了2018年，物联网设备的数量将会超过移动设备，到了2021年，我们将会拥有18亿台PC，86亿台移动设备，157亿台物联网设备。他还说：&ldquo;在未来20年，物联网设备的数量将会超过1万亿台。&rdquo;到了2035年，数据数量将会增长2400倍，从1 EB（exabyte）增长到2.3ZB（zetabytes）。&ldquo;到时，地球上将会有1万亿颗芯片生成各种数据，这样的事之前没有过。&rdquo;孙正义说，&ldquo;我们可以进行各种分析，分析能够带来智力，我们会变得更聪明。安全将会越来越重要。比时钟周期的翻倍更重要，如果没有安全，我们就会陷入危险。&rdquo;孙正义指出，汽车已经安装了1000颗芯片，其中的几百颗来自ARM，但是这些芯片都不安全。当汽车互联程度越来越高，向无人驾驶方向发展，它们就会成为黑客攻击的对象。孙正义说，某些人可以发布病毒，突然启动，让高速公路上的每一辆汽车都撞车。&ldquo;我不能说太多。&rdquo;孙正义表示，&ldquo;我不应该给坏人太多的暗示。&rdquo;在演讲中孙正义还说，人工智能的语音和视觉识别能力已经超过了人类，如果有1万亿物联网设备，我们就会获得&ldquo;超级AI&rdquo;。孙正义认为：&ldquo;这种技术会变成超级智力，变成奇点。&rdquo;最终机器智力将会超过人类集体智力。一旦梦想成真，我们就可以预测未来，不会再有车祸，人类可以活得更长。&ldquo;一些糟糕的事情也会像预料的一样出现。&rdquo;孙正义说，&ldquo;不管我们喜欢或者不喜欢，寒武纪爆发正在发生。你愿意成为被吞噬的一方，还是吞噬的一方？我们必须用技术武装自己。&rdquo;（编译/虎涛）您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;《勇士》艰苦拍摄全纪录 全景还原生死之战&nbsp;&nbsp;&nbsp;&nbsp;《湄公河》破10亿庆功 彭于晏：续集肯定没我了&nbsp;&nbsp;&nbsp;&nbsp;《摆渡人》王家卫赞准妈妈baby：比刘德华还拼</content></doc>
<doc>     <docid>51<docid>     <title>云盘关停背后：摆上台面的都是借口 真相只有一个</title>     <link>http://www.techweb.com.cn/irouter/2016-10-26/2420443.shtml</link>     <content>&nbsp;TechWeb 10月26日报道 文/王蒙360云盘官方宣布关停的当晚，百度云盘躺着中了一回枪。10月20日晚间，距离360网盘正式对外公告宣布关停服务不到一小时，有关百度云盘即将关停的谣言随即传出。从去年开始，伴随着个人云盘服务商一个接着一个关停，互联网用户已经到了草木皆兵的状态。7个月8家云盘调整服务&ldquo;2011.11.11世纪光棍节日云盘上线，在差20天5周岁的2016.10.20时候停止服务。本来大家还挺期待5周年呢，想着做个庆祝页面什么的。结果这周突然接到通知&hellip;&hellip;接下来就是准备一个个接口下线，百感交集的。&rdquo;360云盘发布停止个人云盘服务公告当晚，署名&ldquo;云盘服务端&rdquo;的用户在知乎匿名写下这样的文字，怀念之情溢于言表。360云盘是今年3月云盘关停潮之后，宣布调整云盘业务的第8家云盘服务商。今年3月，国家&ldquo;扫黄打非办&rdquo;公布了6起利用销售云盘（网盘）账号和密码传播淫秽色情信息牟利的案件，360云盘、乐视网盘、115网盘等被点名，随后，115网盘、UC网盘暂停部分功能。4月，微盘、快盘相继宣布将停止普通用户的存储服务。5月，腾讯微云宣布关闭文件中转站功能。5月3日，华为网盘公告称将逐步停止相关服务。6月，新浪微盘关闭免费个人存储服务。360云盘的关停非常突然。10月19日部分360云盘用户反映，客户端无法播放视频，显示&ldquo;网络不可用，请稍后重试&rdquo;。官方人员在360社区回复称，正在核实并解决。10月20日10：30左右，360云盘客户端视频恢复正常播放。然而谁也未曾料想，10月20日17点左右，360官方发布&ldquo;360云盘服务转型公告&rdquo;，正式宣布停止个人云盘服务。此前迅雷快盘、金山快盘、新浪微盘、华为网盘等均已宣布关闭个人服务，360云盘宣布关闭服务后，引发众网友的集体埋怨。毕竟可用的网盘服务已经变得更少，百度网盘也就成了目前覆盖用户最广的网盘服务。然而就在360云盘宣布关闭后不久，网上传出一张所谓百度方面的&ldquo;公告&rdquo;，声称百度云将于2016年12月31日关闭免费个人用户的存储服务。该消息一出，瞬间引起爆炸，TechWeb当晚第一时间联系百度公关方面人士，得到的回复是，百度网盘将一如既往地向用户提供个人云存储服务，并持续对盗版侵权、网络色情等内容进行严厉打击，采取更先进技术手段确保用户的网盘安全。尽管百度云盘第一时间紧急辟谣，但网友们仍然担心。毕竟此前几家网盘宣布关停或暂停部分服务时，360云盘官方也曾宣布会一直提供个人云存储服务。为什么多家网盘服务商选择关停或调整个人云存储服务？放弃这个市场的根本原因是什么？官方给出的关停理由TechWeb梳理8家宣布关停个人云存储服务的网盘商发现，对外公告中提到最多的理由是：&ldquo;为配合监管部门专项治理网盘行动&rdquo;、&ldquo;为了配合国家有关部门积极展开网盘涉黄、涉盗版内容的清查工作&rdquo;，即日起将调整（关闭）部分服务功能。今年上半年国内严厉迅猛的&ldquo;扫黄打非&rdquo;专项整治活动更是旨在一举肃清网络环境之中的不正之风，而网络存储领域一直就是监管的重点整顿对象之一。据上海冠勇信息科技有限公司发布的数据显示，截至10月9日，正在上映的《爵迹》网络侵权链接达3318条，其中网盘侵权链接最多，达828条，占比25%，多为个人用户分享到个人网盘。随着&ldquo;扫黄打非&rdquo;专项整治活动的进行，众多网盘服务商对外宣布调整（关闭）部分服务功能。一方面的确是为了配合打击网络色情与盗版，但这样简单粗暴的一刀切的方法也让人质疑：如果是配合官方整治行动而叫停，为什么百度云盘、腾讯微云、天翼云盘就不用关停？&nbsp;您可能也感兴趣:&nbsp;&nbsp;&nbsp;&nbsp;360云盘将正式关闭 百度网盘将继续提供个人云存储服务&nbsp;&nbsp;&nbsp;&nbsp;360云盘将正式关闭 百度网盘这样回应&nbsp;&nbsp;&nbsp;&nbsp;女主播慕诗琪为小鲜肉主播刷2万礼物 网友召唤小漠！</content></doc>
<doc>     <docid>52<docid>     <title>王云辉：雷军给手机行业上了生动一课</title>     <link>http://wangyunhui.blog.techweb.com.cn/archives/561.html</link>     <content>依靠屏占比高达91.3%的“概念手机”，雷军成功扭转了外界对自己的形象</content></doc>
<doc>     <docid>53<docid>     <title>康斯坦：悲剧汽车 特斯拉注定赚不到钱？</title>     <link>http://skysfw.blog.techweb.com.cn/archives/6214.html</link>     <content>特斯拉亏损高大2.932亿美元，比之前华尔街的预测高出一倍还多</content></doc>
<doc>     <docid>54<docid>     <title>歪道道：无人驾驶普及 智能汽车让你有安全感吗？</title>     <link>http://waidaodao.blog.techweb.com.cn/archives/16.html</link>     <content>移动资讯大战现在很激烈，这在互联网行业算一个难得的现象</content></doc>
<doc>     <docid>55<docid>     <title>王新宇：从马云座上宾到被淘汰 站长怎么玩死自己</title>     <link>http://wangxinyu.blog.techweb.com.cn/archives/347.html</link>     <content>内容产业已是中国互联网全新的增长点，某些领域如直播甚至更加先进</content></doc>
<doc>     <docid>56<docid>     <title>于　斌：中兴手机换帅殷一民 恐依旧难入一线阵营</title>     <link>http://tuiba.blog.techweb.com.cn/archives/1701</link>     <content>快递小哥的配送效率已然达到极限，整个行业好像一根紧绷的发条</content></doc>
<doc>     <docid>57<docid>     <title>张书乐：不再提及情怀 罗永浩要和阿里耍什么花枪</title>     <link>http://zhangshuyue.blog.techweb.com.cn/archives/3475</link>     <content>库克管理供应链的历史，就是一部他的员工在全球各地“飞来飞去”的历史</content></doc>
<doc>     <docid>58<docid>     <title>亮瞎眼的特斯拉线圈</title>     <link>http://www.geekfan.net/13985/</link>     <content>之前发过一篇用于产生电弧的马克思发生器， 那个玩意儿跟特斯拉线圈相比，就是小巫见大巫了。尼古拉·特斯拉是一百多年前的一位发明家，他发明了交流电、无线电，制造过小型的地震，搞过巨型的人造闪电。总之他的传奇故事很多，据说是被奸商爱迪生打压以至于默默无闻，著名的电动汽车特斯拉就是为了纪念这个疯狂的科学家。有传闻说特斯拉玩的闪电，可见范围达到几百英里，不知道真假。我等凡夫俗子，顶多利用特斯拉原理来产生个小型闪电就好了。&nbsp;Step 1： 准备和注意事项我们的目标是做一个1000w的中型特斯拉线圈，放电距离超过120cm，特斯拉线圈的放电距离和功率成正比。主要材料及大概成本：1：高压变压器 1000W 输入220V 输出 10KV2：大量无极电容 如用0.047uf 1000v~(1600v-)的cbb电容需要准备100只左右，有大容量的高压电容请自己换算3：直径13厘米长1米的聚氯乙烯管(壁厚0.6-1厘米)，pvc管材也将就，厚0.8厘米的绝缘板材(不能是木头!最好塑料)大约2.5平米，厚0.5厘米的绝缘板材(非木!)大约1.5平米，这些都可在家庭装饰城(就是那些买涂料，板材，工具等的那种大市场里)买到4：导线，多芯铜导线，1000v50A大约6米;10kv1A导线3米5：耐压漆包线 内径0.5mm 900米长6：直径0.8厘米的铜管(壁厚1mm以上)长8米，直径3厘米厚&gt;1mm长1米的铜管可在汽车配件或五金等地买到7：电手钻，螺丝刀，手锯，钳子等工具，普通螺丝，塑料螺丝，环氧树脂胶，钢尺等8：用于燃气热水器的排气管(金属制作，可弯曲，直径在10厘米以上)制作后期计算得到长度.Step 2： 电路原理图等等，你特么是在逗我吗？我们是在做一个极其高大上的“雷公电母”设备，它的原理图怎么可能这么简单。所以感慨一下科学的伟大吧，小小一张图就可以让你拥有神一般的力量……&nbsp;Step 3： 装配示意图当然，从原理图到真正的装备，还有很多路要走，这个就是装配的示意图。Step 4： 一些相关的计算公式1. 电弧长度： 电弧长度 L(单位：英寸); 变压器功率 P (单位 瓦特); L=1.7*sqrt(P)2. 电容阵容量： 变压器输出电压(交流)E(单位 伏特); 变压器输出电流 I(单位 毫安); 电容器阵列最大容量C(单位 微法) ; 交流频率F(单位赫兹) C=(10^6)/(6.2832*(E/I)*F) [电容的大小涉及到与变压器功率的一个匹配问题，当电容过大时在交流上升到顶点时(即sqrt (2)*V时，电容电压过低无法击穿打火器的空气隙则打火器无法启动就无法工作，整个系统也就无从启动 ]3. 电容阵的计算就是电容的简单串，并联，初中就学过，在此就不提了.例如当变压器功率为1000瓦时，输出电压为10000伏(交流)，那么电容匹配为0.0318uf，手头有电容规格为：0.047uf 1000~，1600-，再取保险一点到 耐压 1500v~则需要电容阵列安排如下：15个电容串联成一个基本链(BC);再10个这样的基本链并联而成(J)，共需要电容150个，若每支电容分压降为630v~(这样可以大幅度延长电容寿命)，则： 24–BC，16–J，共需384支电容.4. 其他： 震荡频率：F = 1/(2*Pi*sqrt(L*C))Step 5： 制作主线圈在特斯拉线圈的设计中主线圈采用铜管绕制成蚊香状。铜管是用于汽车，供热，中央空调中的那种管壁较厚的承压铜管。直径8毫米大约绕制9-10匝，大约需要9米，最好选用光滑无锈无伤的。Step 6： 主线圈支架&nbsp;这样盘成的主线圈可以适用于6英寸到8英寸的次极线圈(盘铜管很费时间，也满费劲，但是不要图快，要尽可能盘的圆滑.)，还需要5毫米厚的软塑料板(非脆性塑料)做主线圈支架，将其按等距离打眼(要打成9毫米的眼，要不穿不进去) 底座选用普通中密度板就可以了，这个底座还有用，将来底下要放其它东西.也尽可能加工好，接下来把铜管和塑料支架穿起来。Step 7： 内圈接头&nbsp;内圈接头部分，将中密度底版在相应地方开孔引出一个接头。再找一截铜管做为接地保险，注意，不能让它闭合！Step 8： 电容阵列在特斯拉线圈中，有一堆好的电容非常重要，因为所有电弧的能量都是由电容直接提供的。由于高压电容价格昂贵，所以现在普遍的做法是通过对普通无极性电容进行串联和并联来达到所需的耐压和容量。需要准备的材料：1.无极性电容，(聚乙烯，聚丙烯，CBB电容 等)一般常见高压电容规格主要有：1600v-0.047uf、1600v-0.068uf两种2.电阻10兆欧(1000000ohm)3.有机玻璃板4.塑料螺丝首先计算所需要的电容个数和排列方式，根据以前提到的变压器匹配计算得到电容量为0.0318uf/10kv，手头电容规格为1600v- 0.047uf， (此处注意：电容的耐压标示都是直流 ，而且电容器交流耐压与电容材质等多种因素有关，不能简单认为只要将直流耐压值除以1.414 就得到交流耐压值)，从寿命和安全性角度出发，建议将每电容分压值定为450v~ 则得到整个电容阵构成为：22串一链，共14链并联，一共308支电容电阻，电阻的用途是为了当停止使用时对电容中的残留电荷进行放电，使用方法就是每支电容都要并联一支10兆的电阻(1/4~1/2W )安全提示：若没有放电电阻，则电容阵中储备的能量将可能存在很久而对人身造成伤害!图中显示了一个电容链，它是蛇行排布的。注意!电容之间不要紧密接触!要留有一定空隙，层与层之间要用4mm厚的有机玻璃隔离，每层包含两个链，固定使用塑料螺丝(尼龙螺丝)， 每层都有各自的接口使之成为独立可使用的单元。Step 9： 次极线圈的制作特斯拉线圈中的次极线圈是整个特斯拉线圈中制作最耗时耗神的部分。需要如下材料：1. 高质量漆包线，一定要买好的，尤其是目前我国的漆包线质量普遍低下，线的直径0.51mm ~ 0.57mm。2. 聚氯乙烯管材，直径15厘米，最少2米，厚度自己感觉结实就好，一般能买到的大约在4-8mm厚。3. 用木头制作一个绕线架（有绕线设备的土豪请无视）。用两个圆片穿在圆筒两边，再在圆片中间打眼，穿入中心轴，架到线架子里面就可以绕线了。一圈一圈的绕，大约绕900~1000匝就适合本系统了，整个绕线过程大约7-8小时。中间休息时一定要把已绕好的部分固定好，免得前功尽弃。绕线时要注意不要使线打结，不要用两根线接起来使用。市面上够长度的漆包线不大好找，大约在500m，但是整卷的线似乎比较贵。有兴趣的朋友可以一起买一大卷分着用。Step 10： 打火器&nbsp;制作打火需要以下材料：1.200mm直径pvc管材，长400mm2.90mm长，直径20mm铜管若干3.双头螺丝 若干(是铜管数目）两倍&nbsp;打火器其实相当于一个开关器，未打火时能量由变压器传递到电容阵，当电容阵充电完毕时两极电压达到击穿打火中的缝隙的电压时，打火器打火，此时电容阵与主线圈形成回路，完成L/C振荡进而将能量传递到次极线圈。制作步骤：1.先将铜管打眼。2.再在pvc管上打眼后，将铜管固定在pvc管内部 (每个铜管与铜管之间的缝隙大约控制在1mm)3.组装好为了根据需要调整放电缝隙，每相邻螺栓代表1mm的放电缝隙(螺栓即为接线柱)这样安装只要变换接线柱就可以很方便的根据你的设计电压进行调整了。注意：打火器工作时将会产生很大的热量，而且往往集中在很小的面积上，所以散热设备必须很强大!一般采用小型立式风机（就那种吹婚礼拱门的），一般都在几百瓦，风量足。只要注意在进风口加上简单的空气过滤装置防止大灰尘就可以了。如果不加风机散热的话，特斯拉线圈工作几十秒后就可能导致打火器高温变形，加入风机后，一般可以把整个特斯拉线圈的工作时间延长至十几分钟。另外，要经常在使用后对打火进行清理，去掉电渣和灰尘。Step 11： 放电终端&nbsp;在这部分的制作比较简单和随意，我这里介绍一种比较成熟和简易的制作方法，也就是最常见的圈型放电终端。主要材料：1. 4寸直径的燃气热水器通风管，(就是那种全金属的可弯管，家里有燃气热水器的一看便知)2. 7寸直径的平底金属盘(用来做派的)，其他类似金属物也可，关键1.平底 2.金属3. 包裹金币巧克力的那种较厚的铝箔首先将平底金属盘底对底用螺丝固定，接着将铝管盘成圈状，使其正好能卡在平底金属盘制作的骨架上，铝管的接口口处用铝箔封口，接线点定位在平底金属盘骨架中心，组装好成品。至此特斯拉线圈的所有重要部分已经完成。&nbsp;Step 12： 一些补充说明&nbsp;关于特斯拉线圈的制作其实还有不少需要注意的事情，其中：1：次极线圈的骨架既那个聚乙烯圆桶的饶线部分是有要求的，一般来说，饶线直径和饶线部分桶长比例在1：4左右2：主线圈的底版可以用一些稍微便宜的材料制作，因为对它的要求不高，当然最好所有的塑料板材都能用雅克力板制作，这样有结实又漂亮3：打火器的制作其实有很多方法，关键要注意的是a.放电部件要导热快 b.放电部件厚度要足够 c由于打火器更换频率最高，所以设计要以容易更换，价格便宜为主4：关于高压电容，前些天见到微波炉内部有一种高压电容规格为 2100AC 1uF 且内部集成放电电阻的电容，看来如果使用这种电容也是一个不错的方案5：关于主变压器，一般难以购买，可以去当地电子市场询问是否可以定做，如果没有，可以购买霓虹灯电源，规格为 15000V AC 50HZ 60mA 样子象个箱子，在国外特斯拉线圈爱好者中使用比较多，还有就是采购日本二手110VACin –6300vACout 变压器两个串联使用Step 13： 亮瞎双眼的时候到了世界各地有大量的特斯拉线圈爱好者，搞出很多炫酷的作品。有的朋友可能又要说“然并卵”了，事实上，很多科技的突破，都是从一些莫名其妙的的发明演化而来。在自然界中，闪电拥有巨大的能量，据说地球每秒钟平均有45次闪电，如果能够抓住这些能量用来发电，那你就发财啦……视频：&nbsp;亮瞎眼的特斯拉线圈，首发于极客范 - GeekFan.net。</content></doc>
<doc>     <docid>59<docid>     <title>DIY修炼：舵机知识扫盲</title>     <link>http://www.geekfan.net/13978/</link>     <content>DIYer: Tod E. KurtGEEK指数: ★★★☆☆1 简介舵机控制的机器人● 我猜你肯定在机器人和电动玩具中见到过这个小东西，至少也听到过它转起来时那与众不同的“吱吱吱”的叫声。对，它就是遥控舵机，常用在机器人技术、电影效果制作和木偶控制当中，不过让人大跌眼镜的是，它竟是为控制玩具汽车和飞机才设计的。● 舵机的旋转不像普通电机那样只是古板的转圈圈，它可以根据你的指令旋转到0至180度之间的任意角度然后精准的停下来。如果你想让某个东西按你的想法运动，舵机可是个不错的选择，它控制方便、最易实现，而且种类繁多，总能有一款适合你呦。● 用不着太复杂的改动，舵机就可摇身一变成为一个高性能的、数字控制的、并且可调速的齿轮电机。在这篇文章中，我会介绍舵机使用的的一些基础知识以及怎样制作一个连续运转舵机。&nbsp;2 舵机的结构和原理A.标准舵机图解● 遥控舵机（或简称舵机）是个糅合了多项技术的科技结晶体，它由直流电机、减速齿轮组、传感器和控制电路组成，是一套自动控制装置，神马叫自动控制呢？所谓自动控制就是用一个闭环反馈控制回路不断校正输出的偏差，使系统的输出保持恒定。我们在生活中常见的恒温加热系统就是自动控制装置的一个范例，其利用温度传感器检测温度，将温度作为反馈量，利用加热元件提输出，当温度低于设定值时，加热器启动，温度达到设定值时，加热器关闭，这样不就使温度始终保持恒定了吗。B.闭环反馈控制● 对于舵机而言呢，位置检测器是它的输入传感器，舵机转动的位置一变，位置检测器的电阻值就会跟着变。通过控制电路读取该电阻值的大小，就能根据阻值适当调整电机的速度和方向，使电机向指定角度旋转。图A显示的是一个标准舵机的部件分解图。图B显示的是舵机闭环反馈控制的工作过程。3   选择舵机C.大扭力/微型/标准舵机● 舵机的形状和大小多到让人眼花缭乱，但大致可以如图C所示分类。最右边身材不错的是常见的标准舵机，中间两个小不点是体积最小的微型舵机，左边的魁梧的那个是体积最大的大扭力舵机。它们都是同样的三线控制，因此你可以根据需求换个大个的或小个的。● 除了大小和重量，舵机还有两个主要的性能指标：扭力和转速，这两个指标由齿轮组和电机所决定。扭力，通俗讲就是舵机有多大的劲儿。在5V的电压下，标准舵机的扭力是5.5千克/厘米（75盎司/英寸），转速很容易理解，就是指从一个位置转到另一个位置要多长时间。在5V电压下，舵机标准转度是0.2秒移动60度。总之，和我们人一样，舵机的个子越大，转的就越慢但也越有劲儿。● 赶快想好你要做的东西，让我们开始动手吧。确定做什么之后，选择哪种大小的舵机（标准型、微型、绞盘型）就是小case了，你可以绅士般的从中选个最便宜的。在这个项目中，我选的就是微型系列的HexTronik公司生产的HXT500型舵机，额定数值是扭力0.8千克，转速0.10秒，只花不到4美元就搞定了。4 舵机的支架和连接装置&nbsp;D.多种舵盘● 想在你的项目中用上舵机，就要满足两个条件：一是需要个能把舵机固定到基座上的支架，二是得有个能将驱动轴和物体连在一起的连接装置。支架一般舵机上就有，而且带有拧螺丝用的安装孔。如果你仅仅是测试的话，用点儿热熔胶或者双面泡沫胶带就能轻松的固定住舵机。● 怎样连接驱动轴呢，你会发现舵机都附带了一些有孔的小东西，这就是舵盘，它可以套在驱动轴，臂上打上了些小孔。你只要用连接棒或者线把物体连到孔上，就可以将舵机的旋转运动变成物体的直线运动了，当然了，选用不同的舵盘或固定孔就能产生不同的运动啦。● 图示的是几种不同的舵盘。前面4个白色的是舵机附带的舵盘，右边四个是用激光切割机切割塑料得到的DIY舵盘。最右边的2个是舵盘和支架的组合，如果你想实现两个舵机的组合运动，把这个舵盘的支架固定到另一个舵机的支架上就OK了。E.普通舵盘设计F.其他舵盘● 制作普通舵盘对于童鞋们来说是比较容易的，先用矢量作图软件画一个多边形，这个多边形的半径和顶点数都要和舵机驱动轴匹配，这样它就能连接到驱动轴上了，其他种类的也是这样画出来的。5   如何控制舵机G.3线接口● 像图所示那样，舵机有一个三线的接口。黑色（或棕色）的线是接地线，红线接+5V电压，黄线（或是白色或橙色）接控制信号端。H.控制信号● 控制信号（如图H）是一种脉宽调制（PWM）信号，凡是微控制器能轻松的产生这种信号。在此文中，我用的是常用的Arduino开发环境下的微控制器。● 脉冲的高电平持续1到2毫秒（ms），也就是1000到2000微秒(µs)。在1000µs时，舵机左满舵。在2000µs时，右满舵。不过你可以通过调整脉宽来实现更大或者更小范围内的运动。● 控制脉冲的低电平持续20毫秒。每经过20毫秒（50次每秒），就要再次跳变为高电平，否则舵机就可能罢工，难以保持稳定。不过你要是想让它一瘸一拐的跳舞，倒可以采取这种方法。这是一个完整的Arduino设计程序，在这个程序下，舵机始终在正中间位置，控制起来很容易I.舵机连接Arduino实验板● 红色和黑色的线分别接到Arduino开发板的5V电源脚和接地脚上。控制线接到Arduino开发板的数字输入/输出脚9脚上。● 用Arduino控制舵机也有不太给力的地方，就是Arduino程序把绝大部分时间都浪费在等待延迟命令上，不过童鞋们暂时不要失望，Arduino中内置有舵机函数，你可以用它内置的计数器来同时控制两个舵机（分别在9脚和10脚），是不是又豁然开朗了，这样我们不就能把节省下的编程代码干别的事情了吗。这是一个调用了舵机函数的程序6 舵机应用：云台网络摄像头J.舵机控制的云台网络摄像头● 看了这么多内容了，是不是有点迫不及待练练手的冲动，那就先来个简单的，材料就是下面这些，两个舵机、一个Arduino板、一个用来装摄像头的可转动基座。先用热胶把第一个舵机的舵盘固定到摄像头的底部，然后把第二个舵机固定到基座上，同时把它的舵盘固定到第一个舵机的一侧，最后把舵盘套到各自舵机上，哇塞，一个云台网络摄像头就这样诞生了。● 图中是一个纯手工打造的云台网络摄像机，它用的是OpenWrt Linux系统的华硕wi-fi路由器。● 网络摄像头和Arduino控制板都是用USB集线器连接到路由器上的。通过Arduino的USB口同时控制两个舵机的程序● 大致的流程是这样滴，当串口上有两个字节到来时，程序开始工作，赋给第一个字节0-180的值，让它调节摇摆舵机（调左右），同样赋给第二个字节0-180的值，让它调节倾斜舵机（调上下）。7 如何DIY连续旋转的舵机K.舵机的内部“解剖”结构● 任何舵机都能变成一个双向、可调速的降速齿轮电机。通常情况下，需要驱动芯片和其他一些零件才能控制电机的转速和方向，这些部件舵机中都会附带，所以要想得到一个用到机器人上的数控连续旋转舵机，最简单也最便宜的的方法就是自己动手改造一个，哈哈，考验动手能力的时候又来了。L.拿掉金属挡板● 需要改动的是部分的电路模块和机械模块，电路模块中，我们要找两个阻值相同的电阻来充当电位计，机械模块中，则要去掉防止电机过速的挡板。M.卸下塑料挡板● 下面我们就开始吧，首先，卸开舵机外壳，HTX500舵机的外壳由3个塑料部分扣在一起。你可以用个小一字改锥或是类似的片状工具把他撬开，然后从轴上取下齿轮组,(记得标记好各个小齿轮的位置哦)，再从下面小心的取出舵机的电路板。● 舵机上有两个机械制动挡板，用尖嘴钳卸下驱动轴基座上的金属挡板（图L），用斜嘴钳卸下外壳顶部的塑料挡板（图M）。N.焊上电阻O.缠上胶带● 用两个阻值相加约5 kΩ的电阻来替代5 kΩ的电位计，实际制作中，选一对2.2kΩ的电阻就能满足要求了。把电位计上的3根线焊下来，像图N那样焊到电阻上。再把这个重新组装成的家伙用绝缘胶带或是绝缘管缠好（图O），最后再和电路板一起重新塞进舵机外壳中，扣好外壳，一个改造好的舵机就呈现在我们面前了。● 手工制作阶段到此就结束了，但是现在还能高兴的太早，因为只有找到基准点才能算是大功告成。在理想条件下，如果两个电阻完全相同，舵机就能精确的停到90度的位置上。不过呢，理想和现实总是会差那么一点点，因此舵机就没像理想中那样么精确。为了使舵机控制更精确，我们要找到一个基准点，方法是把上面编的程序灌进电路中，通过实验来看舵机究竟停在哪个角度，这个角度每个舵机都不相同，所以得出结果后要记录下来。● 我们业余爱好者常用的舵机一般是用电位计来检测驱动轴转动到的角度，而用在工业机器人、电脑数控机床等大型系统中的舵机一般则要用旋转编码器来确定位置。光学旋转编码器的原理是这样的，把一个带有窄缝的圆盘固定在转轴上，然后用一个LED灯和一个光敏元件来记录光通过窄缝照到光敏器件上的次数来计算当前旋转到的位置。其实生活中这种技术也很常见，我们每天都要用的光电鼠标就是用的这个原理制作成的。注：如果你不想撬开你心爱的舵机，Parallax公司（BASIC Stamp微处理器的制造商）有一款即用型，标准尺寸的连续转动舵机可供你使用。8 连续旋转舵机的应用：5分钟的绘图机器人P.安装好的绘图机器人*● 想做个会画画的的机器人吗，那就去找两个连续旋转舵机来吧，我们这就开始。图O这个绘图机器人中包含了舵机两个， 9V电池，面包板， Arduino电路板，三福记号笔各一个，外加一对塑料轮子。● 它的电路和云台摄像头一样，我们直接拿来用，而且它的部件都可以用热胶粘到一起。关于轮子的选择，更是简单，只要是直径在1到3英寸的圆东西都能用，比如塑料瓶盖之类的。为了减小摩擦，增大牵引力，我们在车轮上缠上塑料胶带。● 这样组装阶段就完成了。接下来就是程序了，它的程序用一个包含基准点的变量来制动舵机，这个基准点我们上面已经通过实验测出（你的基准点可能不同）。程序的控制流程为，先让一个舵机朝一个方向运动一段时间，然后换成另一个舵机转动，这样就能得到一个螺线形的图画了。● 代码在此：#includeServo servoL;Servo servoR;int servoLZero = 83; // experimentally found to stop L motorint servoRZero = 91; // experimentally found to stop R motorboolean turnleft = false;void setup() {servoL.attach(9);servoR.attach(10);servoL.write(servoLZero); // start out not movingservoR.write(servoRZero); // start out not moving}void loop() {turnleft = !turnleft;if( turnleft ) {servoL.write( servoLZero &#8211; 10 );servoR.write( servoRZero );delay(1000);} else {servoL.write( servoLZero );servoR.write( servoRZero + 10 );delay(4000); // turn more one way than the other}}Q.运动中的绘图机器人● 注意：永久记号笔画的痕迹不好清除，童鞋们千万小心哈，最好让绘图机器人在硬纸板或其他不透水的纸的画画，或者索性换成支水溶性的记号笔。&nbsp;&nbsp;DIY修炼：舵机知识扫盲，首发于极客范 - GeekFan.net。</content></doc>
<doc>     <docid>60<docid>     <title>【神级DIY】自制无线控制“甲壳虫”机器人</title>     <link>http://www.geekfan.net/13971/</link>     <content>【导读】拥有一个自己会跑会跳的机器人是许多人小时候的一个梦想，如今这个梦想你可以实现了！此次电子元件技术网带来大师级别的DIY，自己动手就能做的机器人，做一个送给家里的小朋友绝对自信心爆棚啊！话不多说，直接上图。Solidworks 出图纸和模拟图机器人身体机器人头部机器人漂亮的大腿&nbsp;甲壳虫机器人3D模拟图camworks 出刀路甲壳虫”机器人3D 模拟图 &nbsp;加工及组装在自己DIY的数控铣床上进行加工，用的6061 的进口铝板， 3mm厚度 购买的经典型号舵机MG995，开始组装。 “甲壳虫”机器人造型很漂亮吧！ 舵机板和布线已经完成&nbsp;机器人安装完成功率强劲的8000mah动力电池机器人安好后摆个POSE复位后的状态机器人站起来了机器人PS手柄和遥控装置【神级DIY】自制无线控制“甲壳虫”机器人，首发于极客范 - GeekFan.net。</content></doc>
<doc>     <docid>61<docid>     <title>DIY：制作曲面感光元件的针孔相机</title>     <link>http://www.geekfan.net/13956/</link>     <content>我们曾介绍不少自制针孔相机，而通常都是使用已经提供好的纸模来制作。而来自加拿大的摄影师 Matt Bechberger，则分享了一个非常完整的针孔相机制作指引，包括了数学上及物理学上的讲解，相机通过弯曲胶卷曝光的办法，令胶卷可以均匀曝光，极大地消除了画面的暗角！很好玩哦~。如果你也想自制一台如此认真的针孔相机，可以来参考参考！基础概念针孔相机其实是最原始的相机，光线在物体身上反射出来，然后透过相机上的小孔，聚焦于相机内的底片上，而任何可以遮挡着针孔的东西都可成为快门，手动控制曝光时间。就是这么简单。数学计算制作方面，首先你要制造出一个好的针孔，在互联网上都可以买得到，又或你能够自制一个。建议材料是一般的铝罐皮，越薄越好。然后使用小锤及针，轻轻地戳一个洞，在戳的时候最后在底先垫一块橡皮擦，以防止变形。完成后再用砂纸把铝片磨平，并且用显微镜或平板素描器之类 (如果有)，去检视针孔的圆度及质素。如果你选用一些硬质金属，则可能要特地使用电钻之类了。然后你要找出针孔的直径，知道后就可以计算出所需焦距﹐也就是针孔与底片之间的距离。算式如下︰焦距 = (针孔直径 / 0.03679)^2例如 针孔0.3mm焦距 = (0.3mm / 0.03679)^2 = 66.49mm接下来要计算的就是「视角」(viewing angle)，即是光线进入的最大角度，这取决于针孔的直径与物料的厚度。这个需要动用直角三角形的公式，要用上计数机。d 就是针孔直径，而 t 就是物料厚度，简化版公式如下︰视角 = tan^-1( (d/2)/(t/2) ) x 2例如︰视角 = tan^-1( (0.3/2)/(0.0762/2) ) x 2 = 75.74 x 2 = 151.5 度视角的重要性，在于让你判断光线能否恰当覆盖到底片，如果覆盖不足的话，就会出现黑角及黑边。例如上图般，底片的对角线不应长于成像圈的直径。而成像圈的直径算式如下︰成像圈直径 (mm) = 2 x 焦距 x tan ((视角)/2)例如︰成像圈直径 (mm) = 2 x 66.49 x tan (151.5/2) = 523.61 mm在这个例子里，成像圈非常大，所以配合弧面底片的话，就可以在 120 底片上拍出 17cm x 6cm 的超广角影像。相机制作完成了数学计算后，就到物理上的实践。弧面底片的就可以让整块底片都与针孔保持相等距离，从而得到均匀曝光。相机材料方面没太大限制，最重要是能够阻止光线进入。卷动底片方面，则要使用如下图的扁状金属条 + 结他旋钮的东西，两边各一个，以松开底片及收紧底片之用。快门方面，丰俭由人，你可以像作者一样，自制一个以弹簧及快门线控制的快门。在相机背后需要钻一个小孔，以确定底片的使用量，最好在相机内部涂上黑漆，以消除任何杂散光。&nbsp;&nbsp;曝光计算接下来要计算的是光圈值，这个会影响你所需要的曝光时间。算式如下︰光圈值 = 焦距 / 针孔直径例如︰光圈值 = 焦距 / 针孔直径　= 66.49mm / 0.3mm　= 221这个世界恐怕没有甚么相机或测光表有 f/221，所以我们要做下一步计算。根据「标准全级光圈值尺度」，每一级光圈值之间，光线量是减半，亦即是光圈的面积也是每级减半。数字如下︰1.4，2，2.8，5.6，8，11，16，22，32，44，64，88，128，176，256，352。但是超过 f/22 的测光表是不存在的，因此我们可以透过计算自行找出倍数。不过放心，一般的针孔摄影不是精准的科学，所以也不需要精确的数学。在这情况下 f/221 大概接近 f/256，就当作 f/256 可以了。相比起 f/16 即是有 8 级的差异，也就是说 f/16 的光量是 f/256 的 2^8 倍，也就是 256 倍。因此你可以透过测光表之类，以相同的 ISO 值但用 f/16 作测量，得快门值后再乘以 256 倍，就是所需的曝光时间了。例如我们测出要曝光 1 秒，那么在此针孔相机上则要曝光 256 秒。倒易律失效 (Reciprocity Failure)直至现时为止，所有东西都很直接很数学，但是在摄影上来说，还有一样东西称为「倒易律」。简单说就是在同一感光物料上，曝光时间与曝光量是成正比例上升的，曝光时间两倍，则曝光量也有两倍。但在实际拍摄上，当曝光时间超过一定秒数，就会出现「倒易律失效」，两者不再成正比例，如果想得到正确曝光，则需要额外曝光时间。下图就是额外曝光简表，很有用，留着它︰就用 256 秒曝光为例，因为倒易律失效，所以要用上 4 倍曝光时间，即是 1024 秒，由 4 分钟增至 17 分钟，差异当然很大，而且要在曝光环境良好稳定的情况下才是这样。不过放心，其实就算少几分钟也不会很差的，摄影师就曾试过仅用了应有曝光时间的 1/8 来拍摄，结果也不错。最后提一提，由于针孔摄影往往需要很长曝光时间，所以使用脚架，或放置在稳定的平台上拍摄是很重要的。&nbsp;检验相机成果接下来让我们看看曲面感光拍出来的效果吧~。DIY：制作曲面感光元件的针孔相机，首发于极客范 - GeekFan.net。</content></doc>
<doc>     <docid>62<docid>     <title>极客DIY：轻松使用树莓派控制灯</title>     <link>http://www.geekfan.net/13941/</link>     <content>最近笔者正在研究微控制器和基于物联网的设备安全。因此，我开始考虑建立一个小型家庭系统化系统，虽然目前还没完成，但我想先在文章中分享一下我如何使用树莓派2及一些其他电子元件来控制房间的灯光。当然，我在这里不会介绍树莓派的初始设置，因为你可以在网上发现各种各样的教程。注意事项在我们继续实验之前，我想有必要提醒一下关于实验中“电流”的危险性。一旦出现任何状况，最糟糕的情况就是死掉或者烧了你的房子。所以，请不要试图完成任何文中提到但是你不理解事情，或者你可以在制作的时候寻求一些有经验的电工的帮助。好啦，让我们开始DIY吧！实验准备硬件需求1、树莓派2（或者任何5V输出功率的型号，均可）2、USB无线软件狗3、8路继电器4、一些Female-Female跳线（40 PCS FEMALE TO FEMALE JUMPER WIRES）5、灯头电线（以上硬件，某宝均有销售）其他要求1、了解基本Python语言或者其他任何语言（我会用到Python）2、对Linux系统有基本了解3、专心致志流程要求首先，用ssh链接到树莓派上，并安装“apache”和“php5”：你会需要安装python的GPIO库来控制树莓派的GPIO插脚：了解元件现在，在我们继续制作之前，你需要了解一下我们将使用到的电子元件。1、继电器继电器是一种使用非常低的电压输入控制高压电的电气设备。由一个线圈缠绕的金属杆和两个小型金属节点构成的闭合电路。其中一个节点是固定的，其他的都是可移动的。无论何时，当电流通过线圈的时候，它会产生一个磁场，吸引可移动节点向静态节点运动，形成电路。通过给线圈供应小额电压，我们就能完成高压电路的轮回。同时，静态节点并非在物理上与线圈有联系，因此一旦有地方出错，微控制器驱动的线圈也很少出现故障。试验中，我使用一个8路继电器，可以同时控制8个设备。你可以选择自己的继电器或者继电板，但是请确保你在继电器的额定电压之内处理，以避免任何事故的发生。2、跳线跳线就是我们链接树莓派GPIO插脚与继电器的简单连接电线。3、树莓派2我们使用树莓派2作为一个微控制器来操纵继电器。它有40个GPIO（通用输入/输出）插脚。你可以看到下面这些插脚的布局，我们将使用这些接口为继电器加电和控制开关。连接电路电路非常简单。我们将连接GPIO插脚到继电板上。首先连接继电器板上的“GND”与树莓派上的任意“GND”。然后链接继电器的“IND1”到GPIO PIN 17，我们会把GPIO PIN 17作为一个控制第一继电器的输出。最后，将继电器的“VCC”连接到树莓派的“5V”GPIO插脚。让我们简单直接设置一下：现在我们到了最为棘手的部分，我们要将继电器连接到接通主电路供电的灯头上。但是，我想先给你介绍一个如何通过直流屏电源开启及关闭灯光的简单操作。我们通常连接两根电线到灯泡上，来提供电流供给。其中一根电线是“中性”电线，另一根则是实际带着电流的“负极”电线，同样的这里也有一个控制整个电路的开关。因此，当开关（闭合）连接到流经灯泡的电流和负极电线时，电路便完整了。灯泡从而亮了起来。当开关（断开），破坏了电路和灯泡的电流，因此灯泡不亮。这里有一个小的电路图来解释具体情况：当我们在试验中，我们需要“负极电线”通过我们的继电器来打破电路，从而使用继电器开关的控制流经的电流。因此，当继电器打开，在闭合电路中灯泡也应该亮起来，反之亦然。请参考一下完整的电路：控制脚本现在，终于到了软件的部分。我编写了一个简单的python脚本来控制继电器开关，使用了GPIO PIN 17和一个PHP代码可以在任何移动终端上面来运行python脚本。你可以从我的Github（和CSS）上找到这段代码。注意：你将会需要添加“www-data”用户到sudoers文件。注意+：PHP代码只是为了测试，我们不建议在公共环境中运行。不久我将完成这个设置，希望回来更新一个新的帖子。请在那时之前，自己动手试一下这个控制灯，但是一定要注意安全。视频展示：demo1 :demo2:&nbsp;参考· GPIO Diagram: http://data.designspark.info/uploads/images/53bc258dc6c0425cb44870b50ab30621·https://www.youtube.com/watch?v=Z2B67hybdAA·https://elementztechblog.wordpress.com/2014/09/09/controlling-relay-boards-using-raspberrypi/·https://www.raspberrypi.org/forums/viewtopic.php?t=36225·https://github.com/TheGreenToaster/web-pins/极客DIY：轻松使用树莓派控制灯，首发于极客范 - GeekFan.net。</content></doc>
<doc>     <docid>63<docid>     <title>自主机器人：你的私人WALL·E</title>     <link>http://www.geekfan.net/13924/</link>     <content>DIYer:Kris Magri制作时间:2-3周制作难度:★★★★☆GEEK指数:★★★★★看最终效果视频Makey是我编程实现的一个自主机器人（自主者，非遥控也），能够识别并规避障碍。她拥有全封闭的底盘并使用差速转向（原文为“tank steering”，坦克的驾驶方式），这种转向方式使用两台分开控制的电动机分别驱动两个主动轮（一机一轮）控制信号来自其自身携带的Arduino微型控制器（在国内用单片机如PIC、AVR，或者Arm处理器都可以很好地替代），另外有一个舵机用于Makey头部的转动。Makey的头部装有一个超声波探头，她会持续的左右摇头，以得到不同方向上的距离信息，并进行存储和处理通过对Arduino的编程，Makey可是实现诸如寻路的功能，仅需要少量硬件上的修改，Makey即可参加机器人界热门的Mini-Sumo（迷你相扑）比赛.&nbsp; 1 工具和材料● （使用的工具与零部件列表这里没翻，毕竟相当一部分东西买原版都不太现实也没有必要&#8211;国内的家伙事儿差不多的也能土法上马，有兴趣的童鞋请参考原文）● 想得到关于这个项目的图示、图纸、代码，请移步 资料下载2   制作机身● 机身由两片铝合金薄板制成，涉及的加工方法有切割、钻孔和折弯。你可以一次一片的加工，或者两片一起做以减少占用加工设备的机时。成品见2.5● 猛击 资料下载 下载图纸并全尺寸打印。剪下底板（base）切割图，用双面胶将切割图均匀平整的贴在铝合金薄板上● 注意：切割金属时务必佩戴防护眼镜2.1 切割&nbsp;● 用带锯机把铝合金片切成图纸的形状，切割的边缘一定要在线外● 提示：切割内角时，先切出一个大概的弧形曲线，然后从两个方向直线进刀以得到直角2.2 打孔● 用冲子和小锤子在图上有十字线的17处冲出定位孔，为下一步的钻孔做准备。另外要在图上长方形的孔的四个角上冲透● 按照图上标十字线处的尺寸钻孔，要首先取下贴上去的图纸（不过别扔了），用钻头对准前面留下的冲痕开钻可以使钻孔更精确● 把金属牢固的夹在废木头板上或者随便什么垫子上，这样可以得到更平滑的孔而不会导致薄金属板在钻孔处扭曲变形● 为了掏成方形孔而钻圆形孔时，你可能需要调整钻孔的直径以使圆孔边缘与长方形的边相切2.3 挖槽● 用冲剪完成对长方形孔的加工，如果你愿意的话可以把前面揭下来的图再贴回去，以便容易知道长方形的边界在哪。最后把边缘磨平 ● 用手工打磨工具去掉金属边缘的毛刺。给小孔磨边的方法为：把大钻头的尖端插进小孔，然后手工转几下冲剪是长成这样滴：&nbsp;2.1-2.3都是跟合金板过不去的活儿，原作者的办法基本是土法上马，与美帝的高科技风格严重不符。柚子在大学折腾机器人那会儿去交大观摩，他们有加工中心，只要把CAD图画出来发过去，那边用等离子切割机就给“打印”出来了，钻啊、掏异形啊这种活儿根本不存在。更神奇的是切完的边不用磨，基本不扎手。另外我们用土法掏方形孔的时候是先钻大孔，把带锯拆开一头套进去然后慢慢锯，得到的孔要多丑有多丑，然后还得上铁砧拿小锤砸平2.4   弯板● 把底板的折弯图用双面胶贴到铝板的另一面，对准圆洞方洞的位置，别贴歪了● 把铝片贴折弯图的一面向上塞进弯板机里，在所有标示折弯的部位折90度 ● 每个长边上的两个突出部要先折，然后再折机身的边。（顺序反了就塞不进去了）● 折弯后要缓慢释放，测量，确认每一处折弯都要是直角2.5   制作顶板● 重复2.1-2.4步骤，加工顶板（top），然后你就搞定了每个机器人都会喜欢的底盘3 运动系统3.1 安装电机&nbsp;● 用4-40 x 1螺丝穿过小孔，将驱动电机定位在底板上，电机的传动轴应该穿过大孔● 使用螺母和垫片在电机的一端上紧，因为可以施展的空间尺寸很小，可能需要尖嘴钳子（夹住螺母）才能上紧3.2   制作轮毂● 用2英寸（外径，合50.8mm）的空心钻头（见过装空调的师傅在墙上钻大洞用的那种钻吧，很类似）在废木头板上钻出轮子（钻透木板之后木板上有个圆洞，钻头中间的洞里会剩下个圆片，这个圆片就是轮子），我用了18号板（貌似是一种规格），最终得到的轮子有3/4英寸（19.05mm）厚，直径1.8英寸（45.72mm）。钻轮子的时候要牢固的固定木板，并且缓慢进刀，防止卡住钻头● 给2个木头轮子分别对心定位一个轮心（图中白色塑料的小轮子），并用小螺丝标记两个孔的位置，在此位置上用1英寸（原文如此，合25.4mm，不过疑为有误，从图上看孔绝对没那么大）的钻头钻透● 给木头轮子喷漆，我喜欢红色光面防锈漆，这种东西非常薄，颜色很亮，覆盖性好并且容易清洁。注意，不要在安装孔里喷太多&nbsp;3.3   制作轮胎● 用43号钻头在轮心上钻两个相对的孔，然后用4-40丝锥在每个孔里攻出螺纹● 用两个4-40 x 1螺丝从木轮外侧把轮子和轮心固定在一起，不要太紧● 给每个轮子装轮胎，轮胎外径比较大的一面朝外。最后把轮子装在驱动电机的传动轴上3.1-3.3就是折腾那俩轮子，原作者极其不厚道，没说怎么对心，这个很重要，谁也不希望做完的机器人跑起来一跳一跳的。您还别问我咋对心，我也没经验，新手还是找现成的轮子对付一套比较安全。另外3.2-3.3中原作者留下一个逻辑错误，看出来的童鞋请举手3.4   安装万向轮● 使用螺丝、螺母以及垫片将万向滚珠安装在底板底部4 电控系统4.1 安装电源● 按照第一步打印出来的隔板图样，从一块硬塑料上切出隔板（隔板是用来装线路板的，用塑料是为了绝缘），按说明打孔，尝试着塞进机器人的外壳并使之架在驱动电机之上，作必要的修整，令其充分贴合匹配● 用两个4-40 x 2螺丝将Arduino控制线路板与硬塑料隔板固定在一起，螺丝应从隔板下方穿入，并在线路板上方拧螺母。线路板上的USB接口需要和机器人面板上预先留好的开口充分对齐● 将电池夹具铆接在机器人外壳的左侧面板上，预制的铆钉头朝外，这样的话丑的一头就朝里啦关于铆接，这里指的不是造泰坦尼克的那种把烧红了的钢制铆钉插进去挤兑一下的工艺，而是一种将铝合金预制铆钉的开放端在常温下挤压成型从而将两个或更多构件固定在一起的方法，最常见到的是各地马路边的刮大风能掉下来砸死人的铁皮广告牌子，它们就是用这种工艺把镀锌薄钢板固定在L字钢框架支撑结构上滴4.2   控制板● 按照制造商的教程，把原型板（ProtoShield）焊好教程在 这里● 用带锯机把板子上的BlueSMiRF接头切下来，这个接头是用来连接蓝牙模块的，我们的机器人用不到那东西。是不是锯得很爽？● 把面包板接在原型板上，原型板插在Arduino上，如果用的是Diecimila（Arduino主板的一个版本），那么将电源跳线设置在EXT位上焊接原型板绝对不是个轻松的活儿，没基础的童鞋搞不定也不用纠结。面包板（breadboard）是这么个东西，其意义在于省了烧电烙铁的麻烦，不过问题是有时候元件捅进去会接触不良&#8230;&nbsp;&nbsp;5 给WALL·E安上一双明亮的眼睛5.1 WALL·E的脖子● 咱这个项目用的是HS-55型舵机及与之配套的较短的一字舵角，用5&#8221;钻头对舵角最靠外的两个孔进行扩孔Du-Bro Mini E/Z 连接头, #DUB845微副翼系统 Du-Bro Micro Aileron System, #DUB850● 将两个Du-Bro Mini E/Z连接头从正面穿过摇臂两端的孔，并在反面用黑色橡胶的部件固定● 将控制杆（图中所示的细铁丝样东西）穿过Du-Bro Mini E/Z连接头，并用连接头附带的螺丝拧紧5.2   WALL·E之眼● 有挑战性的工作来咯！咱们需要把舵机和超声波探头接在一起。把从舵机上伸出来的控制杆分别穿过位于传感器电路板对角的定位孔（这个定位孔来自Du-Bro Mini E/Z连接头，连接头又插在板子上的螺丝眼里，然后另一端用那个黑橡胶部件固定）并向外折成90度角● 控制杆应该从舵角开始竖直向上，并且给超声波探头留下足够插信号线的空间，传感器正面（有收发端，也就是像俩小眼睛的那一面）朝前，控制杆上还应该套上绝缘套（就是那个塑料管）以防止短路，绝缘套在Du-Bro套件里可以找到。确认安装无误后，将控制杆与传感器上的连接头拧紧。Du-Bro是美国的一家生产模型配件的公司，很遗憾我没找到这些产品的国内版本。欢迎在国内见过这些配件的同学提供信息5.3   给WALL·E安上一双明亮的眼睛● 将舵机和超声波探头出来的线穿过机器人外壳顶部预先留下的长方形开孔● 舵机也要插进那个顶部开孔，调整好位置后两边用螺丝与螺母将舵机与外壳固定好，剪去多余的控制杆(还是那个细铁丝)● 把舵机摇臂与舵机上到一起，用小螺丝刀调整一下保证Makey的眼睛（传感器）朝前6 连接并测试驱动电机6.1 电机预处理● 咱的地摊货电机上的连接头部件是很脆弱滴，所以连接部分一定要用心● 从外壳里拆出电机和Arduino线路板● 切2红2黑各12英寸（304.8mm，12寸炮是305mm的，比如筑波级的2*2主炮）电线，每条线的两端1英寸（25.4mm）剥去绝缘皮。先别焊接，用一个红黑线对在电机的末端（有电源接点的那一端）缠几圈，以防止拉断，然后让线对从电机顶端通过，用双面泡沫胶带将其固定在电机上。注意不要覆盖电机上的任何孔洞，同时要为电机的固定留足空间 ● 将电容的两个引脚分别穿过电机接线头上的小孔，焊接（这里应该是把引脚穿过去的部分和同一根引脚的根部焊在一起，这样的话引脚和电机接线头就充分连通了。注意，千万别把俩引脚焊在一起！）这需要使用尖嘴钳的巧妙掰弯手法。然后把给电机供电的电线头与电容引脚，注意，不是电机接线头，焊在一起，焊牢稳一些。再然后剪掉多余的电容引脚。把电容和缠在电机末端的电线一起用黑胶布（也就是绝缘胶带）紧密的缠在电机上，并且用更多的泡沫胶带把这个鼓鼓囊囊的位置包起来（还是为了固定）● 把漏在外面的电机供电线拧成双绞线，这样可以减低电路中的噪声（一个供电的低压直流线路里有点噪声怕什么？原作者的想法好奇怪）。给电机标出左和右在电机上并联了一个电容，这样做有两个好处。其一，在稳定的直流电路里，电容是开路，不会影响电机工作，但是给电机通电的那一瞬间，电容因为要充电，可以分担一部分电流，所以电容作为一个保护器件可以保护电机。其二也是更重要的，这种直流电机的接线头是一个铜合金片，从电机的塑料外壳里伸出来（通常被和塑料铸在一起），鬼知道奸商们用了什么材料，反正这个东西非常脆，尖嘴钳上去经常能掰断，然后这个电机就没啥抢救的价值鸟，另外这个铜片不怎么粘焊锡，焊接不易。但是电容的引脚一般都是类似铝、锡一样的柔韧金属，想怎么扳都能成形，焊起来也容易得多，所以作者把电气连接的活儿都转到这个引脚上来做。【连电机的小经验】铜接线片作连接之前最好用细砂纸小心的蹭几下，去掉氧化物。电容线脚穿过去之后轻轻拉紧，在穿孔附近用尖嘴钳用力捏一下，使线脚与铜片充分接触。另外电线最好挑独轴的，也就是绝缘皮里面只有一根金属的，那种绝缘皮里有一束极细铜丝的线焊起来会有想死的冲动6.2   电机测试&nbsp;● 将短实心跳线分别焊接到电机供电线和电池接头线上，这些跳线可以让你把它们（电机和电池）插到面包板上，焊接之后用热缩胶带作焊点的绝缘（用绝缘胶布缠是一样的，除了丑一点和大一点）。将电机供电线穿过塑料隔板（4.1提到的那个）上的大窟窿（因为面包板和电机分别在隔板上下两侧）● 按图示把电机驱动器插进面包板中间的一行孔里，使之和电机以及一个电池连通（注意，在面包板上，每一行的孔之间是连通的）。使用短跳线并保证这些线紧贴面包板，傻大黑粗的大电线是不配塞进机器人里的● 从 Arduino官网 下载Arduino的软件并且安装之，再从 资料下载 处得到这个项目的5个测试程序。通过USB接口把你的Arduino和电脑连起来，如果你用的是Diecimila版本的话，把它的电源跳线接换到USB档上。● 为了测试电机，运行名为01_Test_Motor_Rotation的程序，此时左边的电机应该先往前转再往后转，然后是右边的，先往前再往后。如果不是这样，检查一下你的接线。接下来运行02_Test_Motor_Speed，此时电机应该以低速启动，然后加速，最后反方向转，如果不是这样的话检查线脚D11和D37 连接并测试舵机和传感器7.1 连接舵机● 将电机和Arduino再装回机器人里面，找两个3针的单排直角插针（通常是将一个20针的单排插针折断得到）插在面包板上，把舵机线接在上面，具体接线规则为：黑线-GND（地线，电池负极），红线-+5V（电池正极），黄线-Arduino跳线D10● 再来一个3针右转接头，这个是接超声波探头的，接线规则为黑线-GND（地线，电池负极），红线-+5V（电池正极），黄线-Arduino跳线D97.2 测试舵机和超声波探头● 运行舵机对中程序03_Test_Servo_Center，松开舵机摇臂的螺丝并微调，舵机臂与超声传感器尽量指向正前，因为舵机轴齿轮的问题，这一步可能无法完全对中，没关系，我们稍后再调整● 运行程序04_Test_Servo_Sweep，这个程序可以让超声波探头慢慢的摇头● 再来测试超声波探头，运行05_Test_Sensor_Distance，点击Arduino软件的数据流监视器图标，你应该能看到不断跳出来的测距读数，而且如果你在传感器之前挥舞你的手，测距读数应该有变化。如果你得到的读数始终是0或者255厘米或者别的什么错误的读数，检查你的接线是否有误，并且千万确定你的传感器没接反 ：P7.3 安装开关● 终于可以接电源开关鸟！把Arduino最后一次拆出来，为了装开关，需要把还没用到的电池引线的红线焊在开关的一端并且把另一跟红线焊在开关的另一端。同样别忘了把电池的黑色引线和另一个根黑线焊在一起● 把线从机器人侧面的方形孔穿好，开关需要打在“1”的档位上，把开关塞进方孔里固定好，这个调整可能会用到钳子● 把从开关出来的红色线脚接到原型板的RAW线脚上（这个线脚还连着Arduino的Vin线脚），把从电池出来的黑色线接到原型板的GND线脚上，如果你用的是Diecimila版本的话，把它的电源跳线调回到EXT档上8 系统测试● 现在所有的电子设备工作都正常鸟，小心的把所有东西塞回机器人里，啥也别落下。装好电池，把机器人放好，别摔了。用来传程序的USB接口应该能从侧面的孔里露出来● 重新载入并运行01_Test_Motor_Rotation，注意，所谓前是指机器人的USB接口和传感器指向的方向，如果你的机器人反着跑，检查在线脚AOut1, AOut2, BOut1, BOut2, AIn1, AIn2, BIn1, 和 BIn2处的接线，可能也会需要反转驱动电机的连接 ● 重新运行其他的测试程序，确认接线正常，测试完成后把舵机和传感器的线塞进外壳里，扣上顶盖，拧上4个螺丝固定，收工！&nbsp;9 给你的WALL·E注入灵魂● 有时候你的硬件做好了你就没啥事可干了，不过你的程序是写不完滴。这也是你展示创造力的好时机● 在代码中你需要使用digitalWrite和analogWrite这俩函数来控制驱动电机，通过传递值给电机驱动器的各3个线脚。其中一个可以接收介于0到255之间的值，用于控制传给电机的电流大小，这个是用来控制速度的。另外2个线脚则使用布尔型变量，用于决定每个电机两端的电位高低，这个可以决定电机的方向（当然电机两端只能一端是高电位）● 你可以编写类似void Forward()这样的函数实现简单的动作，比如后退（两个电机同时反转），Spin_Left（原地左转，右轮正转左轮反转），Arc_Left（画弧左转，右轮正转左轮不动）之类的。Arduino的编程环境使你的代码实验和加载都很方便● 另外一个好玩的事情是规避障碍，只要运行这样一个循环：往前走，读取测距信息，如果障碍物太近则采取躲避动作比如后退并转弯，返回循环体头部10 关于Mini-Sumo（迷你相扑）比赛● 在 Mini-Sumo 比赛中，两个自主机器人会被放置在一个用白色漆成的圆形场地中● 只要换上窄一些的轮子，比如GM家卖的 这种 ，Makey就可以满足大赛要求的尺寸和重量上限：底面10厘米见方、500克。你极有可能需要另外的朝下的传感器用来观察那个白色的环（场地边界），不过Arduino有足够的能力处理其他多出来的信号11 DIYer签到处虽然这个项目很困难，不过也不是完全不能做。如果哪位蛋疼的同学把它做出来了&#8230;应该会很愿意在这里秀出来让大家围观吧&#8230;&nbsp;制作视频：自主机器人：你的私人WALL·E，首发于极客范 - GeekFan.net。</content></doc>
<doc>     <docid>64<docid>     <title>牛人自制加特林水枪，让你度过丧心病狂的夏天</title>     <link>http://www.geekfan.net/13900/</link>     <content>（该项目来源于instractables，原文链接在这里，作者：projectsugru。该项目各步骤主要展示Sugru凝胶（或者是某特种粘土，本文统一译为Sugru凝胶）的应用，对加特林水枪的制作过程没有记录，但文后给出了各零件的图纸，相信DIY达人还是能搞定的。）夏季的疯狂离不开水枪，我们要做一支史无前例的、帅到没边的加特林水枪，废话略，开始吧。&nbsp;Step 1： 制作活塞本步骤器件清单PVC管一段，特种粘接剂（两种颜色，名为Sugru，以下称Sugru凝胶），锯子、夹具、锤子、雕刻工具和一杯肥皂水。步骤：1、用夹具夹住PVC管，锯下需要的长度（我用了2.5cm长）；2、将肥皂水涂在工作台面上（防止Sugru凝胶粘在台面上）；3、打开两小包同色Sugru凝胶并混合，把Sugru凝胶填充进刚切下的管子里，要完全塞满；4、放置24小时让Sugru凝胶固化；5、Sugru凝胶凝固后，将这段管子纵向置于夹具中，把PVC管切开小口（注意不要切到里面的Sugru凝胶）；6、用锤子敲击这段管子，直到把外面的PVC管敲破，得到一段圆柱形Sugru凝胶；7、用雕刻工具加工圆柱凝胶两端，去掉部分材料，这有助于让活塞更湿软；8、在这小段Sugru凝胶圆柱中部，沿周向雕刻环形凹槽；9、打开第3包Sugru凝胶，滚成细长条并填充在上一步做成的凹槽上，注意让环状填充物的周长略大于Sugru凝胶圆柱，并放置24小时；10、固化后，就得到一段活塞了，可以把它浸入肥皂水中。&nbsp;Step 2： 做Sugru凝胶注射器&nbsp;本步骤器件清单Sugru凝胶一小包、壁纸刀、可弯曲的塑料管/软管、金属杆（或适合把Sugru凝胶推入管子的东西）、X2金属连接件、螺丝刀。步骤：1、用壁纸刀切下一段塑料管子（我们切了4cm长）；2、打开一小包Sugru凝胶，用手指捏成条状（享受这种感觉吧）；3、继续将Sugru凝胶滚成细长条；4、用金属杆把Sugru凝胶推入塑料管子，从管子的两端推Sugru凝胶，确保Sugru凝胶塞满管子正中，两端留出1cm的空管子，静置24小时；5、固化后，在Sugru凝胶中心钻通孔，孔径按你的需要确定即可；6、在这段塑料管子外套上金属连接件。Ok，Sugru凝胶注射装置就搞定了。&nbsp;Step 3： Sugru凝胶绝缘开关本步骤器件清单Sugru凝胶一小包，漆包线，电烙铁和焊丝。步骤：1、用蓝色交联剂将用到的漆包线固定在恰当位置。2、预热电烙铁，把两条线焊在合适的位置，确保焊点牢固。3、取少许Sugru凝胶涂在焊点上，抹平，塑形。4、放置24小时固化。&nbsp;Step 4： 用Sugru凝胶连接和密封几段管子&nbsp;本步骤器件清单Sugru凝胶一小包，各种需要的管子（粗管、细管、渐缩管）。步骤1、摊开并排好所需零件。2、用渐缩管连接管子。3、将Sugru凝胶涂于连接处，注意Sugru凝胶必须完全覆盖连接点并超出连接部分，这样才能提供足够的结构支撑。4、抹平Sugru凝胶并放置24小时固化。&nbsp;Step 5： 定制Sugru凝胶手柄本步骤器件清单Sugru凝胶4-5小包，手柄。步骤1、打开一小包Sugru凝胶，润湿，让它软化。2、从手柄底部开始涂抹Sugru凝胶（不够再开一包）。3、继续一点一点地覆盖手柄，确保Sugru凝胶连成一片，完全覆盖了手柄表面。4、手柄全部覆盖后，可以考虑用嵌入另一种材料的方法给手柄加纹理，我使用了背包带，你也来点创意吧，比如有人用海绵、牙刷，甚至橘子。5、在Sugru凝胶固化前（从开包到开始固化，有30分钟时间），还可以用力抓握手柄，这样可以印出个性化的抓握痕迹。&nbsp;Step 6： 用Sugru凝胶做护边本步骤器件清单Sugru凝胶1小包（实际只需要半包就可以保护每根管子）。步骤1、打开一小包Sugru凝胶，润湿。2、取一半，并滚成两个等大的小球。3、在金属碟尖锐处敷上Sugru凝胶。4、塑形、平滑Sugru凝胶，确保管子连接正常，放置6小时固化。5、检查管子和槽孔的配合，注意，如果Sugru凝胶使用过多，可以用壁纸刀在固化前切一点下来，如果Sugru凝胶用得太少，因为Sugru凝胶的粘连性很好，所以只要再加一层就好。Step 7： 用Sugru凝胶固定松动部件Step 8： 激光切割件的Dxf和Pdf文件这把水枪制作周期长（超过60小时的团队工作量，还有许多无法入眠的夜晚），我们没有记录下全部过程。实际制作这个大杀器是件令人兴奋的事情，Dxf文件给出了该项目中各组件的激光切割模型，请在这里下载，Pdf文件仅供快速预览，可以在这里下载。文件的比例是1：1，铝合金零件厚4mm，不锈钢零件厚3mm。相信这些文件能给你更高的起点。附件：3mm stainless steel V2.DXF3mm stainless steel V2.PDF4mm aluminiumV2.dxf4mm aluminiumV2.PDFV2.ISO.PDFV2PARTS.PDF&nbsp;视频   牛人自制加特林水枪，让你度过丧心病狂的夏天，首发于极客范 - GeekFan.net。</content></doc>
<doc>     <docid>65<docid>     <title>自制拉风电动滑板，回头率太高有点不习惯</title>     <link>http://www.geekfan.net/13876/</link>     <content>创意是参照了@动力老男孩的一篇文章，最初的想法是DIY一个可穿戴的动力轮，像鞋子一样穿在脚上，不用的时候可以自动折叠收在小腿和膝盖处，用的时候可以伸张成轮子电力驱动快速前进，有点像哪吒的风火轮，主要是受《变形金刚》和《钢铁侠》两部电影毒害太深。后来发现水平极其有限，买了很多零件设备却做不出个所以然，东西都搁置在一边大半年。有天在网上看到动力老男孩的视频是把活力板改装成动力滑板，觉得我所有的材料都有了，就是差一块活力板了，于是速上某宝买了一块。然后就是水到渠成了。废话不多说，下面上图，有的细节就省掉了铝合金活力板，6寸皮带轮，皮带，120W有刷电机，控制器，安装支架，万向轮4寸电池，遥控车手柄，铝盒。这些材料都是网上淘的，如下图：1，活力板直接卸掉原来的轮座。2，前轮用4寸的万向轮代替，万向轮的安装孔距（75*45）与活力板（65*35）的不一致，需要自己重新开孔对位，有点麻烦，不过也就是几分钟的事情，开孔搞定。3，后轮找不到合适的支架，直接买了铝合金自己开孔加工的，这个花了两三天时间，因为要同时考虑电机、后轮、皮带和齿轮的重合，肯定要在一条线上面了，不然跑着跑着皮带跑偏掉链子了。电机架是用50*50的角铝做的，后轮支架用的是40*80*40的槽铝与铝排用螺丝铆合，图纸如下。图纸设计好后加工就容易了，手钻定好位，直接开孔就好，把握好力度不要打偏了就行。电机架后轮结构4，duang，后轮和电机的安装就搞定了机械结构主要工程完工，下面搞控制器。5，控制器、电池和保护板都是网上买的，根据要求设计尺寸，然后点焊成2并7串，钴酸锂电池29.4V，刚刚配24V的电机，加上均衡充保护板，与控制器一起安装在铝盒里面，然后外接了航空接头和充电口。具体步骤省略，九芯航空接头是为了方便控制手柄接入，引出控制器的速度控制，开关，电量显示，刹车一共9条线，有三条是GND可以共用，其实七芯就可以了。6，为了降低成本，没有使用无线控制，本人对无线控制接收也是一无所知，所以使用传统的有线手柄。控制手柄纯手工打造了，将玩具枪里面的扳机改造了一下，在扳机上加上两颗钕铁硼磁石，在两颗磁铁活动范围中心位置固定霍尔元件。原理跟电动车手把是一样的，转把里有一个感应磁力线大小的线性霍尔元件，手柄里还有两块磁铁，扳机转动磁铁也跟着转动，霍尔感应到磁力信号 就给控制器发出信号，从而控制电机转速。刹车也是改动了扳机，扳机往前推的时候触碰到一个非自锁开关，就能刹车，松开后开关会复位。另外在玩具枪上加上一个拨动开关控制总电源。电量显示还没想好怎么接，先预留着。7，续航里程8~12km，最大速度18km/h，总重6kg，比网上销售的400RMB左右的铅酸滑板车行程要远，毕竟是锂电池的，动力比起铅酸也有力一些，另外楼主75kg，里程跟使用者体重也有关系吧。总成本在400元左右，忽略某些零件的邮费成本，因为某些零件比邮费还便宜，有兴趣的朋友自己DIY一台吧。开出去还是挺拉风的，回头率高了有点不习惯。不过要说明的是由于前轮的直径只有100mm,所以如果路不是很平整的话最好不使用，一个是会颠簸的厉害，另外如果前轮被阻了因为重心比较高很容易摔跤的。玩过滑板的都知道，所以最好在柏油路或者在水泥路面上使用，另外要求路上车少人少最好。元件清单序号物料名称规格数量1面板21*8512后轮138*24皮带轮13槽铝40*80*4*8014铝板100*40*425轴承8*100mm16后轮皮带调节器通用17后轮槽铝螺丝M6*8内六角48后轮架螺丝M5*10内六角89后轮架铆合螺母M5810前轮4寸PU轮111前轮架75*45,130mm112前轮螺丝M6*30内六角413垫圈M6414前轮减震弹簧D20*20415皮带15*420116电机100W 24V 5A117电机齿轮118电机螺丝M5219电机架锁紧螺丝M6*8内六角420电机架（角铝）50*50*3121铝壳106*100*60122铝壳螺丝自带823铝壳固定螺丝M6*8内六角424控制器100W125电池钴酸锂186501426保护板2并7串127热缩管若干28插簧6mm229接线端子1VH3.96-3P 手把130接线端子2VH3.96-2P 刹车131接线端子3VH3.96-2P 开关132接线端子4VH3.96-2P 充电口133电子线若干34充电接口DC-2.5-2.1135充电器24V 1.8A137九芯航空插头138九芯航空线139遥控车手柄141电压显示142开关143触动开关（刹车）144胶水若干&nbsp;&nbsp;视频：自制拉风电动滑板，回头率太高有点不习惯，首发于极客范 - GeekFan.net。</content></doc>
<doc>     <docid>66<docid>     <title>[转]反对修订《美国联邦刑事诉讼规则和证据规则》第 41 条</title>     <link>https://xbeta.info/rule-41.htm</link>     <content>收到一位国外朋友的邮件，建议转发对美国拟修订第41条规则的抵制。大概研究了一下， 《美国联邦刑事诉讼规则和证据规则》第 41 条为「搜查和扣押」 。美国政府准备修订相关条款，而该修订行为会对个人信息安全造成损害。美国很多科技媒体、社群、个人，都在抵制这一修订。转发一下，也欢迎大家发表意见。毕竟，这个世界是紧密联系在一起的！不要让美国政府侵入个人的计算机 – 停止修订第41条规则Ariel Hochstadt (前谷歌雇员，国际科技讲师)美国政府希望采用一种模糊不清的程序——修订一条称为第41条规则的联邦规定——从而充分扩大他们侵入我们计算机的权限。第41条规则的修订将会使其更容易闯入我们的计算机、收集数据、进行远程监控。这些修订可能会影响在世界任何地方使用联网计算机的任何人。然而，他们对采用隐私保护技术如Tor和 VPN的人员的影响则不尽相同。美国国会直到12月1日才可阻止修订的生效。我们需要大声疾呼。与你的朋友以及在你的博客上分享这个帖子。提高人们对修订第41条规则的意识！什么是第41条规则？它如何对生活在美国之外的你产生影响？第41条规则授权联邦治安法官签发执法搜索和查封的许可。但它含有一条重要限制：它要求政府必须获得其所欲执行搜索的管辖区域法官的许可，某些有限的情况除外。第41条规则的修订将会削弱这条限制，允许政府在某一管辖区域申请许可，执行对位于另一管辖区域的计算机的远程搜索。修订将会适用于下列情况：* 有人采用“技术手段”隐藏其计算机的位置时；或* 调查僵尸网络时，此时受损的计算机位于5个或更多行政区。50家组织 – 包括公共利益集团、隐私工具提供商以及因特网公司 – 团结起来，大声疾呼，反对修订第41条规则。vpnMentor与noglobalwarrants.org协调一致，领导要求撤销所提议的第41条规则修订的全球性努力。虽然noglobalwarrants.org专注于美国公民，鼓励他们联系其国会代表，但对这条规则的全球性意识依然极为重要，因为美国政府也将能够侵入采用 VPN 或 Tor 浏览器的全球用户。这就是我们将“行动呼吁”翻译为26种语言、尽最大努力在全球分享的原因。reject rule 41 changes修订第41条规则错在哪里？规则修订可能会极大增加执法人员侵入我们计算机的频率。这是因为修订条款将会授权这个国家几乎任何联邦治安法官签发这类许可。执法人员可择地诉讼，找到美国最利于起诉或最不懂技术的地方法官，签发这些危险的许可。根据这些规则的修订条款，如果人们的隐私保护技术使其计算机的位置模糊不清，美国几乎任何行政区的法官都可能授权执法人员远程搜索或侵入他们的计算机。这就意味着，极其在意隐私的人有可能受到这一规则修订大小不一的影响。在很多情况下，地方法官可能会不顾其他国家的法律保护，在不知情的情况下签发侵入位于世界各地，而非只是美国的计算机的许可。规则修订还会致使执法人员寻求远程搜索成千上万计算机的单一许可 – 违反美国宪法第四条修正案和国际人权法的保护条款。非法侵入 – 秘密闯入计算机、复制数据、删除数据或执行代码 – 可能会对用户及其设备产生严重后果。比之僵尸网络本身，政府代表实际上可能会在僵尸网络调查期间对无辜用户的计算机造成更大的损害。如果国会采取极端措施，授权政府非法侵入，则必须对何时允许此类行动进行严格限制，对遵守美国宪法和国际法的用户给予强有力的保护。如果美国国会不采取行动，这条新规则的更新则将于2016年12月1日生效。这就是我们必须大声疾呼，要求否决这一规则修订的原因。在社交网络和你的博客上分享这条帖子吧。-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>67<docid>     <title>【转载+补充】最强免费萤幕录影软体 ActivePresenter 教学影片神器</title>     <link>https://xbeta.info/activepresenter.htm</link>     <content>2016-04-12 更新：感恩 yuxiaoxu 网友，AP 的简体/繁体中文语言包已经翻译并发布了。大家可以下载后，解压到 AP 安装目录的 ……\ActivePresenter\locales\ 下，然后 view → language 切换到「简体中文」，重新启动即可生效。下载 http://xici800.cn/5opXo2xbeta序看到电脑玩物发了ActivePresenter 的文章，非常高兴和激动。我几年来介绍ActivePresenter的愿望，终于由老朋友代为实现了。先说结论：来自越南的 ActivePresenter 是最强大的免费录屏软件，相当于 BB FlashBack 的收费版，非常适合『有更高要求+愿花时间学习复杂软件+愿花时间精心编辑录屏视频』的用户。1、令人赞叹的 ActivePresenterActivePresenter 绝对是功能最强大的免费录屏软件（另有收费版）。但非常可惜，无论在国内还是国外，它的知名度都很低。从技术角度，AP是一款非常强大的软件，并且无论官网设计还是软件UI，都是大公司风范。如果其他软件算是“录屏软件”的话，那对AP来说，“录”只是它的1/3功能，此外的“制作”和“编辑”的功能，也极为强大。比如，一个视频项目可以由多个slide（本意是幻灯片的一页，但我认为理解为一节视频更合适）组成，每个slide可以是图片、ppt、视频；每个slide可以添加多层对象、多音轨；每个对象/音轨，可以进行多种编辑——分割、起止时间、截取片段……从商业角度，AP的免费版提供了大量在其他软件的收费版才具有的功能。甚至，一般用户都没有必要购买它昂贵的收费版。而还有两项一般用户不太注意的地方，也令人赞叹：它的帮助文档（如图），简直可与早期的电器说明手册相媲美。而它的出处，更是让人意想不到：ActivePresenter 来自越南~ 公司所在地就在越南河内。这大概是它没能被搜索引擎、科技媒体、软件爱好者广泛发现的原因。2、为什么迟迟没有介绍 ActivePresenter我早期写博客文章，无知无畏，所以写了很多Vim和Total Commander的文章。越到后面，越感觉难以下笔，尤其是面对一些极其优秀的软件。比如当时面对 ActivePresenter ，我的感觉是：从文章看，要写近万字才有介绍全它的功能。但如此长文，如何还能引起读者的阅读兴趣？如何让文章与作品同样优秀？在当时的精力下，都比较困难。这样复杂的软件，只有文章恐怕仍不易入门，最好有视频教程……竟然出自越南，我应该采访一下开发团队，并促成国内合作。不过，联系采访之前是不是应该把官网先翻译了……其实上面每一项都启动过，但也都没有完成。所以，积累了一些素材，但文章始终没发。3、接触与使用 ActivePresenter 的历程2013年12月，研究录屏软件时，在为知笔记中记录了 ActivePresenter 3个版本（当时只有免费/标准/专业版，尚无现在的教育版）之功能对比，做了大部分翻译。此后有大量各软件录制视频的参数对比记录。2013年2月，用它制作了一段给女儿讲故事的视频：①把女儿的绘本每页拍照；②各照片导入ActivePresenter，成为N个片段；③讲故事并录音；④把录音文件用Audacity去除噪音，并分割；④在AP中，N幅照片与N段录音融合；⑤导出视频。2015年7月，用ActivePresenter录制了一些公开发布的视频（当时是刚发现B站的无二压上传）。用AP主要是为了添加封面和目录。比如 《在TC中一键压制x264视频》 中明显不是直接录制的视频，实际前几段都是用ActivePresenter制作的，导入图片再添加文字（或者直接在PowerPoint中制作并导入ActivePresenter）；后面的目录字幕，也是用AP添加的。如图：邮箱大师 Windows版的安装与基本界面 视频中，开篇的语音就是利用AP的功能自动生成的！也就是说，我标注上文字，就可以让AP来自己配音：男声、女声、时长……见图：4、ActivePresenter的功能补充A。各版本功能比较3个版本（免费/标准/专业）共有的功能：导出图片 (PNG, JPEG)导出视频(AVI, MPEG4, WMV, WebM, MKV)导出SCORM 1.2, SCORM 2004标准版和专业版的额外功能：导出flash（flv）导出HTML幻灯片导出PDF导出MS Word导出MS Excel导出MS PowerPoint导入MS PowerPoint专业版独有的功能：导出HTML5交互导出flash交互从上面的对比来看，免费版仿佛功能很少。但实际上，上述对比仅限于导入/导出功能。而该软件强大的录制、编辑功能，在各个版本都是具备的。它们包括——智能录制：在鼠标或键盘按下时，捕获屏蔽。每个动作将形成独立的片段（slide），这样既方便后续编辑，也方便观众/用户仔细了解每个操作步骤。完整动作录制（FMR：Full Motion Recording）：把完整的屏幕操作录制下来，并作为一个片段（slide），后续可以编辑——文字注释、语音解说、点击声音、标题、过渡效果……交互与分支：录制教程并用AJAX/Flash模拟格式发布后，用户可以通过点击等方式进行交互，教程会根据用户的行为反馈不同内容。音频视频编辑：可以同时或分别对视频、音频的不同音轨进行编辑：剪切、删除、裁剪、合并、分割、改变音量、添加冻结帧。事件与动作：丰富灵活的事件-动作机制，可以定义不同的学习场景、步骤，来响应用户的不同行为。比如，用户鼠标左击如何，右击如何，正确如何，错误如何……标注样式：录制内容上还可以添加各种标注。并且这些标注支持不同的边框线型、填充、文字效果、阴影。过渡效果：对片段、视频、标注对象，都可以添加丰富的过渡效果。智能标注：会根据你的动作自动添加标注，比如“双击xx图标”。这样制作教程非常迅速。关于导出，不仅可以导出AVI, FLV, WMV,  MP4，WebM（较新格式，目前实用性不强，但体现了软件的前瞻性）等视频格式，并且支持帧频、关键帧、质量等参数，以便于平衡视频质量与文件大小。并且可以导出HTML5，这样在PC、平板、手机的浏览器中都能正常运行。注：SCORM是一种数字教学内容的格式规范。全称 Shareable Content Object Reference Model，译为共享内容对象参考模型或共享组件引用模式，由ADL (Advanced Distribution Learning Initiative)集成各个学习标准制定而成。5、录屏方案的选择对ActivePresenter的赞叹和欣赏是一方面，但从实用角度，估计大多数人是不需要它的。功能虽然强大，但操作起来也比较繁琐。实际上，我自己的录屏方案是这样的：wink 已经停用：最早推荐方案是Wink，原因是录制flash教程画面无损、体积超小、精确交互。但现在，flash时代已经过去，尤其难以找到上传空间。并且，软件久不更新（该团队后面还开发过手机上录屏直播的app）。屏幕录像专家：界面很简陋但性能很好的国产软件。我是付费用户，但不注册的使用限制也比较少。它的优点是适合长时间录制，占用资源少，操作便捷，转码mp4很快很方便。如果只发给少数人，则独有的lxe文件格式更清晰小巧。1小时的录屏可以压缩到100MB。ActivePresenter：如果需要制作封面、目录页、或添加文字注释，我就使用ActivePresenter。转码/压缩工具：小丸工具箱（强力推荐）如果别人问起，我通常推荐 BB FlashBack Express：因为它免费、入门易、网站的介绍也比较多。6、录屏之后的发布现在是在线视频的时代，但PC操作录屏发布，却没有特别好的普遍方案。大家看一下各软件博客偶尔录制并发布的在线视频就明白：明明录制时极为清晰，上传后却画质极渣。实际上，我在这方面投入的研究实验时间，比研究录屏软件更长。用不同的参数录制、压制，上传到不同网站，做过各种对比。最早找到的是sina无二压方案；后来也用过土豆的原画方案——但这些方法现在已经过期。目前可用的，主要是B站上传方案。说起来又是一篇长文，也曾在知乎介绍过，此处不展开。我现在如需发布，是操作录屏则发B站（低码率而清晰，真正高效环保）；拍摄的视频则直接iPhone录制，用优酷/腾讯等视频客户端直接上传。好，序言结束，下面开始转载：最强免费萤幕录影软体 ActivePresenter 教学影片神器作者：电脑玩物 　　 出处：http://www.playpcesor.com/2016/01/activepresenter.htmlWindows 上有很多免费萤幕录影软体，例如我之前介绍过的：免费萤幕录影神器！推荐这款比软体好用 Chrome 套件 、桌面萤幕录影免费软体推荐：超简单在教学影片上画重点解说这些萤幕录影软体都各有优点，今天要跟大家推荐的这款「 ActivePresenter 」也有自己的特色。或许我不会说「 ActivePresenter 」是最好用或是最佳桌面录影工具，但是「 ActivePresenter 」绝对是「最强大」的免费萤幕录影软体，这是什麽意思呢？因为「 ActivePresenter 」介面或许不是那麽好上手，但丰富的功能却可以满足真正要「製作专业教学影片」、「编辑各种数位教材」的需求！所以最强大当之无愧。如果你是一位老师、训练人员、产品客服，或是你在任何情况下要製作一段包含短片、包含简报、包含语音、包含各种操作说明特效的完整教学影片，而你发现一般萤幕录影软体没办法满足你进阶需求时，免费的「 ActivePresenter 」或许能帮上你的忙。1. 最快上手！录製包含点击特效的软体操作影片「 ActivePresenter 」功能有点複杂，介面也很有特色，或许刚刚安装后的你会有点摸不着头绪。没关係，在还没有搞清楚他的所有进阶功能前，我们还是可以把「 ActivePresenter 」当作一款简单的桌面萤幕录影软体来使用！只要点击［ New Capture ］，选择第一项「 Record Software Demo 」，也就是录製桌面软体操作影片即可。这时候会弹出「 ActivePresenter 」的录影工具列，我们可以决定要全萤幕或局部录影，可以选择高画质，可以录下系统的声音，或是外接麦克风的声音。更棒的是，录影过程中我们的每一次滑鼠或操作点击，都会在影片中自动加上特效！按下红色的录影按钮，就开始录製桌面操作影片。而录製中按下［ Ctrl ］+［ End ］，就可以结束录影。结束录影后，会进入「 ActivePresenter 」的影片编辑介面，你会看到「 ActivePresenter 」也是一个很完整的影片编辑器，我们可以在这裡剪接影片，去掉教学影片中不想要的段落，或是继续录製其他片段，最后把它们合併成完整教学影片。2. 进阶需求！聪明录影功能，自动帮每次操作建立分段影片教材开始慢慢熟悉「 ActivePresenter 」后，就让我们来看看他更强大的教学教材製作功能，这时候我们在［ Capture ］中选择［ Smart Capture ］。这个「聪明录製」模式有什麽特色呢？他会在录影过程中，根据我们每一次的操作点击，自动把教学影片分割成一段一段的短片。并且会在每一个操作动作的短片简报中，在正确操作位置自动加上教学说明图解。这样一来，是不是更轻鬆的产生一个可以自动重组、修改的教学影片专桉？我们可以像是製作简报那样，开始在这些分段的短片中快速编辑，产生有模有样的教学影片。3. 更全面的免费版本：无浮水印、无时间限制、个人非商业使用而本文提到的所有「 ActivePresenter 」录影与编辑功能，都是可以提供个人非商业性免费使用的！这对学校老师来说非常有帮助。而且「 ActivePresenter 」的免费版不会有浮水印，也没有影片製作的时间限制。4. 有动有静的影片简报编辑「 ActivePresenter 」既然是为了製作教学影片、数位教材而诞生的软体，那麽除了前面的录影与剪接外，他还具备了很多额外的注解互动特效。例如你真的可以在影片中插入其他简报、插入图片，快速在「 ActivePresenter 」类似简报软体的编辑画面中，製作有动（操作短片）有静（说明简报）的教学影片。5. 针对录製教学影片的丰富教学特效元素「 ActivePresenter 」也有丰富的教学特效素材可以使用，让我们放到简报或影片上！例如可以用聚光灯效果来聚焦影片中的某个重要操作动作，或是加上新的滑鼠游标说明轨迹等等，大家可以在製作教学影片的过程慢慢研究。6. 支援输出各种影片格式而最后「 ActivePresenter 」编辑而成的教学教材，可以转档输出成许多格式，免费版就支援输出成各种格式的影片档桉。「 ActivePresenter 」或许不是最简单易用的萤幕录影软体，但却是最强大的教学影片製作工具，想要製作数位教材的老师、训练人员、产品客服，都值得好好利用。（转载结束）-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>68<docid>     <title>[已结束]过完节，关爱一下牙齿吧~</title>     <link>https://xbeta.info/aiya.htm</link>     <content>【2016-02-26 星期五 更新】活动结束，已经给如下朋友发出邮件（按评论所留邮箱），请按要求于2月28日中午前提供收货地址。prcgolf 补习生 心如新入 Baldur Rockey 蠢蛋小丑鱼春节前收到一份有意思的礼物——牙膏+牙刷+杯子。有意思，是因为：（1）此前深刻感悟：日常实用之物为礼，每次都能睹物思人，感情效率极高。（2）曾对蜂产品比较了解，所以，见到propolis （蜂胶）自动脑补了很多信息。（3）2015回顾，我最满意的新硬件就是电动牙刷（爱妻所赠），远超小米手环。后面聊天才得知，赠礼的朋友在「爱牙」工作。「爱牙」是一款集牙齿健康问题免费在线咨询牙医、实时预约牙科看牙、牙友互动交流和口腔护理用品一站式购买等众多功能于一身的牙齿健康管理 APP。就此创业项目，我认为，在牙齿健康方面，国内还有极大增长空间。而此种消费，很适合订阅模式。而用户在知识、用品选择上，也非常需要可信的推荐精选、新鲜尝试。只是我并没有试用 app，感觉从网站切入，远比app 要轻便很多。更多礼物来了！朋友说，也愿意给善用佳软的其他朋友们，也提供一些福利。我认为是好事，并思考了「软件」博客，与牙齿这款「硬件」的关系。先想起老子。我的记忆中，关于软硬之辩，最早源于《道德经》，比如“柔弱胜刚强” “天下之至柔，驰骋天下之至坚”。甚至，也产生了最早的心灵鸡汤，传说孔子拜访老子时，老子曾经让他看自己的牙——差不多掉光了；再看舌头——完好无损；所以，柔弱胜刚强。今天的苏州金鸡湖畔，还有一尊如此场景的刚柔之道老子像，露仅有的一颗门牙，吐出长长的舌头，受到网友吐嘈。又想起鲁迅。年前在读许寿裳所著《鲁迅传》；春节期间到绍兴，参观了先生故居；回来后整理补充了故居族谱中未显示的部分（xbeta 整理的鲁迅族谱）。毛泽东曾称“鲁迅的骨头是最硬的”，这当然是指“没有丝毫的奴颜和媚骨”的精神品质，而非生理意义。因为骨头最硬的鲁迅先生，自己及父亲曾经饱受牙病困扰。1925年先生在《从胡须说到牙齿》中称，“我从小就是牙痛党之一”。1930年3月，因左联及自己被通缉严压，49岁的鲁迅焦愤上火、牙齿肿痛，最后拔去全部牙齿，改以假牙。鲁迅先生的名字，很容易令人联想起一句古话：一年树谷，十年树木，百年树人。而我又联想到近人的话：想一年领先，可每天多工作一小时；想十年领先，可每天多学习一小时；想一生领先，请每天多锻炼一小时。锻炼一小时太难，那就从更容易的爱牙 10 分钟做起吧。珍爱牙齿，用心留言，就有机会收到 爱牙 app 送出的惊喜（名额有限）。Who Will Write My Essay For Me Thank god for thousands of viruses incessantly caused him college paperweights Our name of truehearted reversive customers whobuy essaysof the highest timbre from us is getting yearner day by day. Buy Sociology Essays Online Secure Hua had demonstrated so rapidly that in the close an with-it, outside-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>69<docid>     <title>顶级免费看图软件IrfanView v4.41发布：提供平板UI</title>     <link>https://xbeta.info/irfanview-v441.htm</link>     <content>顶级免费看图软件 IrfanView 升级到 v4.41，加强了对平板电脑的支持。推荐平板用户尝试、反馈。现翻译其版本更新日志，以示支持。  [下载IrfanView 4.41]IrfanView 4.41（2015-11-29发布，xbeta译）64位版本：如果64位扫描驱动未安装，自动改用32位驱动。为平板电脑设计的新对话框/图形界面。新热键：shift+tab 用来启动/结束平板模式的对话框。新热键：ctrl+insert：复制新热键：Q 暂停/继续，用于定时翻页的幻灯播放新命令行参数：写入到csv文件: /info=infofile.csv安装插件的新参数：/silent 静默安装， /folder 指定目录。详见 FAQ。移除了&#8221;Amazon 1Button App&#8221;。修正其他bug（自动颜色校正；PNG压缩；64位路径）Version 4.41 ( &#8211; CURRENT VERSION &#8211; ) (Release date: 2015-11-29)64-bit version: Use 32-bit TWAIN drivers if 64-bit drivers not installedNew dialog/GUI on Windows tablets (&#8220;2 in 1&#8221;, Thanks to Arun Anbu from Intel)New hotkey: SHIFT + Tab: Start/End Tablet mode dialogNew hotkey: CTRL + Insert: Edit-&gt;CopyNew Slideshow hotkey: Q = Pause/Resume a timer slideshowNew option for /info command line: write CSV file: /info=infofile.csvAdded PlugIns-Installer options for: /silent and /folder (Check FAQs page)&#8220;Amazon 1Button App&#8221; offer removedSome fixes (Auto color correction, PNG compression, UNC-Paths in 64-bit)-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>70<docid>     <title>欢迎加入微信：一些准备工作</title>     <link>https://xbeta.info/wechat.htm</link>     <content>因工作繁忙，本博客更新日益减少。微博更新相对多一些：@善用佳软  http://weibo.com/xbeta微信公众号（扫码添加）偶尔会写一些内容。关注微信公众号之后，也可以按操作找朋友拉入微信群：xbeta微信试验群 ——如何使用，还没想好  。加入后保先持沉默即可，不用打招呼。反正我不太聊天。-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>71<docid>     <title>Ditto:首选的剪贴板增强软件（更新）</title>     <link>https://xbeta.info/ditto.htm</link>     <content>注重效率的用户都喜欢剪贴板增强软件[1]。早期，我推荐免费小巧的 ClipX 和 CLCL 。而最近几年，善用佳软明确推荐：Ditto 是最好的免费剪贴板增强软件，是提高效率的首选方案。目录：一、Ditto简介二、界面展示三、Ditto 亮点与不足1. 搜索2. 合并粘贴3. 纯文本粘贴4. 基于永久条目的命名粘贴（推荐）5. 网络分享6. 文件回收站7. 支持主题8. Ditto的不足之处四、Ditto使用指南：入门篇1. 下载与安装2. 使用中文语言3. 中文字体设定（重要）4. 开始使用：复制/粘贴五、Ditto使用指南：进阶篇（待补）六、常见问题（Ditto FAQ）附录总体内容亦可参见下图：一、Ditto简介　　[返回目录]Ditto 是一款开源、免费、强大的剪贴板增强工具。可以把复制过的所有内容保存起来（可以设定保存日期或条目总数），快捷地供后续调用。还可以合并粘贴，纯文本粘贴，支持分组、置顶、快速搜索、热键粘贴功能。并且，还可以通过网络共享剪贴板内容。主页：http://ditto-cp.sourceforge.net/教程：http://xbeta.info/ditto.htm最新语言包：http://jianguoyun.com/p/DUxYPEIQpvLnBRi1-A0 （比官方语言包翻译更完整，且优化了alt热键。2015-09）二、界面展示　　[返回目录]平常情况下，Ditto只是系统托盘中的图标。按下热键（默认 ctrl+`）后，会出现的粘贴主界面；再点击右键会弹出功能丰富的菜单。参见下图：通过其较为复杂的设置界面，你可以间接了解，Ditto的功能是如何丰富。参见flash（566&#215;498，60+KB）：三、Ditto 亮点与不足　　[返回目录]我最看重的优点有：搜索、合并、命名粘贴。1. 搜索Ditto中可以保留大量（取决于数据库容量）的历史记录。如果想搜索某条记录，只须在主界面的搜索框中输入文字，过滤后的结果会实时展现出来。说明：&#8211; 实时过滤的方式，比传统的“搜索词→回车→搜索结果列表”更为易用。&#8211; 支持中文。&#8211; 早期中文显示会旋转90°，新版已经修复。&#8211; 并非对每条记录的“全文”进行搜索，而是前N个字符，这是为了搜索效率。[2]2. 合并粘贴Ditto允许合并粘贴，就是把多条记录，一次性粘贴到目标窗口。在收集资料时，这点尤其有用。使用方法：弹出窗口中，按住Shift或Ctrl再点击鼠标左键。3. 纯文本粘贴　　[返回目录]如果复制了带格式文本（比如，来自网页、office文件），默认是带格式粘贴，但 Shift+Enter 表示纯文本粘贴。以前很多人还要通过记事本中转来消除格式，有了Ditto后，一切简单了。4. 快捷粘贴经常有一些内容需要重复使用。比如，电话号码、邮箱、公司地址…… 。这些信息可以通过输入法实现，也可以用剪贴板工具实现。早期Ditto 有一项非常强大的功能——命名粘贴（Named Paste）。很多用户（包括我）是此功能的粉丝，但开发者自己对此功能并不喜欢，在2010年12月23日发布的 v3.17.0.17 版本中，取消了该功能的热键。受到了很多用户的反对。尽管作者声称，也可以按照用户呼吁恢复此热键，但迄今为止，此功能仍然缺失。快速粘贴的基本原理是这样的：首先，某些复制的条目要设置为“不自动删除”，防止过期后自动清理。其次，要为它们提供快捷调用方式。和其他剪贴板工具一样，Ditto也支持设置全局热键、鼠标调用。但条目数量较多后，用类似“缩写输入”的方式更为有效。而新旧版的差异，在于调用“缩写输入”的方式变化。使用步骤举例：&#8211; 在任何程序中打出一段常用文本，比如“——善用佳软，免费软件义工”。&#8211; 选中，复制。&#8211; 进入 Ditto，选中此条目：右键→“属性” 或 直接按下 Alt+Enter。&#8211; 在如下界面中，设定此条目为“不自动删除”（因为是常用文本）；Quick Paste Text 为“x1”（就是设定缩写）；热键和组也十分有用，但此处暂且略过。确定，保存。&#8211; 要使用这一条目时，早期操作如下：进入任一程序（比如记事本）。按下热键win+v（取决于你的设定，上述演示flash中设定为win+v），会弹出一个窗口，“Ditto-给粘贴指定”，这时输入“x1”——不要引号，不用在意显示的大写。奇迹就发生了：“——善用佳软，免费软件义工”自动上屏。&#8211; 而目前的做法只能是：按下普通的热键（默认ctrl+`）显示Ditto主界面，在查询框键入 『\q x1』 ，然后回车。相比之前要多输入『tab \q 空格』。取消命名粘贴后，此功能近乎鸡肋。完全可以不使用 quick paste text，而通过修改 title 来实现。比如在常用的条目title中加一个 cy 表示常用，然后，在搜索时除一般关键词再增加 cy 即可。对于要求最高的快捷上屏条目，建议改用条目属性中的热键实现。比如上屏中指定了x键，则按下 Ditto 主热键后，再按 x 可实现文字上屏。这里的条目热键，既可以定义单键，也可以定义 ctrl-x, ctrl-shift-x 这样的组合键。需要说明的是，快速粘贴常用条目的功能，可以理解为输入法、常用文本输入工具。但Ditto比通常工具更为强大的是，它能输入的不仅是一个“词条”，而可以是“多行文本、带格式的文本、图片和文件”。&nbsp;5. 网络分享即一个组内，多人共享剪贴板。暂从略。6. 文件回收站这是一个变通应用。但是，软件的变通应用非常重要！如果你 ctrl+x 方式把一个文件删除了，过后又想恢复，就可通过Ditto的历史记录来实现。7. 支持主题　　[返回目录]我虽然自己喜欢简近乎陋的界面，并且主张软件是拿来用的，不是拿来欣赏的。但很多网友对美化、DIY有一些需求，而 Ditto 是支持更换主题（themes）的，可参见 http://ditto-cp.wiki.sourceforge.net/Current+Themes 。8. Ditto的不足之处顺序粘贴：和大多数免费剪贴板软件一样，Ditto也缺乏“顺序粘贴” 或 “强力粘贴”功能。有需求者，可参照 Hamsin Clipboard 顺序粘贴功能 进行试用。支持此功能的免费软件，目前只发现 Hamsin Clipboard 一款。”四、Ditto使用指南：入门篇　　[返回目录]1. 下载与安装好的下载习惯是到官方网站，这样可以得到最新、安全的软件。Ditto官网 首页上，有多个下载链接：区分了32位和64位版本，区分了便携版与安装版。有网友反映，便携版遇到过Ditto窗口背后的程序无法操作的问题（鸣谢 dexter，2015-09），而安装版则无此问题。2. 使用中文语言下载包中，已经包含了简体中文语言文件 &#8230;\Ditto\Language\Chinese.xml 。但该语言包过于陈旧，请使用本文开头提供的链接，由我补充翻译。某些内容仍为英文，原因是开发者未提供这些文字对应的翻译资源。为了精简，可删除多余的语言文件，只保留简体中文和English。3. 中文字体设定（最新版已经不需要）　　[返回目录]　　早期版本有如下bug，最新版本已经修复。问题一：主界面字体太小，汉字躺倒显示。解决方法：请修改字体（如下图）。第1：改用合适的字号。第2：字体选择“宋体”等，不要选择“@宋体”这样的（@ 表示横向字体）。第3：保存设定，重启Ditto。问题二：经过上述设置后，搜索框键入的字体是躺倒的，如下图。解决方法：方法1：和善用佳软一样，无视之。方法2：chen bin 网友提供修了bug改版。『这里是重新编译的ditto (unicode版本)，修复了中文字体躺倒的问题。https://files.getdropbox.com/u/858862/Ditto.exe (提示:从非官方网站下载的版本,例如我的版本,可能中毒,感染木马,风险自负)』方法3：暂时忍受，待官方修复版。热心的 chen bin 网友已经提交bug报告和修复，见 https://sourceforge.net/forum/forum.php?thread_id=3313122&amp;forum_id=287511 。4. 开始使用：复制/粘贴复制……复制……复制……到需要粘贴的程序中，按下热键（默认 Ctrl+`），在弹出的条目列表上，按下对应数字，或用鼠标点击所需条目，相应内容就粘贴好了。五、Ditto使用指南：进阶篇（待完善）Ditto v3.16.8.0 新增了如下功能：按下热键（默认ctrl+`）后，弹出ditto剪贴条目列表，此时不要放开ctrl键，可以：&#8211; 继续键入`移动光标，至合适条目放开，则此条目上屏。（适用于v3.16.8.0）&#8211; 键入数字，直接第N条上屏。（v3.16.8.0之前或许有效）六、常见问题（Ditto FAQ）　　[返回目录]问：在 cmd 或 gvim.exe 等程序中，Ditto无法粘贴？(Custom key strokes)答：这是因为你用了免安装版，缺少了某些配置。手工修改注册表，或用重新安装 Ditto 可以修复。原理是这样的：正常情况下，在 Ditto 中双击某一条目后，Ditto 会首先把此内容放在windows粘贴板，然后，向目标程序发送模拟按键 Ctrl+V。这样大家就清楚了，因为在 cmd 或 gvim.exe 中，Ctrl+v 并不是粘贴。有鉴于此，Ditto 提供了个性化按键的配置方法（参见 Ditto-clip\Help\DittoCustomKeys.htm）。就是在注册表的 [HKEY_CURRENT_USER\Software\Ditto] 项下，新建三组键值，分别个性化“复制”“剪切”“粘贴”功能。当然，最主要的是“粘贴”。安装版 Ditto 会默认添加对gvim.exe 和 cmd 的支持，参见下图：上图表示，在 cmd 中，ditto 发送“% {Delay100}ep”，即先按下“alt+空格”（弹出菜单），延时100毫秒，再按下e（编辑）p（粘贴）。这样，就在cmd中实现了粘贴。参见下图：同理，gvim.exe 中的粘贴采用了 &#8220;+gP 的按键。需要注意的是，模拟按键时，一定要避免处于中文输入法状态。另外，还要注意上述设定对应的是 gvim 的 normal 状态，而不是插入状态。问：粘贴图片或带格式文字时，输出的格式有错误？答：此问题是关于剪贴板格式的，Ditto有相关配置。参见下面的两个例子。例1：“貌似在第二次粘贴带有图片的内容时会直接变成纯文本！？” “找到了解决方法：在选项里有个支持的类型，选上里面的html 和其他rich text 等等，就可以了。”例2：“似乎还不够完美,我复制的动态gif图像通过Ditto粘贴出来变成静态的了,复制的透明背景的png粘贴出来也成了黑色背景色~不知该如何解决?” 【善用佳软：剪贴板相当于是一个动态多格式混合体，而保存和调用时，需要支持某种特定格式才可以。出于效率，默认情况下Ditto仅支持少数主要格式，所以，出现了上述情况。“选项”→“支持的类型”→“添加”相关类型即可。具体上述问题需要何种格式，不是很清楚（你也可以逐一尝试），但我添加全部格式后，至少透明背景动态gif是支持的。】“试过了,gif如果与文本混排可以通过HTML方式粘贴出来而不改变图像格式,但如果是单张gif图像就只能以CF_DIB类型粘贴为png图像。”问：删除条目太慢？答：最新的 Ditto v3.17.0.17 已经修复删除条目太慢的问题。（正文完）附录　　[返回目录]附录：注释[1]：更多同类软件参见 http://xbeta.info/clipx-clcl-ditto.htm[2]: 过滤框的快速搜索，严格说来，并不是搜索“剪贴板条目”本身，而是搜索此条目的“描述（Description）”。Ditto 选项中，General 下 有一条 Amount of text to save for description ，就是设定把剪贴板内容的前多少个字符当作描述。默认值是 500 。在 官方帮助 中也提到：Every Clip also has a Description that is extracted from the beginning of the Clip’s CF_TEXT Format. The Description is used to represent the Clip in Ditto’s list and is searchable using the Filter Box。明白这一点，对Ditto的应用有如下几点指导意义：　　① 搜索（称过滤更准确）并非全文。所以，某些时候认为有相应条目但搜不到，请考虑一下，是否关键字在剪贴内容的前N个字符以外。　　② 描述可以手工修改，可以与剪贴内容不同。举例来说，“唵嘛呢叭咪吽” “897932384626”“10311019491001123”“http://www.ghisler.com/”这样的剪贴内容不容易通过搜索调用，但如果把描述改为“六字大明咒”“圆周率N位”“身份证号”“tc website”，就容易搜索得多了。变通使用，也可提高安全性。附录：文章更新历史2015-09-21：重写很多文字，更易读；更新了新版本的特性；推荐安装版（感谢dexter）。2011-01-13：新版弱化了命名粘贴功能，本文给出新的推荐做法；补充新版修复删除条目速度过慢的问题。感谢sandox。2009-09-26：增加注释 [2]。2009-07-15：增加目录。2009-06-29：增加 FAQ 之格式；修改“命名粘贴”；补充缺点。2009-06-28：重写 FAQ 之 Custom key strokes 部分。2009-06-25：增加了入门篇和FAQ部分内容。2009-06-24：初稿，未完稿。-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>72<docid>     <title>剪贴板增强软件综述:CLCL,ClipX,Ditto等（更新CLCL v2.0）</title>     <link>https://xbeta.info/clipx-clcl-ditto.htm</link>     <content>剪贴板是一个伟大的创新。它让跨程序、跨文档传递数据变得前所未有的轻松，让 Ctrl+C、Ctrl+V （或Ctrl+Insert、Shift+Insert）成为最常用的快捷键。但是，windows 自身的剪贴板管理功能太弱（只能容纳一条记录），远不足以发挥剪贴板的真正功能。于是，世界各地的程序员开发了上百种增强工具，来“升级”剪贴板。如何从中选择最合适的一款呢？如果你愿意支付 35 usd 的注册费，并且愿意承受庞大的体积，不会因为众多功能而困惑，你可以选择最经典（但现在过于臃肿）的 ClipMate。但是，我并不推荐一般用户这样做。因为这个世界上还有很多优秀免费软件可供选择。其中最优秀的 3 款，都体积小巧，运行快速，使用方便——这就是善用佳软推荐的 Ditto、CLCL、ClipX。我自己长期使用的，是 Ditto。一、概述本部分待整理各款软件的差异：普遍性的差异：不同的剪贴板增强软件，除了体积大小、占用资源多少方面的差距剪贴板功能方面：强化思路方面：数量、格式（图/文/文件）、临时vs管理，内存共享，存储，合并，导出强化思路：输入：历史，多个（软件，vim）。输出：转格式、合并、自动化这类软件的基本功能：支持多个剪贴板，数量可以自己设定。我常用9个（好处是可以按数字键调用）。不仅支持文本，也支持图片。没有其他工具时，可以兼职用作图片收集器。(注:复制图象，和复制一个图像文件是不一样的)热键操作方便。多次Ctrl+C后，到要粘贴的地方，CLCL按Alt+C再按数字或用鼠标选中适当的条目即可。ClipX的呼出热键可自定义。关机后剪贴内容不消失。支持固定内容（模板）作为剪贴板条目，比如常用的信息（地址、签名档、电话、Email等）顺序粘贴真方便。比如要填一个表格，有8个字段。用CLCL的方式是：先清空历史，把8条内容依次复制。到第一个空处，按Alt+C 8，就把第一条（因为最先复制，所以被后面的7条新内容挤到了第8位）粘贴了；再到第二个空处，仍按Alt+C 8（因为原第8位的被应用后，排到了第一位，其他顺延），第2条就上屏了。这样，实际上实现了依次粘贴的功能。二、CLCL、ClipX、Ditto：三强详介CLCL、ClipX、Ditto是三款最实用的软件。追求资源节约、易用的用户，可以选择 CLCL 和 ClipX；追求功能多，存储数据量大的用户，则可选择 Ditto。详细介绍如下。(1) CLCL：Alt+C呼出真方便CLCL 是一款强大、小巧、绿色、免费、开源、日本出品的免费剪贴板增强工具。官网（日文、英文）：http://www.nakka.com/soft/clcl/index_eng.html最新版本：v2.0，2015-09-05汉化版（旧版）：http://www.hanzify.org/index.php?Go=Show::List&amp;ID=7712支持丰富的剪贴板格式：纯文本、Unicode文本、RTF富文本、位图……热键 &#8220;Alt+C&#8221; 弹出剪贴列表菜单，非常方便。然后就可以用鼠标选择条目，或者按数字键选择条目。自定义“模板”：模板的作用，就是把常用内容保存为固定条目，可以是纯文本（比如地址、电话）、图片（比如图像文件）。模板可以新建，也可以把已经采集到剪贴板的内容，直接设定为模板模板可以按文件夹进行组织，可以设定名称（比如“我的手机号”）模板支持热键调用：比如，F8，alt+F8，win+shift+u ……能够设置忽略的窗口，比如不想把记事本的复制内容保存到CLCL中，可如下设定： 可使用插件来扩展功能。官方提供了几款扩展，带有若干功能，但感觉比较鸡肋。下图展示了对文字添加&lt;tag&gt;标签，及变为小写的功能。  能够为每个窗口设置粘贴热键（没感觉有太大意义）能够设置格式过滤。丰富的选项：(2) ClipX：占用内存更小汉化下载｜原版下载｜主页｜CLCL如此好，为什么还推荐ClipX？是因为ClipX不比CLCL差（除了在Maxthon和其他一些IE外挂中不能用）CLCL是日本产软件，一些用户会介意ClipX占用内存更少（几百K。CLCL近2M）ClipX支持Unicode——对一些用户，这一点很重要。（如下图所示。如果显示其他字符集不正确，很可能是显示所用的字体不支持Unicode，换一种应该就OK了）ClipX可以通过菜单清除历史记录，比CLCL更方便。下图：点击系统托盘区的 Clipx ，所显示的菜单。来自官网。下图：在应用程序中使用 ClipX 的情况。来自官网。下图：ClipX 的设置界面。善用佳软+ClipX汉化版+GIMP 制作。(3) 于两者间选择这些人用ClipX：需Unicode的对于日系软件有抵触心理的（其实不必）喜欢一个exe，不要dll的（CLCL运行并不要dll，但设置时需要）喜欢内存占用更少的这些人用CLCL：经常向Maxthon中贴入内容的（ClipX对IE外壳的部分浏览器扩展支持有问题）另外，有意思的是，CLCL要插件才支持Unicode，ClipX直接支持；而CLCL直接支持固定条目（模板），但ClipX则要插件才能做到这点。再一点，我认为 CLCL 的 Alt+C 按键很方便，但在 ClipX 中无法定义此键（呵呵，很有意思。因为在自定义界面上，按Alt+C，就响应了&amp;Cancel，即取消设置）。好软件并非没有缺点，比如：CLCL如果能直接在菜单上清除某些条目、把所有历史合并（代替文本收集器之类的小工具）就更好用了。(4) 最推荐：开源的 Ditto【说明】关于Ditto，请详见 http://xbeta.info/ditto.htm，下文不再更新：上述两款软件均为免费，而 Ditto 则属于开源软件，即懂编程的朋友可以修改它的源代码，让它更符合自己的需求。相对于前2款，它的特点是可以存放更多剪贴板记录，并通过滚动条来翻查，或者输入部分内容进行匹配。另外，它还可以在局域网内共享剪贴板内容。&#8211; 到主页下载，这是便携版 (zip file，1+MB)&#8211; 如果喜欢不同的视觉效果，可下载主题&#8211; 如果需要其他语言文件（xml格式）（下载包已含简体中文），可在主页下载，存放于Language目录。为了精简，可删除多余的语言文件，只保留简体中文和English。&#8211; 这样设置为中文。&#8211; 默认情况下，字体太小，且中文躺倒显示，请修改字体（如下图），然后重启 Ditto。&#8211; 但是，搜索框中的中文字体无法设定（仍保持躺倒方向），暂时忍受一下吧。从使用来看，有3种使用方式：&#8211; 极度频繁使用时，可以设为窗口总处于顶层&#8211; 少数条目频繁使用时，可设定启用 ctrl+0~ctrl+9 快捷键&#8211; 通常情况下，通过热键 Ctrl+` 调用3款推荐软件的内存占用情况：四、以下这些软件也不错1. Hamsin Clipboard v3.03免费的剪贴板增强软件Hamsin Clipboard v3.03 ，除了体积非常小巧（100KB，1exe）外，最大优点是支持顺序粘贴，缺点是历史条目固定为10条。顺序粘贴（Incremental paste）使用方法：尽管作者自称软件非常易用，但此功能的设计、文字说明，对用户都不友好，故做如下说明。关键点是“先激活Incremental paste，再复制” 。如果先复制，再激活，是无效的。1、清空：考虑到只能存储10条剪贴历史，请先清空历史（右键菜单&#8211;special&#8211;clear history，默认热键win+del)2、设定：激活 Incremental paste 选项。3、复制：选中内容1，ctrl+c；选中内容2，ctrl+c……。4、粘贴：到目标程序中，ctrl+v、ctrl+v……由此可知，它的顺序粘贴（Incremental paste）相当于共享软件 ClipMate 的强力粘贴（power paste）的一半功能。所谓强力粘贴，或顺序粘贴，是指先多次ctrl+c，然后只管按下ctrl+v，先后复制的内容会依次粘贴过来。所谓一半功能，是指 Hamsin Clipboard 并不能对已经复制过的内容，进行顺序粘贴。而只能是先进入顺序粘贴模式，再多次复制，再多次ctrl+v，才会顺序粘贴。实际上，称为“临时顺序复制/粘贴”更准确。从原理上，可以这样理解：Hamsin 的顺序粘贴，并不是对原有功能的增强（增强理解为乘法 [1]），而是增加的一个新功能（理解为加法）。进入此模式后，它会重新做一个序列记录，当你按下ctrl+v之后，自动加载下一条记录。并且，只能使用一次，如果要再使用，必须再依次ctrl+c。这与ClipMate可以对任意选中的记录，进行正/逆序的强力粘贴是有较大差距的。但无论如何，Hamsin Clipboard 是唯一具备顺序粘贴功能的免费软件。【善用佳软/2009-12-08补充：Clipboard Magic 也支持。】Incremental paste：官方相关说明　　When &#8216;Incremental paste&#8217; option is on, several clips can be copied to the clipboard one after another and pasted in the same order (Actually, in this mode each clip is placed into the history only, whereas each pasting automatically places the next clip onto the clipboard for the next pasting operation).另外，它从3.0版开始写注册表，以前配置记录于ini文件。除了顺序粘贴外，还支持 Win+数字键 直接粘贴内容、合并剪贴板、常用条目。支持很多格式，但历史条目仅包含10条，加多不行，减少也不行；只能以有限长度的文字显示已记录内容（不如CLCL那样可以在图标上显示图片格式内容的缩略图、可以在鼠标移到菜单的条目上时可以用工具提示显示全部内容）等。2. ArsClip：多热键、分场景、支持表格模式（2010-07-08更新）软件主页：http://www.joejoesoft.com/vcms/120/最新版本： ArsClip v3.1.4，2010-07-06性质：免费、开源（下载包含源代码）最佳免费剪贴板增强工具是这样评价 ArsClip 的：在软件功能与简洁方面实现了较好的平衡。它和Clipomatic、ClipX一样小巧快速，又能记录更长的剪贴历史。它的聪明之处在于，记录全部历史， 但只显示一小部分。要显示另外一部分，需要再点一下按钮或菜单。它的历史记录也是可以搜索的。ArsClip 也支持永久条目，并且通过分组（比如论坛发文、邮件地址、签名档等）扩展了功能，在弹出菜单上分级显示。ArsClip 还提供了一键编辑内容的功能。它还有一大优点就是，ArsClip无须安装，可以运行在便携介质上，这样剪贴内容就可以永随身边。”默认使用方法：运行ArsClip后，照旧应用 Ctrl+X/C/V，按下 Ctrl+Shift+Z 会弹出菜单。优点（*表示优于Ditto）：永久条目支持快捷键，比如按下 ctrl+alt+x，一长串文字就可上屏。* 有表格粘贴模式。* 条目列表中，有来源程序的图标，便于识别。支持图片。支持Unicode。* 条目操作有些快捷键：比如按住F1点击仅放发送到剪贴板。* 可以针对不同程序，设定不同粘贴方式（如下图）。* 永久条目组，可以针对不同程序。比如，让Email组仅在邮件程序中启用。有搜索功能，但需要进入搜索界面，不如Ditto唤出后直接键入搜索方便；搜中文崩溃。缺点（与Ditto相比）：搜索不便；无合并粘贴功能；无命名粘贴。ArsClip更多介绍： 《ArsClip：超強圖文剪貼簿》 by Dr.J.Clipomatichttp://www.mlin.net/Clipomatic.shtml 很小啊很小，100KB级clip magic好象是freeware，小巧，安装文件 1.5MB。功能好象很强大 http://www.clipmagic.com/more.html 下载 http://www.clipmagic.com/software/cmsetup.exe其他 Kana Clip（对剪贴内容进行加工）、Clipguru、Yankee Clipper 3、Freeclip也都是不错的软件。四、相关软件除了纯正的剪贴板增强软件，还有一些软件也具备相关功能。比如资料管理类软件，甚至是某些编辑器，都具有剪贴板监视功能。AutoHotkey 等脚本工具，也能实现类似功能。还有一些小工具，把选中文本发送到 notepad 等。（此部分未完成）（正文完）注释[1]: 乘法与加法是一个重大区别。乘法是融会贯通，一通百通。而加法只是简单堆积。乘法的例子：Total Commander、Vim、Google 增加一项小功能后，这个小功能可以与以前的N个基本功能结合起来，效果提升非常明显。文章更新历史2015-09-07：CLCL从Ver 1.1.2更新到 Ver 2.0.0，重写本部分。2012-02-14：说明Hamsin Clipboard 的顺序粘贴功能使用方法。2010-07-08：重写ArsClip的介绍。2009-08-21：重写 Hamsin Clipboard 的顺序粘贴功能。2009-06-25：更新小标题及多处文字，突出 Hamsin Clipboard 的顺序粘贴功能。2008-06-23：增加Ditto部分。2005-09-09：初稿。-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>73<docid>     <title>RightNote:让Evernote支持树状目录的经典桌面笔记软件</title>     <link>https://xbeta.info/rightnote.htm</link>     <content>2015-8-20更新：点击查看flash演示，内容：基本界面；设置项；与Evernote集成。【善用佳软注】在我看来，Tranglos KeyNote 是笔记软件类的经典与鼻祖。而它的最佳继承者则是 RightNote。今天发现，RightNote 已经可与Evernote集成同步，让Evernote支持多层级结构。我非常赞赏这一特性，故志愿推广RightNote。以下内容摘自RightNote官网，感谢 Tingxun Shi、guestwind、封畅的翻译。RightNote：更佳组织信息，让Evernote也支持树状笔记RightNote 能帮助你免于信息过载。它可以把海量的零散信息集中保存，并通过全局搜索，实时找到所需信息！使用RightNote，你就能掌控信息碎片：知道如何存储，随时找到所需。它拥有丰富的功能。软件类型：免费版；标准版（$29.95）；专业版（$59.95）最新版本：V3.31（2015-08-06）下载链接：http://bauerapps.com/downloads/二、RightNote特性支持更多层级每个 RightNote 笔记本，可包含无数个页面(page)；每个页面，可建立自己的树状笔记结构。用户在组织海量信息方面，具有极高的灵活性，和强大的功能。处理不同类型的信息RightNode的笔记可以有多种类型——文字处理、电子表格以及源代码类型。这允许你在单个笔记本中无缝囊括不同类型的信息。Evernote同步——在云端存储笔记可以把选中的笔记存储在Evernote并与之同步，这样你就可以从任何浏览器、移动设备或者操作系统上访问它们（仅限专业版）。快速查找！内置的全文搜索引擎允许你超快找到你想要的东西。没有复杂的搜索对话框——输入文字时，搜索结果即刻高亮！保证安全RightNote含有一种灵活的保护体系结构，允许你在任何笔记、树或者笔记本中，使用工业标准的128位加密安全地保护信息。强大的web导入RightNote的高级HTML粘贴功能，可准确导入网页中的图片、样式，使得导入的内容与原始网页高度一致。高效各种键盘快捷键、预定义的热键、预定义的文字和背景颜色，以及近期/经常使用的笔记列表，可更容易、更有效地处理常见的、重复性的任务。让数据自由强力的导入和导出选项，允许你从各种数据源导入数据；也可以把数据导出成常见的文件格式，如.txt, .rtf, .rvf, .html和.xls等。可定制的界面RightNote含有很多应用选项，允许你根据个人喜好定制界面。程序便携你可以随身携带你的重要信息。在任何电脑上插入优盘，并在其上运行程序即可，不会影响宿主电脑的设置。免费版也足够强大免费版包含大量与商业版共有的特性，可用在个人用途，亦可用在商业用途。三、更高效地管理信息把所有笔记存放在唯一的地方。当你遇到新的信息时，可立刻想到该放在何处。可以在这里存储各种类型的信息。RightNote可以处理文本、html、财务数据、源代码、一般列表、待办事项列表、联系人列表等。知道在何处找到你的信息。如果你把信息放在一处，你自然知道该去哪儿找！高效的工作空间、工作流。让RightNode最小化在系统托盘图标中：需要时以全局热键呼出，不再使用时用esc将其最小化。四、独特功能文件夹树：使用新的“文件夹树”功能，轻松导航，管理含有大量节点的树。自动添加标签：对于一个文件夹笔记，其所有子笔记自动获得父笔记的标注。这允许你把笔记组织和添加标签同时进行。Evernote同步：Evernote同步功能允许你在任意移动设备、桌面或浏览器上访问选定的笔记（通过Evernote服务）五、RightNote 注册与购买购买后，我们会给你的邮箱发一封邮件，包括一个注册码（序列号），通过这个来解锁试用版，并允许你继续使用程序。注册用户在接下来12个月内，或下一个大的版本号升级之前（可能比12个月还长！）可以免费升级。通过MYCOMMERCE进行付款，它可以提供安全的交易处理功能。六、各版本的功能比较1、免费、标准、专业版的共有功能&#8211; 支持的笔记类型* 富文本笔记：支持基本的文本格式能力（如写字板）* 源代码笔记：可以对大多数常见编程语言进行语法高亮* 纯文本笔记* 链接笔记类型：快速、容易的访问你硬盘上的相关文件&#8211; 富文本笔记，包括一个预先定义的格式工具，以及文本高亮工具&#8211; 即刻搜索：输入搜索内容，即可看到搜索结果&#8211; 高亮的搜索结果：方便看到该看哪条搜索结果&#8211; 新：文件夹笔记和文件夹树可以轻易在大的树中导航&#8211; 新：自动添加标签：文件夹笔记和子笔记自动从文件夹标注中获取标签&#8211; 笔记保护：使用工业标准的AES加密方法，加密选定笔记的内容&#8211; 包含海量图标（用于树节点和标签），您也可以添加自己的图标&#8211; 强大的标签系统，允许你通过不同方式对笔记节能型分类&#8211; 可以给标签添加图标，这样树中的笔记可以高亮，分外突出&#8211; 从常见格式的文件中导入笔记，可将笔记导出成常见格式的文件&#8211; “最爱”工具条，可以快速访问常用文件&#8211; 可以使用页面转换和浮动树工具，轻松在文件之间传输页面和笔记&#8211; 截屏工具，可以把屏幕保存到你的笔记中&#8211; 使用全局剪切热键，从其它应用中把文本剪切进RightNote&#8211; 同时提供便携版（USB）和安装版&#8211; 个人、商业均可使用2、标准版、专业版增加的功能&#8211; 富格式笔记类型：支持高级的文本编辑功能，包括多图像支持、高级表格支持、高级段落布局和格式调节、预定以文本和段落样式工具&#8211; 拼写检查（对富格式笔记）&#8211; 电子表格笔记类型：支持大多数excel函数、可以对列进行排序、填充命令、固定头部的行、合并/拆分单元格、单元格备注、单元格链接和图像&#8211; 从MS Excel文件导入及导出&#8211; 创建到其它笔记的链接（富格式笔记和电子表格笔记）&#8211; 附件笔记类型 &#8211; 在一个RightNote数据库（文件）中存储文件的任何类型&#8211; 高级剪切功能：对网页内容进行剪切可以保留格式和图像&#8211; 新：分枝提升功能：把树的某个分枝提升，仅显示该部分，有助于注意力集中。 3、RightNote 专业版增值功能&#8211; 索引附件：txt, rtf, htm, html, pdf, doc, docx, csv, xls 和 xlsx 。&#8211; 多笔记本搜索：同时搜索你的所有笔记本。&#8211; 保存网页为网页类型的笔记。&#8211; 并排视图：便于在不同页面（同一笔记本，或不同笔记本）间移动笔记。&#8211; 新:Evernote 同步：全面支持所有的 Evernote 笔记元素，包括图片、checkboxes、锁定、附件。可通过任意移动设备、桌面 (Mac/Windows) 、浏览器访问同步的笔记。-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>74<docid>     <title>极点五笔完整更新历史: v1.0-v7.2内测版（2012-01-16）</title>     <link>https://xbeta.info/freewb-history.htm</link>     <content>极点五笔是善用佳软使用超过10年的输入法。出于感激和对优秀软件的宣传，很希望为它做点事情。考虑到极点五笔没有官方的完整版本更新记录，特此整理如下，供极点爱好者参考。相关链接：官网｜@心系极点｜非官方博客｜旧版下载｜五笔学习经验｜杜志民专访-1｜专访-2官方介绍：极点五笔，全称为“极点中文汉字输入平台”，作者杜志民。 极点五笔输入法是一款免费的多功能五笔、拼音输入软件平台，同时完美支持一笔、二笔等各种以 a-z 为编码的“型码”、“音型码”。我的评价：在善用佳软看来，极点五笔是后起之秀（相对于早期的五笔而言），却已成经典；它始终免费纯净，并且促使（迫使）另外几款五笔输入法也走向免费；它的作者无暇宣传，却有一大批粉丝积极（而不偏激）地推广；它功能丰富，却从来不让人感觉多余；它自定义能力极强，却依然稳定、快速、小巧；它简洁质朴，但拥有众多粉丝制作的各种词库、皮肤。并且，杜志民老师的人品也深为广大用户尊敬。“已所不欲，勿施于人；已所欲，勿强施于人”——很认同杜志民老师的这句话。能在学习五笔后不久接触到极点，我也感到很幸运。鸣谢：以下信息源自极点官网、五笔爱好者论坛、维基百科，由xbeta整理。感谢dinosaurhxe、today等网友补充指正。目前正式发布的最高版本为7.15十周年纪念版。论坛上流出的最高内测版为7.2内测版（2012-01-16）。目前，杜志民先生忙于工作、家庭，继续更新极点五笔的可能性很小。一、简明版：极点五笔版本历史2012-01-16，极点五笔7.2内测版，这是极点五笔的最高版本，但未正式发布，是内测网友在论坛上传的2011-12-30，极点五笔7.15十周年纪念版发布，这是正式发布的最后版本2010-08-09，极点五笔7.13版发布 （极点五笔官网信息似乎丢失过，恢复后停留在此版本）2010-04-28，极点五笔7.12版发布2009-08-07，极点五笔7.0 预览版2009-??-??，极点五笔6.6正在准备中……2009-02-09，极点五笔6.5版2008-10-31，极点五笔6.4正式版2008-09-20，极点五笔6.3版（标准版及便携版）发布2008-06-12，极点五笔汶川地震纪念版2007-11-11，极点6.1正式版（Unicode版）2006-11-07，极点五笔Unicode第二测试版；2006-10-23，极点五笔支持中日韩三国大字符集的Unicode测试版；2006-03-18，极点五笔5.1版；2005-12-25，极点五笔5.0正式版；2005-10-01，极点五笔4.5SE（简体版）发布；2005-08-23，极点五笔4.5《电脑商情报》专版；2004-08-26，极点五笔4.0；2003-12-31，极点五笔3.5；2003-12-24，极点五笔“便携”版；2003-06-22，极点五笔3.2；2003-03-31，极点五笔3.1；2003-02-01，五笔拼音输入法（极点前身）3.1；2003-01-06，五笔拼音输入法3.01；2002-12-14，五笔拼音输入法3.0beta2；2002-11-25，五笔拼音输入法2.5；2002-11-19，五笔拼音输入法2.4；2002-11-15，五笔拼音2.3；2002-11-03，五笔拼音2.0a；2002-10-30，五笔拼音2.0beta6；2002-09-16，五笔拼音1.8；2002-08月底或9月初，五笔拼音1.7试用版在输入法论坛提供下载；2001-09-10，五笔拼音1.0测试版供内部使用、测试。二、详尽版：极点五笔更新历史极点五笔7.2内测版（2012-01-16），通过论坛流出的，这是极点五笔的最高版本，但未正式发布下载链接: http://pan.baidu.com/s/1qWsXWQg 密码: zuj4使用方法：将下载的升级包解压到极点安装目录，覆盖同名文件。在极点没有使用的情况下运行registry.exe进行升级即可。7.2内测版更新记录2012年1月3日1、修正64位系统下IE9中不能使用智能标点输入——和……问题。2、修正删除一个逗号或句号后，接着输入逗号或句号删除前一个字符的问题。3、修正联想提示框词组提示框不消失的问题。2012年01月4日1、修正标点配对中单字输入，系统提示词组后，回车换行的问题。2012年1月9日1、修正切换词库时不更新快捷码表问题。2012年1月121、数字,数字,输入——的问题(“3，3，”输出的是“3，——”)3,3,3,3,3,3, 3 ，3,3,2、Excel2010执行VBA后退出非法3、状态栏自动缩展时显示多余图标的问题4、微调候选窗的显示处理（刷新方式）2012年1月15日1、修正：切换到自动缩展皮肤时，皮肤处于扩展状态的问题。2、完善：新造词后将系统词调到首位，再编辑用户词库后又跑到后面的问题。2012年01月16日1、恢复：查询及造词时自动判断是否为剪切板造词2、完善：启用智能标点时，判断用户是否进行了鼠标定位操作，防止误输出2011-12-30，极点五笔7.15十周年纪念版本版主要是增强程序稳定性。1.修正：使用极点造成应用软件异常退出的问题2.修正：切换或编辑词库失效的问题3.修正：在PE系统下无法注册的问题4.修正：桌面上显示多个极点状态栏的问题5.添加：候选窗鼠标划词查询功能6.添加：智能标点功能附：2011年对极点五笔所做的详细更新记录 [via]2011年12月10日修正：备份文件日期有误引起状态栏右键非法的问题修正：自定义[元]后，数字转换不正确的问题2011年12月5日完善：Excel及WPS 电子表格标点配对功能修正：IE页面内无法用键盘切换全半角/中英文的问题完善：状态栏的显示与定位2011年11月30日1、修正：用鼠标打开极点后快捷键不能立即使用的问题2、修正：在线调序未保存的问题3、修正：www.转英文后不能用鼠标切回中文4、修正：切换词库后状态栏未及时刷新5、修正：多状态栏的问题6、添加：日期0自定义功能[system]段零=[0]7、完善：系统设置快捷键设置以中文键名显示2011年11月20日1、修正：极点设为默认输入法有时切换词库失败的问题2011年11月8日1、修正：重写词库的加载与卸载模块2、添加：用复制内容造词快捷键：ctrl+alt+=3、修正：精简状态栏菜单与系统设置项2011年11月3日1、修正：极点作为默认输入法无法切换词库的问题2、完善：状态栏的定位与显示2011年10月28日1、修正：恢复词库与配置时，新配置未起作用的问题2、修正：恢复极点原有配置文件管理方式3、完善：鼠标查询提示窗4、添加：剪切板查询快捷键：ctrl+alt+/2011年10月21日1、二笔中参与编码的标点无法顶字上屏2、切换皮肤时，被关闭的极点再打开时皮肤未换3、尝试解决某些软件中复制无响应2011年10月6日1、wps2012下候选窗越界问题2、编码中有万能键时可输入第5码问题3、鼠标查询结果显示4、用户词组不受“全码出词”选项限制5、;abc/会上屏的问题6、词库加载的一个逻辑错2011年9月23日1、完善：简入繁出状态下鼠标取词查询2、修正：简入繁出快捷键失效的问题3、修正：多个程序使用极点，其中一个关掉极点后其他程序不出中文的问题2011年9月22日1、完善：词库切换流程2、修正：用安装包安装时freeime.bin等文件打开错的问题3、完善：微调状态栏菜单，添加了快捷命令帮助4、完善：快捷命令的处理流程2011年9月14日1、完善：状态栏的显示（通过skin.ini中[状态栏2]项来自定义此状态栏哪些按钮不再显示）2、添加：skin.ini中添加“显示提示信息&#8221;决定是否显示状态栏鼠标提示2011年8月11日1、修正：切换状态栏时未自动定位的问题2、添加：快捷命令“pp.”进入专家设置模式2011年8月10日1、完善：恢复了状态栏自动缩展功能2、添加：快捷命令“vv.”，用于显示极点版本号3、完善：大写状态下标点强制为半角4、完善：完善状态栏切换功能5、完善：微调状态栏和候选窗提示信息的显示2011年7月28日1、完善：恢复了全角英文字母输出功能2、完善：隐藏修改窗选项仅在当前软件中起作用的问题3、完善：切换到没有图片皮肤，程序非法的问题4、完善：自定义鼠标查询字体大小[system]::sztipToolC 及sztipToolS2011年7月9日1、修正：鼠标在状态栏上乱跳的问题2、修正：临时生僻字状态，校对模式误上屏的问题2011年7月3日1、修正：编码n一直翻页后出错的问题2、添加：自定义大写金额中“元”（专家设置模式中，在[system]下加一行：RMB=[圆]）3、添加：标点配对切换键（可到图形设置模式中设置，默认为ctrl+del）2011年6月28日1、修正：状态栏位于屏幕4角无法显示提示的问题2、修正：某些情况下空格选项亦上屏校对项的问题2011年6月27日1、完善：鼠标悬停提示遮挡候选窗时，鼠标移出悬停窗提示自动消失2、修正：上版状态栏无法拖动的问题2011年6月23日1、完善：鼠标查询汉语拼音显示不清的问题2011年6月20日1、完善：状态栏提示信息及候选窗鼠标查询显示2、完善：将版本号微调为7.152011年6月15日1、完善：美化鼠标查询结果窗2、添加：鼠标查询拓展插件（默认查询“极点汉语词典.db”，如果要查其他字典，请到“专家设置模式”中[system]段下添加一行：TiptoolDB=字典名称）2011年6月13日1、修正：传统候选窗不显示边框的问题2、修正：某些软件中候选窗被遮挡的问题3、修正：方形候选窗下鼠标查询功能在尾字上不执行的问题2011年6月3日1、完善：状态栏自动定位时，切换状态栏模式时定位异常的问题2、添加：候选窗顶层显示（默认打开，如若关闭到专家设置模式中添加：CandShowOnTop=0）2011年5月25日1、完善：隐藏状态栏后再显示时跑到屏幕左上角问题2、优化：检索速度2011年5月19日1、完善：所有类型的候选窗均支持鼠标查询拼音与编码2、完善：所有类型的候选窗均支持鼠标选词3、完善：registry.exe 加入/ns参数，在PE类系统上加快执行速度2011年5月16日1、完善：极点有时自动转到英文状态的问题2、完善：状态栏提示信息的显隐方式3、完善：恢复状态栏自动定位选项2011年5月6日1、使用极点时应用软件异常退出的问题2、完善系统设置，在设置界面上提供实时帮助信息3、完善：PE系统下registry.exe执行失败的问题2011年4月18日1、长时间使用极点出错2、自定义软键盘“/”键不能输出的问题2011年4月3日1、Ctrl+-仅能删第一候选项的问题2、Shift作中英文切换键时，Shift+！打开软键盘的问题2011年3月28日1、打开极点置为英文不起作用2、shift、ctrl可不分左右设为中、英文切换键（到专家设置模式中将CN_EN项设为shift或ctrl即可）3、自动组词出错时给出提示2010-04-28：极点五笔7.12版本版主要增强程序稳定性与兼容性，优化速度，修正已知问题，并完善使用说明与设置界面的实时帮助。建议所有极点用户更新到此版。（xbeta注：无论从实时帮助、帮助文档、设置向导这些用户细节，还是对云端、64位等新情况的迎对，还是标点符号自动匹配功能，都能看出极点五笔永续的进步。）具体修正内容如下：2010年4月17日1、添加：系统设置界面添加实时帮助了2010年4月16日1、添加：图形设置界面：标点自动配对输出选项2、完善：有时状态栏显示&#8221;大写字母&#8221;后,再按capslock,capslock熄灭后,状态栏仍为&#8221;大写字母&#8221;2010年4月15日1、添加：标点符号自动配对功能 [system]::SmartSymbol=1。标点配对输出后，第一个回车相当于右方向键2010年4月13日1、修正：某些系统下候选窗无法隐藏并显示于桌面左上角的问题2、修正：组字过程中隐藏状态栏，之后候选窗不显示的问题2010年4月12日1、修正：自定义标点后symbol.txt文件被删除的bug2、完善：_固定输出“——”，如果定义到其他键上，输出“—”3、添加：状态栏无法自动定位时，可选状态栏定位位置4、完善：状态栏无故跑到左上角的问题5、添加：skin.ini::[状态栏]添加“边距x”和“边距y”两个选项——状态栏不能自动定位时距屏幕的边距2010年4月11日1、修正：某些系统+特定皮肤备份非法的问题2010年4月9日1、完善：状态栏与候选窗的拖动显示2、修正：切换皮肤后，如果原候选窗不跟随，则新候选窗首次不能正常定位3、修正：二笔下编码;不起作用的问题4、修正：启用背景图、不用边框时，左上角出黑线的问题5、修正：云端中启用极点，windows中极点不可用的问题2010年4月8日1、完善：候选窗的拖动处理及跟随2、修正：极点设为默认输入法DeamonLite无响应问题3、修正：某些情况下，64位与32位程序同时使用时，不能输入中文的问题2009-08-07：极点五笔7.0 预览版 下载地址从极点6.5发布到现在半年多了，各种原因对极点无法像之前那样投入。感谢一直以来大家对极点的关注与帮助。这个版本只是经过内测网友的测试，故无法保证其100%运行顺利。如果有什么问题欢迎留言反馈。极点五笔输入法 7.0预览版修改记录1、添加了对win7的支持2、添加了对X64的支持3、修正由于词库损坏造成非法或丢单字的问题4、可以，但不建议设为默认输入法5、只要是候选窗上的词可以任意调频6、每次批量加词数量理论上没有限制7、根据登录用户自动切换设置9、完善候选窗设置：同一皮肤中各类型候选窗选项可单独设置待完善部分：1、X64下的反查只能查拼音与编码2、打包到别的机器上只能使用默认设置&#8230;&#8230;&#8230;..极点五笔v6.6（开发中……）极点五笔v6.6正在研发中，目前已基本实现：&#8211; 任意调频——以前只能全码且编码相同才能调&#8211; 多用户的支持——根据登录用户自动选择配置文件&#8211; 批量加词——不再限制容量&#8211; 任意月、日录入——“;月.日”格式，“.”键上屏&#8211; 编辑用户码表功能完善&#8211; 支持x64操作系统及软件（更多……）2009-02-09，极点五笔6.5版1、修正：某些设置下输入编码非法的问题2、完善：候选窗的定位与显示3、添加：字根拆分提示插件（学习版）4、添加：输入速度统计功能5、完善：一些细节问题2008-10-31，极点五笔6.4正式版本版为极点6.3及其SP1的完整版，同时修正了以下内容：1、完善：五笔拼音模式下临时生僻字的检索算法2、完善：简入繁出功能3、完善：自动调频时，zz系列也参与调频的问题4、添加：切换皮肤快捷键5、添加：候选项后自动添加空格快捷键6、完善：选中 回车键编码上屏时 时对快捷英文等键的处理&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2008-09-21 极点五笔 6.3 SP11、修正：启用自动造词，而索引文件freeime.dat内容有误时，输入某些单字非法的问题2、完善：启用全屏模式隐藏输入框功能——待确认&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2008-09-20 极点五笔 6.31、修正已知问题，增强程序的稳定性与兼容性2、优化检索算法，提高反应速度3、以《现代汉语（第五版）》为标准，整理了极点汉语词典，共收单字：24,450个、词组48,253组（新旧词典不能同时使用，仅标准版内含）4、添加了笔画辅助输入功能（标准版）5、完善编码反查，既提示单字全码，也提示简码6、完善拼音输入功能，实现五笔拼音混合输入且拼音对五笔盲打几乎无影响，全拼、简拼、混拼任君选择（标准版），让您真正体会：行云输入，流水感觉7、增加网络同步接口，供有需要或有能力开发用户使用8、修正与完善其他细节问题&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2008-07-08 之后小更新：设置界面改动了一点,主要的是设为默认时,word等其它地方支持剪贴板(涂黑)查询了&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2008-07-08日 极点五笔汶川地震纪念版SP1安装本版极点请注意：如装有旧版极点，请注销或重启系统后再安装。本版修正了地震纪念版发布以来发现的绝大多数问题，建议所有极点用户，特别是使用极点6和VISTA的用户升级到此版。注：1、不建议将极点设为默认输入法，如将极点设为默认，剪切板查询、造词功能会失效；2、非方形候选窗某些情况下定位会有问题3、游戏兼容性未完全测试&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2008-06-12 极点五笔汶川地震纪念版1、自动转换旧版本词库，以后升级极点不用担心词库不兼容了：）2、可直接编辑用户词组3、优化算法，提高速度！4、完善对VISTA下非管理员的用户的支持5、完善简入繁出，并提供大五码输出功能6、完善联想功能，不标记联想词组也能联想7、状态栏可自动透明，增加显/隐候选窗快捷键8、重新规划了状态栏右键菜单&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2007-11-11，极点6.1正式版（Unicode版）增加的功能列表1、添加快捷码表及在线编辑功能2、重码上屏校对模式，适宜快速盲打录入后整篇校对3、编码打开软键盘4、shift选重码5、连击中英文切换键（默认是右shift)打开软键盘完善的功能列表1、简入繁出全面超 越极点5，五笔与拼音同时支持一简对繁的显示与输出2、根据人民日报词频完善了联想功能3、词典在非简体系统下亦可正常使用4、安装程序支持各种非简体系统5、在WOW等游戏下Shift键粘滞的问题&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-极点五笔 5.2版 982K （日期未知：2007-12-31？）因开发极点6，此版未曾公开发行。它修正了5.1版某些bug，是最后一个ansi版本。&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-极点五笔6.0 RC版（日期未知：2006-10-23？）说明：1、本版暂不支持简入繁出功能；2、本版无法直接使用旧版词库（切记，用之前极点的词库，极5或极6的都会非法！！！），请安装到全新目录；3、本版为测试版，请勿用于关键工作场合4、时间、精力关系，本版主要做兼容性测试，功能方面的要求正式版不会再添加了。相较宝宝出生纪念版，本版基本完成了以下功能：1、自动词组2、万能键3、词组联想4、提示系统已有词组5、智能隐藏词组功能6、维护词库的相关功能7、打字音效8、系统配置与词库的备份与恢复&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2006-03-18，极点五笔5.1版；注：最后一个公开发布、支持win95和Win98的版本，从极点6开始只支持Win2000及以上的版本的Windows。1、在迷迷糊糊的帮助下完善了候选窗的跟随2、解决了魔兽下启用词组联想会造成丢键的问题3、优化极点的检索效能4、彻底解决了guest用户无法使用极点的问题5、完善了极点在使用中的安装与卸载6、采用了wozy 4.3版为基础，集一剑、海峰和物理之大成的4精词库7、更便利的系统设置，符号与设置向普通输入习惯靠拢8、重新改写了皮肤架构，方便皮肤交流&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2005-12-25，极点五笔5.0正式版；xbeta：感谢杜老师在极点5.0中更正了极点设置后VIM会崩溃的问题。一、本次重要更新1、第一个自带字典功能的输入法2、第一个插件化的输入法3、漂亮、实用的状态栏4、命令直通车扩展了如下功能：①$F输出本地文本功能；②$P输出位置功能；（相应功能说明见极点5.0帮助）③用编码：zzka、zzkb来打开相应软键盘功能；④最小化桌面窗口：tray $xtray⑤打开光驱：opencd $xopencd⑥开关扬声器：mute $xmute⑦极点目录变量：dirr $X[极点目录]%freewb%5、增加打字音效功能。默认关闭，高级设置中设置，关闭时不占资源；6、更漂亮、更实用的状态栏。极点对状态栏皮肤进行了进一步的扩展，具收缩、扩展两种状态，更漂亮、更实用，输入法的各种状态与常用功能一目了然。7、进一步优化检索算法，既减少了资源占用，并同时提高的检索速度。8、修正了此前版本中发现的各种问题，特别是启用扬声器报警非法等关键性错误，同时也完善了音箱报警功能，用户可以自定义空码与重码所用报警声音文件。提示：极点5.0的状态条作了重大改进，原来4.5版的状态条已经不适用了。如果覆盖安装的，建议在“输入法设置→界面设置→状态条设置”中选择新版的IPurple.ini状态条。当然，选择4.4及以前的版本的简单状态条也行。&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2005-10-01，极点五笔4.5SE（简体版）发布；注：极点第二个成熟、稳定版本，也是极点的第一个成熟平台版本。本版主要修正了一些细节问题，对设置做了一定的调整，并添加了“临时GBK”功能。1、全面调整设置界面。对设置的功能选项力求简洁与便捷，使极点的新用户能够获得更好地易上手性。将一部分设置功能转移到高级设置中，为方便高级用户，改进了码表用户码表的格式，增加查找选项。2、“临时GBK”。默认快捷键为“]”,此功能类似于极点的临时拼音功能。在GB2312下启动临时GBK后，检索范围为GBK单字，输出GBK单字上屏后自动切换回GB2312状态。&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-发布: 极点4.51、可以自定义极点的绝大部分快捷键2、通过编码调用windows的一些常用功能：如浏览指定网址、打开我的电脑、我的文件夹或打开指定文件等。&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-发布: 极点五笔4.3正式版 (5月11日更新)一、本次重要更新本版主要修正了上个公测版的一些细节问题并根据潜龙勿用网友和Ahaman先生的建议添加了“命令直通车”功能。1、命令直通车格式可以定义为“$X[说明]命令”，录入时仅显示“说明”部分。如码表中加入： wubi $X[五笔论坛]/bbs/，输入时候选窗显示为：[五笔论坛]2、短文标签功能(不支持普通词组)。可以防止候选窗显示过长。如码表中加入： dwja [春晓]【春晓】$13$13$20$20$20$20$13春眠不觉晓，$13处处闻啼鸟；$13夜来风雨声，$13花落知多少。 　　输入时候选窗显示为：[春晓]二、详细更新记录5月9日 *修正：临拼时不检索单字的问题 *完善：命令直通车格式可以定义为“$X[说明]命令”，录入时仅显示“说明”部分2005年5月5日22时36分更新： *完善：windows登录窗下禁用“命令直通车”功能 *完善：Windows接口命令仅定义在用户码表中有效 2005年5月1日更新 *完善$X功能，本版开始支持文件名和路径参数（^ 和#)。 如：①$Xcmd#d:tools 则在打开CMD窗口的同时并进入到d:tools目录中 ②$Xnotepad^c:test.txt 则用打开记事本c:test.txt文件2005.4.30更新 *修正：命令功能支持文件路径中空格，用$20表示2005.4.28更新 *自动词组最大长度20 *添加:支持用户词库中加入文件路径打开命令$x 和$X,x表示后面，X表示前台例如：abcd $xC:文件唐诗蜀道难.txt mydoc $Xc:document$20and$settingsxxxxMy$documents等2003.4.25更新 *修正:部分快捷键设置没有禁止选项 2003.4.24更新 *修正:五笔拼音下拼音重码调频的问题 *修正:临拼下自动调频的问题2003.4.23更新 *修正：词组中包括空格或回车时无法在线调频的问题 *修正：临拼可以选用Fx系列快捷键&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-发布: 极点4.2 2005-03-081、修正了公测版发现的一些细节问题,如：①快捷英文下，如果录入的是快捷命令给出提示②屏幕取词与查询的处理方式,不再执行清空剪切板的动作③完善对状态栏显示代码段的处理2、彻底解决win9x下无法使用系统设置的问题3、完善输入法设置的在线帮助功能4、添加了在线速度测试功能5、添加了单字输出模式6、“屏幕取词”：将屏幕上的内容复制到剪切板再按Ctrl+；7、“屏幕查询”：将屏幕上的内容复制到剪切板再按Ctrl+?。如想复制查询结果按Ctrl+c8、可以选择候选窗的字体及风格了9、英文和大写字母状态下强制半角的选项等10、词组最多可以包含512个汉字11、完善静默安装及卸载等一些细节问题。&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-发布: 极点4 2004-08-26今天极点两岁了！在过去的700多个日日夜夜里，极点得到了无数朋友的关心、帮助与支持。正是大家的帮助，也才使极点坚持并走了下来，也才有了今天极点4的诞生，在此感谢所有参与内测的朋友们！感谢你们对极点的支持与帮助！谢谢！也特别感谢LoveEB和npwjm等二笔朋友，极点4的平台特性等许多功能是在LoveEB的帮助下完成的，谢谢你们！极点4虽然经过了长时间的内部测试和公开测试，但囿于我们的水平和软、硬件环境，它可能还会有这样或那样的问题，我们真心的欢迎您反馈您的使用意见与建议，使极点更加符合大家所需并为大家的工作带去一丝便利，这是我们最大的心愿！ 再次感谢所有一直帮助极点到深夜的朋友们！——杜志民 2004年8月26日22时52分&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-发布: 极点3.5正式版 2003-12-31注：极点第一个稳定、成熟版本。下载请至极点主页：http://freewb.y365.com 发布的比较匆忙，附一下修改记录：解决IE下第一个窗口被关闭后其他子窗口状态栏不跟随的问题。暂屏蔽掉汉字候选窗顶层显示功能；12月30日修正了退出IE查找框后，背景不加载及全半角标志不显示等问题；12月30日将“使用旧式输入接口”改名为“游戏输入接口”并放到了freewb.ini中；12月29日修正了切换到临时拼音状态后马上按BackSpace键会删已录入内容的问题；12月28日 .修正了输出大写金额时，如果以“.”结尾数字被缩小10倍的问题；12月28日 .修正了98下读取系统目录出错的问题；12月27日 .完善了极点的出错处理机制,当极点安装目录不存在或有错时不再退出宿主程序 .重新改写了一下消息处理机制；2003-12-25（完。文章最后更新于2015年8月18日）-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>75<docid>     <title>EmEditor 16.1.3 简体中文便携版 - 强大文本编辑器</title>     <link>http://www.portablesoft.org/emeditor-pro/</link>     <content>EmEditor Professional 以运行轻巧、敏捷而又功能强大、丰富著称，作为简单好用的文本编辑器，EmEditor 支持多种配置，可自定义颜色、字体、工具栏、快捷键、行距等，支持文本列块选择、无限撤消/重做等，是替代记事本的最佳编辑器。我最近一直在用 EmEditor，其便携性很适合影子系统，标签窗口也是极方便操作，2016/8/11 更新版本为 EmEditor 16.1.3 官方简体中文便携版，分别为 EmEditor 32 位和 64 位版。EmEditor 现已经添加了官方简体中文和繁体中文支持，无需额外汉化。使用说明：解压后直接运行主程序 EmEditor.exe 即可，所有配置都保存在 ini 文件中，纯绿色便携，完全兼容 Windows 7/8 及 Portableapps.com 的便携平台，如果无法显示简体中文，可能需要重新配置。记事本替代方面，曾经介绍过的 EditPlus 或 AptEdit 也都是不错的，不过我还是用着 EmEditor 最舒适了，还有 Notepad2 也是必须的。关于如何将 EmEditor 转变为便携软件，请看这里，或直接在 EmEditor.exe 目录下建立一个 eeUseIni.ini 文件，EmEditor 就会使用 ini 文件保存所有配置，达到绿色便携化运行。EmEditor Professional is a fast, lightweight text editor designed to balance speed of operation with robust features.New features in version 10 include a Compare function, which allows users to run a side by side comparison of two documents with Synchronized Scrolling, a Spell Check engine, Numbering, ASCII and Binary side by side viewing, and much more. EmEditor now fully supports Zen Coding.EmEditor 16.1.3 更新日志：修复了比较 CSV 文档或排序一个 CSV 文档时，EmEditor 会故障的 bug。修复了在 CSV 单元格模式下的增量搜索 bug。修复了其他 bug。EmEditor 会在显示另存为对话框之前自动保存未命名文档。如果在 CSV 单元格模式下，选取了多个单元格，当执行选择CSV列命令时，EmEditor 会选取多个列。修复了双击多个空格或 Tab 无法选择那些空格或 Tab 的 bug。修复了 IME 上内存泄漏的 bug。EmEditor 相关文件下载官方网站：zh-cn.emeditor.com解压密码：www.portablesoft.org压缩包MD5：F4D1A7E2430325056620A6FD9F8004FF开始下载 EmEditor Portable 16.1.3 简体中文便携版 (32-bit, 32位版)EmEditor_x86_16.1.3_PortableSoft.7z (2.41 MB)@精品绿色便携软件 &#124; EmEditor 16.1.3 (32-bit) 下载页面 &#124; 更多版本下载开始下载 EmEditor Portable 16.1.3 简体中文便携版 (64-bit, 64位版)EmEditor_16.1.3_PortableSoft.7z (4.68 MB)@精品绿色便携软件 &#124; EmEditor 16.1.3 (64-bit) 下载页面特别说明：EmEditor 便携版没有集成任何注册码或其他注册信息，为「全功能试用版」，默认有 30 天的全功能试用期。试用期结束后，请考虑购买官方正版授权。如果还想继续试用的话，请给我发邮件至 admin@portablesoft.org 询问解决方案。Related posts:功能强大的文本编辑器：EditPlus汉化绿色便携版 AptEdit绿色版：功能丰富的文本/HEX/HTML/程序编辑器 通过映像劫持实现Notepad2替换记事本 Notepad2-mod 4.2.25.980 - 轻量级文本编辑器、代替记事本的最佳选择 简单设置，将EmEditor转变为纯绿色便携版 二进制编辑器：Hex Editor II绿色免安装版 </content></doc>
<doc>     <docid>76<docid>     <title>强大图片素描化工具 - FotoSketcher 3.20 绿色免安装版</title>     <link>http://www.portablesoft.org/fotosketcher/</link>     <content>FotoSketcher 是一款很简便且强大的图片素描化工具，处理速度很快，可以帮助你创建类似真实素描的艺术作品。FotoSketcher 现在有二十多种自动素描方式，如铅笔素描效果、水墨效果、油漆效果、像素化、彩色圆圈、卡通、活力照片、老式照片等等。制作素描图时，FotoSketcher 可以实时预览，具体试一下就知道是什么效果的。FotoSketcher 新版增加了很多功能，打开一张图片后会自动弹出绘制参数对话框 (Drawing parameters)，每种方式也都可以调整很多参数，如颜色强度、明亮度、纹理设置等，还可以添加文本，支持中文输入，也支持批量处理。很不错的软件、软件本身即为单文件版、纯绿色，有什么不满意的就按下 F10 打开绘制参数对话框重新设置就行。2016/8/11 更新版本为 FotoSketcher 3.20，在中文系统中默认显示简体中文界面。FotoSketcher 3.20 更新说明：Better Windows 10 supportImproved memory management (Pencil Sketch 1 and Linear Halftoning)a new popup window previewing each effectVarious bug correctionsFotoSketcher is a 100% free program which can help you convert your digital photos into art, automatically. If you want to turn a portrait, the photograph of your house or a beautiful landscape into a painting, a sketch or a drawing then look no further, FotoSketcher will do the job in just a few seconds.FotoSketcher Portable 相关文件下载官方网站：www.fotosketcher.com解压密码：www.portablesoft.org压缩包MD5：DC2E3E6B60DCDBAF928C544ECAD84B7A开始下载 FotoSketcher Portable 3.20 简体中文绿色便携版FotoSketcher_3.20_PortableSoft.7z (8.07 MB)@精品绿色便携软件 &#124; FotoSketcher 3.20 下载页面 &#124; 更多版本下载开始下载 FotoSketcher Portable 3.00 简体中文绿色便携版FotoSketcher_3.00_PortableSoft.7z (5.36 MB)@精品绿色便携软件 &#124; FotoSketcher 3.00 下载页面Related posts:Morpheus Photo Morpher绿色版：图像渐变工具 Photo Collage Studio绿色便携版：数码照片拼贴工具 图片尺寸调整工具：FastStone Photo Resizer便携版 图片去水印工具 - Inpaint 6.2 中文绿色便携版 真正的数码暗房：LightZone绿色版 专业数码照片处理软件：Zoner Photo Studio中文绿色版 </content></doc>
<doc>     <docid>77<docid>     <title>Win64AST 1.10 Beta6 - 支持64位Windows的ARK、内核级的高级系统工具</title>     <link>http://www.portablesoft.org/win64ast/</link>     <content>Rootkit 通常是指加载到操作系统内核中的恶意软件，因为其代码运行在特权模式之下，极具危险性。有 Rootkit，就需要 Anti Rootkit，用到的就是 ARK 工具。针对32位的 Windows XP 或 Windows 7 系统，已经有很多成熟的工具了，比如冰刃、早期的冰刃 (IceSword)、Wsyscheck、到后来的狙剑 (SnipeSword)、XueTr，还有最近很给力的 PowerTool 等，但是64位操作系统下的 ARK 工具发展相对缓慢，目前本站介绍过 IThurricane 发布的 PowerTool 64位版。而 Tesla.Angela 开发的 Win64AST 是另一款、也可能是全球第一个专用于64位系统的内核级的高级系统工具，由于使用了特殊的内核技术，WIN64AST 能够从底层控制系统，有很大的操作权限，是一个强大的 Anti Rootkit 工具，能够查看并管理64位 Windows 系统的各种内核信息，可用于手工杀毒、辅助调试、内核研究等。Win64AST 全称 Win64 Advanced System Tool，支持 Windows 7 x64、Windows 8 x64 和 Windows 2008 R2，目前实现的功能有：进程/内存/线程/模块/句柄/窗口管理内核模块查看网络连接查看和禁止查看/恢复SSDT和Shadow SSDT扫描/恢复RING3和RING0的内联钩子查看并删除消息钩子查看/恢复重要驱动程序分发函数查看/恢复内核对象例程钩子枚举各种通告和回调枚举I/O定时器枚举DPC定时器枚举MiniFilter/失效MiniFilter的回调函数枚举/摘除过滤驱动查看/备份/恢复/自动修复主引导记录(MBR)进程行为监视(创建进程/创建线程/加载驱动/修改注册表/改动文件系统/连接网络/修改时间)内核内存编辑在驱动里枚举文件、强制新建/解锁/删除/破坏文件在驱动里枚举注册表、强制删除/新建/重命名注册表键(KEY)和注册表值(VALUE)禁止创建进程/禁止创建文件/禁止创建注册表键(KEY)和注册表值(VALUE)/禁止加载驱动/禁止联网/禁止读写磁盘敏感区域校验文件签名枚举/恢复中断描述符表钩子枚举全局描述符表显示特殊寄存器的值检测进程的IAT钩子和EAT钩子查看/备份/恢复/自动修复卷引导记录(VBR)网络防火墙枚举/删除SPI、BHO、IE右键菜单、WFP CALLOUT、NDIS FILTERDLL/驱动加载器枚举/删除自启动项、枚举/编辑文件关联枚举/恢复内核回调表PE文件查看器证书拉黑工具使用说明：2016/8/11 更新版本为 Win64AST 1.10 Beta6  测试版，下载后直接运行 Win64AST.exe 即可，注意 Win64AST 在 Windows 7 上需要安装 .NET Framework 4 方可运行，而 Windows 8 则不用安装 .NET Framework 4。Tesla.Angela 说明了 WIN64AST 与 PowerTool x64 的不同之处：PowerTool 的作者 ithurricane 大牛把 PowerTool 定位为「手动杀毒工具」，主要用于手动杀毒；而我把 Win64AST 定位为「高级系统工具」，里面有部分 ARK 功能，也有部分 RK 的功能（比如：隐藏进程、保护进程和强制修改进程内存，将来可能还会添加更多的功能），可用于辅助研究 Win64 内核，也可以干一些“邪恶”的事情，比如辅助游戏多开等，推荐两者一起使用。Win64AST 1.10 Beta 6 更新日志：支持WIN10-10586新增汇编器新增枚举NDIS FILTER新增枚举/删除用户名新增枚举/删除输入法新增转储内核内存（保存一片内核内存为文件）新增转储进程内存（输出进程里所有有效的内存块为文件）新增枚举/恢复HHIVE对象挂钩（隶属于OBJECT HOOK）新增“失效但不摘除定时器”功能新增扫描任意模块的代码段修改新增扫描任意模块的EAT/IAT修改增强了枚举网络连接（枚举前处理掉可能存在的HOOK）修复了几个枚举不全/数据错误/功能无效/导致蓝屏的bugUI微调（比如列表刷新后在底部状态栏显示有多少项、默认横纵比为1:0.618）Win64AST 相关文件下载官方网站：win64ast.m5home.com解压密码：www.portablesoft.org压缩包MD5：586DFE4D06A0A1914486869231DD8FB5开始下载 Win64AST 1.10 Beta 6 简体中文绿色免费版 (测试版)Win64AST_1.10Beta6_PortableSoft.7z (2.85 MB)@精品绿色便携软件 &#124; Win64AST 1.10 Beta6 下载页面 &#124; 更多版本下载特别提醒：Win64AST 极易被杀毒软件报毒，建议您关闭杀毒软件再使用本软件，如果发现运行不正常，请仔细看说明文件寻找解决方案。Related posts:PowerTool 64位版 v1.6 - 内核级的手动杀毒、进程管理工具 PC Hunter 1.35 - XueTr 升级版、强大的系统信息查看与手工杀毒辅助软件 LockHunter绿色免费版 - 解除文件锁定 辅助杀毒小工具 - Hijack Hunter 1.8.4.1中文绿色版 XueTr绿色便携版：强大的手工杀毒辅助工具 NirLauncher 1.18.23 - 便携式 NirSoft 软件合集 </content></doc>
<doc>     <docid>78<docid>     <title>Snipaste 1.6 绿色便携版 - 简单但强大的截图+贴图工具</title>     <link>http://www.portablesoft.org/snipaste/</link>     <content>在 V2EX 闲逛时发现了一个很有意思的截图软件：Snipaste，作者 levie 用了三年的业余时间开发了这一个很特别的截图 + 标注 + 贴图工具。我下载看了下，Snipaste 的截图功能已经很丰富了，基本常见的截图模式和操作都支持，使用的是类似 QQ 截图界面，但比 QQ 截图做的更好用，功能更强大些。Snipaste 支持将剪贴板中的内容转为图片显示，包括剪贴板中的图像、纯文本、HTML 文本、颜色信息、图像文件等等，另外还可以高效地自动选取按钮、文字等界面元素。Snipaste 目前还没有滚动截图，如果需要截滚动窗口，可以试试 FastStone Capture 或者 PicPick。但作者 levie 说 Snipaste 更重要的功能是贴图，所谓贴图就是将截取的任意数量图片贴到屏幕上显示，类似于桌面便签，可以当作临时笔记、临时记录之用，活用它，将能够大大提高你的生产力。每个贴图窗口都提供了很多功能操作，比如添加阴影、缩放、保存到文件等。作者 levie 对 Snipaste 软件的介绍：Snipaste 是一个简单但强大的截图工具，也可以让你将截图贴回到屏幕上！ 下载并打开 Snipaste，按下 F1 来开始截图， 选择“复制到剪贴板”，再按 F2，截图就在桌面置顶显示了。就这么简单！你还可以将剪贴板里的文字或者颜色信息转化为图片窗口。 你可以缩放、旋转这些贴图窗口，或者把它们变成半透明，甚至让鼠标能穿透它们！ 如果你是程序员、设计师，或者你大部分工作时间都是花在电脑上, 我相信你能体会到 Snipaste 给你带来的效率提升。另外这里有很多 GIF 动图展示和作者的开发历程：https://www.v2ex.com/t/295433Snipaste v1.6 2016.08.10 更新日志：修复：自动探测窗口范围功能，对 Windows 标准样式窗口，识别范围大了一圈修复：自动探测窗口范围功能，对 QQ 窗口，识别范围大了一圈修复：从 Chrome 复制的带特定格式的 HTML 文本，贴出来的图片可能出错修复：屏幕 150% DPI 时，颜色按钮的大小不对修复：放大镜在贴图窗口上移动时有明显延迟改进：更新了部分图标（感谢 像素君）新增：（选项）取 Hex 颜色值时不复制 #新增：镂空箭头样式Snipaste 相关文件下载官方网站：zh.snipaste.com解压密码：www.portablesoft.org压缩包MD5：83C092753F086085E5605C55ECF90C45使用说明：下载解压后直接运行 Snipaste.exe 即可，配置会保存到当前目录中的 config.ini 文件中，完全绿色便携。如果无法运行，则需要下载安装 VC 运行库。开始下载 Snipaste 1.6 绿色便携版 (32位版+64位版+XP版)Snipaste_1.6_PortableSoft.7z (10.33 MB)@精品绿色便携软件 &#124; Snipaste 1.6 软件下载页面 &#124; Snipaste 用户手册开始下载 Snipaste 1.5 绿色便携版  (32位版+64位版+XP版)Snipaste_1.5_PortableSoft.7z (10.11 MB)@精品绿色便携软件 &#124; Snipaste 1.5 下载页面Related posts:免费屏幕截图软件：Gadwin PrintScreen中文版 FastStone Capture 8.4 汉化绿色便携版 - 极品屏幕截图工具 屏幕捕捉软件：TNT Screen Capture绿色便携版 免费全能截图软件 - PicPick 4.1.5 绿色便携版 印象笔记·圈点 Evernote Skitch 2.3.0.10 - 优雅的图片标注工具 TechSmith SnagIt Studio汉化绿色版：优秀的全能截图工具 </content></doc>
<doc>     <docid>79<docid>     <title>Notepad2-mod 4.2.25.980 - 轻量级文本编辑器、代替记事本的最佳选择</title>     <link>http://www.portablesoft.org/notepad2-mod-portable/</link>     <content>Notepad2 是一个相当优秀的轻量级文本编辑器。Notepad2 是基于 Scintilla 开发，体积小巧、运行快速，与系统默认记事本具备相同资源消耗，但提供了大量实用功能，如代码高亮、编码转换、行号显示、多步 Ctrl+Z、增强的查找替换等等，是代替系统默认 Notepad 的极致选择。Notepad2 是一款开源软件，XhmikosR 又在 Notepad2 基础上二次开发了更加实用强大的 Notepad2-mod，额外提供代码折叠、书签、自动完成、支持更多代码格式高亮等功能，更加地好用了。由于 Notepad2-mod 支持 NSIS 脚本高亮，也是我目前使用的记事本替代工具，并通过映像劫持方式完美实现了 Notepad2-mod 替换系统记事本，如果 Notepad2-mod 能标签化打开多个文件就完美了。使用说明：基于 semidio 汉化的 Notepad2-mod 简体中文版制作便携版，2016/8/9 更新版本 Notepad2-mod 4.2.25.980，有需要的可以下载试用，Notepad2_EN.exe 为英文原版，必要时重命名为 Notepad2.exe 后使用。如果要替换记事本，则运行 !)替换记事本.bat 即可，会将 Notepad2-mod 无缝替换系统默认的记事本，!)还原记事本.bat 则恢复系统默认的记事本关联。由于是通过映像劫持替换的记事本，所以必须以管理员权限运行、并且关闭所有安全类软件，否则可能无法设置！Notepad2 和 Notepad2-mod 的特色功能：代码折叠和代码高亮：HTML、XML、PHP、ASP (JS、VBS)、CSS、JavaScript、VBScript、C/C++、C#、Resource Script、Makefiles、Java、Visual Basic、Pascal、Assembly、SQL、Perl、Python、Configuration Files、Apache Config Files、PowerShell、Batch Files、Diff  Files、AutoHotkey、AutoIt3、AviSynth、Bash、CMake、Inno Setup、LaTeX、Lua、NSIS、Ruby、Tcl scripts拖曳式文本编辑功能基础的正则表达式查找与替换便捷的快捷键矩形选择文本（Alt+鼠标左键）括号配对、自动缩进、长行标记、文本缩放功能支持多种编码，包括 Unicode、UTF-8、Unix、Mac 文本支持添加书签自动完成增强的NFO字符画文件标记打开的文件中所有相同的文本Notepad2 is a light-weight, free and open source Notepad-like text editor with syntax highlighting for a few commonly used languages. Notepad2-mod is a Notepad2 fork, a fast and light-weight Notepad-like text editor with syntax highlighting.Notepad2-mod 相关文件下载官方网站：xhmikosr.github.io解压密码：www.portablesoft.org压缩包MD5：649C0895FBBBC03E2B456A7DDF939E04开始下载 Notepad2-mod 4.2.25.980 汉化绿色便携版 (32位版+64位版)Notepad2-mod_4.2.25.980_PortableSoft.7z (1.04 MB)@精品绿色便携软件 &#124; Notepad2-mod 4.2.25.980 下载页面 &#124; 更多版本下载开始下载 Notepad2-mod 4.2.25.954 汉化绿色便携版 (32位版+64位版)Notepad2-mod_4.2.25.954_PortableSoft.7z (906 KB)@精品绿色便携软件 &#124; Notepad2-mod 4.2.25.954 下载页面开始下载 Notepad2 / Notepad2-Mod zhfi 修改版 (简体中文)Notepad2-zhfi.7z (1.75 MB)@精品绿色便携软件 &#124; 进入软件下载页面 &#124; 详细介绍Related posts:通过映像劫持实现Notepad2替换记事本 功能强大的文本编辑器：EditPlus汉化绿色便携版 AptEdit绿色版：功能丰富的文本/HEX/HTML/程序编辑器 排版助手(Gidot Typesetter)绿色便携版 二进制编辑器：Hex Editor II绿色免安装版 EmEditor 16.1.3 简体中文便携版 - 强大文本编辑器 </content></doc>
<doc>     <docid>80<docid>     <title>谷歌浏览器 (Google Chrome) 52.0.2743.116 绿色免安装版+便携版</title>     <link>http://www.portablesoft.org/google-chrome/</link>     <content>Google Chrome 是由 Google 开发的一款设计简单、运行高效、支持扩展的浏览器，它基于高速 WebKit/Blink 内核和高性能 JavaScript V8 引擎，在支持多标签浏览的基础上，提供顺畅的浏览体验，并且每个标签都在独立的沙箱内运行，安全性大大提高。Chrome 便携版说明：2016/8/8 基于 Google Chrome Stable 52.0.2743.116 制作便携版，直接运行 ChromePortable.exe，然后会生成快捷方式 ChromePortable.lnk，推荐使用此快捷方式启动程序；若之前使用过这里的 Chrome 便携版，则可以将最新的文件解压后覆盖到对应目录，会保留所有的配置，但请注意检查 PortableProfile 是否为空，防止配置文件被覆盖。注意 Chrome 28 开始使用 Blink 作为浏览器内核，Blink 是开源引擎 WebKit 中 WebCore 元件的一个分支。Chrome 绿色版说明：若将 Google Chrome 作为绿色免安装版使用，则可以直接执行主程序 App\Google Chrome\chrome.exe，以默认配置运行 Google Chrome，配置保存在 C:&#92;Documents and Settings&#92;用户名&#92;Local Settings&#92;Application Data&#92;Google&#92;Chrome&#92;User Data 这样的目录下，备份和恢复配置的话请运行 !)保存配置.bat 或 !)恢复配置.bat，会保存到当前目录的 Profile 文件夹内。ChromePortable.exe 作为 Chrome Loader 为 Chrome.exe 添加启动参数，并保存到 ChromePortable.ini 中，后供 ChromePortable.exe 读取调用，所以请保持 ChromePortable.exe 和 ChromePortable.ini 的完整性。下面是 Google Chrome Portable 的使用须知：便携版配置文件固定保存到 App\Google Chrome\PortableProfile 文件夹中；如果要将 Chrome 便携版锁定到任务栏，请将快捷方式 ChromePortable.lnk 拖拽到任务栏即可；移动软件目录或对 ChromePortable.ini 有任何修改的话，必须重新运行 ChromePortable.exe 以生成新的快捷方式；特别提醒：升级便携版时，请务必注意备份好本机 ChromePortable.ini 文件中的设置，以免自定义参数丢失；本便携版支持设置为默认浏览器 (有限支持、非完美支持)，方法是到 ChromePortable.ini 中设置 defaultbroswer=1，再次启动 ChromePortable.exe 就可以了，Vista/Windows 7/8 系统必须以「管理员权限」运行；如不喜欢本站便携版，可以试用下 Google Chrome Portable by Portableapps.com。ChromePortable.ini 参数说明：可自定义配置/数据目录：到 ChromePortable.ini 文件中设置 --user-data-dir 的值；可自定义缓存目录和缓存大小：到 ChromePortable.ini 文件中设置 --disk-cache-dir 和 --disk-cache-size 的值；默认添加 --enable-easy-off-store-extension-install 参数，方便安装 Chrome Web Store 之外的第三方扩展应用及脚本程序；可添加自定义启动参数：修改 custom-switches 的值，可添加除了 --user-data-dir、--disk-cache-dir、--disk-cache-size 之外的任意参数。Google Chrome is a web browser developed by Google that uses the WebKit layout engine and application framework and combines a minimal design with sophisticated technology to make the web faster, safer, and easier.Google Chrome 52.0.2743.116 更新日志：This update includes 10 security fixes.Google Chrome 相关文件下载官方网站：www.google.com解压密码：www.portablesoft.org压缩包MD5：021D44F888B2352ADCC28B967E562F37开始下载 Google Chrome 52.0.2743.116 绿色免安装版+便携版 (32位版)GoogleChrome_x86_52.0.2743.116_PortableSoft.7z (40.34 MB)@精品绿色便携软件 &#124; Google Chrome Portable 52.0.2743.116 (32-bit) 下载页面 &#124; 更多版本下载开始下载 Google Chrome 52.0.2743.116 绿色免安装版+便携版 (64位版)GoogleChrome_52.0.2743.116_PortableSoft.7z (46.92 MB)@精品绿色便携软件 &#124; Google Chrome 52.0.2743.116 (64-bit) 下载页面特别推荐：枫树浏览器便携版 &#124; 360极速浏览器便携版 &#124; 猎豹安全浏览器便携版 &#124; 世界之窗浏览器 6 便携版Related posts:Opera Next 17.0.1241.28 便携版 - Opera Chromium 内核浏览器 世界之窗浏览器 6.2.0.128 绿色便携版 - 精简优化版 Chrome 浏览器 枫树浏览器 CoolNovo 2.0.9.20 绿色便携版 - 最好的 Chrome 浏览器 360极速浏览器 7.5.3.300 绿色便携版 - 高效、稳定的双核浏览器 猎豹浏览器 4.3 Build 5821 绿色便携版 - 智能双核安全浏览器 眼不见心不烦 1.1.6.1 - 新浪微博非官方功能增强脚本，屏蔽版面模块与任意关键词 </content></doc>
<doc>     <docid>81<docid>     <title>Everything 1.4.0.713 Beta 便携版 - 最快最好用的文件搜索工具，新增64位版</title>     <link>http://www.portablesoft.org/everything-portable/</link>     <content>Everything 大家应该比较熟悉了，这是目前速度最快的文件名搜索工具，可以极速搜索、瞬间定位文件，在输入搜索词时即时显示匹配结果，是每一个用户都需要安装的效率工具。神器 Everything 最具优势的就是其超快的搜索速度，使用起来也极其简单，键入搜索词，所有匹配的文件或文件夹都会实时显示，再配合快捷键打开 Everything 搜索窗口，搜索文件就变成一件极其轻松、高效的事情了。当然 Everything 也提供了高级搜索用法，如搜索操作符、通配符、正则表达式等等，灵活使用的话，就能实现各种检索需求，具体可以从帮助菜单中学习这些技巧，更多高级用法还可以参见「善用佳软」的专题文章「Everything: 速度最快的文件名搜索工具」。使用说明：2016/8/4 更新版本为 Everything 1.4.0.713 Beta 测试版，解压后直接运行 Everything.exe 即可 (需要管理员权限)，第一次会有一个索引数据初始化过程，但它通过读取 NTFS USN 日志建立索引，所以索引速度也极快。Everything 从 1.3.3.653 Beta 开始添加了 64 位版，这样在 64 位系统下就更加高效稳定了，要使用 64 位版，将 Everything_x64.exe 重命名为 Everything.exe 即可。打开程序后，需要到菜单 Tools->Options->General->Language 中选择「简体中文」，切换为中文界面。由于工作原理的限制，Everything 目前只支持 NTFS 文件系统，如果需要快速搜索 FAT32 文件系统，则可以尝试 Quick Search 或淘奇桌面，而全文搜索的话，FileLocator 是目前最好的免索引全文搜索工具。Everything 1.4.0.713 Beta 更新日志：Fixed an issue with indexing deleted attributes in ReFS volumesFixed an issue with indexing very large ReFS volumesFixed an issue with indexing subst volumesFixed an issue with inline renaming and focus wrappingAdded option to remember search in bookmarksAdded option to remember view in bookmarksImproved unicode normalizationImproved open path commandImproved tooltipsEverything search engine Locate files and folders by name instantly: Small installation file, Clean and simple user interface, Quick file indexing, Quick searching, Minimal resource usage, Share files with others easily, Real-time updating。Everything 相关文件下载官方网站：www.voidtools.com解压密码：www.portablesoft.org压缩包MD5：02872AD8D814C07E6F7EF17003448A8C开始下载 Everything 1.4.0.713 Beta 中文绿色便携版 (32位版+64位版、测试版)Everything_1.4.0.713_PortableSoft.7z (1.20 MB)@精品绿色便携软件 &#124; Everything 1.4.0.713 下载页面 &#124; 更多版本下载开始下载 Everything 1.3.4.686 Stable 中文绿色便携版 (32位版+64位版、正式版)Everything_1.3.4.686_PortableSoft.7z (995 KB)@精品绿色便携软件 &#124; Everything 1.3.4.686 下载页面开始下载 Everything 1.2.1.371 Stable 中文绿色便携版 (32位版、正式版)Everything_1.2.1.371_PortableSoft.rar (390 KB)@精品绿色便携软件 &#124; Everything 1.2.1.371 下载页面Related posts:Quick Search 1.1.0.189汉化绿色版：快速文件名搜索工具 最好的免索引全文搜索工具 - FileLocator Pro 7.2.2038 中文绿色便携版 淘奇桌面：极速文件搜索工具 免费全能文件查看器：Open Freely绿色便携版 [谣言粉碎机] 索引服务，Windows 7 性能杀手？ </content></doc>
<doc>     <docid>82<docid>     <title>MKVToolNix 9.3.1 - MKV无损剪辑、分割、封装、合并工具</title>     <link>http://www.portablesoft.org/mkvtoolnix/</link>     <content>MKV 是一种优秀的多媒体容器格式，它可把多种不同编码的视频及16条或以上不同格式的音频和语言不同的字幕封装到一个 MKV 文件中，而 MKVToolNix 是一款免费开源的 MKV 编辑器和工具集，能够合成、编辑  Matroska MKV 文件。MKVToolNix 包含了以下几个 MKV 专用处理工具：mkvmerge：将多媒体文件封装、合并、混流为 MKV 文件；mkvinfo：输出 MKV 文件组件和编码信息；mkvextract：从 MKV 文件中提取视频、音频和字幕轨道；mkvpropedit：直接修改现有 MKV 文件的属性而无需重混流；mmg：mkvmerge GUI，并包含了章节编辑器和头部编辑器。使用说明：2016/8/4 更新版本为 MKVToolNix 9.3.1，现在 MKVToolNix  有64位版本了，绿色便携版直接运行主程序 mkvtoolnix-gui.exe 即可，配置保存到 mkvtoolnix.ini 文件中，默认简体中文界面，软件不能放在中文目录，否则只能显示英文界面。Matroska MKV 制作与合并MKVToolNix 中的 Mkvmerge GUI 允许你导入多个视频、音频、字幕轨道，混流合并一个新的 MKV 文件，并可以设置导出视频的宽高比、显示比例、帧频等等。Matroska MKV 分离与提取MKVToolNix 中的 MKVExtractGUI 则可以从现有的 MKV 文件中提取其中的一个或多个视频、音频或者字幕信息，是专业的 MKV 分离工具。Matroska MKV 剪辑与分割MKVToolNix 是专用的 MKV 剪辑工具，提供了4种 MKV 切割模式，包括按尺寸、按时长、按特定时间码和按分段，都是无损剪辑、分割 MKV 过程，能够同步切割视频、音频和字幕轨道。比之前介绍的所有支持 MKV 分割的工具都要好用，包括 Boilsoft Video Splitter、SolveigMM AVI Trimmer 等。MKVToolNix is a set of tools to create, alter and inspect Matroska files under Linux, other Unices and Windows. MKVToolNix 9.3.1 更新日志：Fix invalid probe range percentageMKVToolNix 相关文件下载官方网站：www.bunkus.org解压密码：www.portablesoft.org压缩包MD5：1C36ADAC2A1480B12762B57BF9BD322A开始下载 MKVToolNix 9.3.1 (Mkvmerge GUI+MKVExtractGUI) 中文绿色便携版 (32-bit, 32位版)MKVToolnix_x86_9.3.1_PortableSoft.7z (11.02 MB)@精品绿色便携软件 &#124; MKVToolNix 9.3.1 (32-bit) 下载页面 &#124; 更多版本下载开始下载 MKVToolNix 9.3.1 (Mkvmerge GUI+MKVExtractGUI) 中文绿色便携版 (64-bit, 64位版)MKVToolnix_9.3.1_PortableSoft.7z (11.37 MB)@精品绿色便携软件 &#124; MKVToolNix 9.3.1 (64-bit) 下载页面Related posts:免费 AVI/MKV 编辑器 - SolveigMM AVI Trimmer 2.1.1307.29 中文绿色便携版 idoo Video Editor 3.0.0 便携版 - 强大的多功能视频编辑器 方便视频分割/合并工具 - SolveigMM Video Splitter 3.6.1309.3 绿色便携版 支持超多格式的视频剪辑软件 - AVS Video ReMaker 4.1.3.149汉化绿色版 强大视频分割软件 - Boilsoft Video Splitter 7.02.2绿色便携版 视频合并、分割、剪切工具 - Xilisoft Video Editor 2.2.0.1023绿色便携版 </content></doc>
<doc>     <docid>83<docid>     <title>快速产品原型设计软件 - Axure RP Pro 8.0.0.3303 汉化绿色版 (正式版)</title>     <link>http://www.portablesoft.org/axure-rp-pro/</link>     <content>Axure RP Pro 是一个产品经理必备的交互原型设计工具，能够高效率制作产品原型，快速绘制线框图、流程图、网站架构图、示意图、HTML 模版等。Axure RP Pro 是专为 Rapid Prototype Design 而生，它可以辅助产品经理快速设计完整的产品原型，并结合批注、说明以及流程图、框架图等元素将产品完整地表述给各方面设计人员，如 UI、UE 等等，并在讨论中不断完善。作为办公自动化辅助工具，Axure 更适合 Web Prototype 制作，Axure 8 在 Axure 7、Axure 6 基础上做了比较多的改进，旨在提高原型设计效率，包括重新组织界面功能、自适应视图、新增多个形状、样式、事件、动画效果支持等，具体可见这里的介绍。使用说明：2016/4/15，Axure 8 由 Beta 升级为正式版。Axure 8 新增了钢笔工具、页面快照和更多动画效果支持等。2016/8/1 基于 Axure RP 8.0.0.3303 Stable 制作 Axure 8.0.0.3303 汉化绿色版。使用前的准备：使用 Axure RP Pro 之前必须先安装 .NET Framework 4.0 组件；安装说明：以管理员权限运行 !-AxureRP8Poratble.exe 完成初始化安装，以后直接执行主程序 AxureRP8.exe 即可，无需再次运行初始化安装；特别提醒：*.rp 工程文件如果用 Axure 8 打开编辑过的话，则无法再用旧版本的 Axure 6/7 打开，请特别注意此兼容性问题；关于汉化： 汉化作者为 Axure 中文社区 WebPPD 的 best919，汉化信息及补丁详见此贴。 Axure RP is the leading tool for rapidly creating wireframes, prototypes and specifications for applications and web sites. Quickly get the benefits of prototyping without a lot of hassle. It ives business and UX professionals diagramming, documentation, and interactive tools to quickly design and share interactive prototypes and specifications.Axure 8 部分新功能与特性：新增钢笔工具新增页面快照功能变换形状新增算法：联合、减去、相交、排除支持通过交互动作来旋转图形了可以对组件或图像进行放大与缩小在面板切换状态时，可以有翻转的动画效果了，以前只有淡变和移入内置了 Font Awesome 图标，可拖动大小和设置填充颜色可以设置连接线为曲线部件注释里可以设置字体颜色和项目符号通过交互动作，设置组件的透明度变化窗口滚动可以选择向上滚动还是向下滚动Axure v8.0.0.3303 2016/6/30 更新日志：Optimized Repeater heavy filesOptimized Group heavy filesOptimized SketchyOptimized ConnectorsOptimized Team Project updatesOptimized Grid and BackgroundOptimized Dots and DashesOptimized Adaptive View switchingOptimized selecting and adding WidgetsOptimized rich text rendering (minor)Axure RP Pro 相关文件下载官方网站：www.axure.com解压密码：www.portablesoft.org压缩包MD5：D5DBFAF74C99D8390D75A5B29CE3F381开始下载 Axure RP Pro 8.0.0.3303 汉化绿色版 (Stable/正式版)AxureRPPro_8.0.0.3303_PortableSoft.7z (30.10 MB)@精品绿色便携软件 &#124; Axure RP Pro 8.0.0.3303 下载页面 &#124; 更多版本下载试用说明：Axure 8 绿色版没有集成任何注册码或其他注册信息，为 Axure 8 企业版的试用版，默认有 31 天的全功能试用期。试用期结束后，请考虑购买官方正版授权。如果还想继续试用的话，请给我发邮件至 admin@portablesoft.org 询问解决方案。开始下载 Axure RP Pro 7.x (7.0.0.3189) 汉化绿色版 (Stable/正式版)AxureRPPro_7.0.0.3189_PortableSoft.7z (6.84 MB)@精品绿色便携软件 &#124; Axure RP Pro 7.0.0.3189 Stable 下载页面开始下载 Axure RP Pro 6.x (6.5.0.3055) 汉化绿色版 (Stable/正式版)AxureRPPro_6.5.0.3055_PortableSoft.rar (6.09 MB)@精品绿色便携软件 &#124; Axure RP Pro 6.5.0.3055 Stable 下载页面Related posts:Pacestar LanFlow绿色免安装版：网络拓扑图绘制工具 Edraw Mind Map中文绿色免费版[增强版]：专业多功能绘图软件 亿图图示专家 - Edraw Max 6.8中文绿色版 Adobe Fireworks CS6 12.0.0.236 简体中文精简绿色版 ProcessOn - 优秀的在线流程图绘制工具，实时协作绘图与共享 Adobe Fireworks CS4英文/简体中文/繁体中文绿色特别版 </content></doc>
<doc>     <docid>84<docid>     <title>QTranslate 5.7.0.3 - 优秀的全语种多引擎实时翻译工具</title>     <link>http://www.portablesoft.org/qtranslate-portable/</link>     <content>QTranslate 是一个轻量级的免费电子词典，通过集成各大在线翻译引擎实现便捷的实时翻译。QTranslate 帮助你更好地利用在线翻译工具，目前支持 Babylon、Definr、Google Search、Google Translate、ImTranslator、Microsoft Translator、Multitran、Promt、Reverso、SDL、Wikipedia、WordReference、Yandex、有道翻译等翻译引擎或信息服务。启动 QTranslate 后，默认配置下，鼠标选中任意文本，连点两下 Ctrl 即可激活主窗口并翻译选中的文本，或者通过 Ctrl+Q 弹出小窗口直接显示翻译结果、Ctrl+W 则显示网络搜索结果。启用即时翻译模式后，在任意程序中选择文字，则自动弹出 QTranslate 图标，点击图标即可查看翻译结果，QTranslate 会自动检测源文本语言格式。使用说明：已经做成绿色便携版，直接运行 QTranslate.exe 即可，2016/7/30 更新版本为 QTranslate 5.7.0.3，自动显示简体中文界面。个人非常喜欢 QTranslate，软件小巧精悍、速度流畅，能快速给出翻译结果，以前使用的灵格斯词霸还有有道词典感觉是越来越臃肿、运行效率越来越低了，不过最近的金山词霸 2012还不错。QTranslate 立足于在线翻译并做到极致操作体验，虽然使用时必须联网，但已适用于大部分情况了。值得一提的是，QTranslate 还提供了国际字符软键盘，能够轻松输入各国语言，特别当你不方便或者懒得安装新的输入法时，这个小功能尤为有用。QTranslate is a free translator for Windows. With this small utility, you simply select the text you want to translate and then press hot key (Ctrl+Q to show translation in the popup window or Double Ctrl click to show the translation in the main window). QTranslate 5.7.0.3 更新日志：Fixed: Google Translate service doesn't work in ChinaQTranslate 相关文件下载官方网站：quest-app.appspot.com解压密码：www.portablesoft.org压缩包MD5：F5045C4B63A62DD1A2E0D5B500972170开始下载 QTranslate Portable 5.7.0.3 中文绿色便携版QTranslate_5.7.0.3_PortableSoft.7z (389.62 KB)@精品绿色便携软件 &#124; QTranslate 5.7.0.3 下载页面 &#124; 更多版本下载开始下载 QTranslate Portable 5.6.0 中文绿色便携版QTranslate_5.6.0_PortableSoft.7z (377 KB)@精品绿色便携软件 &#124; QTranslate 5.6.0 下载页面Related posts:Lingoes 灵格斯词霸 2.9.1 绿色便携版 金山词霸 2012 v4.2 - 完美支持 Chrome 和 PDF 取词 高质量英文写作辅助工具：WhiteSmoke绿色便携版 </content></doc>
<doc>     <docid>85<docid>     <title>小朋友的涂鸦（三）：地图的魔术</title>     <link>http://songshuhui.net/archives/96601</link>     <content>本文作者：方弦前文回顾：小朋友的涂鸦（一）：从8和9说起小朋友的涂鸦（二）：球面覆盖地图的魔术我们先回到一开始的问题：对于某个正整数k，假设有两个互质的多项式P(x),Q(x)，其中P(x)的次数是3k，Q(x)的次数是2k。那么，多项式R(x)=P(x)^2-Q(x)^3的次数最小可以有多小？我们现在用别雷函数、球面覆盖和二部地图的眼光来看这个问题。首先，我们来考虑分式f(x)=\frac{-Q(x)^3}{R(x)}。可以证明，如果f(x)除了0、1和∞以外还有别的分支点的话，我们就得不到最优解。所以，我们可以假设f(x)是别雷函数。函数f(x)在0处的分支点就是Q(x)^3的根，也就是Q(x)的根（计算重数的话，一共有2k个），但每个根的重数要乘以3。同样的道理，它在∞处的分支点就是R(x)的根，再加上无穷远点x=\infty，因为R(x)的次数比Q(x)^3要小，所以当x趋向于无穷时，f(x)也会趋向于无穷。那么，它在1处的分支点又怎么样呢？这就是我们选取f(x)的目的：f(x)-1就等于\frac{-P(x)^2}{R(x)}，所以，f(x)在1处的分支点，就是P(x)的根（计算重数的话，一共有3k个），但每个根的重数要乘以2。我们可以假定f(x)没有别的分支点。我们要问的问题实际上就是：f(x)在∞处的分支点至少有多少个？我们重温一下球面覆盖和二部地图概念之间的翻译表。别雷函数平面二部地图覆盖的次数边的条数0处的分支点黑色顶点1处的分支点白色顶点∞处的分支点面0处和1处分支点的重数顶点的度数∞处分支点的重数面的度数的一半如果将所有这些要求翻译成二部地图的概念，我们实际上要解决的是这样的一个问题：如果一个二部地图，它的白色顶点度数都是偶数，并且加起来是6k，而黑色顶点的度数都是3的倍数，加起来也是6k，那么，它至少有多少个面？（在这里，我们不能说白色顶点的度数都是2，因为P(x)可能有重根，黑色顶点同理）如果k很小的话，试着画画也就可以了。但因为现在k可以要多大有多大，乱试一通大概不太管用。这就是借助别的数学工具的时候了。18世纪的大数学家欧拉（顺带一提，按博士导师的师承关系的话，他是笔者以及很多人的祖师爷）在开辟图论这一领域时，证明了下面的等式：如果一个平面地图有v个顶点、e条边和f个面（最外面的也算一个面）的话，那么必然有 v-e+f=2. 我们把这个等式套到我们的问题上，看看会得到什么。容易知道，我们的二部地图必定有3k条边，也就是说e=3k。把等式改写一下，我们得到f=2-v+e。因为我们想知道至少有多少个面，所以我们应该尝试寻找最大可能的v，也就是最大化顶点的个数。因为白色顶点的度数都是偶数，并且加起来是6k，要获得最多的顶点，最好的方法就是要求每个顶点的度数都是2，这样就能拿到最多的3k个顶点。同理，对于黑色顶点，最好的情况就是每个顶点的度数都是3，这样能拿到最多的2k个顶点。所以，顶点的总数合起来最多是5k个，也就是v \leq 5k。代入欧拉的等式，得到的就是f \geq k+2，也就是说这样的平面地图至少有k+2个面。考虑到其中一个面对应的是无穷远点x=\infty，这就意味着R(x)的度数至少是k+1，而且要达到这个度数，R(x)必须不能有重根，也就是说每个面（除了最外边）的度数都是2。我们得到了想要的下界，但还要证明这个下界能够达到，而我们又不想计算无穷个满足条件的多项式，怎么办呢？这就是别雷定理出场的时候了：它告诉我们，只要对应的二部地图能画出来，那么满足要求的分式必定存在，而且系数都是代数数。所以，我们根本不需要计算，只需要画出满足条件的二部地图就足够了。这样的地图画法非常简单：首先画出一棵有2k个黑色顶点的三叉树（也就是没有圈的地图，而分叉的顶点度数都是3），在每个叶顶点（也就是度数为1的顶点）上画一条跟自身连接的边，然后在每条边中间插入一个白色顶点，就得到了满足条件的二部地图。可以证明，满足条件的二部地图必定能用这样的方法构造出来。根据别雷定理，既然二部地图能画出来，那么满足要求的分式存在，也就是说使R(x)达到最小度数k+1的P(x),Q(x)是存在的。三叉树的构造，蒙A. Zvonkine惠允实际上，我们可以给P(x),Q(x)施加更复杂的限制，用同样的办法，也能得到R(x)的最小度数。这个推广首先由U. Zannier在1995年给出，后来A. Zvonkine等利用二部地图的方法给出了简单得多的证明。不仅如此，根据别雷定理，二部地图和分支点只有0、1和∞的分式有着一一对应的关系，所以，要知道有多少组P(x),Q(x)能使R(x)达到最小度数，只需要知道有多少个由2k个顶点组成的三叉树地图。我们之前考虑k=5的情况，截至2000年，数学家找到了两组解。但要知道一共多少组，只要在纸上随便画画，很容易数出来一共有四组解：k=5的四组解，蒙A. Zvonkine惠允通过这些地图，我们不仅能知道解的个数，还能部分推断出解的性质。树a和d各自拥有镜像对称性，所以它们对应的解的系数应该都是实数；树b和c分别是各自的镜像，所以它们对应的解的系数可能不是有理数，而是各自的复共轭。因为已知的两组解的系数都是有理数，它们对应的必定是树a和d，而未知的两组解应该向复数领域寻找。果不其然，剩下的两组解在2005年被日本数学家盐田徹治给出，这些解的系数在\mathbb{Q}(\sqrt{-3})中，一如预测。这些预测又从何而来？镜像对称跟系数又有什么关系？要说清楚，就不得不提及二部地图的另一个名字——儿童涂鸦（dessin d'enfant），还有这个术语的创造者，也是现代代数几何的奠基者，伟大的数学家，亚历山大·格罗滕迪克。</content></doc>
<doc>     <docid>86<docid>     <title>小朋友的涂鸦（二）：球面覆盖</title>     <link>http://songshuhui.net/archives/96581</link>     <content>本文作者：方弦前文回顾：小朋友的涂鸦（一）：从8和9说起球面覆盖我们每天睡觉亲密接触的被褥，它的卫生状况值得重视，偶尔就要把被套拆下来洗一洗，洗完再套上去。但这不是个顺当的活计，尽管有系绳，但固定还是相当困难，手艺不好的，实在是难以把它弄得服服帖帖，总是会有些褶皱。这时候难免萌生出偷懒的想法，懒得把被套拉链拉开然后把内芯塞进去了，就随便用被套把内芯当粽子捆了，反正严格来说，的确也是用被套把内芯“套住了”，被套也完成了自身的责任：把内芯的每一处都“挡住”，不让睡觉的人把内芯弄脏。可惜被套一般没有弹性不能延伸，包起来的“粽子”实用面积实在太小，否则这也不失为一个好办法。无论是正常的还是包粽子的方法，我们都可以说，被套把内芯“覆盖”了。最完美的当然是从头到尾平整光滑的覆盖，内芯上每个地方都被一层被套覆盖；稍差一些，有点皱褶的话，皱褶的地方就会有至少三层被套覆盖着内芯的同一个地方，而且还会有一些“分支点”，皱褶在这些点上开始，又在这些点上终结。如果是包粽子的话，那就不好说了，不过可以肯定的是，内芯上每个点至少有两层被套覆盖。覆盖的折痕，来自Wikipedia在数学家眼中，被套可以看成一个球面：假设被套有弹性，那么在里边装一个气球，再把气球吹起来，被套自然会鼓起来变成球面。同样，内芯也可以看成一个球面。如果我们先在内芯放一个气球，然后把内芯和覆盖它的被套缝起来，不让它们移位，最后将气球吹起来，那么我们就得到了被套这个球面对内芯这个球面的一个覆盖。这样的覆盖变化多端，可以是平滑的，也可以有皱褶，在每一点处，覆盖可以是单薄的，也可以是多重的。把这些直观印象翻译成数学概念，这是数学家们的拿手好戏。球面之间的覆盖，用数学术语来说，就是从一个球面（被套）到另一个球面（内芯）的连续满射函数f，如果x是被套上的一点，那么f(x)就是内芯上被x这一点覆盖的点。我们要求函数是连续的，因为我们不想把被套扯坏，所以要求被套上的一小块“保护”的也是内芯上的一小块，而不是“分隔异地”的两块；我们要求函数是满射，因为我们希望保护内芯不被弄脏，所以要求内芯上的每一点都有被套保护。当然，数学毕竟是数学，比现实要更天马行空一些。现实中的被套不能穿过自身，而数学中的覆盖则可以。正因为如此，在数学中我们可以把覆盖的皱褶“抚平”，只留下一个个孤立的分支点，这在现实中是不可能的。而我们要求除了分支点以外，球面上的其他点被覆盖的次数都相同，这个次数又被称为球面覆盖的次数。视频原作者：Dugan Hammock，他的Youtube频道上有更多关于曲面的精美视频。然而，这些东西跟多项式又有什么关系呢？对于数学家来说，关系非常大。因为他们知道，复数组成的复平面，差不多就是一个球面。有一种叫“球极平面投影”的方法，可以将复平面转化为只缺一个点的球面。而如果我们将“无穷大”也加到复平面里，就能把球面缺的点补上，得到的就是所谓的“黎曼球面”。而黎曼球面上的有理函数，也就是两个多项式的商，实际上就是一个球面覆盖。通过研究球面覆盖的性质，数学家们就能间接得知对应的有理函数的性质。球极平面投影，来自Wikipedia我们接下来考虑有理函数给出的球面覆盖。球面覆盖的许多性质都被它的分支点所决定，因为分支点以外的地方都非常平滑，到了乏善可陈的地步，而分支点正是曲面“叠起来”的地方，自然包含了我们想要的性质。我们可以说，球面覆盖的分支点越少，它就越简单。那么，对于有理函数来说，怎么寻找它的分支点呢？还是拿被套作例子。当被套有皱褶时，皱褶的部分实际上是三层被套覆盖同一点，但同样应该属于皱褶一部分的分支点上，却只有一层被套。也就是说，分支点覆盖的层数比正常的要少一些。如此类推，对于函数f(x)引出的球面覆盖来说，假设它的覆盖次数是d，那么说某个点a是分支点，就相当于说f(x)=a这个方程的解值少于d个，因为这个方程的每一个解其实都是“被套”上覆盖a的一点。换句话说，a是分支点当且仅当f(x)=a有重根。举个实际的例子。我们考虑函数 f(x) = -\frac{(x-1)^3 (x-9)}{64x} 显然方程 f(x)=0 有三次重根x=1，所以0是它的一个分支点；而稍微令人意想不到的是，如果我们将它减去1，就会得到 f(x) - 1 = -\frac{(x^2-6x-3)^2}{64x} 可以看出来，方程f(x)-1=0有两个二次重根，分别是二次方程x^2-6x-3的两个解，所以1也是一个分支点。最后还有一个分支点比较难想像，那就是无穷远点，因为当x趋向无穷或者0时，f(x)也趋向于无穷，所以无穷远点也是一个分支点。可以证明，这个函数再也没有别的分支点了。最简单的球面覆盖，一个分支点都没有，就是最标准的把内芯塞进被套里的方法。球面到自身的恒等映射f(x)=x就是这样的一个例子。可以证明，不存在只有一个分支点的球面覆盖，也就是说，接下来第二简单的情况就是拥有两个分支点的球面覆盖。可以证明，所有拥有两个分支点的球面覆盖，都可以利用适当的变换来“拉扯”变形到f(x)是多项式的情况。数学家们接下来要研究的，自然就是拥有三个分支点的球面覆盖。利用有名的莫比乌斯变换 z \mapsto \frac{az+b}{cz+d}, 我们可以将三个分支点分别移动到0、1和无穷远点（∞），而莫比乌斯变换不会改变球面覆盖的本质。所以说，我们只需要研究分支点分别在0、1和∞的球面覆盖，而能产生这样的球面覆盖的函数又叫别雷函数（Belyi function，正确地说是球面上的特殊情况），它的名字来源于20世纪的俄罗斯数学家别雷（G. V. Belyi）。但实际上，别雷并不是第一个研究别雷函数的人。早在19世纪末，大数学家菲利克斯·克莱因（Felix Klein）就已经利用别雷函数构造过一些特殊的球面覆盖（更精确地说，是单值群为有限单群PSL(2,11)的球面覆盖，它是一个11次覆盖）。节选自《Möbius Transformations Revealed》，原作者为Douglas Arnold和Jonathan Rogness，完整版本可在视频页面找到。但球面覆盖毕竟太抽象，即使是数学家，不借助适当的工具也难以“脑补”某个具体函数引出的覆盖，而对于一般人来说，光是球面可以穿过自身这一点就足够喝一壶的了，更不要说想像那些“折痕”都集中在几个分支点上的高次覆盖。要研究这些球面覆盖，似乎是难于登天。但数学家却说，三个分支点的球面覆盖，其实简单得连小朋友都能画出来。小朋友的涂鸦要讨论别雷函数，就要对球面覆盖和复分析有些更深入的了解。接下来的内容可能有一点抽象，如果实在不适应，可以跳过，直接看本节最后的结论。我们要研究的，是分支点分别在0、1和∞的球面覆盖，或者说某个别雷函数f(x)。既然球面覆盖的所有玄妙之处都蕴藏在分支点里，那么肯定要抓住这些分支点来研究。我们之前考虑过一个例子： f(x) = -\frac{(x-1)^3 (x-9)}{64x} 它是一个别雷函数，对应着一个球面覆盖。用一点点复分析的知识（代数基本定理），容易知道除去一些特殊情况外，对于任意的常数a，f(x)=a都有4个解。也就是说，这个别雷函数对应着一个次数为4的球面覆盖。我们再来看看这个函数的分支点。它在f(x)=0处有一个分支点，因为x=1是这个方程的三重根，但它还有另一个根x=9，也就是说，0这个分支点实际上对应两个不同的点：三重根x=1和单根x=9。同理，1这个分支点同样对应两个不同的点，两个都是双重根。我们能看到，两个分支点的分支方式不同，但既然它们从属于同一个球面覆盖，那么之间必然有某种联系。怎么样才能考察它们之间的联系呢？办法很简单：直接把两个点连起来就好了。也就是说，我们希望观察这两个分支点的每一层覆盖分支之间是如何连接起来的。更具体地说，因为球面覆盖就是一个球面覆盖着另一个球面，只要在被覆盖的球面上连结0和1两个点，在得到的线段上涂上极浓重的颜料，等到颜料渗透到覆盖的每一层之后，再将覆盖展开，得到的就是球面上的一幅图。用术语来说，就是研究f^{-1}([0,1])。那么，我们得到的图像会是怎么样的呢？还是用刚才的函数来举例，我们得到的图像如下：由方弦使用Maple制作在上图中，黑点代表0对应的点x=1和x=9，而白点代表1对应的点x=3+2\sqrt{3}和x=3-2\sqrt{3}。因为这个球面覆盖的次数是4，所以线段[0,1]上的点实际上被覆盖了四次，也就是说，当覆盖展开之后，我们将会看到四段曲线（四条边），它们连接着0对应的两个点x=1和x=9，还有1对应的两个点x=3+2\sqrt{3}和x=3-2\sqrt{3}。三重根x=1上连着三条边，单根x=9只有一条，而两个双重根x=3+2\sqrt{3}和x=3-2\sqrt{3}各自连接两条边。函数在x=0和x=\infty两个点上发散，而这个图恰好又有两个面，外部的面对应x=\infty，而内部的面对应x=0，而这些面的度数（也就是边界的长度）与函数在对应点上发散的度数相关。也就是说，单单从这幅图像里，我们就能读出函数本身的许多代数性质。如果把顶点连接的边的数目称为顶点的度数的话，图像性质与代数性质的对应可以归纳成下面的列表：别雷函数平面二部地图覆盖的次数边的条数0处的分支点黑色顶点1处的分支点白色顶点∞处的分支点面0处和1处分支点的重数顶点的度数∞处分支点的重数面的度数的一半实际上，对于所有的别雷函数，展开对应的球面覆盖后，线段[0,1]的图像总是包含着我们想要的很多代数性质：边的数目对应着覆盖的次数，黑点对应着f(x)=0的分支，白点对应着f(x)=1的分支，面对应着无穷大的分支，而每一个点和每一个面连接多少条边，都对应着球面覆盖在对应的分支上“折叠”起来的方法。那么，别雷函数对应的这些图像，到底又是什么呢？我们先忽略那些点和线的具体位置和形状，而只关注它们是如何在球面上连结起来的。用数学术语来说，就是先忽略它们的几何性质，而专注于它们的组合性质。首先，因为每条边实际上都来自线段[0,1]，所以它们连结的必定是一个对应着f(x)=0的黑点和一个对应着f(x)=1的白点。也就是说，别雷函数对应的图像，实际上可以抽象成一个二部图，这类图的顶点，一黑一白，而每条边的两端恰好是一黑一白两个顶点。但这些图像跟一般所说的二部图不完全一样。在数学中，一个图就是一堆顶点加上连结顶点的一些边，但连结同一个顶点的边之间并没有什么特别的关系。但别雷函数对应的图像实际上是一个画在了球面上的图，所以连结同一个顶点的边会在围绕在顶点周围，这就给它们赋予了顺序关系。这样画在了球面（或者别的封闭曲面）上的图，又叫组合地图。而别雷函数对应的图像，正式的名称是平面上的二部地图。在这里，组合地图即使画歪了一点，只要保持顶点、边以及边之间的关系，还算是同一个地图。一个亏格为1的二部地图，由方弦制作现在我们知道，每个别雷函数都对应着一个平面上的二部地图，那么是不是所有这样的地图都对应着一个别雷函数呢？事实上，利用一些复分析方面的知识，可以证明别雷函数与球面上的二部地图有着一一对应的关系。不仅如此，我们还能把这些别雷函数限定为系数是代数数的分式（代数数就是整系数多项式方程的解）。这实际上就是别雷的贡献：他在1979年证明了，对于一大类重要函数（所谓的“光滑代数曲线”），它们（的适当的等价类）与别雷函数引出的球面覆盖有着一一对应的关系。这些“光滑代数曲线”可以粗略理解为分支点只有0、1和∞，系数是代数数的分式。也就是说，如果我们要找分支点满足某些条件的分式，只需要看看根据这些条件能不能在平面上画出一个二部地图就可以了。总结一下：三个分支点的球面覆盖，等价于所谓的“平面上的二部地图”，在这个地图上有黑色和白色两种顶点，而每条边都连接一黑一白两个顶点，从而把所有顶点连成一片。而球面覆盖的许多性质，都能反映在地图上的顶点、边和面上。别雷证明了，“光滑代数曲线”（大概就是某一类系数是代数数的分式）与三个分支点的球面覆盖有着一一对应的关系。所以，要寻找分支点满足某些条件的分式，只需要看看能不能画出满足对应条件的二部地图。而任意一个二部地图，哪怕是小朋友的涂鸦作品，也必然存在对应的分式，它的球面覆盖展开之后就是这个二部地图。涂鸦的例子，作者为Laurent Bartholdi说了半天，云里雾里的，这又有什么意义？</content></doc>
<doc>     <docid>87<docid>     <title>胃难受？快去考古研究所做个检查，证明你来自未来！</title>     <link>http://songshuhui.net/archives/96650</link>     <content>本文作者：Sheldon如果你经常胃难受，一定要重视起来！（美指：牛猫 | 绘制：赏鉴）注：1. 碳-14呼气试验的放射性很微弱，对人体是安全的。被试者吃下去的尿素也会通过尿液排出，因此不用担心。2. 有资料称，如果胃里含有幽门螺旋杆菌，但没有不适的症状，可以选择不去管它。3. 杀灭幽门螺旋杆菌的三联用药有很多种组合，例如阿莫西林+克拉霉素（这两种是抗生素）+奥美拉唑（这是抑制胃酸的药物）。本文已发表于《不存在日报》</content></doc>
<doc>     <docid>88<docid>     <title>一分钟看懂2016年诺贝尔化学奖</title>     <link>http://songshuhui.net/archives/96628</link>     <content>本文作者：Sheldon美指：牛猫 | 绘制：赏鉴2016年诺贝尔化学奖，就是三个化学家学会用分子造车。第一步，先学会造轮胎。第二步，把轮胎套在轴上，让他们“动次打次”动起来。第三步，让轮胎绕着轴转动。&nbsp;</content></doc>
<doc>     <docid>89<docid>     <title>一分钟看懂2016年诺贝尔物理学奖</title>     <link>http://songshuhui.net/archives/96622</link>     <content>本文作者：Sheldon美指：牛猫 | 绘制：赏鉴2016年诺贝尔物理学奖，说白了就是在3维世界研究2货。</content></doc>
<doc>     <docid>90<docid>     <title>Erlang之父Joe Armstrong确认将参加中国软件开发者大会</title>     <link>http://www.iteye.com/news/31904</link>     <content>          2016年11月18日-20日，由CSDN重磅打造的年终技术盛会，SDCC 2016中国软件开发者大会将在北京举行，大会面向国内外的中高端技术人员，聚焦最前沿技术及一线的实践经验，从而助力企业的技术升级和改造、全面提升技术人员的综合实力。本次大会非常有幸地邀请到了Erlang最初的设计者和实现者Joe Armstrong来华，出席SDCC 2016·北京站的Keynote并带来精彩的主题分享，他也是Erlang OTP系统项目的首席架构师。他拥有瑞典皇家理工学院博士学位，是容错系统开发领域的世界级专家。此外，他还在开发旨在替代XML的标记语言ML9。现任职于爱立信公司。Joe Armstrong最广为人知的是他发明了Erlang编程语言，并且创建了用于构建Erlang应用程序的框架——开放电信平台（Open Telecom Platform，OTP）。在现代语言的版图中，Erlang有点另类。同很多流行的语言相比，它既老又新。早在1986年，也就是Perl出现的前一年，Armstrong就已经开始了Erlang的工作，当时它只作为商用产品出售并且主要在爱立信公司内部使用。这种情况直到1998年Erlang作为开源项目发布后才发生变化，那时Java和Ruby已经问世3年了。Erlang并非起源于Algol系列中的某个成员，而是源于逻辑编程语言Prolog。当时Erlang设计初衷也相当明确，它针对的软件是类似于电话交换机那样的高可用性、高可靠性系统。但是几乎在不经意间，Erlang适合于构建电话交换机的那些特征也让它非常适合于编写并发软件，当程序员们开始努力应对多核系统未来的发展趋势时，并发性引起了他们的注意。Armstrong本人也有点另类。他起初是一名物理工作者，在攻读物理学博士学位时因为用完积蓄而转向了计算机科学，找到一份研究员的工作，为英国人工智能领域奠基人之一的Donald Michie工作。在Michie的实验室，Armstrong接触了人工智能领域各个方面的杰作，成为英国机器人学会的创始成员并撰写了一些有关机器人视觉的论文。由于Lighthill所做的那份非常有名的调查报告 ，人工智能的资金来源枯竭，Armstrong又回到了物理学领域，从事了5年多与物理学编程相关的工作。开始时他在欧洲非相干散射科学协会（EISCAT）工作，后来又到了瑞典空间研究中心，最后加入了爱立信计算机科学实验室，Erlang就是在那里发明的。如果你想要获知他更多的情况，翻翻这本书吧编程人生 (豆瓣)。顺便八卦一下Erlang。Erlang这们语言最牛的地方就是强大的并行处理能力和容错机制。Armstrong的博客有篇浅显易懂的文章介绍Erlang背后的思想。值得一读。文章标题也很骠悍：“Concurrency Is Easy”。端的豪气万丈。简单说，Erlang能够创建和管理大量的进程（不是操作系统级别的）。那些进程在不同的操作系统上有同样的行为，可以被垃圾回收，对运行地点透明（location transparent），不会破坏其它进程的运行。任意两个进程间完全独立，不共享任何状态，一切交流通过消息来传递，当然也就无需上锁。这样的设计思想造就了适合解决如下问题的Erlang：系统高度并发 － 支持几十万个并行行为实时处理计算高度分布系统要求高度可靠：每年的脱机时间以分钟算，甚至永不当机系统高度复杂：代码量以百万行计持续操作：以年计系统要求持续在线更新。 　　 而要做到这些，需要：并发 进程错误隔离 隔离进程错误侦查 发现什么东西当掉了错误诊断 为什么当掉在线代码更新 持续进化的系统(同时运行多个版本)稳定存储 崩溃恢复 　　 系统彻底独立，遵循所谓的无共享语义是系统稳定和高并发的关键。至于句法么，可以到www.erlang.org上去看指南。引用注：文章大多数内容整理自网络，感谢图灵和人民邮电出版社的授权。                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>91<docid>     <title>探讨增强现实（AR）基于模型的追踪技术</title>     <link>http://www.iteye.com/news/31903</link>     <content>          引用作者简介： 古鉴，于2015年加入暴风魔镜任 AR 合伙人，负责 AR 类产品及交互技术的研发工作。本文为作者投稿，非经作者同意，请勿转载。欢迎技术投稿、约稿、给文章纠错，请发送邮件至mobile@csdn.net。最近增强现实越来越被大家熟悉起来。最近看到一个案例（http://www.pps.tv/w_19rtditek5.html），见图一。 现代汽车发布电子用车手册，其亮点是融入了 AR 技术。车主只需拿起手机或平板对准车子，该 AR 系统即能自动识别这是车子的哪一部分，并给出相关的信息。目前，该用车手册涵盖了空气滤清器、智能巡航控制、警示标志、机油、制动液等方面的信息，同时还包含基于增强现实技术的视频、指南。图一 现代汽车运用增强现实技术很多人问我这是用到了什么样的 AR 技术，是不是 SLAM？没错，这里面的确用到了 SLAM 相关技术。更确切地说，应该是 SLAM 框架中的一个重要技术环节：基于模型的追踪技术（Model Based Tracking）。今天，就让我们来讨论一下这个基于模型的追踪技术技术，我先从整体介绍一下增强现实中的追踪技术。增强现实技术的核心组成部分主要是(图二)：显示技术、输入交互技术和识别追踪技术。图二 增强现实的核心技术显示部分主要是光学成像相关技术，该部分与硬件相关的比较多，这里就不做展开介绍了。输入交互的技术主要涉及语音交互、手势交互等。这个我们会在下一期重点讨论。我认为有了交互技术及空间感知的追踪技术，即可实现了 AR 的基本功能。在这里，我们重点介绍追踪技术。追踪技术是计算机科学中一个广阔而重要的领域，它在教育、娱乐、工业和制造领域具有广泛的应用。伴随着成像设备和硬件计算能力的发展，当前基于计算机视觉的物体跟踪技术取得了重大的发展。追踪技术主要分为：光学追踪；内部传感器追踪；超声波追踪；磁力追踪；机械装置追踪。光学追踪是相对来说成本最低，比较精确的解决方案。它的难点主要在于视觉算法的门槛较高。AR 中的光学追踪分为几种（见图三），在 VR 中 OutsideIn 的方式用的比较多，比如 Oculus、HTC Vive、PS VR用的都是 Outside 进行的位置追踪。但是在AR中，基本都是 InsideOut，比如说 Hololens。当然最近 Oculus 的一体机用的也是 InsideOut 的追踪方式。InsideOut 比 OutsideIn 更加方便，成本更加低。但目前，OutsideIn 的方式更为精确一些。如在一些工业场景，多使用反光材质的标示点或特殊材质进行 Outsidein 光学追踪。标识追踪现在用的比较多，比如说大家看到的识字卡片、绘本等都是所谓的标识追踪，其最早的代表就是 ARToolkit 的。但该基于 Marker 的技术需要预先在 AR 场景中粘贴一定的标识，在用户体验和适应性方面具有较大的局限性。为此，基于无标识的 AR 技术是目前发展的方向。其中，无标识别追踪是实现该技术核心问题之一，像是 SLAM 等都是属于这个类别。我们这次主要介绍红色部分的 Model-Based Tracking。图三 光学追踪分类Model-Based Tracking 的主要技术框架如下图四所示，下面将该过程分为建模（Models)、视觉信息处理(Visual processing)、跟踪(Tracking)三个方面，并依次对其进行展开。图四 基于模型跟踪的三个主要任务：Models，Visual processing，Tracking1. 模型建立（Models）模型（Models）的建立主要从目标、传感器和环境三个方面展开。首先对于跟踪目标，需要该目标一些先验信息（prior knowledge)，如被跟踪物体的形状、外观、姿态等特性。其次是需要从传感器的角度去考虑，比如如果使用未标定的单目相机，其获取的信息多以 pixel 为单位，若使用立体相机或深度相机，其构建的尺寸信息是 Metric 的，因此不同传感器的选择对被跟踪物体的表征形式会有不同影响。最后是从环境的角度，在基于视觉的跟踪过程中，环境对跟踪的准确性具有很关键的作用，比如在室内光照、环境相对稳定的情况下，重建所得模型就具有更加稳定，能很大程度提高基于模型跟踪的准确性。当前，在模型建立（models）阶段，主要可分为 Online 和 Offline 两种模型构建技术。Online 在线建模方式：以 SLAM 为代表，其在追踪的同时建立模型，其中追踪和建模是两个相互依赖的过程，其彼此间的误差会相互传递并累加，为保证较好追踪精度，一般需要借助 Bundle Adjustment 等优化方法调整。但目前，该优化方法计算量较大。目前在 PC 端有较好的实现，在移动端尚存在计算能力相对不足的问题。Offline 离线建模方式：将建模和跟踪分开，规避了 SLAM 过程中建模的不确定性，同时克服了建模所需大量运算量的问题，因此该方法能提高跟踪的精度和效率。目前 Offline 离线建模主要是有两种情况：（1）已知目标物体的 CAD 形状，如模型在设计制造过程中已有的 CAD 先验知识，在工业应用及企业级别的应用场合，因此多以本情况为主。 （2）通过传感器（如结构光扫描、RGBD、ToF等）逆向获取目标物体的模型信息，然后以此模型作为一个先验知识。在实际的生活应用中，个人参与者不大可能获取已有物体的 CAD 形状，因此只能借助简单的传感器离线获取模型，因此这种离线获取模型的方式更加适用于消费者。图五 不同的物体跟踪形式（当前主要以Shape和Appearance为主）2. 视觉信息处理 (Visual processing)视觉信息处理主要是提取和关联传感器所获取的目标物体信息，以更新整个跟踪系统的状态。在实际的应用中，我们需要根据被跟踪目标的特性，选择稳定的跟踪线索（如颜色、边界、运动规律、背景信息等等）。具体在实际应用过程中，是根据构建的模型信息，确定被预处理的对象。如在工业的 AR 等跟踪过程中，多以 CAD 的形状和拓扑信息为处理对象，该视觉信息处理过程即为对形状和拓扑信息的采样提取，和数据关联等。在 2D/3D 领域，多以其各自对应的纹理特征和形状特征为研究对象，整个视觉信息的处理过程是以提取、优化获取构建模型的稳定特征为目标。目前，该方法可进一步细分为：基于颜色的信息处理；基于关键特征的信息处理；基于轮廓的信息处理和基于模板的信息处理四部分。3. 跟踪 (Tracking)当被传感器获取的数据经预处理输入后，即可实现物体的定位跟踪，该过程具体可以细分为检测和跟踪两个阶段。在检测阶段，需要以被跟踪物体的先验信息作为初始值，利用觉信息处理技术获取的模型信息，与输入的数据进行匹配，确定其在空间的姿态，实现对目标的跟踪。目前针对移动端 6DoF（Degree of Freedom）的跟踪，主流是采用视觉和 IMU 进行融合，实现更稳定的跟踪（如 Tango）。以上就是我们极少的 model-Based tracking. 以后我们会逐一介绍增强现实技术是如何实现的。                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>92<docid>     <title>训练神经网络的五大算法</title>     <link>http://www.iteye.com/news/31902</link>     <content>          引用原文： 5 algorithms to train a neural network 作者： Alberto Quesada 译者： KK4SBB 责编：何永灿，关注人工智能，投稿请联系 heyc@csdn.net 或微信号 289416419神经网络模型的每一类学习过程通常被归纳为一种训练算法。训练的算法有很多，它们的特点和性能各不相同。问题的抽象人们把神经网络的学习过程转化为求损失函数f的最小值问题。一般来说，损失函数包括误差项和正则项两部分。误差项衡量神经网络模型在训练数据集上的拟合程度，而正则项则是控制模型的复杂程度，防止出现过拟合现象。损失函数的函数值由模型的参数（权重值和偏置值）所决定。我们可以把两部分参数合并为一个n维的权重向量，记为w。下图是损失函数f(w)的图示。如上图所示，w*是损失函数的最小值。在空间内任意选择一个点A，我们都能计算得到损失函数的一阶、二阶导数。一阶导数可以表示为一个向量：ᐁif(w) = df/dwi (i = 1,…,n)同样的，损失函数的二阶导数可以表示为海森矩阵（ Hessian Matrix ）：Hi,jf(w) = d2f/dwi·dwj (i,j = 1,…,n)多变量的连续可微分函数的求解问题一直被人们广泛地研究。许多的传统方法都能被直接用于神经网络模型的求解。一维优化方法尽管损失函数的值需要由多个参数决定，但是一维优化方法在这里也非常重要。这些方法常常用于训练神经网络模型。许多训练算法首先计算得到一个训练的方向d，以及速率η来表示损失值在此方向上的变化，f(η)。下图片展示了这种一维函数。f和η*在η1和η2所在的区间之内。由此可见，一维优化方法就是寻找到某个给定的一维函数的最小值。黄金分段法和Brent方法就是其中两种广泛应用的算法。这两种算法不断地缩减最小值的范围，直到η1和η2两点之间的距离小于设定的阈值。多维优化方法我们把神经网络的学习问题抽象为寻找参数向量w*的问题，使得损失函数f在此点取到最小值。假设我们找到了损失函数的最小值点，那么就认为神经网络函数在此处的梯度等于零。通常情况下，损失函数属于非线性函数，我们很难用训练算法准确地求得最优解。因此，我们尝试在参数空间内逐步搜索，来寻找最优解。每搜索一步，重新计算神经网络模型的参数，损失值则相应地减小。我们先随机初始化一组模型参数。接着，每次迭代更新这组参数，损失函数值也随之减小。当某个特定条件或是终止条件得到满足时，整个训练过程即结束。现在我们就来介绍几种神经网络的最重要训练算法。1. 梯度下降法（Gradient descent）梯度下降方法是最简单的训练算法。它仅需要用到梯度向量的信息，因此属于一阶算法。我们定义f(wi) = fi and ᐁf(wi) = gi。算法起始于W0点，然后在第i步沿着di = -gi方向从wi移到wi+1，反复迭代直到满足终止条件。梯度下降算法的迭代公式为：wi+1 = wi - di·ηi, i=0,1,…参数η是学习率。这个参数既可以设置为固定值，也可以用一维优化方法沿着训练的方向逐步更新计算。人们一般倾向于逐步更新计算学习率，但很多软件和工具仍旧使用固定的学习率。下图是梯度下降训练方法的流程图。如图所示，参数的更新分为两步：第一步计算梯度下降的方向，第二步计算合适的学习率。梯度下降方法有一个严重的弊端，若函数的梯度变化如图所示呈现出细长的结构时，该方法需要进行很多次迭代运算。而且，尽管梯度下降的方向就是损失函数值减小最快的方向，但是这并不一定是收敛最快的路径。下图描述了此问题。当神经网络模型非常庞大、包含上千个参数时，梯度下降方法是我们推荐的算法。因为此方法仅需要存储梯度向量（n空间），而不需要存储海森矩阵（n2空间）2.牛顿算法（Newton’s method）因为牛顿算法用到了海森矩阵，所以它属于二阶算法。此算法的目标是使用损失函数的二阶偏导数寻找更好的学习方向。我们定义f(wi) = fi, ᐁf(wi) = gi and Hf(wi) = Hi。用泰勒展开式估计函数f在w0值f = f0 + g0 · (w - w0) + 0.5 · (w - w0)2 · H0H0是函数f在w0的海森矩阵值。在f(w)的最小值处g = 0，我们得到了第二个等式g = g0 + H0 · (w - w0) = 0因此，将参数初始化在w0，牛顿算法的迭代公式为wi+1 = wi - Hi-1·gi, i = 0,1,…Hi-1·gi 被称为牛顿项。值得注意的是，如果海森矩阵是一个非正定矩阵，那么参数有可能朝着最大值的方向移动，而不是最小值的方向。因此损失函数值并不能保证在每次迭代都减小。为了避免这种问题，我们通常会对牛顿算法的等式稍作修改：wi+1 = wi - (Hi-1·gi) ·ηi, i=0,1,…学习率η既可以设为固定值，也可以动态调整。向量d = Hi-1·gi被称为牛顿训练方向。下图展示的是牛顿法的流程图。参数的更新也分为两步，计算牛顿训练方向和合适的学习率。此方法训练神经网络模型的效率被证明比梯度下降法更好。由于共轭梯度法不需要计算海森矩阵，当神经网络模型较大时我们也建议使用。4. 柯西-牛顿法（Quasi-Newton method）由于牛顿法需要计算海森矩阵和逆矩阵，需要较多的计算资源，因此出现了一个变种算法，称为柯西-牛顿法，可以弥补计算量大的缺陷。此方法不是直接计算海森矩阵及其逆矩阵，而是在每一次迭代估计计算海森矩阵的逆矩阵，只需要用到损失函数的一阶偏导数。海森矩阵是由损失函数的二阶偏导数组成。柯西-牛顿法的主要思想是用另一个矩阵G来估计海森矩阵的逆矩阵，只需要损失函数的一阶偏导数。柯西-牛顿法的更新方程可以写为：wi+1 = wi - (Gi·gi)·ηi, i=0,1,…学习率η既可以设为固定值，也可以动态调整。海森矩阵逆矩阵的估计G有多种不同类型。两种常用的类型是Davidon–Fletcher–Powell formula (DFP)和Broyden–Fletcher–Goldfarb–Shanno formula (BFGS)。柯西-牛顿法的流程图如下所示。参数更新的步骤分为计算柯西-牛顿训练方向和计算学习率。许多情况下，这是默认选择的算法：它比梯度下降法和共轭梯度法更快，而不需要准确计算海森矩阵及其逆矩阵。5. Levenberg-Marquardt算法Levenberg-Marquardt算法又称为衰减的最小 平方法，它针对损失函数是平方和误差的形式。它也不需要准确计算海森矩阵，需要用到梯度向量和雅各布矩阵。假设损失函数f是平方和误差的形式：f = ∑ ei2, i=0,…,m其中m是训练样本的个数。我们定义损失函数的雅各布矩阵由误差项对参数的偏导数组成，Ji,jf(w) = dei/dwj (i = 1,…,m &amp; j = 1,…,n)m是训练集中的样本个数，n是神经网络的参数个数。雅各布矩阵的规模是m·n损失函数的梯度向量是：ᐁf = 2 JT·ee是所有误差项组成的向量。最后，我们可以用这个表达式来估计计算海森矩阵。Hf ≈ 2 JT·J + λIλ是衰减因子，以确保海森矩阵是正的，I是单位矩阵。此算法的参数更新公式如下：wi+1 = wi - (JiT·Ji+λiI)-1·(2 JiT·ei), i=0,1,…若衰减因子λ设为0，相当于是牛顿法。若λ设置的非常大，这就相当于是学习率很小的梯度下降法。参数λ的初始值非常大，因此前几步更新是沿着梯度下降方向的。如果某一步迭代更新失败，则λ扩大一些。否则，λ随着损失值的减小而减小，Levenberg-Marquardt接近牛顿法。这个过程可以加快收敛的速度。下图是Levenberg-Marquardt算法训练过程的流程图。第一步计算损失值、梯度和近似海森矩阵。然后衰减参数和衰减系数。由于Levenberg-Marquardt算法主要针对平方和误差类的损失函数。因此，在训练这类误差的神经网络模型时速度非常快。但是这个算法也有一些缺点。首先，它不适用于其它类型的损失函数。而且，它也不兼容正则项。最后，如果训练数据和网络模型非常大，雅各布矩阵也会变得很大，需要很多内存。因此，当训练数据或是模型很大时，我们并不建议使用Levenberg-Marquardt算法。内存使用和速度的比较下图绘制了本文讨论的五种算法的计算速度和内存需求。如图所示，梯度下降法往往是最慢的训练方法，它所需要的内存也往往最少。相反，速度最快的算法一般是Levenberg-Marquardt，但需要的内存也更多。柯西-牛顿法较好地平衡了两者。总之，如果我们的神经网络模型有上千个参数，则可以用节省存储的梯度下降法和共轭梯度法。如果我们需要训练很多网络模型，每个模型只有几千个训练数据和几百个参数，则Levenberg-Marquardt可能会是一个好选择。其余情况下，柯西-牛顿法的效果都不错。                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>93<docid>     <title>Facebook 用 Rust 重写 Mercurial 服务器</title>     <link>http://www.iteye.com/news/31898</link>     <content>          Linus Torvalds创建的Git分布式版本控制系统是市场占有率最高的版本控制系统：Git占了七成，另一个开源分布式版本控制系统Mercurial 则占了约13.5%。大多数开发者偏爱Git而对Mercurial 持怀疑态度，但如今他们正改变对Mercurial态度。在本月早些时候举行的Mercurial开发者会议上， Facebook演示了Mercurial在可扩展性方面的优势：它开发了一个扩展高效缓存blame查询，查询速度提升了4-10x，以前要花10秒的blame查询现在只要1秒；Facebook正在用 Rust重写Mercurial 服务器，将支持可插拔的键值存储；Facebook演示了增强工作流的功能hg absorb；Facebook、Google和 Unity正在Mercurial上实验虚拟文件系统，加快处理大量文件和改进自动操作。来自：Solidot                    感谢 mengyidan1988 投递这篇资讯                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>94<docid>     <title>苹果终于任命AI研究负责人，Ruslan其人其事</title>     <link>http://www.iteye.com/news/31897</link>     <content>          昨日，CMU卡内基梅隆大学副教授Ruslan Salakhutdinov发推宣布加入苹果，业内纷纷表示“苹果AI有救了”。Ruslan Salakhutdinov拥有多伦多大学机器学习方向博士学位，师从人工智能之父Geoffrey Hinton。说起Geoffrey Hinton大家不会陌生，正是他自1960年代起，一步步将深度学习从边缘学科变成现如今AI技术的核心，进而引发此次深度学习热潮的掀起。Geoffrey Hinton麾下的人工智能圈子可谓把控着当今各巨头的深度学习命脉，从谷歌、微软、Facebook的人工智能负责人，到国内我们所熟知的百度首席科学家吴恩达，都出自Geoffrey Hinton组建的人工智能团队NCAP。Ruslan当然也在这个圈子里，能成为Geoffrey的学生，Ruslan必然有很高的学术水平，根据其个人简历所述，Ruslan共发表论文105篇。据谷歌学术统计，其论文共被引15667次，h指数高达43。其发表的Restricted Boltzmann machines for collaborative filtering、Dropout: a simple way to prevent neural networks from overfitting、Bayesian probablisitic matrix factorization using MCMC三篇论文均有很高的科研价值。2009年Ruslan从多伦多大学取得博士学位后，在麻省理工大学开始了他的博士后生涯，研究方向为：大脑与认知科学、计算机科学和人工智能。两年后（2011），Ruslan重回多伦多大学，任教于计算机科学系和统计科学系，职称为助理教授。今年2月，Ruslan前往卡内基梅隆大学（拥有世界上最好的计算机科学学院）任机器学习专业副教授。仅8个月后便拥有除副教授之外的第二重身份——苹果人工智能研究总监，其职业发展速度不可谓不快。加入苹果后，Ruslan第一件事便是招兵买马。要加入他的团队，需要至少为计算机科学方向博士，且有高性能的机器学习系统的设计与研发经验，并且要求对深度学习、计算机视觉、机器学习、增强学习、系统优化以及数据挖掘均有造诣。团队要求如此之高，不禁让人好奇，苹果在AI方向究竟要有何动作。一直以来，业界普遍认为苹果的人工智能弱于谷歌、微软、Facebook等公司，主要原因有二。一方面是因为众所周知的苹果喜欢保密的脾气。为了防止竞争者的效仿，苹果一般不会将研发成果发表。因此业内有声音认为，如此高产的Ruslan教授加入苹果后，其研发成果将会被苹果保密，这将是全世界深度学习行业的损失。第二方面是苹果尊重用户隐私的产品卖点，使其不能像其他行业巨头一样将用户的信息储存到云端并在云端强大的服务器上进行学习。因此苹果选择将AI学习系统放在个人的设备上，毫无疑问，这大大削弱了苹果AI的竞争力。但苹果表示，对此他们已经有了很好的解决方案。其基于个人设备的深度学习系统，大小仅为200MB左右（取决于所储存的私人信息的多少）。然而神经网络的训练需要大量的数据样本，既然苹果称自己不会将用户的隐私数据存储至云端，那么该神经网络要如何训练？对此，苹果表示，其人工智能的训练包括两部分，在云端的针对大量不敏感信息的训练，以及在个人设备上的针对个人敏感信息的个性化训练。为此，苹果于今年六月推出了Differential Privacy技术，称为差别隐私保护方法。其具体原理为，在敏感数据中加入噪音，从而使系统不能识别用户的ID等信息，换句话说，系统在训练时不知道样本的出处，从而达到数据保护的目的。此方法是否会行之有效？苹果尊重用户隐私权的做法是不是作茧自缚？抑或高人自有妙计？笔者相信苹果自有其一套行事准则。近年来苹果通过收购深度学习公司获得了大量深度学习方面的人才，至今仍在广纳贤士的进程中。在苹果网站上进行职位搜索，能发现129个在招职位与深度学习有关。且苹果对于深度学习的招聘并非只看中经验，而是着重于候选人的基本素质，如数理及统计能力、计算机相关能力等。手握大量人才，苹果没有像其他各巨头一样成立深度学习研发中心，而是将深度学习专家分散至各个产品中，让深度学习的思想落地，这也成就了iOS10为用户带来的多重人工智能体验。苹果的人工智能体现在细节中，而非某个重磅的人工智能产品。例如Siri的声音、Siri的理解能力、从主界面右滑会出现系统猜测的用户将要打开的APP等。底层一些的有通过深度学习算法延长设备的续航时间、iPad Pro手写功能防止手掌对纸张的滑动等等，都体现了苹果深度学习的应用。对于此次苹果雇佣Ruslan， Hacker News上的一些评论很有意思。引用vonnik：Ruslan早在十年前就是人工智能方面的大粗腿了啊，他可是Geoff Hinton的学生啊，2006年那篇RBMs的论文上面就有他的名字啊。苹果这次赚大了。joe_the_user：一个响当当的名字或许在华尔街或者媒体圈有用，但是在科技界，用处可能不大。原因在于：1. 机器学习发展速度可能是当今世界上所有学科里面最快的，因此在机器学习领域，人们关心的不是你之前十年做过多少研究有过多少成果，而是你现在用这个理论做了什么。2. 正是因为开放科研结果，机器学习才能发展到当下的程度，而苹果一直秉持着科研结果保密的态度，这使其对其他科研学者的吸引力大大降低。仅仅雇佣一位大牛对于其AI事业并不会有大的推动作用。system16：从Swift看来，苹果保密的态度似乎已经有了放宽。我觉得他们从地图和Siri上面学到了教训，当一个产品需要大量的数据支撑，来为用户提供更好的交互体验的时候，闭关锁国是不行的。Grandalf：我用iPhone五年了，但是我从来没用过Siri，前两天我的iPhone坏了，为了等iPhone7，我用了一个月的安卓。用安卓的时候我被OK Google惊艳到了，所以当我拿到IPhone7的时候我开始用Siri。用OK Google，你让它完成的事情它能做得很好，但是Siri就连播放音乐有的时候都做不到。IBM：我觉得Siri表现得很好，用Siri放音乐你甚至不用碰手机一下。现在大家都在把Siri和Google Now作比较，我觉得这不公平。苹果自身没有搜索引擎，所以苹果没有强大的数据库来训练Siri来回答一些常识性问题。而且二者的定位也不一样，Siri是私人助手，是帮你做事情的。而且现在苹果也开放了一些Siri API，所以日后的功能肯定会越来越多。                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 1 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>95<docid>     <title>【知识库专访】蒋守壮：Hive性能优化实战分享</title>     <link>http://www.iteye.com/news/31896</link>     <content>          【编者按】Hive作为Hadoop家族的重要一员，具有学习成本低，开发者可通过类SQL语句快速实现简单的MapReduce统计，不必开发专门的MapReduce应用。在攒库中，Hive也不负众望，得到了非常高的票数。为此，CSDN知识库特邀社区专家蒋守壮（博客：http://blog.csdn.net/jiangshouzhuang）绘制了Hive技术图谱，帮助广大开发者更加系统、全面的学习直播技术。Hive知识库发布，速来关注！与此同时，我们还采访了蒋守壮老师，分享他的技术成长之路以及对Hive技术的解读与思考。CSDN社区专家、知识库特邀编辑蒋守壮结缘大数据技术CSDN:请简单地介绍一下自己。蒋守壮：首先非常感谢CSDN能够给我这次被专访的机会，可以让我重新审视自己的职业发展历程，也希望能够帮助一些同行的朋友们。目前就职万达网络科技集团有限公司，是一名大数据分析师和大数据平台架构师。我是电子专业出身，但自己对软件行业非常感兴趣，所以大学里一边学习本专业课程，一边到图书馆或活跃在相关技术网站上学习计算机专业课程。虽然累点苦点，但是为自己职业生涯打下了扎实的基础。从毕业后至今，我已经在IT圈跌打滚爬5年多了，经历了很多，有苦有乐，这些都丰富了自己的阅历。工作以来，我一直热爱分享和交流技术，热衷于写博客（CSDN），参与开源社区（Apache一些顶级项目），也乐于在Github上开源自己的软件产品。慢慢地，我从一名菜鸟，成长为资深工程师和架构师，但是我要学习的东西太多了，我会一直坚持下去。CSDN:你是如何与计算机结缘，踏上大数据开发之路的，能否跟我们分享一下。蒋守壮：其实我与计算机结缘的原因，可能会和一些朋友相似，是因为黑客，觉得很酷，也很有挑战性的。这是一个启蒙阶段，于是我开始漫长的探索，学习汇编，C语言，C++，Java；学习计算机原理，Linux内核；学习网络，TCP/IP；学习密码学；学习各种主流数据库；学习脚本，Perl，Python，Shell等等。为了测试一些病毒，因为不可能用自己笔记本的操作系统测试，于是就开始研究虚拟化技术，使用虚拟机搭建各种Linux操作系统进行模拟测试，就这样，走上了一条不归路（是技术研究不归路，不是进局里了）。在这个探索的过程中，发现自己对Linux和数据库方面特别感兴趣，于是2011年毕业后就从事了Linux和数据库方面的工作。从2012年底开始，我开始接触MPP（大规模并行处理）架构的关系型数据库，使用和维护过Vertica和Greenplum等MPP架构的数据库。在电信行业分析TB和PB级别海量数据时性能还是非常不错的。但是随着业务的发展，处理非结构化和半结构化数据的需求迫在眉睫。我一直关注和参与Apache开源社区，见证了Hadoop生态圈的快速发展，Hadoop非常方便处理非结构化和半结构化数据，于是我们的大数据平台架构开始融合Hadoop，形成混合架构。随着Hadoop生态圈家族不断壮大，支持各种场景的组件出现，SQL支持也非常完善，于是大数据平台架构就逐渐以Hadoop为核心来构建。尤其这两年来，Spark，Flink等通用并行框架不断发展壮大，集成批处理，流计算，实时分析，机器学习和图计算，为企业级构建大数据平台提供更多的选择。CSDN:分享一下你最近使用的框架，它们都解决了哪些方面的问题。蒋守壮：前段时间，我使用Kafka，Spark Streaming和HBase来进行实时数据计算分析，将保险用户相关的数据发送到Kafka消息队列，后端将从Kafka消费数据，并使用Spark Streaming进行流数据实时分析，然后将处理后的数据写入HBase集群中，最后用户从HBase中获取分析好的数据。现阶段，我们基于现有的Hadoop大数据平台，集成Apache Kylin组件，Kylin可以对Hive中的表进行关联后多维度处理，并将结果写入HBase，其与Hadoop生态圈整合非常完善，非常适合用来做海量数据规模下的OLAP分析，进行实时或准实时查询上百亿数据。另外，Kylin和BI工具也可以很好的集成，比如Tableau，Saiku等。Hive痛点直击&amp;经验分享CSDN：hive的使用场景有哪些？适合实时性强的分析场景使用么？蒋守壮：Hive是建立在Hadoop上的数据仓库基础构架，它的最佳使用场合是大数据集的批处理作业，一般延迟性比较高，并不能够在大规模数据集上实现低延迟快速的查询，所以不适合实时性强的分析场景。不过目前Hive底层的计算框架除了支持原生的MapReduce，还支持Tez和Spark，这对提升Hive的查询处理性能帮助很大，从Hive 2.0版本开始，推荐使用Tez或Spark作为Hive的计算引擎。如果希望实时查询分析，可以结合Impala，Presto，Drill等开源的交互式、实时的查询引擎使用，它们能够访问Hive中的表进行数据查询分析。CSDN：hive的技术特点有哪些？ 类sql操作啊，内置大量用户函数udf等等。蒋守壮：Hive应该是第一个出现的SQL on Hadoop的产品，技术特点如下：类SQL查询方式，支持标准SQL也比较全面；支持索引，加快数据查询；元数据保存在关系型数据库中，比如MySQL，可以减少查询过程中执行语义检查的时间；支持多种数据存储格式类型，比如Text，Sequence，RCFile，Parquet和ORC等，针对不同的场景进行选择；数据存储在HDFS分布式文件系统中，实现冗余高可用；内置常用的基本函数，以及窗口分析型函数，同时支持用户自定义UDF，UDAF，UDTF函数；底层计算引擎支持MapReduce，Tez和Spark，根据需要进行动态选择。CSDN：Hive创建的内部表和外部表有何异同？蒋守壮：这个其实和很多传统数据库中的内部表和外部表一样，没有什么差别。我将从表的创建和删除两方面简单介绍一下：Hive 创建内部表时，后面执行导入操作时会将用户数据移动到表所在的数据仓库指向的路径；若创建外部表时，只会记录表对应的用户数据所在的路径，不对用户数据的位置做任何改变。在删除表的时候，内部表的元数据和用户数据会被一起删除；而外部表只会删除元数据，不删除用户数据。这样外部表相对来说更加安全些，数据组织也更加灵活，方便共享源数据。CSDN：Hive的优化技巧有哪些？比如如何处理数据倾斜、大表与小表join时，如何优化性能。蒋守壮：Hive优化其实涉及到几方面，其中一方面是计算引擎方面的优化，比如你使用MapReduce作为计算引擎，那么就需要优化MapReduce；如果你选择Spark作为计算引擎，那么需要对Spark进行优化。这里我仅从Hive这一层面介绍该如何优化，基本内容如下：(1)表设计层面优化合理利用中间结果集，避免查过就丢的资源浪费，减低Hadoop的IO负载合理设计表分区，包括静态分区和动态分区尽量不使用复杂或低效函数，比如count(distinct)，可以使用其他方式实现选择合适的表存储格式和压缩格式如果某些逻辑使用系统函数可能嵌套好几层，那么可以使用自定义函数实现适当使用索引(2)语法和参数层面优化合理控制mapper和reducer数设置map和reduce的内存大小合并小文件避免数据倾斜，解决数据倾斜问题处理数据倾斜的方法其实有很多，不论是Group by还是Join时出现数据倾斜，其实都是数据热点的问题，即某些Key值太多，导致都分发到一个节点执行，那么我们可以将数据量比较大的Key拿出来单独处理，最后再合并到结果集中。如果出现数据倾斜的Key值对结果无关紧要，比如空值，那么我们可以过滤处理，或者将空值加上随机数，进行分发到集群的所有节点并行处理。当然也可以利用Hive自带的参数进行优化，设置当分组或关联的Key值超过多少数量时，进行单独处理，即额外启动一个MapReduce作业处理。 这方面的具体优化过程，请参考我的技术博客。减少Job数Join优化尽量将小表放到join的左边。小表和大表join时，如果差一个以及以上数量级并且小表数据量很小，可以使用mapjoin方式，将小表全部读入内存中，在map阶段进行表关联匹配。大表和大表进行关联时，要注意数据倾斜的问题。如果两个表以相同Key进行分桶，以及表的桶个数是倍数关系，可以使用bucket join，加快关联查询。避免笛卡尔积提前裁剪数据，减少处理的数据量，避免资源浪费(3)Hive Job优化并行化执行——每个查询被Hive转化成多个阶段，有些阶段关联性不大，则可以并行化执行，减少执行时间。本地化执行JVM重利用——JVM重利用可以是Job长时间保留slot，直到作业结束，这在对于有较多任务和较多小文件的任务是非常有意义的，减少执行时间。推测执行——所谓的推测执行，就是当所有的task都开始运行之后，Job Tracker会统计所有任务的平均进度，如果某个task所在的节点配置内存比较低或者CPU负载很大，导致任务执行比总体任务的平均执行要慢，此时Job Tracker就会在其他节点启动一个新的相同的任务，原有任务和新任务哪个先执行完就把其他节点的另外一个任务kill掉。Hive中间结果压缩数据——中间压缩就是处理Hive查询的多个job之间的数据，对于中间压缩，最好选择一个节省CPU耗时的压缩方式CSDN：分享一下Hive数据仓库经验。蒋守壮：由于Hive的类SQL和类数据库功能，它向非编程人员开放了大数据Hadoop生态系统，Hive也推动了Hadoop的普及和发展。企业使用Hive来构建数据仓库，一是可以节约成本，二是基于SQL开发，将传统数据库迁移到Hadoop平台上分析也相关方便，三是支持和Hive集成的Hadoop生态圈的产品也丰富，满足架构扩展。在使用Hive来构建企业级数据仓库时要注意以下几点：根据不同业务数据来源，在Hive创建不同的数据库，方便分类管理；表的文件存储格式尽量采用Parquet或ORC，不仅降低存储量，还优化了查询，压缩，表关联等性能；Hive的计算引擎，推荐使用Tez或Spark；实现用户权限的控制，针对不同项目设置相应的用户，相互之间权限独立，实现数据安全，也可以根据需要，授予相应表权限。学习心得CSDN：关于技术学习您有什么心得？我们上线了知识库系统化学习的方法，您会怎么应用呢？蒋守壮：其实我学习任何一门新技术的过程都比较相似，可以总结为以下几点：俗话说，工欲善其事，必先利其器，首先我一般都会根据官方文档将环境搭建起来，然后运行官方的示例，先从整体上感受一下。阅读该新技术比较好的书籍或博客文档，最好结合官方文档一起阅读，一定要记得做笔记或写博客。与此同时，可以多加入一些技术群或公众号。当对该技术的原理，架构，基本操作都熟练时，就开始寻找好的项目进行实战，现在Github上开源项目很多，可以学习别人的思路或开发过程。源码分析，这个是加深理解该技术的关键步骤。如果你只希望达到应用的水平，可以不用分析源码；但是如果你希望能够优化或者定制该技术某些方面，那么分析源码是必经的过程。对于源码分析，一定不要漫无目的的查看源码，因为现在很多开源软件的代码比较多，这样你将很容易进入黑洞，不可自拔，回头一看，可能啥都不知道了。源码分析先挑选简单的模块分析，搭建好调测平台，进行代码跟踪，这样可以增加自信心。假如我要分析Spark源码，我首先查看Spark启动、客户端访问部分的源码，看一下RDD底层源码如何实现，也就是你要选择一个主题去分析源码并跟踪调测，久而久之，我就会将很多模块内容串联起来，也慢慢加深对Spark源码的理解。最后，对修改的源码进行重新编译打包，然后部署环境进行验证，体会激动的时刻。上面的过程是交互循环的，不是一蹴而就的，你将需要经历时间的磨练，而且在这过程中，你会遇到很多问题，一定要对每个问题刨根问底，从根本上解决，并且坚持做好笔记或写博客，方便后续查看。另外，CSDN推出的知识库，给我们提供了系统学习的方法。如果我要学习一门新技术，比如Docker，我可以进入Docker知识库，里面列出了Docker的每个知识点，并且每个知识点下面都会有该领域的专家精选的博客文章。此外，还可以把其它平台上看到的干货添加到自己的个人图谱当中，创建你的专属知识库。选择自己感兴趣的知识点进行系统学习，效率非常高。CSDN：听说你在10月份即将推出自己的第一本技术书籍，请简单介绍一下。蒋守壮：Apache的顶级项目Apache Kylin，这是一个开源的分布式分析引擎，是由eBay研发并贡献给开源社区，其提供Hadoop之上的SQL查询接口及多维分析（OLAP）能力以支持超大规模数据。书的名字暂定为《基于Apache Kylin构建企业级大数据分析平台》，预计10月份底左右出版，该书比较全面地介绍Apache Kylin的各方面，以及集成到现有的大数据平台中进行多维数据分析。关注Kylin项目很久了，也见证了第一个由中国团队完整贡献到Apache的顶级项目。尤其这一年多，Kylin快速发展，功能和稳定性不断提升，我也积极地参与Kylin开源社区，同时也希望借助自己的微薄力量来推广Kylin的使用，帮助更多的朋友认识和使用Kylin来解决企业中基于Hadoop的多维数据分析的需求。CSDN：你最近关注的技术有哪些？蒋守壮：这段时间研究的技术，大体上有三方面，这里我就简单描述一下，具体大家可以访问官网查询更多内容：第一方面：自动化运维工具Ansible。Ansible算是比较新的自动运维工具，基于Python开发，集合了众多运维工具的优点，实现了批量系统配置，批量程序部署和批量运行命令等功能。研究这方面内容，主要是因为项目组已经实现基于Ansible快速部署高可用并且安全的大数据平台，提升用户的体验效果和满意度。第二方面：Flink实时流处理框架。个人一直觉得Flink在实时流方面的架构非常优秀，而且只需要很少的配置就能够实现高吞吐率和低延迟。将来希望在项目中更多地实战Flink实时流处理应用。第三方面：Docker容器技术。深入研究Docker在分布式和大数据架构中的应用，比如基于Docker构建企业的私用镜像仓库，方便企业能够快速部署大数据平台，也可以将企业中的一些应用实现Docker微服务化。推荐阅读：【知识库专访】亲加CTO郝飞：直播技术架构解密与优化之道前端开发人员必须了解的七大技能图谱来吧 主流编程语言图谱+知识库都在这了主流编程语言图谱+知识库（二）                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>96<docid>     <title>Java 社区论坛 - Sym 1.6.0 发布</title>     <link>http://www.iteye.com/news/31894-release-sym-160</link>     <content>          简介Sym 是一个用 Java 写的现代化的社区论坛，欢迎来体验！（如果你需要搭建一个企业内网论坛，请使用 SymX）非常详细的 Sym 功能点脑图如果你在搭建或者二次开发时碰到问题，欢迎加 Q 群 17370164 进行讨论Sym 的诞生是有如下几点原因：（正版）好用的 Java 开源论坛系统难以寻找很多系统界面上仍然保持着老式风格，远远没有跟上前端发展的脚步很多系统没有创新、好玩的特性，缺少现代化的用户体验我们正在探索新的论坛模式，实现独奏（Solo）与协奏（Symphony）相结合的社区新体验（野版）做最 NB 的开源论坛系统作者技痒，炫技之作基本理念实时交互在浏览帖子时，传统论坛都是需要刷新页面来查看回帖的，而 Sym 则是基于 WebSocket 技术进行回帖推送，看帖时不需要刷新页面也可以看到其他人回帖。互联Sym 提供了 API 进行帖子、回帖的同步（B3log 构思），目前 Solo、Typecho、Z-BlogPHP、WordPress 均已经提供插件来进行内容同步，欢迎大家进行接入！HTML5Sym 使用了很多 HTML5 提供的技术特性，比如通过使用本地存储防止编辑帖子/回帖时内容丢失使用了音频特性来进行帖子/回帖音频录制、播放复制/粘贴上传图片CSS3 动画通过使用这些技术，Sym 可以让用户在分享、交流时更加便捷、舒服安装需求：Maven3+、MySQL5.5+、Jetty9+/Tomcat9+下载源码解压后修改 src/main/resources/local.properties 中的数据库配置，并创建数据库可能需要修改 latke.properties 中的端口为容器端口可能需要修改 init.properties 中的管理员账号使用 mvn install 进行构建将构建好的 war 包部署到容器中，数据库表会在第一次启动时自动建立注意：没有数据库建表 SQL 脚本，手动建库后，表会在第一次启动时自动生成生产环境建议使用反向代理，并需要配置好 WebSocket 代理Tomcat 用 9 以上版本，最好是使用最新版本配置图片上传默认是上传服务器本地，要使用七牛可配置 symphony.properties 中的 qiniu.* 属性将 WEB-INF/cron.xml 中注释掉的部分打开邮件发送使用的是 SendCloud，需要配置 symphony.properties 中的 sendcloud.* 属性用户注册时需要验证邮箱的，所以必须先配置好 SendCloud如果遇到问题，可以参考一下这篇帖子。案例黑客派宽客网贵州IT超级产品经理Titandb 学习主站如果你也搭建好了，欢迎通过 Pull Request 将你的站点加到这个列表中 :-p商用授权如果需要将 Sym 用于商用（比如公司搭建对外社区），则必须付费，报价 ￥4000，请联系我（Q845765）进行细节咨询。开源授权请仔细查看并遵循使用条款，尊重我们的劳动成果。商用授权和开源授权在功能上没有任何区别，但商用授权后可以去除页脚版权部分。如果在未获得商用授权前私自去除版权部分，必将追究法律责任。感悟在实现 B3log 构思的这几年：我们见证了 xAE（GAE/BAE/SAE/etc）的兴起与没落。2009 年选择了 GAE 作为服务器，并开始实现 Latke 框架来解决跨云平台，直到告别 GAE，不得不感叹技术更迭之快感受到了自造轮子的优缺点，并且可以肯定一点：对于一个想要长久的产品来说，自制技术框架优势远大于劣势一个好玩的产品或说是细节特性然并卵，需要做的是一个能够持续提供用户价值的产品/特性虽然直到目前 B3log 系产品用户不多，但我们已经初步证明了：Java 用来实现博客、论坛没有什么不好的使用开源软件，了解开源思想，融入开源如果你想做个程序员相关的论坛，请三思你怎么看待社群、社区这两个词？UGC 社区价值生态贡献Sym 的主要作者是 Daniel 与 Vanessa，所有贡献者可以在这里看到。我们非常期待你加入到这个项目中，无论是使用反馈还是代码补丁，都是对 Sym 一份满满的爱 ❤️TermsThis software is open sourced under the Apache License 2.0You can not get rid of the "Powered by B3log 开源 • Sym" from any page, even which you madeIf you want to use this software for commercial purpose, please mail to support@liuyun.io for a commercial license requestCopyright © b3log.org, all rights reserved鸣谢Sym 的诞生离不开以下开源项目：jQuery：前端 JavaScript 工具库CodeMirror：前端 Markdown 编辑器内核Highlight.js：前端代码高亮库emojify.js：前端 Emoji 处理库APlayer：前端 HTML5 音乐播放器ECharts：前端 JavaScript 交互式图表库MathJax：前端数学公式渲染引擎SoundRecorder：前端 HTML5 录音库ZeroClipboard：前端剪贴板支持JavaScript MD5：前端 JavaScript MD5 库ReconnectingWebSocket：前端 WebSocket 重连库to-markdown：前端 HTML 转换 MarkdownUAParser.js：前端 User-Agent 解析库Sass：前端 CSS 处理工具jsoup：Java HTML 解析器pegdown：Java Markdown 处理库Apache Commons：Java 工具库集Jodd：Java 工具库集emoji-java：Java Emoji 处理库User-Agent-Utils：Java User-Agent 解析库Druid：Java 数据库连接池FreeMarker：好用的 Java 模版引擎Latke：Java Web 框架NetBeans：全宇宙暂时排名第三的 IDE功能图解首页帖子（右边红色回帖按钮的位置应该在右下角，截图软件不给力..）个人设置发布编辑Markdown 编辑器，支持 GFM 语法LaTeX 数学公式复制粘贴时自动转换为 MarkdownChrome 下可以直接粘贴图片，其他浏览器支持拖拽除了使用文字，也可以在帖子内进行录音支持 Emoji使用本地存储保障数据在未提交时不丢移动端移动端使用单独的模版进行渲染，解决通过一套模版自适应不能达成的效果和体验。                    感谢 88250 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                    资讯来源：黑客派                                          已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>97<docid>     <title>【知识库专访】阿里孙佰贵：深度学习十问十答</title>     <link>http://www.iteye.com/news/31893</link>     <content>          【编者按】深度学习，作为人工智能研究中一个新的领域，其动机在于建立可以模拟人脑进行去分析学习，模仿人脑的逻辑去解释数据的神经网络。为了帮助大家能够更加系统化的学习该门课程，知识库特邀请了CSDN社区专家、知识库特邀编辑孙佰贵精心绘制了深度学习知识图谱。点击进入深度学习知识库与此同时，我们还采访了孙佰贵（博客地址：http://blog.csdn.net/sunbaigui）老师，分享他是如何与深度学习结缘以及技术层面的理解与思考。孙佰贵CSDN：请先简单地介绍一下自己。孙佰贵：我叫孙佰贵，本科毕业于宁波大学，本科期间曾参加ACM编程竞赛取得最好成绩是省赛银奖，地区赛铜奖。 硕士毕业于浙大CAD&amp;CG国家重点实验室，硕士期间主要研究方向是计算机视觉（图像分割、视频分割、视频2D转3D）。 硕士毕业后来到阿里巴巴工作至今，主要研究和应用方向为深度学习，包括图像分类、图像搜索、广告点击率预测，曾发表一篇ACMMM长文，论文地址http://arxiv.org/abs/1609.06018。在本科大一做ACM编程竞赛开始就坚持着写博客，在csdn上已经陆续写了7、8年。CSDN：能否分享一下，你是如何与深度学习结缘，并从事这个领域的。孙佰贵：在本科大三的时候接触到人工智能课程，对里面的手写数字识别尤其感兴趣，当时手写数字识别是用BP（深度学习的基石）网络去做，感觉非常酷。于是打算考研进修，因为觉得人机交互是人工智能普及的必经之路，所以读研期间选择了计算机视觉。刚入职阿里巴巴工作时也找了图像方向的岗位，当时进到组里的时候，我对组里的各个业务方向还有技术方向都详细研究了下，由于我对人工智能一直有强烈的兴趣所以就选择了当时组里比较新的深度学习方向，然后我当时就成了阿里第二批做深度学习的人，第一批做的人很少，大概就几个，我师兄就是其中一个。CSDN：在深度学习领域，目前有很多开源的工具和库，开发者该如何选择适合他们的深度学习框架？孙佰贵：通常一聊到开源，大家首先会看这个开源代码写的性能是否足够好，代码风格是否足够好，支持的特性是否特别前沿。但是往往以上几点都有可能成为误区，一个真正好的开源是要有足够大的开发者人气的，并且它必须是易扩展的，然后还要是易移植的，其实只要有前两点，那这个开源库是一定会不停的更新，这点非常重要，很多开源一时热，但没有开发者基础，往往很容易就冷掉了。好的开源也要是易移植的，因为工业上用开源的话，一般都会用到线上，这就要求这个开源必须是非常容易移植的，caffe在工业界比较受欢迎。以上都是基于工业上的需求去选的，一般做学术的话可能会更加要求少量编程，所以一般theano，torch在学术界很受欢迎。CSDN：如何利用高性能计算加速深度学习算法？孙佰贵：现在深度学习的加速也是一个非常火热的研究方向，在硬件方面一般采用FPGA或者GPU进行加速，在算法方面一般采用并行计算去加速。CSDN：目前Intel和Nvidia两家都砸重金押注深度学习，并在处理器、软件栈、生态建设等展开全方位布局，您对此有何评价？孙佰贵：从商业上来讲，当前这两家在处理器、软件栈、生态建设等方面的布局其实可以看做是一个问题，那就是要卖处理器。早前，Intel专注于CPU，Nvidia专注于GPU分工比较明确，最早Intel在GPU领域有集成显卡，一般情况下也能满足个人的需求，所以导致Nvidia的市场份额一直都不大。近几年工业界在深度学习方面的突飞猛进式的研究与业务拓展，迎来了GPU的高需求期，Nvidia凭借其在GPU独立显卡领域的优势迅速提升了其销售额，也使得Nvidia的市值在最近提升了很多。从深度学习生态上来讲，Intel在深度学习上的发力，使得工业界之后有更多的选择，也能加速深度学习硬件层面上的突破式创新，对于开发者来讲多了一种选择，这无疑是一种福音。CSDN：从工程应用角度，您认为一个深度学习平台的易用性和效率哪方面更重要？孙佰贵：这两者缺一不可，线上的性能效率往往直接决定了该应用能不能上线；然而易用性往往决定了迭代速度；在互联网里，应用的迭代速度与效率都非常重要。CSDN：目前Google，微软，Facebook，百度分别开源了自己的深度学习平台，形成百花齐放，百家争鸣的局面，您认为哪个更适合初学者，哪个更适合生产部署？孙佰贵：这三家公司开源的深度学习平台，都带有一些局限性，有些门槛太高，有些专注于某个特定领域，我认为最适合初学者的还是非商业公司的开源，比如caffe，torch等。从易部署角度来讲，Google的TF比较好。CSDN：阿里哪些典型业务使用了深度学习，其有效性体现在哪些方面？孙佰贵：阿里有很多语音，图像，视频相关的都使用了深度学习，有效性在于深度学习在这些方向上的效果都远高于传统算法，这些方向能放大深度学习擅长特征表达学习的优势，因为原先在这些方向上特征的抽取往往都是人工制定的，人工制定的特征存在一个问题，那就是它并不是适用于所有的数据场景的，深度学习可以在任一一个数据场景中学习出专属于这个数据集的特征描述，这是深度学习的优势所在。CSDN：深度学习理论方面有哪些由于当前技术水平限制还不能用于工程实现？孙佰贵：由于深度学习强依赖于硬件、集群、大数据，这使得深度学习是少数的工业界成果不输于学术界成果的领域。深度学习是一个重实践的领域，一般情况下，深度学习理论都是在实验上验证过而沉淀下来的，所以往往是先由工程后有理论。CSDN：技术路线方面，对于DL的入门和进阶，您有什么建议？我们上线了知识库系统化学习的方法，您会怎样应用？孙佰贵：DL入门的话一般挑一些权威的survey或者书籍，如下作者写的一些资料比较权威：Yoshua Bengio、Geoffrey Hinton、Yann LeCun、Andrew Ng，然后挑一个开源跟着教程去跑例子，比较推荐torch、theano、caffe。DL进阶的话一定要选择一个开源去做详细的代码解读，比较推荐caffe，然后再去了解各种深度学习相关的领域以及竞赛，再就是一定要去arxiv网站上定期查看DL的相关文章，了解DL最新研究状况与动态。技术学习一般都是由点及面，上线的知识库可能会很大，除了了解该技术全面的知识点外，还需要挑这里面的某个细分领域去做仔细的研究与学习=&gt;&gt;进入深度学习知识库推荐阅读：【知识库专访】亲加CTO郝飞：直播技术架构解密与优化之道CSDN技术主题月深度学习框架 精华集锦前端开发人员必须了解的七大技能图谱来吧 主流编程语言图谱+知识库都在这了主流编程语言图谱+知识库（二）更多内容请关注CSDN知识库。该产品汇集了领域专家们精心绘制的各重点技术领域的知识图谱，及由特邀编辑（领域专家）从海量数据中层层筛选出的精华内容和资源（学习视频、实践Demo、图书）。知识图谱可以帮助开发者全局把控该技术领域，而精选内容更能让开发者从技术细节加深了解该领域的每个核心技术点。扫描以下二维码，获取更多CSDN知识库内容。个人知识图谱已上线，快来订制你的专属知识库吧=&gt;&gt;你的个人图谱上线了，快来领取！                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>98<docid>     <title>JEECMS v8 发布，java 开源 CMS 系统</title>     <link>http://www.iteye.com/news/31890</link>     <content>          JEECMSv8 是java开源的站群管理系统，支持栏目模型、内容模型交叉自定义、以及具备支付和财务结算的内容电商为一体的内容管理系统。 对于不懂技术的用户来说，只要通过后台的简单设置即可自定义出集新闻管理、图库管理、视频管理、下载系统、文库管理、政务公开、作品管理、产品发布、供求信息、房屋租售、招聘信息、网络问卷调查及留言板于一体的综合性且不失个性化门户网站。&nbsp; 对于技术达人来说，jeecms不仅提供全部源码，而且在研发之初即全面的考虑了二次开发的高效性和代码的高移植性，是一款非常容易上手和二次开发的产品。&nbsp; JEECMSv8版本是一款集PC互联网、移动互联网和微信网站于一体的网站群管理系统，jeecmsV7不仅可以通过H5自适应的方式实现手机网页模板，还可以采用v7专享的移动端模板，实现了同一个网站PC端和移动端所展现的风格或者内容一致或完全不一样的效果，让网站更适应用户的浏览体验。&nbsp; JEECMSv8版本新增作者投稿、投稿管理、投稿佣金收益管理和内容赞赏功能，集成了支付宝和微信多种场景多终端的支付方案，为下一波内容电商从业人员提供技术动力。 JEECMSv8支持PC网站、手机网站、微信网站、手机APP和可移动触摸大屏，一套系统即可完成五端一体化管理的网站建设。&nbsp; jeecmsV8新增功能：&nbsp;&nbsp; 新增功能&nbsp; 1、Spring3升级Spring4&nbsp; hibernate3升级hibernate4&nbsp; 2、文章打赏模块，支持微信、支付宝支付（电脑端扫码支付，手机端移动支付）支持作者提现，平台提现打款以及相关数据统计等&nbsp; 3、应用中心作为插件功能，可快速查看官方发布最新功能模块、系统更新包、BUG修复包等。&nbsp; 4、热词标签，热词新增推荐功能&nbsp; 5、新增内容查询缓存时间，在不需要即时发布更新的情况下可以提升查询效率&nbsp;&nbsp; 6、新增工作流是否允许跨级&nbsp; 7、编辑器升级&nbsp; 8、新增模型自定义字段也可以自定义上传的字段，模型字段增加是否必填选项控制&nbsp; 9、模型区分全站、本站模型区分&nbsp; 10、访问量统计新增月访问量、周访问量&nbsp; 11、内容新增推荐级别功能&nbsp; 12、评论调整每条评论要有点赞和回复功能，管理员以外的人也能回复，可配置是否开放评论 、允许重复评论&nbsp; 13、投票选项后台新增上传图片功能&nbsp; 14、文库更改模式，无需转换成swf，支持手机阅读&nbsp; 15、更改后台首页数据调用&nbsp; 16、栏目标签获取内容数量（总数、当月发布数、当日发布数、这周发布数、今年发布数）&nbsp; 17、新增内容操作记录&nbsp; 18、新增管理员查询条件 19、网站前后台全面升级&nbsp; 20、繁简体一键切换 BUG修复&nbsp; 修复 tomcat8下，后台配置资源管理错误修复Tomcat8资源预览时，如预览图片时，路径出错&nbsp; 修复静态化环境则采用根首页设置的话，手机静态首页会覆盖电脑端静态首页&nbsp; 修复调查选项切换就不能添加调查项目&nbsp; 修复主栏目会自动生成前台静态页 添加的副栏目的栏目页不因为增加有信息而自动生成静态页&nbsp; 修复在后台登陆了，退出，然后在会员前台登陆后又跳转到后台了&nbsp; 修复共享管理点击分页到所有内容列表的下一页了&nbsp; 优化栏目修改处增加个模型选项，可以让用户调整&nbsp; 优化数据统计完善&nbsp; 修复发布时间不能修改问题&nbsp; 修复部门管理权限 留言审核没有区分问题&nbsp; 插件功能相关优化调整&nbsp; 优化新增调整栏目名称自动生成栏目访问路径&nbsp; 修复当新增加文章标题或描述内容超出字段长值时，系统直接报异常错误问题&nbsp; 修复模型管理，帮助位置，输入2位以上数字，保存，页面报错问题&nbsp; 修复内容类型编辑页面中，ID未实现判重校验问题&nbsp; 修复投票管理-添加某一投票标题，点击提交 系统报错问题修复后台页面中，列表中页数中输入11位数字回车后页面报错问题前台演示地址：http://demo.jeecms.com/&nbsp;&nbsp; （手机直接访问和PC端效果不一样哦）后台演示地址：http://demo.jeecms.com/jeeadmin/jeecms/index.do后台用户名：test&nbsp;&nbsp;&nbsp; 密码：test系统安装包、源码下载地址：http://www.jeecms.com/download.jhtml                    感谢 jeecms 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                    资讯来源：JEECMS                                          已有 3 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>99<docid>     <title>Noms：灵感来自Git的数据库</title>     <link>http://www.iteye.com/news/31892</link>     <content>          引用原文：Noms – A versioned, forkable, syncable database 作者：Noms 翻译：赖信涛 责编：仲培艺Noms是一个类似于Git的去中心化的数据库。支持Fork，混合版本，同步等。目前已经在GitHub上开源，并且有两个编程语言的实现。一个是Go，一个是JavaScript。在Github上，还提供了很多实用工具以及应用范例。关于NomsNom相比于其它数据库，主要有以下不同：Content-addressed 如果你想要往Noms存放数据，不必担心要插入的数据是否存在。重复的数据在Noms中会被自动忽略。在Noms里，没有更新，只有插入；Append-only 如果你想向Noms提交什么数据，不必担心覆盖的问题。你添加的记录都有历史版本。默认情况下，Noms永远不会删除数据，你可以查看数据库的整个历史版本，比较两次提交的不同，或者回退到之前的任何一个版本；Typed 任何数据值，数据表和数据库的版本，都有一个类型（type），当你添加数据的时候，会自动生成。如果你对自己足够自信，也可以自己实现Noms对类型的处理；Decentralized 如果我给你一份数据库，你和我都可以同时修改数据，互不影响。一段时间之后可以合并在一起。SetupNoms支持MacOSX和Linux。你可以自己从源代码变异Windows版本，一般情况下都能正常工作，但是并不受官方支持。下载Noms最新版本解压tar -xzf noms-*.tar.gz运行./noms ds http://demo.noms.io/cli-tour./noms log http://demo.noms.io/cli-tour::sf-film-locationsExplore讨论niftich说：像这样的开源技术非常好。这可以用来做分布式的文件编辑应用。或者其它想要做分布式多个示例并支持以后合并的应用。aboodman（作者）说： 以下介绍一些资源：一个原型查询语言，以及如何在Noms中创建索引的示例（https://www.youtube.com/watch?v=fv6_T5yaWns）；如何合并以及处理潜在的冲突（https://www.youtube.com/watch?v=–7dgoJBdjU）                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>100<docid>     <title>ITeye新闻热点月刊：2016年9月总第103期发布了！</title>     <link>http://www.iteye.com/news/31887</link>     <content>          ITeye新闻热点月刊总第103期（2016年9月版）发布了！制作精美，内容丰富，为您总结一个月最精彩的技术新闻。 【点击下载ITeye 2016年9月新闻热点月刊】 &gt;&gt;精彩内容推荐：微信小程序，大多数人都搞错的八个问题小程序目前被炒得沸沸扬扬，无数媒体和企业借机获取阅读流量。 这再次证明一点，微信想让什么火，真的就能让什么火。但四处传的消息很多是失真的，本文列出8个多数人都搞错的问题。浅谈RxJava与2.0的新特性为什么 RxJava 如此受到 Android 开发者们的欢迎，不外乎两个原因。异步，链式操作。【点击下载ITeye 2016年9月新闻热点月刊】&nbsp; 【查看所有ITeye新闻热点月刊】                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>101<docid>     <title>2016年收入最高的5个编程语言</title>     <link>http://www.iteye.com/news/31886</link>     <content>          引用译文链接：http://www.codeceo.com/article/top-5-paying-language-2016.html英文原文：Top 5 Highest Paying Programming Languages of 2016翻译作者：码农网 – 小峰电子书网站Packt公布了其2016年技术提高报告。它提供的统计数据基于超过11,000名IT专业人士参与的关于2016年收入最高的编程语言的调研。它同时还介绍了流行的web框架和主题。高效的程序员是基于IT的企业结构的中坚力量。企业雇用擅长于不同编程语言的人，并支付他们薪水，这样人员才不会被竞争对手撬走。现在有许许多多的编程语言，数以千计的开发人员在用这些编程语言工作。但是，在薪水方面，学习有些编程语言的人超过学习其他语言的人。Packt，一个电子书网站，发布了2016年技术提高的调查报告，涉及来自世界各地的11500名开发人员。该报告描述了领先的IT专业人员和开发人员所使用的编程语言的趋势。在受访者中，来自美国的人数最多，其次是英国。最流行的编程语言是：JavaScriptPythonJavaCSQL榜首是客户端脚本语言JavaScript。之所以对JavaScript的需求会升级，是因为越来越多的业务应用被转移到web浏览器。Python是一种通用语言，它可以用于从渗透测试到web开发。Python被广泛应用于各种组织，如D-LINK，惠普，飞利浦等。而既老旧又年轻的C语言也在名单中。C语言主要用于年轻的程序员在学校上手编码的时候。所以，很明显，在企业部门的话C语言专家可能得不到太高的薪水。然而，这些语言从财务角度来看都不是最好的。尽管它们很成功，但是开发人员并不能从这些语言上赚到最高的薪水。更赚钱的编程语言都并不大受欢迎。平均年薪薪酬最高的语言是：Bash——$ 100,000Perl——$ 95,000Scala——$ 90,000SQL——$ 62,000Delphi——$ 60,000专家程序员使用诸如bash和Perl语言。因此，当决定职位薪资结构的时候，这些语言更受企业喜欢。谷歌的Go（$ 50,000）语言俨然已经获得了关注，比更受欢迎的用于为苹果生态系统编码app的Swift表现更佳。Golang被设计得更让C语言老将喜欢，其代码一直以来保持着可读性和简洁。Golang被设计得更让C语言老将喜欢，其代码一直以来保持着可读性和简洁。它被接受主要是因为速度，快速的编码会话非常便捷。软件工程师以及应用软件开发是这种语言两个选择最多的工作。选择后端web开发的也相当多。流行的Web开发框架：Web框架中，AngularJS，是图表的佼佼者。然而，相当大百分比的开发人员已经开始或计划转移到几个月前发布的AngularJS 2。那些不盯着AngularJS 2的准备迎接更新的Facebook造的ReactJS。热门研究主题：除了编程语言和框架这些东西之外，调查也提及了开发者社区中感兴趣的流行领域。机器学习和大数据自去年以来一直是IT行业的热门话题。我们最近看到基于IBM Watson的机器学习如何想出对一种罕见的血液癌症类型进行有效的治疗。详细信息请阅读2016年技能提升报告。有什么补充，欢迎告诉我们。                    感谢 mengyidan1988 投递这篇资讯                                                              已有 2 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>102<docid>     <title>Firefox发布了更多实验特性</title>     <link>http://www.iteye.com/news/31885</link>     <content>          引用原文：Firefox Launches More Experimental Features 作者：ARINDAM 翻译：赖信涛 责编：仲培艺最近，又有三个实验性的项目作为Mozilla Test Pilot项目的一部分发布了。Mozilla Test Pilot主要给用户提供一些尚处在开发中，未正式发布的先进特性，在未来有可能加入到官方的安装包中。在今年年初，Mozilla发布了项目的一部分，例如：全局搜索（Universal Search）标签中心（Tab Center）不再有404页面（No More 404s）Activity流（Activity Stream）除此之外，最近又有三个特性加入其中：页面截图（Page Shot）小视频窗口（Min Vid）上网痕迹保护（Tracking Protection）下面是新特性速览，你可以安装来体验（文末有安装教程）。Page Shot在浏览网页时，你可以使用Mozilla的网页截图获取截图图片，而不必再调用系统的截图功能。只需要点击工具栏上的截图按钮，还可以选择截图的区域，并通过社交网络分享。截图的保存使用了Pagesshot.net的保存服务。小视频窗口小视频窗口特性可以让你在一个较小的窗口下，在浏览其它标签页的同时继续观看视频。这个特性目前兼容youtube和Vimeo视频，并计划在将来支持更多的视频网站。上网痕迹保护现在的上网痕迹保护只在Firefox的无痕浏览模式下有。现在这项实验性功能支持所有浏览和所有网站。你可以根据你的喜好对某些网站开启或关闭这项功能。其他特性标签页中心（Tab Center）窗口的左侧会有一个带搜索功能的标签列表。这对宽屏显示器来说非常有用。tab窗口还支持自动隐藏。活动流你最近的活动历史会以一种全新的方式，带有分享功能，显示在下面。不仅仅像以前那样仅仅只有链接，它还会显示一些描述，缩略图以及分享等一些你可能需要的功能。如何体验这些功能在Firefox中打开https://testpilot.firefox.com/experiments/，安装Test Pilot扩展。然后安装你想要体验的特性。安装成功之后，你将在工具栏看见这些按钮。点击按钮可以快速开关这些功能。这些功能非常惊艳。但是请注意，它们依然处于开发中，所以你可能遇到一些bug，也可能让浏览器的性能变慢。但是它们仍然是值得体验的。讨论lewisl9029说：尝试了这些新特性之后，Firefox马上成了我最喜欢的浏览器！我非常喜欢Tab Center、Page Shot、Min Vid，和Tracking Protection这些功能！马上在我所有设备上的Firefox安装了这些扩展。希望Firefox能提供不同设备的Firefox之间的同步功能，现在，我不得不挨个安装他们。SNvD7vEJ说：我希望Activity Stream可以将活动历史用某种树的形式展示，当你从网页进入某个链接，然后又退回来，进入另一个链接。这些动作会用树的形式展示出来，就更好了——或者说，他们已经有这个功能了，只是我不知道而已？                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 2 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>103<docid>     <title>阿里云开放AliSQL数据库源码下载</title>     <link>http://www.iteye.com/news/31882</link>     <content>          10月14日，在2016杭州云栖大会上，AliSQL正式开放了源代码的下载，即日可在官网下载使用。AliSQL是阿里巴巴基于于MySQL官方版本的一个分支，应用于阿里巴巴集团业务以及阿里云数据库服务。目前由阿里云数据库团队维护。AliSQL版本在强度和广度上都经历了极大的考验。最新的AliSQL版本从其他开源分支比如：Percona，MariaDB，WebScaleSQL等社区得到帮助，也从阿里巴巴MySQL领域的经验和解决方案得到经验。据阿里云资深总监李津表示，在AliSQL上赋予了300多个改进。据悉，AliSQL增加更多监控指标，并针对电商秒杀、物联网大数据压缩、金融数据安全等场景提供个性化的解决方案。可帮助中小企业和开发者提升数据运营能力。另有专家表示，“在通用基准测试场景下，AliSQL版本比MySQL官方版本有着70%的性能提升。在秒杀场景下，性能提升100倍。”本文来自：开源中国                    感谢 mengyidan1988 投递这篇资讯                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>104<docid>     <title>高性能 TCP/UDP/HTTP 通信框架 HP-Socket v4.0.1 发布</title>     <link>http://www.iteye.com/news/31880</link>     <content>          　　HP-Socket 是一套通用的高性能 TCP/UDP/HTTP 通信框架，包含服务端组件、客户端组件和 Agent 组件，广泛适用于各种不同应用场景的 TCP/UDP/HTTP 通信系统，提供 C/C++、C#、Delphi、E（易语言）、Java、Python 等编程语言接口。HP-Socket 对通信层实现完全封装，应用程序不必关注通信层的任何细节；HP-Socket 提供基于事件通知模型的 API 接口，能非常简单高效地整合到新旧应用程序中。　　为了让使用者能方便快速地学习和使用 HP-Socket，迅速掌握框架的设计思想和使用方法，特此精心制作了大量 Demo 示例（如：PUSH 模型示例、PULL 模型示例、PACK 模型示例、性能测试示例以及其它编程语言示例）。HP-Socket 目前运行在 Windows 平台，将来会实现跨平台支持。　　《HP-Socket v4.0 开发指南》----------------------------------------------------------------通用性HP-Socket 的唯一职责就是接收和发送字节流，不参与应用程序的协议解析等工作。HP-Socket 与应用程序通过接口进行交互，并完全解耦。任何应用只要实现了 HP-Socket 的接口规范都可以无缝整合 HP-Socket。易用性易用性对所有通用框架都是至关重要的，如果太难用还不如自己重头写一个来得方便。因此，HP-Socket 的接口设计得非常简单和统一。HP-Socket 完全封装了所有底层通信细节，应用程序不必也不能干预底层通信操作。通信连接被抽象为 Connection ID，Connection ID 作为连接的唯一标识提供给应用程序来处理不同的连接。HP-Socket 提供 PUSH / PULL / PACK 等接收模型， 应用程序可以灵活选择以手工方式、 半自动方式或全自动方式处理封解包， PULL / PACK 接收模型在降低封解包处理复杂度的同时能大大减少出错几率。高性能Client 组件：基于 Event Select 通信模型，在单独线程中执行通信操作，避免与主线程或其他线程相互干扰。每个组件对象管理一个 Socket 连接。Server 组件：基于 IOCP 通信模型，并结合缓存池、私有堆（Private Heap）等技术，支持超大规模连接，在高并发场景下实现高效内存管理。Agent 组件：对于代理服务器或中转服务器等应用场景，服务器自身也作为客户端向其它服务器发起大规模连接，一个 Agent 组件对象同时可管理多个 Socket 连接；Agent 组件与 Server 组件采用相同的技术架构，可以用作代理服务器或中转服务器的客户端部件。伸缩性　　应用程序能够根据不同的容量要求、通信规模和资源状况等现实场景调整 HP-Socket 的各项性能参数（如：工作线程的数量、缓存池的大小、发送模式和接收模式等），优化资源配置，在满足应用需求的同时不必过度浪费资源。　　 (项目主页：点击这里，下载地址：点击这里)*** v4.0.1更新 *** &gt; 增加 HTTP 系列通信组件：-----------------新增 HTTP Server 组件 1) 组件类：CHttpServer、CHttpsServer 2) 实现接口：ITcpServer / IComplexHttpResponder 3) 监听器接口：IHttpServerListener新增 HTTP Agent 组件 1) 组件类：CHttpAgent、CHttpsAgent 2) 实现接口：ITcpAgent / IComplexHttpRequester 3) 监听器接口：IHttpAgentListener新增 HTTP Client 组件 1) 组件类：CHttpClient、CHttpsClient 2) 实现接口：ITcpClient / IHttpRequester 3) 监听器接口：IHttpServerListener新增 HTTP 示例 Demo 1) TestEcho-Http （源代码） 2) TestEcho-Http-4C （4C LIB / 4C DLL）Http 监听器 1) 监听器事件：OnMessageBegin()	: 【可选】开始解析OnRequestLine()		: 【可选】请求行解析完成（仅用于 HTTP 服务端）OnStatusLine()		: 【可选】状态行解析完成（仅用于 HTTP 客户端）OnHeader()		: 【可选】请求头通知OnHeadersComplete()	: 【必须】请求头完成通知OnBody()		: 【必须】请求体报文通知OnChunkHeader()		: 【可选】Chunked 报文头通知OnChunkComplete()	: 【可选】Chunked 报文结束通知OnMessageComplete()	: 【必须】完成解析通知OnUpgrade()		: 【可选】升级协议通知OnParseError()		: 【必须】解析错误通知2) 监听器事件返回值（EnHttpParseResult）：HPR_OK		: 继续解析HPR_SKIP_BODY	: 跳过当前请求 BODY（仅用于 OnHeadersComplete 事件）HPR_UPGRADE	: 升级协议（仅用于 OnHeadersComplete 事件）HPR_ERROR	: 终止解析，断开连接 &gt; 组件接口调整：-----------------IServer 和 IAgent 组件的所有监听器回调方法增加‘事件源’参数，如：OnShutdown() -&gt; OnShutdown(T* pSender)IClient 组件的所有监听器回调方法增加‘连接ID’参数，如：OnHandShake(IClient* pClient) -&gt; OnHandShake(T* pSender, CONNID dwConnID)IServer 和 IAgent 接口增加接口方法： Get/SetMaxConnectionCount() 用于设置最大连接数，最大连接数默认：10000OnHandShake() 事件触发规则调整：非 SSL 组件在 OnConnect() 事件后也触发 OnHandShake() 事件，使 SSL 组件和 SSL 组件处理流程一致HPSocket4C 增加 PACK 组件监听器的创建、销毁方法，新版本必须使用下列方法创建、销毁 PACK 组件监听器： 1) Create_HP_TcpPackServerListener / Destroy_HP_TcpPackServerListener2) Create_HP_TcpPackAgentListener / Destroy_HP_TcpPackAgentListener3) Create_HP_TcpPackClientListener / Destroy_HP_TcpPackClientListenerSSL 组件支持 SNI 1) SSL 初始化方法 HP_SSL_Initialize()，增加 SNI 回调函数指针参数 2) 新增方法 HP_SSL_AddServerContext()，用于 加载 SNI 主机证书 &gt; 其他更新：-----------------IServer 和 IAgent 组件采用 Ring Pool 取代 R/W Lock + Map 维护活动连接，提升读写和并发性能更新所有 Demo 示例代码*** v3.5.1更新 *** &gt; 增加 SSL 系列通信组件：-----------------新增 SSL PUSH 组件：CSSLServer、CSSLAgent、CSSLClient新增 SSL PULL 组件：CSSLPullServer、CSSLPullAgent、CSSLPullClient新增 SSL PACK 组件：CSSLPackServer、CSSLPackAgent、CSSLPackClientSSL Server 实现 ITcpServer 接口，SSL Agent 实现 ITcpAgent 接口，SSL Client 实现 ITcpClient 接口启动 SSL 通信组件前需要调用 HP_SSL_Initialize() 函数初始化 SSL 全局环境参数通信结束后调用 HP_SSL_Cleanup() 函数清理 SSL 全局运行环境新增 SSL 相关示例 Demo：1) TestEcho-SSL		（源代码）2) TestEcho-SSL-Pack	（DLL / 4C DLL）3) TestEcho-SSL-4C	（4C LIB）4) TestEcho-SSL-PFM	（LIB）&gt; 组件接口调整：-----------------ITcpServerListener 接口增加 SSL 握手成功事件：OnHandShake(CONNID dwConnID)ITcpAgentListener 接口增加 SSL 握手成功事件：OnHandShake(CONNID dwConnID)ITcpClientListener 接口增加 SSL 握手成功事件：OnHandShake(IClient* pClient)枚举类型 EnSocketError 增加‘SSL 环境未就绪’错误代码 SE_SSL_ENV_NOT_READY 增加枚举类型：EnSSLSessionMode（SSL 工作模式），EnSSLVerifyMode（SSL 验证模式） HPSocket-SSL DLL 主要头文件：SocketInterface-SSL.h，HPSocket-SSL.hHPSocket4C-SSL DLL 主要头文件：HPSocket4C-SSL.hTcp Pack 系列组件可设置的最大包长调整为 4194303/0x3FFFFF 字节Tcp Pack 系列组件的有效包头标识取值范围调整为 0 ~ 1023/0x3FF&gt; 增加静态库工程：-----------------新增项目工程 HPSocketLIB 和 HPSocketLIB4C 用于编译 HPSocket 和 HPSocket4C 静态库静态库与动态库的使用方式一致（请参考示例 Demo：TestEcho-SSL-4C 和 TestEcho-SSL-PFM）使用 HPSocket 或 HPSocket4C 静态库时，需要在工程属性中定义预处理宏 -&gt; HPSOCKET_STATIC_LIB静态库目标文件不包含在发布包中（因为太大），如果需要请自行编译*** v3.4.4更新 *** &gt; 增加 Tcp Pack 系列通信组件：-----------------Tcp Pack 系列组件保证每个 OnReceive 事件都向应用程序提供一个完整数据包Tcp Pack 系列组件是 PUSH/PULL 模式的结合体，应用程序不必处理分包（如：PUSH）与数据抓取（如：PULL）Tcp Pack 系列组件提供 Get/SetMaxPackSize() 和 Get/SetPackHeaderFlag() 方法，用来设置最大包长和包头标识CTcpPackServer 实现 ITcpServer 接口，CTcpPackAgent 实现 ITcpAgent 接口，CTcpPackClient 实现 ITcpClient 接口&gt; 组件接口调整：-----------------OnClose/OnError 合并为一个通信事件： OnClose(CONNID dwConnID, EnSocketOperation enOperation, int iErrorCode)枚举类型 EnSocketOperation 增加一个枚举值： SO_CLOSE = 5，标识关闭 Socket 操作IServer 和 IAgent 接口删除接口方法： Get/SetRecvPolicy()IServer 和 IAgent 接口删除接口方法： Get/SetMaxShutdownWaitTime()&gt; Bug 修复：-----------------修复 TCP Pack Agent “异步连接失败导致程序崩溃” Bug修复 vc-common-src 公共代码包的 CCASQueue 可能导致无限循环 Bug                    感谢 guaishou 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>105<docid>     <title>Facebook 发布新 Node 模块管理器 Yarn，或将取代 npm 客户端</title>     <link>http://www.iteye.com/news/31881</link>     <content>          引用本文为掘金投稿，译文出自 : 掘金翻译计划（翻译不易，欢迎 Star 支持）。原文链接 : Yarn: A new package manager for JavaScript原文作者 : SEBASTIAN MCKENZIE，CHRISTOPH POJER，JAMES KYLE译者 : 达仔校对者: 根号三在 JavaScript 社区中，工程师们互相分享成千上万的代码，帮助我们节省大量编写基础组件、类库或框架的时间。每个代码包可能都依赖于其他代码，而代码间的依赖关系则由包管理器负责维护。目前最流行的 JavaScript 包管理器是 npm 客户端，在 npm 仓库中提供了多达 30 万的软件包。据统计，已有超过 500 万的工程师使用 npm 仓库，其软件包下载量达到了 50 亿次/月。在Facebook中，我们多年来一直在使用npm客户端并取得了成功，但随着代码仓库与团队人数的增长，我们在一致性、安全性以及性能方面遇到了挑战。在尝试解决每个方面的问题后，我们最终决定着手打造一套新的客户端解决方案，以帮助我们更可靠地管理依赖。我们把这个客户端工具称为 Yarn —— 更加快速、可靠、安全的 npm 客户端的替代品。我们在此荣幸地宣布，我们与Exponent、Google和Tilde进行了合作，并开源 Yarn 项目。工程师在使用 Yarn 时，依然可以访问 npm 仓库，但 Yarn 能够更快速地安装软件包和管理依赖关系，并且可以在跨机器或者无网络的安全环境中保持代码的一致性。Yarn 提高了开发效率，并解决了共享代码时面临的一些问题，使得工程师们可以专注在构建新产品以及新特性上。JavaScript包管理方式在Facebook的演变在包管理工具出现之前，JavaScript 工程师们通常依赖的项目并不多，因此会把依赖直接存储在工程目录或上传到 CDN 上。在 Node.js 出现后不久，第一个主流的 JavaScript 包管理工具 npm 被引入进来，并很快成为了最受欢迎的包管理工具之一。从此，新的开源项目不断涌现，工程师们比起以前更加乐于分享代码了。在 Facebook 中，我们有很多项目都要依赖 npm 仓库上的代码，比如 React。但随着内部规模的扩大，我们面临着以下挑战：在跨平台与跨用户之间安装依赖时的代码一致性问题、在安装依赖时花费太长时间、以及 npm 客户端自动执行某些依赖库的代码所导致的安全性问题。我们尝试过寻找这些问题的解决方案，但在这个过程中通常又会引起一些新的问题。尝试修改npm客户端在开始阶段，我们遵循了最佳实践，在代码仓库中只跟踪了 package.json 文件的变化，并要求工程师手动运行 npm install 命令安装依赖。这种模式在开发人员的电脑上没有问题，但在持续集成环境中遇到了困难，因为出于安全与可靠性的考虑，持续集成环境需要进行沙箱隔离，不能进行联网，因此也无法安装依赖。接下来，我们尝试在代码仓库中跟踪整个node_modules目录的文件变化。虽然这种方式有效，却使得一些简单操作变得复杂化了。比如，对 babel 更新一个次要版本号时，会产生多达 800,000 行的提交记录，此外由于 lint 规则的存在，引起无效的 utf-8 字节序列、windows 换行符、非 png 压缩图片等问题时，将会导致工程师经常需要花费一整天的时间合并 node_modules 目录的文件。而我们负责源码控制的团队也指出，跟踪 node_modules 目录会引入过多的元数据。比如 React Native 的 package.json 文件目前只列出了68项依赖，但在运行 npm install 后，node_modules 目录整整包含了 121,358 个文件。最后，为了有效组织 Facebook 逐渐增长的工程师人数以及管理需要安装的代码量，我们尝试修改 npm 客户端。我们决定压缩整个 node_modules 目录，并上传到内部 CDN，然后我们的工程师与持续集成系统都能从 CDN 上下载并解压文件，从而保证了代码一致性。这样我们就可以从源码控制系统中删除数以万计的文件了，但不足之处是工程师现在不仅在拉代码时需要联网了，构建也同样需要联网。我们还试图为 npm 的 shrinkwrap 功能寻求优化方案，这个工具是用来锁定依赖版本号的。但 Shrinkwrap 功能的文件默认不会生成，如果开发者忘记了生成这一步骤，文件就不会被同步更新，因此我们编写了一个工具，以确定 Shrinkwrap 的文件内容和 node_modules 目录中的文件相符。这些文件由大量的 JSON 块组成，并且键名是无序的，因此每次更改通常会导致 Shrinkwrap 文件的内容大幅变化，难以进行代码审查。为减缓这一问题，我们还需要借助一个额外的脚本，对所有条目进行排序。最后，通过 npm 升级单个依赖包时，基于 语义化版本号 规则，npm 通常会连同其他无关依赖一起更新。这使得每次更新都会比预期产生更多的变化，工程师们认为这样把 node_modules 提交上传到 CDN 的过程，难以达到预期的效果。构建新客户端与其围绕 npm 客户端继续构建基础设施，不如从整体上再次回顾这些问题。伦敦办公室的 Sebastian McKenzie 提出，如果我们建立一个新客户端工具以代替 npm 客户端，从而解决我们的核心问题呢？这一构思很快得到了我们的认同，团队对于这个主意也感到非常兴奋。在开发过程中，我们与业界的工程师们进行了交流讨论，发现他们也面临着类似的问题，也尝试过许多类似的解决方案，通常只能把这些问题逐一解决。很明显，有必要把整个 JavaScript 社区正在面临的问题集合起来，然后我们就可以开发一个主流的解决方案了。在此感谢 Exponent、 Google 与 Tilde 的工程师们的协助，我们共同建立了 Yarn 客户端，并在每一个主流 JS 框架以及 Facebook 外的使用场景中测试验证了 Yarn 的性能。今天（2016-10-11），我们很荣幸把这个工具开源分享到社区中。介绍 YarnYarn 是一个新的包管理器，用于替代现有的 npm 客户端或者其他兼容 npm 仓库的包管理工具。Yarn 保留了现有工作流的特性，优点是更快、更安全、更可靠。任何包管理器的主要功能都是安装某些软件包，软件包即用于特定功能的某段代码，通常是从一个全局的仓库安装到工程师的本地环境。每个软件包可以依赖于其他包，也可以不依赖。一个典型的项目结构的依赖树通常会包含数十个、数百个甚至上千个软件包。这些依赖包通常是带版本号的，通过语义化版本控制（semver）安装。Semver 定义的版本号反映了每个新版本更改的类型，到底是进行了不兼容的API改动（MAJOR），还是添加了向后兼容的新特性（MINOR），还是进行了向后兼容的 bug 修复（PATCH）。然而，semver 依赖于软件包的开发者不能犯错误——如果依赖关系没有加锁，可能会引入一些破坏性更改或者产生新的 bug。结构在Node生态系统中，依赖通常安装在项目的 node_modules 文件夹中。然而，这个文件的结构和实际依赖树可能有所区别，因为重复的依赖可以合并到一起。npm 客户端把依赖安装到 node_modules 目录的过程具有不确定性。这意味着当依赖的安装顺序不同时，node_modules 目录的结构可能会发生变化。这种差异可能会导致类似“我的机子上可以运行，别的机子不行”的情况，并且通常要花费大量时间定位与解决。Yarn通过lockfiles文件以及一个确定性的、可靠的安装算法，解决了版本问题和npm 的不确定性问题。Lockfile文件把安装的软件包版本锁定在某个特定版本，并保证 node_modules 目录在所有机器上的安装结果都是相同的。Lockfile 还使用简洁的有序键名的格式，保证了每次的文件变化最小化，进行代码审查也更为简单。安装过程分为以下三个步骤：处理： Yarn 通过向代码仓库发送请求，并递归查找每个依赖项，从而解决依赖关系。抓取： 接下来，Yarn 会查找全局的缓存目录，检查所需的软件包是否已被下载。如果没有，Yarn 会抓取对应的压缩包，并放置在全局的缓存目录中，因此 Yarn 支持离线安装，同一个安装包不需要下载多次。依赖也可以通过 tarball 的压缩形式放置在源码控制系统中，以支持完整的离线安装。生成： 最后，Yarn 从全局缓存中把需要用到的所有文件复制到本地的 node_modules 目录中。通过清晰地细分这些步骤，以及确定性的算法支持，使得 Yarn 支持并行操作，从而最大化地利用资源，并加速安装进程。在一些 Facebook 的项目上，Yarn 甚至可以把安装过程降低一个数量级，从几分钟到只需几秒钟。Yarn 还使用了互斥锁，以确保多个 CLI 实例同时运行时不会互相冲突与影响。纵观整个过程，Yarn 对于软件包安装加上了严格的限制。你可以对哪个生命周期脚本作用于哪个软件包进行控制。软件包的 checksum 也会存储在 lockfile 中，以确保每一次安装都可以得到同一个包。特性Yarn 除了让安装过程变得更快与更可靠，还添加了一些额外的特性，从而进一步简化依赖管理的工作流。同时兼容npm与bower工作流，并支持两种软件仓库混合使用可以限制已安装模块的协议，并提供方法输出协议信息提供一套稳定的公有JS API，用于记录构建工具的输出信息可读、最小化、美观的 CLI 输出信息Yarn 用于生产环境我们已经在 Facebook 中把 Yarn 用于生产环境，并且效果非常理想。Yarn 有效地管理了许多 JavaScript 项目的包依赖关系。在每次迁移时，构建都可以离线进行，因此加速了工作流程。我们基于 React Native 在不同条件下进行安装时间测试，比较了 Yarn 与 npm 的性能，具体参见这里。起步最简单的起步方法是：npm install -g yarnpkgyarnyarn CLI 代替了原有开发工作流中 npm CLI 的作用，用法可能是单纯的替代，也可能是一个新的、相似的命令：npm install → yarn不需要带参数，yarn 命令会读取 package.json 文件，然后从 npm 仓库中抓取软件包，并放置到 node_modules 目录中。等价于运行 npm install。npm install --save &lt;name&gt; → yarn add &lt;name&gt;我们避免了 npm install &lt;name&gt; 命令中安装“不可见的依赖”的行为，并分离出一个新命令。运行 yarn add &lt;name&gt; 等价于运行 npm install --save &lt;name&gt;。未来目前已经有许多成员一起参与到 Yarn 的构建中，以解决我们的共同问题，我们也希望 Yarn 未来能真正成为一个大众化的社区项目。Yarn 目前已经在GitHub开源 ，我们也已经准备好向 Node 社区进行推广：使用 Yarn、分享构思、编写文档、互相支持，并帮助构建一个很棒的社区来进行长期维护。我们相信 Yarn 已经拥有一个良好的开局，如果有你的帮助，Yarn的未来将会更加美好。                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>106<docid>     <title>15 个开源的顶级人工智能工具</title>     <link>http://www.iteye.com/news/31877</link>     <content>          AI是科技研究中最热门的方向之一。像 IBM、谷歌、微软、Facebook 和亚马逊等公司都在研发上投入大量的资金、或者收购那些在机器学习、神经网络、自然语言和图像处理等领域取得了进展的初创公司。考虑到人们对此感兴趣的程度，我们将不会惊讶于斯坦福的专家在人工智能报告中得出的结论：“越来越强大的人工智能应用，可能会对我们的社会和经济产生深远的积极影响，这将出现在从现在到 2030 年的时间段里。”在最近的一篇文章中，我们概述了 45 个十分有趣或有前途的人工智能项目。在本文中，我们将聚焦于开源的人工智能工具，详细的了解下最著名的 15 个开源人工智能项目。以下这些开源人工智能应用都处于人工智能研究的最前沿。1. Caffe它是由贾扬清在加州大学伯克利分校的读博时创造的，Caffe 是一个基于表达体系结构和可扩展代码的深度学习框架。使它声名鹊起的是它的速度，这让它受到研究人员和企业用户的欢迎。根据其网站所言，它可以在一天之内只用一个 NVIDIA K40 GPU 处理 6000 万多个图像。它是由伯克利视野和学习中心（BVLC）管理的，并且由 NVIDIA 和亚马逊等公司资助来支持它的发展。2. CNTKComputational Network Toolkit的缩写，CNTK是一个微软的开源人工智能工具。不论是在单个 CPU、单个 GPU、多个 GPU 或是拥有多个 GPU 的多台机器上它都有优异的表现。微软主要用它做语音识别的研究，但是它在机器翻译、图像识别、图像字幕、文本处理、语言理解和语言建模方面都有着良好的应用。3. Deeplearning4jDeeplearning4j是一个 java 虚拟机（JVM）的开源深度学习库。它运行在分布式环境并且集成在 Hadoop 和 Apache Spark 中。这使它可以配置深度神经网络，并且它与 Java、Scala 和 其他 JVM 语言兼容。这个项目是由一个叫做 Skymind 的商业公司管理的，它为这个项目提供支持、培训和一个企业的发行版。4. DMTKDMTK是分布式机器学习工具Distributed Machine Learning Toolkit的缩写，和 CNTK 一样，是微软的开源人工智能工具。作为设计用于大数据的应用程序，它的目标是更快的训练人工智能系统。它包括三个主要组件：DMTK 框架、LightLDA 主题模型算法和分布式（多义）字嵌入算法。为了证明它的速度，微软声称在一个八集群的机器上，它能够“用 100 万个主题和 1000 万个单词的词汇表（总共 10 万亿参数）训练一个主题模型，在一个文档中收集 1000 亿个符号，”。这一成绩是别的工具无法比拟的。5. H20相比起科研，H2O更注重将 AI 服务于企业用户，因此 H2O 有着大量的公司客户，比如第一资本金融公司、思科、Nielsen Catalina、PayPal 和泛美都是它的用户。它声称任何人都可以利用机器学习和预测分析的力量来解决业务难题。它可以用于预测建模、风险和欺诈分析、保险分析、广告技术、医疗保健和客户情报。它有两种开源版本：标准版 H2O 和 Sparking Water 版，它被集成在 Apache Spark 中。也有付费的企业用户支持。6. Mahout它是 Apache 基金会项目，Mahout是一个开源机器学习框架。根据它的网站所言，它有着三个主要的特性：一个构建可扩展算法的编程环境、像 Spark 和 H2O 一样的预制算法工具和一个叫 Samsara 的矢量数学实验环境。使用 Mahout 的公司有 Adobe、埃森哲咨询公司、Foursquare、英特尔、领英、Twitter、雅虎和其他许多公司。其网站列了出第三方的专业支持。7. MLlib由于其速度，Apache Spark 成为一个最流行的大数据处理工具。MLlib是 Spark 的可扩展机器学习库。它集成了 Hadoop 并可以与 NumPy 和 R 进行交互操作。它包括了许多机器学习算法如分类、回归、决策树、推荐、集群、主题建模、功能转换、模型评价、ML 管道架构、ML 持久、生存分析、频繁项集和序列模式挖掘、分布式线性代数和统计。8. NuPIC由Numenta公司管理的NuPIC是一个基于分层暂时记忆Hierarchical Temporal Memory，HTM理论的开源人工智能项目。从本质上讲，HTM 试图创建一个计算机系统来模仿人类大脑皮层。他们的目标是创造一个 “在许多认知任务上接近或者超越人类认知能力” 的机器。除了开源许可，Numenta还提供NuPic的商业许可协议，并且它还提供技术专利的许可证。9. OpenNN作为一个为开发者和科研人员设计的具有高级理解力的人工智能，OpenNN是一个实现神经网络算法的 c++ 编程库。它的关键特性包括深度的架构和快速的性能。其网站上可以查到丰富的文档，包括一个解释了神经网络的基本知识的入门教程。OpenNN的付费支持由一家从事预测分析的西班牙公司Artelnics提供。10. OpenCyc由 Cycorp 公司开发的OpenCyc提供了对Cyc知识库的访问和常识推理引擎。它拥有超过 239,000 个条目，大约 2,093,000 个三元组和大约 69,000 owl：这是一种类似于链接到外部语义库的命名空间。它在富领域模型、语义数据集成、文本理解、特殊领域的专家系统和游戏 AI 中有着良好的应用。该公司还提供另外两个版本的 Cyc：一个可免费的用于科研但是不开源，和一个提供给企业的但是需要付费。11. Oryx 2构建在Apache Spark和Kafka之上的Oryx 2是一个专门针对大规模机器学习的应用程序开发框架。它采用一个独特的三层 λ 架构。开发者可以使用 Orys 2 创建新的应用程序，另外它还拥有一些预先构建的应用程序可以用于常见的大数据任务比如协同过滤、分类、回归和聚类。大数据工具供应商 Cloudera 创造了最初的 Oryx 1 项目并且一直积极参与持续发展。12. PredictionIO今年的二月，Salesforce 收购了PredictionIO，接着在七月，它将该平台和商标贡献给 Apache 基金会，Apache 基金会将其列为孵育计划。所以当 Salesforce 利用 PredictionIO 技术来提升它的机器学习能力时，成效将会同步出现在开源版本中。它可以帮助用户创建带有机器学习功能的预测引擎，这可用于部署能够实时动态查询的 Web服务。13. SystemML最初由 IBM 开发，SystemML现在是一个Apache大数据项目。它提供了一个高度可伸缩的平台，可以实现高等数学运算，并且它的算法用 R 或一种类似 python 的语法写成。企业已经在使用它来跟踪汽车维修客户服务、规划机场交通和连接社会媒体数据与银行客户。它可以在 Spark 或 Hadoop 上运行。14. TensorFlowTensorFlow是一个谷歌的开源人工智能工具。它提供了一个使用数据流图进行数值计算的库。它可以运行在多种不同的有着单或多 CPU 和 GPU 的系统，甚至可以在移动设备上运行。它拥有深厚的灵活性、真正的可移植性、自动微分功能，并且支持 Python 和 c++。它的网站拥有十分详细的教程列表来帮助开发者和研究人员沉浸于使用或扩展他的功能。15. TorchTorch将自己描述为：“一个优先使用 GPU 的拥有机器学习算法广泛支持的科学计算框架”，它的特点是灵活性和速度。此外，它可以很容易的通过软件包用于机器学习、计算机视觉、信号处理、并行处理、图像、视频、音频和网络等方面。它依赖一个叫做 LuaJIT 的脚本语言，而 LuaJIT 是基于 Lua 的。                    感谢 mengyidan1988 投递这篇资讯                                                              已有 1 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>107<docid>     <title>2016收入最高的5门编程语言 Java和C没在前五</title>     <link>http://www.iteye.com/news/31876</link>     <content>          电子书网站Packt公布了其2016年技术提高报告。它提供的统计数据基于超过 11,000 名 IT 专业人士参与的关于 2016 年收入最高的编程语言的调研。它同时还介绍了流行的 web 框架和主题。高效的程序员是基于 IT 的企业结构的中坚力量。企业雇用擅长于不同编程语言的人，并支付他们薪水，这样人员才不会被竞争对手撬走。现在有许许多多的编程语言，数以千计的开发人员在用这些编程语言工作。但是，在薪水方面，学习有些编程语言的人超过学习其他语言的人。Packt，一个电子书网站，发布了 2016 年技术提高的调查报告，涉及来自世界各地的 11500 名开发人员。该报告描述了领先的 IT 专业人员和开发人员所使用的编程语言的趋势。在受访者中，来自美国的人数最多，其次是英国。最流行的编程语言是：引用PythonJavaScriptJavaPHPSQL客户端脚本语言 JavaScript 与榜首 Python 不相上下。之所以对 JavaScript 的需求会升级，是因为越来越多的业务应用被转移到 web 浏览器。Python 是一种通用语言，它可以用于从渗透测试到 web 开发。Python 被广泛应用于各种组织，如D-LINK，惠普，飞利浦等。而既老旧又年轻的C语言也在名单中。C语言主要用于年轻的程序员在学校上手编码的时候。所以，很明显，在企业部门的话C语言专家可能得不到太高的薪水。然而，这些语言从财务角度来看都不是最好的。尽管它们很成功，但是开发人员并不能从这些语言上赚到最高的薪水。更赚钱的编程语言都并不大受欢迎。平均年薪薪酬最高的语言是：引用Bash——$ 100,000Perl——$ 95,000Scala——$ 90,000SQL——$ 62,000Delphi——$ 60,000专家程序员使用诸如 bash 和 Perl 语言。因此，当决定职位薪资结构的时候，这些语言更受企业喜欢。谷歌的 Go（$ 50,000）语言俨然已经获得了关注，比更受欢迎的用于为苹果生态系统编码 app 的 Swift 表现更佳。Golang 被设计得更让C语言老将喜欢，其代码一直以来保持着可读性和简洁。它被接受主要是因为速度，快速的编码会话非常便捷。软件工程师以及应用软件开发是这种语言两个选择最多的工作。选择后端 web 开发的也相当多。流行的Web开发框架：Web框架中，AngularJS，是图表的佼佼者。然而，相当大百分比的开发人员已经开始或计划转移到几个月前发布的 AngularJS 2。那些不盯着 AngularJS 2 的准备迎接更新的 Facebook 造的 ReactJS。热门研究主题：除了编程语言和框架这些东西之外，调查也提及了开发者社区中感兴趣的流行领域。机器学习和大数据自去年以来一直是 IT 行业的热门话题。未来君认为能赚钱的编程语言都是好语言！~本文来自：网易订阅                    感谢 mengyidan1988 投递这篇资讯                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>108<docid>     <title>Spark 2.0 时代全面到来 —— 2.0.1 版本发布</title>     <link>http://www.iteye.com/news/31875</link>     <content>          距离Spark 2.0.0发布两个月后，Spark 2.0.1版本发布了，这是一个修正版本，共处理了300多个Issue，涉及spark稳定性和bug等方面的修复 ，它的发布意味着Spark 2.0接近生产环境使用要求，想要尝试Spark 2.0的可以动手了。Apache Spark 2.0是基于spark branch-2.x 开发的，相比于branch-1.0，它在功能和性能等方面均有巨大改进。在性能方面，Spark 2.x 有2~10倍的提升；在功能方面，Spark SQL中的Dataset变得成熟，Spark 2.x通过Dataset重构了Spark Streaming和MLlib的API，进而使得这两个系统在易用性和性能方面有重大提升，在不久的将来，Dataframe/Dataset API（high-level API）将取代RDD API（low-level API），成为主流的Spark编程接口。Apache Spark 2.x在性能和功能方面的改进主要包括：1. 性能方面相比于Spark 1.0，Spark 2.0在引擎性能方面有重大优化，其优化主要体现在Spark Core和Spark SQL两个系统上，其优化主要得益于Tungsten计划（“钨丝计划”），其主要动机是优化Spark内存和CPU的使用，使其能够逼近物理机器的性能极限。利用“整阶段代码生成”（“whole stage code generation”），使得SQL和DataFrame中算子性能优化2-10倍通过“向量化计算”提升Parquet格式文件的扫描吞吐率提升ORC格式文件的读写性能提升Catalyst查询优化器性能2. 功能方面（1）Spark Core/SQL:Tungsten Phase 2，优化CPU与Memory方面“钨丝计划”完成第二阶段任务，在内存和CPU使用方面进一步优化Spark引擎性能，重构了大量数据结构和算法的实现，使得Dataframe/Dataset性能得到显著提升，这使得Dataframe/Dataset有能力成为其他几个系统（比如Spark Streaming和MLlib）的基础API。注：“钨丝计划”包括三个方面的优化：Memory Management and Binary Processing： Java GC严重，且java对象内存开销大，可采用类似C语言机制，直接操纵binary data（sun.misc.Unsafe）Cache-aware Computation：合理使用CPU的L1/L2/L3 cache，设计对cache友好的算法Code Generation：可去除条件检查，减少虚函数调度等（2）Spark SQL: 统一DataFrame与Dataset API众所周知，在Spark 1.x中，DataFrame API存在很多问题，包括不是类型安全的(not type-safe)，缺乏函数式编程能力（not object-oriented）等，为了克服这些问题，社区引入了Dataset，相比于DataFrame，它具有以下几个特点：类型安全，面向对象编程方式；支持非结构化数据（json）；java与scala统一接口和性能极好的序列化框架等，她将成为Spark未来主流的编程接口（RDD API是low-level API，而Dataset则是high-level API）。（3）Spark SQL：支持SQL 2003Spark SQL在通用性方面有重大突破，它跑通了所有（99个）TPC-DS查询 ，并有以下几个改进：解析器可同时支持ANSI-SQL 和Hive QL实现了DDL支持大部分子查询支持View（4）Spark Streaming：引入Structured StreamingSpark Streaming基于Spark SQL（DataFrame / Dataset ）构建了high-level API，使得Spark Streaming充分受益Spark SQL的易用性和性能提升。Spark Streaming重构的API主要是面向结构化数据的，被称为“Structured Streaming”，其主要特性包括：DataFrame / Dataset API的支持提供了Event time, windowing, sessions, sources &amp; sink等API连接流式数据与静态数据集交互式查询结果：通过JDBC server将RDD结果暴露出去，以便于交互式查询（5）Spark MLlib: MLlib 2.0诞生Spark MLlib朝着2.0进化，主要体现在机器学习模型的多样化，持久化和定制化上，具体包括：广义线性模型的全面实现Python &amp; R API的支持增强模型持久化能力Pipieline定制化Apache Spark 2.0在功能和性能的重大改进，使得它在分布式计算领域进一步巩固了自己的地位，随着Spark应用越来越广泛，它将变成数据工程师的一项基本技能。Apache Spark 2.0.1 发行说明：https://issues.apache.org/jira/secure/ReleaseNote.jspa?projectId=12315420&amp;version=12336857Apache Spark 2.0.1下载地址：http://spark.apache.org/downloads.htmlApache Spark 2.0 新特性与展望：http://www.chinahadoop.cn/course/697来自：开源中国                    感谢 mengyidan1988 投递这篇资讯                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>109<docid>     <title>【最好用的】Java APNS开源库apns4j-1.1.0发布</title>     <link>http://www.iteye.com/news/31869-javaapns-apns4j-apns</link>     <content>          开源地址：https://github.com/teaey/apns4j【最好用的】Java APNS开源库apns4j-1.1.0发布提升API的易用性，移除繁杂的初始化逻辑，入口集中到cn.teaey.apns4j.Apns4j提供简单的异步服务增加ios7以上静默推送设置（content-available）sendAndFlush -&gt; send 或许开始就是个错误！减少builder模式，能够更好的与spring等框架做集成groupId调整：cn.teaey.apns4j&lt;dependency&gt;    &lt;groupId&gt;cn.teaey.apns4j&lt;/groupId&gt;    &lt;artifactId&gt;apns4j&lt;/artifactId&gt;    &lt;version&gt;1.1.0&lt;/version&gt;&lt;/dependency&gt;//Step 1ApnsChannelFactory apnsChannelFactory = Apns4j.newChannelFactoryBuilder().keyStoreMeta("${path to your keystore}").keyStormPwd("${keystore password}").build();//Setp 2ApnsChannel apnsChannel = apnsChannelFactory.newChannel();//Step 3 create &amp; init notify payloadApnsPayload apnsPayload = Apns4j.newPayload()        .alertActionLocKey("FixMe")        .alertTitle("Title")        .alertBody("Pushed by apns4j")        .sound("default");//Step 4 send via channelapnsChannel.send(TestConts.deviceToken, apnsPayload);//Step 5 in the end, apnsChannel can be Recycle and Reuse apnsChannel.close(); 有疑问请留言，或者联系本人： masfay@me.com github：http://github.com/teaey  开源地址：https://github.com/teaey/apns4j                    感谢 冲杯茶喝 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                    资讯来源：http://github.com/teaey                                          已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>110<docid>     <title>Hugo：一个快速、现代的静态网页引擎</title>     <link>http://www.iteye.com/news/31874</link>     <content>          Hugo是一个制作静态页面的工具，非常灵活，可以以多种形式工作，是制作博客、文档、个人履历等非常合适的工具。Hugo激发了创造力，让建造网页变得充满乐趣。一次编写，到处运行Hugo可能是你用过的最容易安装的软件——只要下载打开就可以了！Hugo并不依赖任何权限、数据库、运行库、解释器或外部库。使用Hugo编写的网站可以运行在S3，Github Pages，Dropbox或其它任何静态网页托管上。强大的性能Hugo为速度和性能而生。我们付出很大的精力来尽可能地减少编译时间。大多数编译只要毫秒级的时间就可以完成！灵活Hugo可以灵活地适应你的任务。你可以使用任何你喜欢的方式组织URL，通过自定义的index页面和分类组织内容。使用任何形式定义你自己的元数据，例如YAML、TOML或JSON。最棒的是，Hugo不需要任何配置文件就可以处理这些差异。Hugo就是好。讨论sfifs说：我喜欢Hugo最大的原因是：几乎所有其它的引擎都要求我安装完整的Ruby或JavaScript开发环境，才能预览我的博客，而Hugo就不需要。eberkund说：为什么我要从jekyll换到Hugo呢？现在已经有无数的网站生成工具了，而且它们几乎都有差不多的特性。有没有两者都用过的人来解释一下，这些工具究竟有什么不同？andmarios说：对我来说，最重要的是他们的静态库如何。我确实用过Jekyll，但是对于一个会运行很多年的网站来说，照顾一个ruby app是我不想插手的事。也许我的服务器和我的桌面端的Ruby版本不同，也许一些Ruby Gems已经在我的发行版安装了，但不是我想要的，这就得重新手动安装它们，每次Gem提供的功能出了什么问题，我就得手动重新安装一下，还得SSH到服务器再重装。有时候由于发行版的原因，一些Gem还不能装。也许jekyll哪天发了新版本，用了最新Ruby特性。Hugo在这方面有很多优势，比如内置服务器、实时载入和在本地测试时方便的链接转换等。托管地址：https://github.com/spf13/hugo                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>111<docid>     <title>深度学习性能提升的诀窍</title>     <link>http://www.iteye.com/news/31871</link>     <content>          引用原文：How To Improve Deep Learning Performance 作者： Jason Brownlee 翻译： KK4SBB 责编：何永灿克服过拟合和提高泛化能力的20条技巧和诀窍你是如何提升深度学习模型的效果？ 这是我经常被问到的一个问题。 有时候也会换一种问法： 我该如何提高模型的准确率呢？ ……或者反过来问： 如果我的网络模型效果不好，我该怎么办？ 通常我的回答是“具体原因我不清楚，但我有一些想法可以试试”。 然后我会列举一些我认为能够提升性能的方法。 为了避免重复罗列这些内容，我打算在本文中把它们都写出来。 这些想法不仅可以用于深度学习，事实上可以用在任何机器学习的算法上。如何提升深度学习的性能 Pedro Ribeiro Simoes拍摄提升算法性能的想法这个列表并不完整，却是很好的出发点。 我的目的是给大家抛出一些想法供大家尝试，或许有那么一两个有效的方法。 往往只需要尝试一个想法就能得到提升。 如果你用下面某一种想法取得了好效果，请在评论区给我留言！ 如果你还有其它想法或是对这些想法有拓展，也请告诉大家，或许会对我们大家有帮助！ 我把这个列表划分为四块：从数据上提升性能从算法上提升性能从算法调优上提升性能从模型融合上提升性能性能提升的力度按上表的顺序从上到下依次递减。举个例子，新的建模方法或者更多的数据带来的效果提升往往好于调出最优的参数。但这并不是绝对的，只是大多数情况下如此。 我在文章中添加了不少博客教程和相关的经典神经网络问题。 其中有一些想法只是针对人工神经网络，但大多数想法都是通用性的。你可以将它们与其它技术结合起来使用。 我们开始吧。1.从数据上提升性能调整训练数据或是问题的抽象定义方法可能会带来巨大的效果改善。甚至是最显著的改善。 下面是概览：收集更多的数据产生更多的数据对数据做缩放对数据做变换特征选择重新定义问题1）收集更多的数据你还能收集到更多的训练数据吗？ 你的模型的质量往往取决于你的训练数据的质量。你需要确保使用的数据是针对问题最有效的数据。 你还希望数据尽可能多。 深度学习和其它现代的非线性机器学习模型在大数据集上的效果更好，尤其是深度学习。这也是深度学习方法令人兴奋的主要原因之一。 请看下面的图片：什么是深度学习？ 幻灯片来自Andrew Ng不总是数据阅读效果越好，多数情况下如此。如果让我选择，我会选择要更多的数据。 相关阅读：数据集压倒算法2) 产生更多的数据深度学习算法往往在数据量大的时候效果好。 我们在上一节已经提到过这一点。 如果由于某些原因你得不到更多的数据，也可以制造一些数据。如果你的数据是数值型的向量，那么随机生成已有向量的变形向量。如果你的数据是图像，用已有的图像随机生成相似图像。如果你的数据是文本，做法你懂得……这类做法通常被称为数据扩展或是数据生成。 你可以使用生成模型，也可以用一些简单的小技巧。 举个例子，若是用图像数据，简单地随机选择和平移已有的图像就能取得很大的提升。它能提升模型的泛化能力，如果新的数据中包含这类变换就能得到很好的处理。 有时候是往数据中增加噪声，这相当于是一种规则方法，避免过拟合训练数据。 相关阅读：深度学习中的图像数据扩充训练含有噪声的数据3) 对数据做缩放此方法简单有效。 使用神经网络模型的一条经验法宝就是： 将数据缩放到激活函数的阈值范围。 如果你使用sigmoid激活函数，将数据缩放到0~1之间。如果选用tanh激活函数，将值域控制在-1~1之间。 输入、输出数据都经过同样的变换。比如，如果在输出层有一个sigmoid函数将输出值转换为二值数据，则将输出的y归一化为二进制。如果选用的是softmax函数，对y进行归一化还是有效的。 我还建议你将训练数据扩展生成多个不同的版本：归一化到0 ~ 1归一化到-1 ~ 1标准化然后在每个数据集上测试模型的性能，选用最好的一组生成数据。 如果更换了激活函数，最好重复做一次这个小实验。 在模型中不适合计算大的数值。此外，还有许多其它方法来压缩模型中的数据，比如对权重和激活值做归一化，我会在后面介绍这些技巧。 相关阅读：我需要对输入数据（列向量）做标准化吗?如何用Scikit-Learn准备机器学习的输入数据4） 对数据做变换与上一节的方法相关，但是需要更多的工作量。 你必须真正了解所用到的数据。数据可视化，然后挑出异常值。 先猜测每一列数据的分布这一列数据是不是倾斜的高斯分布，若是如此，尝试用Box-Cox方法纠正倾斜这一列数据是不是指数分布，若是如此，则进行对数变换这一列数据是不是存在某些特性，但是难以直观地发现，尝试一下对数据平方或者开方是否可以将特征离散化，以便更好地强调一些特征凭你的直觉，尝试几种方法是否可以用投影的方法对数据预处理，比如PCA？是否可以将多个属性合并为单个值？是否可以发掘某个新的属性，用布尔值表示？是否可以在时间尺度或是其它维度上有些新发现？神经网络有特征学习的功能，它们能够完成这些事情。 不过你若是可以将问题的结构更好地呈现出来，网络模型学习的速度就会更快。 在训练集上快速尝试各种变换方法，看看哪些方法有些，而哪些不起作用。 相关阅读：如何定义你的机器学习问题特征挖掘工程，如何构造特征以及如何提升如何用Scikit-Learn准备机器学习的输入数据5） 特征选择神经网络受不相关数据的影响很小。 它们会对此赋予一个趋近于0的权重，几乎忽略此特征对预测值的贡献。 你是否可以移除训练数据的某些属性呢？ 我们有许多的特征选择方法和特征重要性方法来鉴别哪些特征可以保留，哪些特征需要移除。 动手试一试，试一试所有的方法。 如果你的时间充裕，我还是建议在相同的神经网络模型上选择尝试多个方法，看看它们的效果分别如何。也许用更少的特征也能得到同样的、甚至更好的效果。也许所有的特征选择方法都选择抛弃同一部分特征属性。那么就真应该好好审视这些无用的特征。也许选出的这部分特征给你带来了新的启发，构建出更多的新特征。相关阅读：特征选择入门介绍基于Python的机器学习中的特征选择问题6) 问题重构在回到你问题的定义上来。 你所收集到的这些观测数据是描述问题的唯一途径吗？ 也许还有其它的途径。也许其它途径能更清晰地将问题的结构暴露出来。 我自己非常喜欢这种练习，因为它强迫我们拓宽思路。很难做好。尤其是当你已经投入大量的时间、精力、金钱在现有的方法上。 即使你列举了3 ~ 5种不同的方式，至少你对最后所选用的方式有充足的信心。也许你可以将时间元素融入到一个窗口之中也许你的分类问题可以转化为回归问题，反之亦然也许可以把二值类型的输出转化为softmax的输出也许你可以对子问题建模深入思考问题是一个好习惯，最好在选择工具下手之前先完成上述步骤，以减少无效的精力投入。 无论如何，如果你正束手无策，这个简单的连续能让你思如泉涌。 另外，你也不必抛弃前期的大量工作，详情可以参见后面的章节。相关阅读：如何定义机器学习问题2. 从算法上提升性能机器学习总是与算法相关。 所有的理论和数学知识都在描述从数据中学习决策过程的不同方法（如果我们这里仅讨论预测模型）。 你选用深度学习来求解，它是不是最合适的技术呢？ 在这一节中，我们会简单地聊一下算法的选择，后续内容会具体介绍如何提升深度学习的效果。 下面是概览：算法的筛选从文献中学习重采样的方法我们一条条展开。1） 算法的筛选你事先不可能知道哪种算法对你的问题效果最好。 如果你已经知道，你可能也就不需要机器学习了。 你有哪些证据可以证明现在已经采用的方法是最佳选择呢？ 我们来想想这个难题。 当在所有可能出现的问题上进行效果评测时，没有哪一项单独的算法效果会好于其它算法。所有的算法都是平等的。这就是天下没有免费的午餐理论的要点。也许你选择的算法并不是最适合你的问题。 现在，我们不指望解决所有的问题，但当前的热门算法也许并不适合你的数据集。 我的建议是先收集证据，先假设有其它的合适算法适用于你的问题。 筛选一些常用的算法，挑出其中适用的几个。尝试一些线性算法，比如逻辑回归和线性判别分析尝试一些树模型，比如CART、随机森林和梯度提升尝试SVM和kNN等算法尝试其它的神经网络模型，比如LVQ、MLP、CNN、LSTM等等采纳效果较好的几种方法，然后精细调解参数和数据来进一步提升效果。 将你所选用的深度学习方法与上述这些方法比较，看看是否能击败他们？ 也许你可以放弃深度学习模型转而选择更简单模型，训练的速度也会更快，而且模型易于理解。 相关阅读：一种数据驱动的机器学习方法面对机器学习问题为何需要筛选算法用scikit-learn筛选机器学习的分类算法2） 从文献中学习从文献中“窃取”思路是一条捷径。 其它人是否已经做过和你类似的问题，他们使用的是什么方法。 阅读论文、书籍、问答网站、教程以及Google给你提供的一切信息。 记下所有的思路，然后沿着这些方向继续探索。 这并不是重复研究，这是帮助你发现新的思路。优先选择已经发表的论文 已经有许许多多的聪明人写下了很多有意思的事情。利用好这宝贵的资源吧。 相关阅读：如何研究一种机器学习算法Google学术3） 重采样的方法你必须明白自己模型的效果如何。 你估计的模型效果是否可靠呢？ 深度学习模型的训练速度很慢。 这就意味着我们不能用标准的黄金法则来评判模型的效果，比如k折交叉验证。也许你只是简单地把数据分为训练集和测试集。如果是这样，就需要保证切分后的数据分布保持不变。单变量统计和数据可视化是不错的方法。也许你们可以扩展硬件来提升效果。举个例子，如果你有一个集群或是AWS的账号，我们可以并行训练n个模型，然后选用它们的均值和方差来获取更稳定的效果。也许你可以选择一部分数据做交叉验证（对于early stopping非常有效）。也许你可以完全独立地保留一部分数据用于模型的验证。另一方面，也可以让数据集变得更小，采用更强的重采样方法。也许你会看到在采样后的数据集上训练得到的模型效果与在全体数据集上训练得到的效果有很强的相关性。那么，你就可以用小数据集进行模型的选择，然后把最终选定的方法应用于全体数据集上。也许你可以任意限制数据集的规模，采样一部分数据，用它们完成所有的训练任务。你必须对模型效果的预测有十足的把握。 相关阅读：用Keras评估深度学习模型的效果用重采样的方法评估机器学习算法的效果3. 从算法调优上提升性能你通过算法筛选往往总能找出一到两个效果不错的算法。但想要达到这些算法的最佳状态需要耗费数日、数周甚至数月。 下面是一些想法，在调参时能有助于提升算法的性能。模型可诊断性权重的初始化学习率激活函数网络结构batch和epoch正则项优化目标提早结束训练你可能需要指定参数来多次（3-10次甚至更多）训练模型，以得到预计效果最好的一组参数。对每个参数都要不断的尝试。 有一篇关于超参数最优化的优质博客：如何用Keras网格搜索深度学习模型的超参数1） 可诊断性只有知道为何模型的性能不再有提升了，才能达到最好的效果。 是因为模型过拟合呢，还是欠拟合呢？ 千万牢记这个问题。千万。 模型总是处于这两种状态之间，只是程度不同罢了。 一种快速查看模型性能的方法就是每一步计算模型在训练集和验证集上的表现，将结果绘制成图表。在训练集和验证集上测试模型的准确率如果训练集的效果好于验证集，说明可能存在过拟合的现象，试一试增加正则项如果训练集和验证集的准确率都很低，说明可能存在欠拟合，你可以继续提升模型的能力，延长训练步骤。如果训练集和验证集的曲线有一个焦点，可能需要用到early stopping的技巧了经常绘制类似的图表，深入研究并比较不同的方法，以提高模型的性能。这些图表也许是你最有价值的诊断工具。 另一种有效的诊断方法是研究模型正确预测或是错误预测的样本。 在某些场景下，这种方法能给你提供一些思路。也许你需要更多的难预测的样本数据也许你可以从训练集中删去那些容易被学习的样本也许你可以有针对性地对不同类型的输入数据训练不同的模型相关阅读：用Keras展现深度学习模型的训练过程机器学习算法的过拟合和欠拟合2） 权重的初始化有一条经验规则：用小的随机数初始化权重。 事实上，这可能已经足够了。但是这是你网络模型的最佳选择吗？ 不同的激活函数也可以有不同的应对策略，但我不记得在实践中存在什么显著的差异。 保持你的模型结构不变，试一试不同的初始化策略。 记住，权重值就是你模型需要训练的参数。几组不同的权重值都能取得不错的效果，但你想得到更好的效果。尝试所有的初始化方法，找出最好的一组初始化值试一试用非监督式方法预学习，比如自动编码机尝试用一组现有的模型权重参数，然后重新训练输入和输出层（迁移学习）记住，修改权重初始化值的方法与修改激活函数或者目标函数的效果相当。 相关阅读：深度网络模型的初始化3） 学习率调节学习率也能带来效果提升。 这里也有一些探索的思路：尝试非常大、非常小的学习率根据参考文献，在常规值附近用网格化搜索尝试使用逐步减小的学习率尝试每隔固定训练步骤衰减的学习率尝试增加一个向量值，然后用网格搜索大的网络模型需要更多的训练步骤，反之亦然。如果你添加了更多的神经节点和网络层，请加大学习率。 学习率与训练步骤、batch大小和优化方法都有耦合关系。相关阅读：使用Keras对深度学习模型进行学习率调节反向传播算法该选用什么学习率？4） 激活函数也许你应该选用ReLU激活函数。 仅仅因为它们的效果更好。 在ReLU之前流行sigmoid和tanh，然后是输出层的softmax、线性和sigmoid函数。除此之外，我不建议尝试其它的选择。 这三种函数都试一试，记得把输入数据归一化到它们的值域范围。 显然，你需要根据输出内容的形式选择转移函数。 比方说，将二值分类的sigmoid函数改为回归问题的线性函数，然后对输出值进行再处理。同时，可能需要调整合适的损失函数。在数据转换章节去寻找更多的思路吧。 相关阅读：为何使用激活函数？5） 网络拓扑结构调整网络的拓扑结构也会有一些帮助。 你需要设计多少个节点，需要几层网络呢？ 别打听了，鬼知道是多少。 你必须自己找到一组合理的参数配置。试一试加一层有许多节点的隐藏层（拓宽）试一试一个深层的神经网络，每层节点较少（纵深）尝试将上面两种组合尝试模仿近期发表的问题类似的论文尝试拓扑模式和书本上的经典技巧（参考下方的链接）这是一个难题。越大的网络模型有越强的表达能力，也许你就需要这样一个。 更多晨的结构提供了抽象特征的更多结构化组合的可能，也许你也需要这样一个网络。 后期的网络模型需要更多的训练过程，需要不断地调节训练步长和学习率。 相关阅读： 下面的链接可能给你提供一些思路：我的网络模型该设计几层呢？我的网络模型该设计几个节点呢？6） batch和epochbatch的大小决定了梯度值，以及权重更新的频率。一个epoch指的是训练集的所有样本都参与了一轮训练，以batch为序。 你尝试过不同的batch大小和epoch的次数吗？ 在前文中，我们已经讨论了学习率、网络大小和epoch次数的关系。 深度学习模型常用小的batch和大的epoch以及反复多次的训练。 这或许对你的问题会有帮助。尝试将batch大小设置为全体训练集的大小（batch learning）尝试将batch大小设置为1（online learning）用网格搜索尝试不同大小的mini-batch（8，16，32，…）尝试再训练几轮epoch，然后继续训练很多轮epoch尝试设置一个近似于无限大的epoch次数，然后快照一些中间结果，寻找效果最好的模型。 有些模型结构对batch的大小很敏感。我觉得多层感知器对batch的大小很不敏感，而LSTM和CNN则非常敏感，但这都是仁者见仁。相关阅读：什么是批量学习、增量学习和在线学习？直觉上，mini-batch的大小如何影响（随机）梯度下降的效果？7） 正则项正则化是克服训练数据过拟合的好方法。 最近热门的正则化方法是dropout，你试过吗？ Dropout方法在训练过程中随机地略过一些神经节点，强制让同一层的其它节点接管。简单却有效的方法。权重衰减来惩罚大的权重值激活限制来惩罚大的激活函数值尝试用各种惩罚措施和惩罚项进行实验，比如L1、L2和两者之和。 相关阅读：使用Keras对深度学习模型做dropout正则化什么是权值衰减？8） 优化方法和损失函数以往主要的求解方法是随机梯度下降，然而现在有许许多多的优化器。 你尝试过不同的优化策略吗？ 随机梯度下降是默认的方法。先用它得到一个结果，然后调节不同的学习率、动量值进行优化。 许多更高级的优化方法都用到更多的参数，结构更复杂，收敛速度更快。这取决于你的问题，各有利弊吧。 为了压榨现有方法的更多潜力，你真的需要深入钻研每个参数，然后用网格搜索法测试不同的取值。过程很艰辛，很花时间，但值得去尝试。 我发现更新/更流行的方法收敛速度更快，能够快速了解某个网络拓扑的潜力，例如：ADAMRMSprop你也可以探索其它的优化算法，例如更传统的算法（Levenberg-Marquardt）和比较新的算法（基因算法）。其它方法能给SGD创造好的开端，便于后续调优。 待优化的损失函数则与你需要解决的问题更相关。 不过，也有一些常用的伎俩（比如回归问题常用MSE和MAE），换个损失函数有时也会带来意外收获。同样，这可能也与你输入数据的尺度以及所使用的激活函数相关。 相关阅读：梯度下降优化算法概览什么是共轭梯度和Levenberg-Marquardt？深度学习的优化方法，20119） Early Stopping你可以在模型性能开始下降的时候停止训练。 这帮我们节省了大量时间，也许因此就能使用更精细的重采样方法来评价模型了。 early stopping也是防止数据过拟合的一种正则化方法，需要你在每轮训练结束后观察模型在训练集和验证集上的效果。 一旦模型在验证集上的效果下降了，则可以停止训练。 你也可以设置检查点，保存当时的状态，然后模型可以继续学习。 相关阅读：如何在Keras给深度学习模型设置check-point什么是early stopping？4. 用融合方法提升效果你可以将多个模型的预测结果融合。 继模型调优之后，这是另一个大的提升领域。 事实上，往往将几个效果还可以的模型的预测结果融合，取得的效果要比多个精细调优的模型分别预测的效果好。 我们来看一下模型融合的三个主要方向：模型融合视角融合stacking1） 模型融合不必挑选出一个模型，而是将它们集成。 如果你训练了多个深度学习模型，每一个的效果都不错，则将它们的预测结果取均值。 模型的差异越大，效果越好。举个例子，你可以使用差异很大的网络拓扑和技巧。 如果每个模型都独立且有效，那么集成后的结果效果更稳定。 相反的，你也可以反过来做实验。 每次训练网络模型时，都以不同的方式初始化，最后的权重也收敛到不同的值。多次重复这个过程生成多个网络模型，然后集成这些模型的预测结果。 它们的预测结果会高度相关，但对于比较难预测的样本也许会有一点提升。 相关阅读：用scikit-learn集成机器学习算法如何提升机器学习的效果2） 视角融合如上一节提到的，以不同的角度来训练模型，或是重新刻画问题。 我们的目的还是得到有用的模型，但是方式不同（如不相关的预测结果）。 你可以根据上文中提到的方法，对训练数据采取完全不同的缩放和变换技巧。 所选用的变化方式和问题的刻画角度差异越大，效果提升的可能性也越大。 简单地对预测结果取均值是一个不错的方式。3）stacking你还可以学习如何将各个模型的预测结果相融合。 这被称作是stacked泛化，或者简称为stacking。 通常，可以用简单的线性回归的方式学习各个模型预测值的权重。 把各个模型预测结果取均值的方法作为baseline，用带权重的融合作为实验组。Stacked Generalization (Stacking)总结各抒己见吧补充资料还有一些非常好的资料，但没有像本文这么全面。 我在下面列举了一些资料和相关的文章，你感兴趣的话可以深入阅读。神经网络常见问答如何用网格搜索法求解深度学习模型的超参数深度神经网络必知的技巧如何提升深度神经网络的验证准确率？如果你知道其它的好资源，欢迎留言。                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>112<docid>     <title>TEDx漕河泾沙龙报名开启</title>     <link>http://www.iteye.com/news/31868</link>     <content>          原力生于识补偿演化，盘涅再生我们感知，而后彳亍而行原力连结过去与未来的起承流传见证知识与技术的天作之合甚至于，在艺术与文学的影子里丈量着未知世界，如梦之梦后来，有人拿起钥匙将规则解密有人似飞蛾扑火，却胜涅槃重生跨越万水千山，从此不必远渡重洋有人结下殊胜之缘，寻着前人轨迹脚步错落笃定在奇思妙想和能量场中原力定义了怎样的真实？在历史漫漫长路中原力如何永燃灵感的火花？且再问一次，你是谁？生命来去，而原力是你我，你我是原力2016年10月25日（周二）13:00TEDxCaohejingPark沙龙活动将在上海漕河泾新兴技术开发区万丽酒店举行活动分2场，中间休息60分钟，预计17:00结束除非有特殊情况，我们希望您能参与整场活动。我们也期待您能在休息时与观众和演讲人互动。TED观众非常开放多元，且拥有包容创新观点的心态，我们希望 TEDxCaohejingPark沙龙提供同样轻松的环境，每个人都乐于沟通交流。当天的日程安排（暂定）13:00～13:30&nbsp; -&nbsp;&nbsp; 签到13:30～15:00&nbsp; -&nbsp;&nbsp; 第一场15:00～15:50&nbsp; -&nbsp;&nbsp; 中场休息15:50～17:00&nbsp; -&nbsp;&nbsp; 第二场报名地址：http://www.bagevent.com/event/223002                    感谢 rnifeasy1 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 0 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>113<docid>     <title>谷歌发布神经机器翻译 翻译质量接近笔译人员</title>     <link>http://www.iteye.com/news/31867</link>     <content>          据外媒报道，谷歌于昨日发布了网页版和移动版的谷歌翻译。在汉译英的过程中，会采用全新的神经机器翻译，而这个App每天要进行一千八百万次这样的翻译。此外，谷歌针对这个翻译系统的运作原理，发表了一篇学术论文。早前，谷歌就曾表示它们在谷歌翻译中运用了神经网络技术，但只限于实时视觉翻译这个功能。前段时间，谷歌的高级员工Jeff Dean曾告诉VentureBeat，谷歌已经在尝试把越来越多的深度学习功能融入到谷歌翻译中。除此之外，谷歌的一位发言人在邮件中告诉VentureBeat，最新的神经机器翻译是他们努力研发深度学习功能的成果。实际上，谷歌一直以来都在致力于将深度神经网络融入它旗下越来越多的应用软件中，其中包括Google Allo和Inbox by Gmail。这个功能可以帮助谷歌更快捷、更有效地处理它们的数据。谷歌的神经机器翻译（GNMT）对八层长的短时记忆递归神经网络（LSTM-RNNs）依赖性很强。“通过层间残留联系可以加强梯度流。”谷歌科学家在论文中写道。在图像处理器的帮助下，神经网络一旦变得足够成熟，谷歌就可以靠它尚未发布的张量处理单元进行数据处理。虽然神经机器翻译并不永远是最佳之选，但是谷歌的各种尝试显示，在某些情况下它还是有过人之处的。“人们对这个翻译系统的评价显示，比起之前基于短语的翻译系统，在翻译多种语言时，神经学习翻译系统的错误率已经降低了60%，其中包括英法互译，英西互译以及英汉互译。附加实验的结果显示，翻译系统的质量将和笔译人员平均水准更加接近。”在昨天发表的一篇博文中，Google Brain Team的研发科学家Quoc Le和Mike Schuster提到，有了双语评分员的帮助，在翻译Wikipedia上的多语种样句时，谷歌神经机器翻译的错误率实际上已经降低了55%到85%。尽管如此，这个系统还是不完美的。“神经机器翻译还是会犯一些笔译人员永远都不可能犯的错误，比如漏了一些单词、把一些常见的名字或是少见的专有名词翻错、对文章语境缺乏整体把控等等。所以，我们还是有很大的进步空间。但不可否认的是，神经机器翻译具有里程碑意义。”来自：网易科技                    感谢 mengyidan1988 投递这篇资讯                                                              已有 1 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>114<docid>     <title>Mozilla宣布停止 Firefox OS 的开发</title>     <link>http://www.iteye.com/news/31866</link>     <content>          Mozilla 去年底宣布终止智能手机实验，停止开发和销售 Firefox OS 智能手机，它在2016年7月底停止了Firefox OS的商业开发，如今则宣布终止所有 Firefox OS 相关工作。Firefox OS 是一个开源项目，现在它的维护将全部转交给社区。Mozilla开发者称，为了快速演化和启用 Gecko引擎的新架构变化，它的Platform Engineering 团队需要从 mozilla-central移除与Firefox OS/B2G OS相关的所有代码，继续从事B2G OS开发的开源社区将需要fork Gecko，从一个独立的分支维护一个完整版的Gecko引擎。Mozilla称这是一个痛苦但必要的决定。来自：cnBeta.COM                    感谢 mengyidan1988 投递这篇资讯                                                              已有 1 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>115<docid>     <title>Java 9 将推迟到2017年7月发布</title>     <link>http://www.iteye.com/news/31865</link>     <content>          本来以为在明年3月可以尝鲜的Java 9却要延迟了，据外媒报道，甲骨文宣布原定于2017年3月推出的Java 9将再延至2017年7月发布，主要原因是Java 9内置的模组化架构Jigsaw需要更长的时间来开发。甲骨文Java平台的架构师Mark Reinhold在OpenJDK的邮件列表中提到了这个新的发布日期引用Despite this progress, at this point it's clear that Jigsaw needs more time. We recently received critical feedback that motivated a redesign of the module system's package-export feature [5], without which we'd have failed to achieve one of our main goals. There are, beyond that, still many open design issues [6], which will take time to work through. Looking at the release as a whole, the number of open bugs that are new in JDK 9 is quite a bit larger than it was at this point in JDK 8. The maintainers of many popular projects are now actively testing against the JDK 9 EA builds [7], but we'd like to see even more in order to be confident that potential issues have been found and reported. For these reasons I hereby propose a four-month extension of the JDK 9 schedule, moving the General Availability (GA) milestone to July 2017.Mark Reinhold称，由于收到使用者反馈，需要重新设计模组化架构Jigsaw中的Package-Export功能，更重要的是Java 9中还存在大量安全漏洞和Bug需要修复。据悉，模组化架构Jigsaw将成为Java 9的核心功能，甲骨文也证实将会在Java9中新增新命令行工具Jshell、支持HTTP/2与新增多项API等。另外于今年1月推出的JDK9早期试用版不再支持Java浏览器外挂。本文来自：太平洋新闻和pixelstech.net                    感谢 mengyidan1988 投递这篇资讯                                                              已有 10 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>116<docid>     <title>微信小程序，大多数人都搞错的八个问题</title>     <link>http://www.iteye.com/news/31864</link>     <content>          引用声明：本文为CSDN原创投稿文章。 作者：王安，数字天堂DCloud公司创始人兼CEO 责编：陈秋歌，关注微信开发等领域，寻求报道或者投稿请发邮件chenqg#csdn.net。研发心得、项目实战、前沿技术、外文翻译……，只要是技术干货，十分欢迎投稿至chenqg#csdn.net。人人都是主编，这里就是你的舞台。 欢迎加入“微信开发技术”群，参与热点、难点技术交流。请加群主微信「Rachel_qg」,申请入群，务必注明「公司+职位」。小程序目前被炒得沸沸扬扬，无数媒体和企业借机获取阅读流量。这再次证明一点，微信想让什么火，真的就能让什么火。这种能力真是全中国再也没有人有了，政府也没有。但四处传的消息很多是失真的，废话不说，先列出8个多数人都搞错的问题：1.小程序是HTML5；2.小程序是B/S的；3.把M站改改就可以接入到小程序里；4.小程序体验不佳；5.小程序适合低频长尾应用；6.小程序是新的Appstore；7.小程序做不起来，需求不高；8.小程序会做起来，但会和原生应用长期并存。以上8个是很多人凭直觉得出的结论，但真正深度调研和思考后，发现直觉和真相差好远。引用注：本文有技术、有商业，不懂技术的可以只看商业相关的。1.小程序不是HTML5小程序是微信全新定义的规范，是基于XML+JS的，不支持也不兼容HTML，兼容受限的部分CSS写法。上图为一个小程序的代码目录，后缀名分别是wxml、wxss和js。不过微信对wxml的全称定义也不是weixin xml，而是WeiXin Markup Language，很霸气的要自成体系感。自然wxss也是WeiXin Style Sheets喽。因为很多人把xml念成叉妹儿，现在大家不要念错哦，不要念达不流叉妹儿，要念微信妹儿。下面是一段wxml示例，相对于早期的XML，扩展了花括号模板的写法。虽然是要求强闭合的XML，但if写法和标准的XML也不一样。JS部分，小程序支持ECMAScript6，由于没有Web，自然DOM、Window这些都不能用，jQuery就更没啥关系了。很多小白说JS不就是HTML的一部分吗？HTML是归W3C管的，JS是归ECMA国际管的。JS是无处不在的一种解释性脚本语言，除了浏览器里，还有运行在服务器上的Nodejs，运行在PC和Mac机的nodewebkit…也就是说小程序是微信基于XML和JS定义的一套标记语言，全新的生态，一个轻OS。 开发工具、UI框架也都是腾讯做的，过去Web上的三方工具、框架生态，完全没有用。也就是小程序开发者，将会是一个独立的职业。培训机构有的忙了，在这个全新生态下，一切都推到重来。顺便也澄清一个误区，小程序和腾讯X5引擎也没关系。X5是QQ浏览器团队的，是基于HTML的，但小程序是微信团队自研的。2.小程序不是B/S微信宣传的一个重点，是触手可得，不用安装。但小程序并不是B/S的在线页面，它是C/S架构的。在wxml里，通过wx.request（类似ajax）或socket连接服务器。很多人不明白C/S应用为什么也可以即点即用，不用安装。其实这不是微信的首创，首创是DCloud的流应用。只要是动态语言，加上合适的算法，就可以先下载部分程序并运行，然后边用边下，类似于流媒体。别忘了微信也同时宣传了强大的离线能力，毕竟B/S的切屏体验太烂，C/S才能有更好的用户体验。只是不知道微信对小程序的空间占用问题会怎么管理，反正微信以后肯定是越来越大。3.M站不能改造成小程序其实看明白前2点，自然就明白第3点了。一个基于HTML的、B/S的M站，跟小程序并无关系。老板们可能认为M站或之前公众号里的Wap站简单改改就可以接入小程序，然后对工程师报的工期不可理解，此时工程师可以把此文转给老板看，小程序是相当于重新做了一个App，从开发、设计、测试、运维升级都是单独的一套。哦，你还得加个学习成本和风险，如此新的东西一次搞利索的可能性不大。如果你之前有一个服务号的Wap站，你也不能放弃服务号而只做小程序，所以你的业务得多头维护。这里有一个很大的问题，就是做一版小程序，ROI（投资回报）是不是正的？新开一条产品线并长期运维，代价绝对不菲，对应的用户流量够大吗？ARPU值（单位用户价值）够高吗？能收回投资吗？这个问题有点大，下面单说。4.小程序的体验不如原生应用？反了我知道这个观点有点违反大多数人的直觉。但世界在变。用户的使用体验是由很多要素作用影响的，过去我们说的体验主要是进入应用后的操作流畅度。关于这个维度，很多观点是：小程序嘛，操作流畅度基于Web和原生App之间。其实随着手机硬件和网络的发展，两年内上市的手机上，包括几百元的低端机，小程序的操作流畅度和原生的差距，用户是感受不到的。其实在小程序之前，HTML5+和React Native也都早做到了这一点。而且你也可以反过来想想，小程序作为微信在移动互联网下半场最重要的战略，如果操作流畅度不好，张小龙会出来站台还批准它上线？除了操作流畅度，用户体验还受很多环节影响。有个在其他开发者生态不常见的事情，就是微信出了UI框架并很强调各个小程序的体验一致性，它希望用户在微信里使用各个小程序时，UI基本一致，用户不会觉得乱，不需要学习和适应。然后微信还有统一的账户登陆体系，再加上小程序本身触手可得的特点，那么想象下用户的综合感受：不停使用各种触手可得、用完即走、UI体验一致、操作流畅、不用登陆注册的小程序们，还是挺爽的，这种体验比用原生应用还爽。当时代发展到App的操作体验已经无法再有明显提升后，用户体验痛点已经从简单的在App里操作的流畅度转向其他地方了。如果还抱着旧观念不放，只能被转换思路的竞品超越。5.小程序并非只适合低频或长尾应用iPhone刚出Appstore时，确实首先活跃在其中的都是创业者，但最后所有人都卷进来了。小程序的设计目标可是大生态，没有定位于只吸纳低频长尾应用。所有人都被卷进来是迟早的事。有人觉得入口太深会导致高频应用仍然留在桌面，但入口的深浅是会演化的，如果微信感觉到目前的入口深度影响了用户便利性，它立即会提高，它会在桌面创建快捷方式。如果某天微信出了独立的桌面laucher或小程序入口App，也不要诧异。下一代的微信，核心已经不是微信这个通信App，核心已经是庞大的小程序生态了，从哪个入口进入就不重要了。哦对了，如果腾讯委托代工出了不能装原生应用的手机也不要诧异，哦，如果支持iPhone用户0元换机也不要诧异。跑题了，不过当前的小程序生态发展也确实存在先后关系，低频的比高频的先进来、光脚的比穿鞋的先进来。原生App体量已经很大的玩家，就是穿鞋的，他们希望用户持续保留他们的原生App在桌面。在移动互联网上半场，有个游戏规则：因为App偏重，用户手机里一个品类一般只装一个App，那么烧钱买到最多流量的，就是最后的赢家，而竞品想把用户再抢过来就非常难了。上半场烧了无数钱剩下的大玩家们，面对游戏规则的改变想必心情是极其复杂的。 可是复杂也没办法，腾讯旗下亲儿子、干儿子占据移动互联网大半壁江山，小程序里，刚开始就会有大玩家，其他竞争对手跟不跟呢，心情复杂也得跟啊。当然最尴尬的还是阿里、百度们，看着别人抽你血却想不出办法。6.小程序不是应用商店，是OS很多人说微信想做应用商店，只能说太小瞧微信了，人家明明要做操作系统嘛。 2015年张小龙就在筹划应用号了，闭门搞了一年多怎么会是个应用商店这种小生意。应用商店只是OS生态里的一个发行环节，而微信恰恰不打算挣发行的钱。国内的应用商店，都是中心化的流量分发，做的是卖流量的生意。用户看到的，不是最好的，而是出价最高的。不止是应用商店，百度现在也是这个问题，顺便吐槽下百度的搜索第三定律：出价最高者，对自己的网站最有自信，也就是对最终用户最有价值。微信显然不是这样的思路，微信的去中心化，其实是一种保证良品得到更大流量的机制，这种机制非常有利于生态的起步。一个小程序，没有下载刷榜，微信会采集用户的实际使用量、反复使用率、新增传播趋势，给你推荐最好的。不扯发行的事了。小程序确实是按OS标准打造的，开发语言、IDE都是自成体系。Facebook推出React Native时也没做IDE，并且全部开源，但微信的野心不一样，真的是从头到尾要建设和控制生态，并且是封闭生态，就像iOS的生态一样。甚至小程序的开发者，每年也要像iOS的开发者一样交几百元年费。有人会觉得手机原生OS才是老大，这种二级生态搞不起来。其实在PC上，Windows上的互联网就是二级生态，做的比Windows原生生态大，当初Flash算是三级生态了，如果不是HTML5打压，也做的非常大了。但也确实存在一个问题，Apple是极其封闭的，在Apple上二级生态想做很大是非常难的，而Android就不一样了，尤其是中国的Android，不像国外被Google控制着，在国外若有人乱搞，Google Play可以将其下架，但在中国就谁都拿微信没招了。说到这里还是真诚感谢中国政府的，你的英明决策，给中国互联网创造了一个引领全球的机会。在国外，Apple和Google是既得利益者，还没人撼得动，但中国出现了这样的机会，移动互联网下半场，中国终于要开始引领全球了！如果在Apple下架微信时，中国政府能够以反垄断法之类的名义杀下Apple，那就是又帮了大忙了（微信是不是应该给我付咨询费啊）。7.小程序的需求不强烈？很多未来，不体验过自己是想不到的福特说，你问用户要什么交通工具，用户会说他想要一匹更快的马，没人会认为汽车是未来。iPhone发布时，Nokia和黑莓嘲笑说：全触摸屏不靠谱，按键是最佳用户体验。然后临死还说：我们没做错什么，不知道为什么会这样。那么小程序的核心理念：“触手可得”，到底是不是用户需求，是不是未来方向？ Of cause！这跟电容触摸屏是一样的道理，直击人性底层，能让你的大脑皮层产生爽的感觉。所有让人爽的东西，都是发展方向。而一旦一个有影响力的巨头去做，就成了不可逆转的前进方向。微信，是一个尤其深谙人性、擅长让人爽的产品，你一旦爽过了，就退不回去了。 想象下一切触手可得的上帝感，手机里全是可以放心的、高品质的、无需适应UI的、不用登陆注册的服务，触手可得、用完即走，太爽了。然后你就会变成它的拥护者，以证明自己更酷。有人在用原生应用，你就会告诉他：hi，你不知道小程序吗？怎么还在用那么笨重的大程序啊。如果有个开发商的应用只有原生版，你就会骂：这是什么老土厂商，竟然还让我下载安装，不用了！8.小程序和原生应用将长期并存？原生必将没落小程序生态是原生生态的下一代替代品，是时代的进化产物。Windows原生应用当然也不会消失，但大部分服务都在互联网上了。小程序看中的也是这块，邮件客户端什么的就不要在小程序里用了，但你目前在PC浏览器里使用的各种服务，全部会纳入小程序的生态范围。小程序出来后，原生生态和其对抗是让历史倒退，没有意义。就像微信冲击运营商的短信业务时，电信运营商的对抗也是无意义的。对抗小程序的，不会是原生生态，只能是其他触手可及的类小程序生态。微信这条大鲶鱼进来后，Apple、Google等众多巨头都会有反应，他们不是没技术，只是原来躺着挣钱很舒服，不愿意革自己命，但多久会落实行动也难讲，毕竟只是为了中国市场而革全世界市场的命，好像不太划算。有人觉得革掉原生应用的命，过程会很长，其实这个进程的进度是由微信控制的。 微信做的越激进，引发的旧利益既得者的反弹会越严重；但温水煮青蛙的杀原生生态，又存在用户习惯培养的成功把握度不高的问题。小程序毕竟是全新事物，培养C端用户习惯是需要引爆点的，微信自然不缺引爆能力。当初要做游戏，开屏就是打飞机，然后全民都在打飞机。当初要做支付，推出群红包，然后全民都在抢红包，瞬间颠覆支付宝的地位。11月小程序将面向手机用户开放，现在引爆设计肯定已经做了不止一稿，比如开屏就推一个很好玩的小程序，造成全民都用小程序的热潮，然后所有观望的开发商全都会跳下海。再然后微信持续推出比一比手机清洁度在好友中的排名之类的玩意，持续给优质小程序和用户需求做对接，过半年就没人下载原生应用了，再过半年原来装的原生应用也大多卸了。那些被颠覆的人能怎样呢？就像马云在微信红包出来后虽然嚷嚷这是偷袭珍珠港，可你又没有原子弹打回去啊。事实上小程序不是偷袭珍珠港，这是降维打击，就像三体人留下那句话：毁灭你，与你何干。8个常见误区解释了，再简单说下小程序里的机会和威胁。小程序的创业机会在于：1.人才市场，因为小程序工程师将有一个从0开始高速增长的红利，其中的线上线下培训、招聘、书籍出版等相关领域会享受一次红利。2.如果你是个光脚的创业者，那么就豁出去认真做小程序，抛弃原生，从微信用户的特点出发重新设计产品，做轻、做服务化，一定要用完即走，不要考虑次日留存，当时用爽最重要。3.充分利用社交特点，做社交类服务，比如多人互动、上下游联动。小程序是可以发到群里的、朋友圈里的，想想群红包这种社交产品，想象空间很大。4.充分发挥线下优势，做线下商家服务。线下扫码入口，基本就是微信的天下。5.由于阿里、百度等一些巨头不会入驻小程序，留下一片空间给创业者。6.其实被我公开说了的机会，可能就不是机会了…小程序的威胁：1.如果你在原生App下已经是既得利益者，那么你做小程序的话，ROI高概率不划算，因为新开一个产品，从产品、开发、测试、持续运维升级，资源消耗太大了，由于短期内小程序的体量和你已经拥有的原生体量还差不少，分出精兵强将干这事会让你很郁闷。如果你不担心小程序创业潮里的新兵蛋子干翻你，你就暂时不用管小程序这事了。否则，ROI为负你也得搞。2.原生生态下生存的很多公司的商业模式会受到很大冲击，安卓应用市场、原生应用广告产业链、原生工程师培训，都会受影响。篇幅有限，想要咨询如何减少冲击，可以私聊我微博weibo.com/wangan2000。3.哦，通篇没说，虽然浏览器不是原生生态产物，但也会被架空。标准浏览器的体验无法与小程序抗衡。就是小程序这个生态如果占据了用户心智和时间，原生和浏览器生态都会受冲击。4.就个人职业而言，原生开发、UI设计、流量运营这些领域的人的失业率会增加。微信有统一的UI要求，然后UI设计师就躺枪了。获取流量的玩法，也和原生不一样了，没法买买买了，不过移动互联网进入下半场后，很多公司的流量采购部门本身也在裁员。很多人还怀疑Android和iOS的开发工程师会不会真的失业，你觉得iPhone出来后，symbian工程师会不会失业呢？虽然当年也确实有很多人认为不会失业吧。最后，作为一个技术人员，吐槽下：我不喜欢封闭！虽然然并卵吧。哦，对了，最后再提醒下被小程序冲击的人，你们的不爽不要来喷我，又不是我要冲击你们，提醒你们是好事。                    感谢 mengyidan1988 投递这篇资讯                      声明：本文系ITeye网站发布的原创资讯，严禁任何网站转载本文，否则必将追究法律责任！                                                              已有 6 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>117<docid>     <title>百度正式宣布推出深度学习开源平台PaddlePaddle</title>     <link>http://www.iteye.com/news/31863</link>     <content>          百度近日正式对外宣布开放其深度学习开源平台PaddlePaddle，这也是继Google、Facebook、IBM后又一家将人工智能技术开源的公司。PaddlePaddle的前身是百度于2013年自主研发的深度学习平台Paddle（Parallel Distributed Deep Learning，并行分布式深度学习），且一直为百度内部工程师研发使用。PaddlePaddle在深度学习框架方面，覆盖了搜索、图像识别、语音语义识别理解、情感分析、机器翻译、用户画像推荐等多领域的业务和技术。今年9月1日百度世界大会上，百度首席科学家Andrew Ng（吴恩达）首次宣布将百度深度学习平台对外开放，命名PaddlePaddle。目前，PaddlePaddle已实现CPU/GPU单机和分布式模式，同时支持海量数据训练、数百台机器并行运算，以应对大规模的数据训练。此外，PaddlePaddle具备高质量GPU代码，提供了Neural Machine Translation、推荐、图像分类、情感分析、Semantic Role Labelling等5个Task，每个Task都可迅速上手，且大部分任务可直接套用。PaddlePaddle研发负责人徐伟百度资深科学家、PaddlePaddle研发负责人徐伟介绍：“在PaddlePaddle的帮助下，深度学习模型的设计如同编写伪代码一样容易，设计师只需关注模型的高层结构，而无需担心任何琐碎的底层问题。未来，程序员可以快速应用深度学习模型来解决医疗、金融等实际问题，让人工智能发挥出最大作用。”目前，PaddlePaddle已在百度30多项主要产品和服务之中发挥着作用，如外卖的预估出餐时间、预判网盘故障时间点、精准推荐用户所需信息、海量图像识别分类、字符识别（OCR）、病毒和垃圾信息检测、机器翻译和自动驾驶等领域。以外卖行业为例，外卖员等待商家出餐的时间耗时严重，百度将不同时段商家的客流量、菜品的制作时间和订单量等数据交给了PaddlePaddle，经过对海量数据的深度学习处理，如今，百度外卖的内部系统可以预估每个商家菜品出餐时间，及时告知外卖员，提高了送餐效率，系统也可以更加合理地规划取餐和送餐的路线。早在今年1月份，百度便将可让人工智能软件运行更高效的关键代码Warp-CTC开源。该代码可直接用在当前的人工智能框架中，不仅比传统CTC训练速度快百倍，还大幅降低了对硬件的要求，缩短了研发的周期，让端到端的深度学习变得简单、快速。据百度方面透露，9月底百度还将发布PaddlePaddle的新版本，将全面支持Mac操作系统、以及Cuda8.0和GCC5.4的支持，同时进一步优化了安装过程，帮助更多开放者更好地“上手”。公开资料显示，谷歌于去年11月发布并开源了新的机器学习平台TensorFlow，供相关技术人员进行语音识别或照片识别等多项机器深度学习领域的研究；IBM几乎同步采取了行动，于去年11月底宣布通过Apache软件基金会免费为外部程序员提供System ML人工智能工具的源代码；社交巨头Facebook，继去年1月公开多款深度学习人工智能工具后，又于去年12月开源了Big Sur人工智能硬件架构。（李根）来自：新浪科技                    感谢 mengyidan1988 投递这篇资讯                                                              已有 4 人发表留言，猛击-&gt;&gt;这里&lt;&lt;-参与讨论                    ITeye推荐—软件人才免语言低担保 赴美带薪读研！—           </content></doc>
<doc>     <docid>118<docid>     <title>“表情符号”表现怎样的情感</title>     <link>http://blog.sina.com.cn/s/blog_4cacf1f30102wph6.html</link>     <content>“表情符号”表现怎样的情感徐贲&nbsp;有朋友时而会在给我的微信中添加一些有表情的小黄脸，就是人们所说的“绘文字”（emoji）。Emoji如今已是一个收入词典的英文字，是日语原名的罗马注音（1999年由日本人栗田穰崇发明）。在日语中，这个字是e (絵, "picture") +moji(文字,"character")，但却相当符合英语使用者的词根联想（谬误词根效应）。这是因为，绘文字表达的内容非常单一，仅为“情感”或“情绪”，即英语中的emotion。绘文字是被当作一种表达情感的“符号”来使用的。绘文字是“颜文字”的进一步图像化。1982年美国电脑科学家史考特·法尔曼（ScottFahlman）率先于使用了“:-)”及“:-(”这样的标点符号组合，于是开始有了“颜文字”。这是一种字符表情，是用标点符号及英文字母组合而成的比较简单的面部图案。继颜文字和绘文字之后，“表情包”又成为进一步的图形化表情符号。表情包是社交软件兴起之后形成的一种流行文化，通常以时下流行的名人、语录、动漫、影视截图为素材，加上一些相匹配的文字，用以表达特定的情感。在这三种表情符号的变化过程中，图形变得越来越丰富、细致，但表现的内容并没有变，仍然是人的情感。情感又称情绪，是人类普遍能感觉到的快乐、愤怒、妒嫉、哀伤、爱慕、害怕、厌恶，以及其他多种不同的混合形式。可以从两个不同的方面来了解“表情符号”的情感作用，一个是为传递的信息添加某种情感氛围，另一个是试图表达的情感本身。人们在用书面文字或口头语言交际的时候，传递的不只是“意思”，而且是某种情绪氛围中的意思，因此需要借助语气、语调、敬语、礼貌、情感遣词等文字外手段。“你要当心”这句话，用善意提醒或恶意威胁的语调说出，同一句话会有完全不同的意思。“表情符号”可以用来营造数码交际的情绪氛围，数码交际具有即刻和亲密的特征，但恰恰又缺少传递情绪氛围的手段，表情符号正好满足了这需要。就像是在说话时打哈哈或提高嗓门一样，一张笑脸可以把一句在文字上显得突兀或可能冒犯的话变成一个“玩笑”，一张怒脸可以把一句平淡的判断强化为一个谴责。使用表情符号最多的人群是青少年，他们正处在情绪丰富、剧烈，特别渴望表达的年龄。表情符号是一种“俚语”（slang），一种在特定人群中使用的非正规语言，而青少年又正好是最偏好俚语的人群。许多俚语都是通过这个人群进入通用语言的，尤其是在网络电子交际的时代，中文里有数不清的例子。斯坦福大学社会语言学教授埃克特(PenelopeEckert)指出，“青少年是语言变化的真正推动者和促进者。先是地方语的差别，后来是不同的语言，引导这些变化的都是青少年。……地区和种族方言的区别也是一样。这是语言的社会分化过程，在这个过程中，年轻人出力要比上了年纪的大的多”。俚语的情绪色彩经常是简单、夸张、程式化的，正符合大多数青少年的思维和说话方式。表情符号涉及的另一个方面是它要表达的情绪本身。在许多人看来，文字交流中使用表情符号显得幼稚、低能，是因为缺乏文字能力，才用插画般的符号来图解情感。表情符号不过是成人使用的儿童贴纸，好玩而已。也有人认为，一图抵千字，表情符号的图像经常能表达文字无法表达的情感和情绪，而解读图像正是人类交际的一个重要方面。心理学家麦拉宾（AlbertMehrabian）提出过一个著名的（也是有争议的）“麦拉宾法则”。他认为，人们交际时，根据语言得到的讯息（谈话内容、言词的意义）占7％，从听觉得到的讯息（声音大小、语调、语气等）占38％，透过视觉得到的讯息（表情、动作、态度等）占55％。麦拉宾法则因此也称为“7─38─55法则”。这个法则被用于解释人际交往中第一印象的形成：第一印象五成以上是由“视觉接收的讯息”所决定。面对面交往中是如此，那么在微信式的数码交际中又是一种怎样的情况呢？有研究者认为，有93%的非语言交际手段得不到或无法运用。表情符号能填补一些非语言交际的空缺，但却是非常有限，因为人流露在脸上的表情要比用表情符号表示的来得远为真实和微妙。虽然人脸上的情绪表情也可以假装，但假装往往会留下痕迹，而假装的痕迹本身便会成为一种透露真实情绪的面相表情。但表情符号则完全不同，它可以是一种全然与“表情”无关的表情“符号”，即使在真实的情况下，它也只是某种情感的一个简易的，概念化的替代物。就表达情感而言，文字是陈述（或解释），而不是试图替代表情，但表情符号的图像却兼具陈述和替代的作用，后一种作用使它就像戏剧表演时使用的面具一样，起到的是拉开而不是拉近交际者距离的作用。在对他人呈现情感的时候，人们经常需要选择如何隐瞒自己的情感，或者展露自己没有的情感。在人们对自己展露情感时，他们则需要说服自己去拥有某些应该拥有的情感，或者不要某些不该拥有的情感。在数字交际时代，对人或对己，表情符号都为满足这些古老的需要提供了新的手段。&nbsp;</content></doc>
<doc>     <docid>119<docid>     <title>体育竞赛的光荣与荣誉</title>     <link>http://blog.sina.com.cn/s/blog_4cacf1f30102wlii.html</link>     <content>体育竞赛的光荣与荣誉徐贲&nbsp;在里约奥运会男子游泳400米决赛之前，澳大利亚选手霍顿拒绝和孙杨打招呼，并表示这是因为孙杨是个曾经尿检呈阳性的运动员，他不想和尿检呈阳性的运动员说话。许多中国网友视之为抹黑和挑衅，因此非常愤怒。大量“爱国青年”再度翻墙出征，对霍顿的社交账号进行狂轰滥炸，并要求他为此道歉。随后，孙杨获得200米自由泳冠军后，有网友在微博上发文说，“让 （霍顿）知道我们有的是男人的阳性，而他是阴险造谣者的阴性”“好样的，让霍顿再牛啊！”就双方表现的强烈情绪而言，霍顿对孙杨的藐视是抹黑和挑衅吗？ “爱国青年”有理由对霍顿进行“回击”吗？（姑且不论回击的方式和语言）。这样的情绪互动又与怎样的社会规范有关呢？不妨从体育竞赛的光荣与荣誉来做一些思考。在体育竞赛中，光荣与荣誉是不同的。挪威社会和政治学家乔恩·埃尔斯特（Jon Elster）在《心灵的炼金术：理性与情感》一书里对光荣和荣誉作了区别。光荣关乎优秀，有的行为、成就、本领、能力被视为是“优秀的”。优秀是比较出来的，游泳、举重、体操的竞争就是比试谁优秀、更优秀和最优秀（“出成绩”）。谁取得了成功，谁就优秀，比试的目的就是取得成功。不管如何，只有有“好成绩”，就算是成功和优秀。荣誉与光荣不同，荣誉不一定要取得成功，也不一定表现为“出成绩”。用埃尔斯特的话来说，荣誉不是“零和现象”（zero-sumphenomenon），比赛得胜的一方固然可以挣得荣誉，失败的一方也可以不失荣誉（虽败犹荣）。荣誉不能损失或失去的不是“成绩”，而是“勇气”（不气馁，不投降，不临阵脱逃）和“品格”（不作弊或不欺骗、不运用非正当手段）。在对抗性竞争中，荣誉不是某一方的事情，而是对对方的荣誉也有影响，因此每一方都有理由关注对方的荣誉状况。从古到今，这种关注是自利的（对自己有无益处），不是纯粹或抽象道德的（挑刺、找毛病）。无中生有地抹黑对方对自己并没有好处。法国历史学家比拉斯瓦（Fran&ccedil;oisBillacois）曾经引述一位1572年的意大利人的话说，“我们越是把自己的对手看成是有荣誉的人，我们自己的名声和荣誉也就越高。然而，如果我们蔑视他，极力要使他显得卑鄙和没有荣誉，那么，我们自己的羞耻也会相应增加，因为这形成了这样一个事实，我们挑了这么一个可怜兮兮的人来争夺荣誉。”（Fran&ccedil;oisBillacois,Le duel dans la soci&eacute;t&eacute; fran&ccedil;aise desXVI-XVIIesi&egrave;cles, 1986, p. 359））黑格尔的主-奴辩证法中也包含着荣誉要求争夺荣誉者具备荣誉资格。在你死我活的搏斗中，对抗中的一方向另一方投降（或临阵脱逃），这表明投降者更在乎性命，是个懦夫，并在此意义上成了另一方的奴隶，另一方则是主人。通过冒生命之险，主人表明，与性命相比，他更在乎对方承认其卓越。然而，主人从奴隶那里得来的承认是没有价值的，从没有荣誉的奴隶那里又怎能得到真正的荣誉呢？懦夫没有荣誉，这使得懦夫给勇者的尊敬也贬值了。在今天的体育比赛中，运动选手不能挑选自己的对手，谁成为他的竞争对手不是他自己说了算的。但是，这不等于说他就此不能对对手的荣誉有自己的看法。当然，把这种看法（尤其轻蔑和鄙视）公开表现出来，那就不一定在任何场合都是恰当的了。在今天的体验比赛中，参赛者竞争的毕竟主要还是光荣（现场比赛的成绩），而不是荣誉（好的名声、清白的历史）。尽管如此，一个有自尊的运动员还是会特别看重光荣和荣誉的一个重要不同，那就是，追求光荣往往是选择性的，但捍卫自己的荣誉却总是强制性的——“对于那些没有参与竞争的人来说，不一定就背上了低人一等的耻辱”，而参加竞争，甚至在竞争中取胜者却未必就一定是有荣誉的。以光荣和荣誉的区别来看，霍顿对孙杨表现出来的是关于他荣誉而不是优秀的情绪，这种情绪是基于霍顿对运动员“荣誉”的看法。事实上，法国仰泳选手拉库特也表示，讨厌看到作弊的孙杨，“他的尿是紫色的”，他说，“我梦想有朝一日，游泳比赛不受作弊者污染”。类似的事情还发生在别国运动员身上。两度因服用禁药遭禁赛的俄罗斯女子选手叶菲诺瓦(YuliaEfimova)也成为对手耻笑的对象，连美国“菲鱼”菲尔普斯也加入耻笑者的行列。24岁的世锦赛冠军叶菲诺瓦，原本是奥委会宣告禁赛的300多名俄国选手之一，申诉后在奥运开幕前一天才获得参选许可，但她在奥运每场比赛出场时，都引来全场嘘声。叶菲诺瓦在女子100公尺蝶式准决赛中夺得分组第一后，竖起食指以第一名自豪，当时透过电视观赛的19岁美国选手莉莉金（LilyKing）则隔空摇起食指，嘲讽叶菲诺瓦曾吃禁药。决赛时，莉莉金以半秒之差击败叶菲诺瓦，夺得金牌。她在水中竖起食指，当场打脸叶菲诺瓦。她在赛后接受电视访问时说：“你竖起食指自称第一，但你曾被逮到服禁药，我实在无法欣赏这种事。”她为自己感到骄傲：“我代表美国队清清白白参加比赛。这就是我要做的事。”莉莉金表达的也是她对荣誉的看法。对荣誉的看法和追求受到社会规范的影响，因此并不只是两个运动员之间的事情，而且还关乎观众。像奥运会这种国际比赛的观众很难一概而论，不能说那些观众的社会规范是对的，而另外一些观众的则是不对的。中国观众与澳大利亚、美国的观众可能因为不同的社会规范而对荣誉有不同的认识或看法，这也是可以理解的。不过，也不是没有共识可能的。许多人认为，眼下的中国是一个以成功论优秀的“结果型社会”（成王败寇、为达目的不择手段）。其实也未必全然如此。试想，倘若曾经服用禁药的是霍顿，而拒绝与他打招呼的是洁身自好的孙杨，倘若霍顿的粉丝们因此百般攻击孙杨，那么中国“爱国青年”会有怎么的感受和情绪呢？他们会认为孙杨没有理由瞧不起霍顿吗？还是会觉得霍顿的粉丝们有理由攻击孙杨呢？这叫做“换位思考”，也就是将心比心。人们在做规范性判断和评价的时候，经常会本能地受到“亲疏有别偏见”的影响，所谓“胳膊肘朝里拐”，这并不奇怪。但这是意气用事和非理性的偏见。伏尔泰说，“傻子用偏见来论理”。有偏见不可怕，可怕的是不知道如何纠正偏见，尤其是自己的偏见。一般人只要运用理智，做换位思考，就能纠正自己偏见。有一个讽刺霍顿的双幅漫画，第一幅是霍顿踩到了一坨屎，他说，“咦，我好像踩到屎了”，霍顿脚下踩着一个小人（想来是孙杨）。第二幅是一个年轻姑娘脚踩在霍顿头上，她说，“好大一坨屎”。漫画的意思很清楚：霍顿自取其辱，丢脸（不荣誉）的是霍顿而不是孙杨。屎与肮脏的联想是人类普遍的。埃尔斯特指出，“每一个穆斯林生来就有道德荣誉感（ghrairat），尽管他可能因为别人的行动受到玷污，就如同人们踩在粪便上弄脏了鞋子一样，它只有当拥有者未能加以有效保护时才会如此。”不管在什么情况下，运动员远离禁药，应该是有效保护自己荣誉的一种方式。（原刊《端传媒》）&nbsp;&nbsp;</content></doc>
<doc>     <docid>120<docid>     <title>犬儒主义是弱者的抵抗&nbsp;知识分子失败是全社会的不幸</title>     <link>http://blog.sina.com.cn/s/blog_4cacf1f30102we7n.html</link>     <content>犬儒主义是弱者的抵抗 知识分子失败是全社会的不幸徐 贲大概没有人否认今天中国社会存在大量的“犬儒主义”者，而杨绛去世所引发的知识分子“沉默权”讨论也一石掀起千层浪。如何看待这些问题，以及今天中国知识分子生存现状，前海传媒日前专访了徐贲。说谎：您此前文章以及书中都谈到了平庸之恶与犬儒主义，这些似乎是建国后大多数知识分子与普通人的相同点，今天也是如此，当然也有少数勇敢者。目前如何改变这种犬儒文化？或者说，除了勇敢与压迫之外，是否有中间相对平稳通道？徐贲：“平庸之恶”指的是极权统治下普通人的制度性作恶。纳粹时期、斯大林统治时期和文革时期的大规模暴力残害和杀戮都是由无数普通人参与的，他们的恶行动机不过是相当平庸的贪婪、嗜权、自私、追逐个人利益，因此而被称为平庸之恶。知识分子的相互出卖、相互背叛、打小报告、相互监督也是这种性质的平庸之恶。在大规模残害不再发生，相互出卖的压力相对降低的今天，普通人与专制制度的合谋，最关键的问题已经不再是狼群社会的平庸之恶，而更是假面社会里的犬儒主义。我在《颓废与沉默：透视犬儒主义》一书里对假面社会的犬儒主义已经多有论述，这里就不重复了。在此我想补充一点有关犬儒主义与“消极自由”关系的想法。犬儒主义的一个重要特征就是死活不相信。今天，人们似乎有了“不相信”的自由（是不是“消极自由”另当别论），在某些场合甚至还可以把不相信说出来，这在毛时代是要被送到夹边沟去的。这是今天与毛时代的一个不同之处。但是，这种不相信的消极自由是有限的，统治权力可以随时把它收回去，所以它并不是一种真正的“自由”。行使这种“自由”，弄不好会要付出惨重代价的，毕福剑就是一个例子，可见并不真的是自由。无论是否被当作消极自由，“不相信”的犬儒主义本身就可以是对权力说不，拒绝顺从，拒绝合作。这就是为什么犬儒主义可以是一种弱者的抵抗。但这种抵抗的社会价值和建设作用是非常有限的，它甚至还会起到对政治抵抗帮倒忙的作用。犬儒主义不能告诉你，为了更好的未来，你需要用什么去代替你拒绝的东西。犬儒主义使你不相信世界上还能有更好的未来，也不相信还能有任何可以取代坏东西的好东西。这样的犬儒主义也就取消了改变现实的努力。今天，犬儒主义的关键是信仰的丧失，人们因为什么都不相信而陷入迷茫、麻木、冷漠的状态，也陷入了多说无益的沉默。这种沉默和极权鼎盛时期的沉默是不同的。有人误以为，极权主义统治下知识分子沉默，只是因为迫于暴力迫害所造成的恐惧。其实并不只是如此，毛时代的许多知识分子还有信仰，他们在许多问题上的沉默，不只是因为害怕祸从口出，而且是在积极配合，“顾大局”“接受党的考验”，“不给信仰抹黑，让敌人有机可乘”。匈牙利裔英国作家库斯勒在《正午的黑暗》中描绘的革命者认罪就是这样一种出于信仰的自我噤声和沉默。他们沉默，但相信“历史会还我清白”“党不会冤枉一个好人”。美国历史学家托尼·朱特在《思虑20世纪》中特别提到了斯大林时期的那种愚忠信仰，“共产主义的经历让幸存的知识分子对他们自身的信仰格外耿耿于怀——甚于那些罪行本身：回过头来看，正是这种愚忠给他们造成了创伤，这比他们在狱卒手中经受的一切都更令人痛苦”。在今天的犬儒主义时代，已经很少有谁还相信这种愚忠信仰了。他们的沉默因此更加是一种被迫的，而不是自愿的沉默，因此与所谓的“消极自由”无关。说谎：从您的观察来看，中国公共知识分子与国外知识分子有何不同？尤其今天大型时期？徐贲：公共知识分子在中国被污名化为“公知”，许多知识分子羞于认同公知，更愿意把自己看成专业主义的“学者”“专家”，这是中国知识分子的失败和犬儒主义，也是整个社会的不幸。在国外，以美国为例，公共知识分子还是受尊敬的。我前面提到的托尼·朱特就常被视为爱德华·萨义德之后美国最优秀的公共知识分子。公共知识分子不是一些自以为在“捍卫和推进宏大抽象理念”或对事事都急于表态的知识分子，而是一些在学术活动之外，意识到并行使自己民主公民责任的知识分子。这样的知识分子是任何一个民主社会所必不可少的。出于对人类普遍深层道德的信念，他们同民主的基本价值，自由、平等和人的尊严，但不会把民主当作一种能代替极权意识形态的宏大理论。新自由主义在西方一些国家便成了这样一种宏大理论。朱特不是一个新自由主义者，在他所信奉的社会民主主义那里，“民主并不是解决非自由社会之问题的办法”。对于充满苦难和不幸的20世纪来说，民主只是一个不错的选择，它最好被辩解为某种防范更恶劣的体制出现的东西，也最好被表述为大众政治，它是确保人们不会每次经受同种愚弄的一种方式。从公共知识分子的立场，朱特认为，今天的世界之所以需要民主，乃是因为，至少在短期内，民主是短期内抵御非民主政治的最佳屏障，但它并非一道抵御其自身内在缺陷的屏障。希腊人便知道，民主不太可能亡于极权主义、威权主义或寡头政治的吸引力，而更可能亡于自身的堕落。像朱特这样的公共知识分子，也是中国所需要的。说谎：关于改良与变革的说法，历来很大争议。您如何理解这两种不同观念以及现实运用？徐贲：如果我们把革命理解为一种横扫一切的暴力，一种理应将一切异见个体当作敌对势力无情碾碎的历史铁律，那么我当然不愿意见到它的发生。法国革命、俄国革命、中国革命、波尔巴特的柬埔寨革命都是这样的革命，它们将“反革命”的死亡和毁灭作为战争和暴力的正当理由和魅力所在，以为从这样的混乱（天下大乱）中间会诞生一个更好的人类和一个更好的世界。所有这样的革命理想都失败了，在革命废墟上建立起来的是更残暴的专制。托克维尔的《旧制度与大革命》在中国成为当红读物，在很大程度上是由于革命政权的合法性和正当性出现了危机。托克维尔看到的是，暴力革命虽然能推翻一个不正义的旧政权，但未必能建立一个正义的新制度。更何况旧政权本来就拥有对新政权有用的“整套规章制度”。这个旧制度“在新社会中很容易就能确立，然而却为专制制度提供特殊方便。人们在所有其他制度的废墟中寻找它们，并且找到了它们。这些制度以前曾造成那些使人们分化屈服的习惯、情欲和思想；人们将它们复苏，并求助于它们。人们在废墟中抓回中央集权制并将它恢复；在它重新建立的同时，过去限制它的一切障碍并未复苏，因此，从刚刚推翻王权的民族的腹部深处，突然产生出一个比我们列王所执掌的政权更庞大、更完备、更专制的政权。”说谎：目前整个中国社会思潮云集，但公共场合，普通人几乎很少看得到，茅于轼先生之前说，各界的共识应该先从说真话开始.徐贲：我看不出目前整个中国有社会思潮云集的景象，反倒是有万马齐喑的感觉。要期待出现多种思潮或百家之言，首先需要允许说真话，更需要让人能自由说话，还需要社会中的有尽量多的人愿意和能够好好说话，大家都说理，以理交流，以理协商。一个思想活跃的社会是一个讲理的话语共同体，但不会是一个利益共同体。要允许各做各的梦，自己有梦想，也让别人有梦想，各自自由表述。这样也许能有望促成社会思潮云集的局面。说谎：随着科技讯息的发达，这是否会从大方向上对集权主义产生很大冲击？又或者说统治者也能应对自如。徐贲：希特勒、斯大林式的极权主义已经死了，但是，种种变化和自我适应的极权主义并没有绝迹。科技讯息发达带来的信息传播是极权统治最最处心积虑要严加防范的。今天，新极权和后极权的专制独裁一直在不断积极调整其统治策略，正如美国著名记者威廉．道布森（WilliamJ. Dobson）的《独裁者的学习曲线》(TheDictator’s Learning Curve)一书中指出，今天的极权政权领导者与20世纪的独裁者不同，不像朝鲜那样完全冻结在时光里，还继续用劳改营、暴力、洗脑的手段控制人民。新兴的极权国家，如俄罗斯、委内瑞拉、伊朗，它们不再以斯大林、毛时代旧式极权的那种赤裸裸暴力和血腥手段来剥夺人民的一切自由，并加以恐怖的残酷统治。新的极权专制给人民许多表面与程序上的“自由”，但始终渗透并控制着那些权力赐予人民的自由。在经济上，新的独裁者更聪明，不再封闭守贫，切断与世界的联繫。他们懂得从全球体系获得资源，却不会失去自己的统治权，其最重要的三个手段便是金钱收编、利益分化和虚假宪政民主。如果说纳粹和斯大林统治是典型的旧式极权统治，那么，今天我们看到的则是一种新旧混合。这是一种以旧的统治目的为本，以新的统治手段包装和运作的新式统治。总的特征是颇为巧妙、有效地运用金钱收编、利益分化的手段，通过对民众思想和言论的严格控制和对公民政治自由的不断剥夺，最大化地保持了稳定。这样一种统治前所未有地依赖民族主义情绪、经济收买、知识分子收编、放纵型的物质消费主义和与之共生的政治冷漠和犬儒主义。道布森指出，今日的独裁者知道，在这个全球化的世界里，较为残暴的威吓方式——大规模逮捕、行刑队、血腥镇压——最好以较柔性的强迫方式取代。今日最有效率的独夫不再强行逮捕人权团体成员，而是派出税吏或者卫生局官员让反对团体关门大吉。政府把法律写得很宽松，但遇上它们视为有威胁性的个人或团体时，运用起来却像手术刀一样精确。委内瑞拉的一个异议分子开玩笑说，查韦斯总统的座右铭是：“我的朋友，荣华富贵；我的敌人，法律伺候。”惩罚政治批评者或异见者的最佳方式不再是给他们带上“右派”“反革命”“反党反社会主义”的帽子，而是调查和指控他们“嫖娼”“滋众闹事”“逃税”“经济问题”，把他们放到电视台上“认错”“悔过”“坦白”。就算最后无法对他们定罪，也足以“搞臭”他们的公共形象，给他们发出警告，令他们从此怀有恐惧心理。如果实在抓不到这类把柄，也会请他们去“喝茶”，这种不受欢迎又不得不接受的“邀请”有时同样能产生恐惧和震摄的作用，至于有效程度如何，那就是另外一个问题了。&nbsp;</content></doc>
<doc>     <docid>121<docid>     <title>消弭于第三代的“文革”记忆</title>     <link>http://blog.sina.com.cn/s/blog_4cacf1f30102wbds.html</link>     <content>消弭于第三代的“文革”记忆徐贲&nbsp;《人以什么理由来记忆》后记&nbsp;美国历史学家莉莎·派恩（LisaPine）在《希特勒的“国民群体”》(Hitler’s “NationalCommunity”)一书里用“文化革命”来概括希特勒统治下德国所发生的根本变化。她引用了英国历史学家理查德·艾文斯( Richard J. Evans)所说的，“希特勒和纳粹所要改变的莫过于德国人的精神，以及他们的思维和行为方式，……这场革命首先是文化的，而非社会的。”在纳粹德国，法西斯文化被用作极权政治的添加剂和替代品，使人们一点一点地丧失了正派而正常的生活。因此，记住大屠杀的恐怖岁月不仅应该记住由国家权力指挥的严重罪行，而且应该记住在这样的权力统治下，人们的心灵和道德怎样一天天在浑然不觉中被毒化。纳粹在德国统治12年，成就的就是这样一场全面的文化革命，纳粹政权的“人民启蒙和宣传部长”戈培尔于1935年6月17日说，“我们希望有一天，没有人再需要谈论国家社会主义，因为它已经变得像人们呼吸空气那样自然！因此，国社主义不能只是说说而已——它必须被尽心尽力地实行。人民要在内心习惯这样的行为方式，将它化为自己的习惯心态——只有到那个时候，我们才能看到，国社主义已经养育了新的文化意志，这一文化意志将对我们国家以有机体的形式存在下去发挥决定性的作用。”戈培尔所设想的极权文化意志确实塑造了整整一代在极权制度中充当顺从国民的普通德国人，而骇人听闻的体制之恶正是在这些普通人的参与和协助下发生的。在今天的德国，人们对希特勒的这场“文化革命”及其灾难后果的记忆已经从参与者的第一代过渡到非参与者的第二代，甚至第三代。德国作家彼得·史耐德（PeterSchneider）在《祖父之罪》（“The Sins ofthe Grandfathers”）一文中指出了德国第三代记忆的一种特征，那就是历史知识与道德判断的脱节。新一代的年轻人对纳粹时期的历史有所了解，但觉得这段过去已经与自己无关。因此，他们当中有不少人很能“理解”希特勒时代的德国人为什么把制度性作恶当作一种“正常”的生活方式。也正是因为这种“理解”，他们放弃了对纳粹罪恶应有的批判反思。史耐德的文章是1995年发表的，离纳粹垮台正好是50年，他在文章里说，“十几、二十来岁的青少年离希特勒就如同我们在1960年代离威廉二世一样遥远。” 威廉二世1918年退位，1941年去世。史耐德出生于1940年。1960年代，他是一个二十出头的小伙子。中国的“文革”发生至今也快要50年了，对于十几、二十的青少年来说，“文革”对他们犹如宣统皇帝（1911年退位）对我自己这一代人一样遥远。他们对“文革”不是完全没有“知识”，但知识不等于道德思考，更不等于价值抉择。他们甚至根本丧失了思考的能力和抉择的意愿，以轻浮和玩笑来对待沉重的过去。这是一种比冷淡和沉默更令人担忧的精神疾患。2012年6月6日，武汉华中师范大学的一群毕业生身着“红卫兵”服装，手拿“红宝书”在校园里拍摄毕业照。这些师范毕业生从年龄上说是“文革”后第二代的子女，可以算是“第三代”了。他们将成为下一代孩子们的教师，他们向这些孩子们传承的将又是怎样的一种文革记忆呢？我写《人以什么理由来记忆》一书的初衷是提供一些与人道灾难有关的历史知识，并提醒一些与记忆伦理、道德思考和价值抉择有关的问题。这个初衷至今没有改变。然而，不幸的是，新一代人对“文革”的知识与思考和抉择之间的脱节和错乱却是比我当初写这部书的时候更严重了。这次再版也许正是一个再次提醒这些问题的机会。除了一些必要的文字修改之外，这次再版中还增添了三篇文章。《幸存者的记忆和见证》是我为是普里莫·莱维(PrimoLevi)的《死亡与生还》一书中文译本写的导读，《奥兹维辛审判中的罪与罚》是回顾一场以清算作恶制度中个人罪责，而不是政治报复为目的的审判；《〈朗读者〉和纳粹罪恶的后代记忆》讨论的则是后代记忆中可能发生在私人亲情与公义伦理之间的冲突以及文学对于记忆传承的特殊作用。&nbsp;《人以什么理由来记忆》增订本，中央编译出版社，2016年。&nbsp;&nbsp;</content></doc>
<doc>     <docid>122<docid>     <title>当今中国的民生灾祸和民众“恐慌”</title>     <link>http://blog.sina.com.cn/s/blog_4cacf1f30102w9i3.html</link>     <content>当今中国的民生灾祸和民众“恐慌”徐贲&nbsp;波及全国24省市的山东问题疫苗事件、上海公安部门破获1.7万罐假冒名牌奶粉案、常州外国语学校严重污染的校址环境导致学生健康受损、中国30大城市水源严重污染威胁8千万人的生命，不知还有多少“毒地”“毒水”在威胁更多人的健康和生命。这样的灾祸消息越来越频繁地对社会形成民生安全危机的冲击。对这样的消息和事件，许多民众因为无法知晓真相而感到焦虑、无奈和不知所措。官方提供的信息则让人觉得是在支支吾吾、欲言又止，官方回应还经常发生“改口”的现象，这些都加重了人们的疑惑和不安全感。例如，面对外界质疑，食药监总局先是否认问题的严重性，继而又承认，它此前之所以公布这些假冒奶粉符合国家标准，“主要是提醒消费者不要恐慌”。那么，到底什么是“恐慌”呢？民众的恐慌有怎样的心理和社会机制特征呢？什么才是对恐慌应有的长久之策呢？&nbsp;一 恐慌和道德恐慌&nbsp;恐慌不只是一种个人的情绪或感觉，而是一种群体性的社会心理现象。在社会心理的研究领域里，恐慌指的是，人由于感知了真实的或想象的个人或群体危险，无法自控地害怕并急欲逃离危险。恐慌可归结为这样四个特征：第一，恐慌与其他群众现象一样，发生在较大的群体之中；第二，恐慌造成情不自禁的害怕和恐惧，起因是察觉到了某种危险或威胁；第三，恐慌经常是自发的，是一种非组织状态下的群众行为；第四，恐慌的反应行为有很大的不确定性。惊慌、错愕、慌乱、六神无主和不知所措，这些经常会造成非理性的过度反应。恐慌的行为后果也因此难以预测。研究群体性的恐慌有相当的难度。首先，研究者很难事先知道何时何地会发生恐慌，并在第一时间及时观察恐慌。其次，即便研究者有这样的机会，也很难保持冷静客观的局外人和旁观者心态，很难置身事外地进行观察。这是因为，面临恐慌的局面，局外人和局外人的恐慌感受是不同的，恐慌的力量正在于让人无法置身事外，驱使人情不自禁地惊慌起来。研究者们在恐慌中区分出一种特殊的恐慌，称其为“道德恐慌”(moralpanic)。道德恐慌不只是出于人类的一般生物本能，而且与人类对“害”“恶”“邪”的道德直觉和判断有关。一切“不好”“卑鄙”“恶劣”“下作”的事情都是“害”和“祸”。比起一般的害怕来说，造成道德恐慌的那种害怕更具有社会价值和规范的内涵，例如，山东问题疫苗和上海假冒名牌奶粉所造成的恐慌直接引发民众的道德质问，为什么像以前的毒奶粉、地沟油、苏丹红、甲醛鱿鱼、硫磺烤鸡、硫磺枸杞一样，害人性命的事情还在今天的时候里频频发生？为什么人民的生命和健康权利得不到保障？是哪些制度原因产生和助长了这么恶劣的罪行？这样的社会到底出了什么毛病，会有怎样的未来？因此，这样的恐慌不只是关于疫苗和奶粉，而且更是关于社会的整体生存状态、人心道德和群体未来。“恐慌”既是一个描述性概念，也是一个判断性概念。具有上述描述性特征的现象和行为可以称为恐慌，但一些并非恐慌的现象和行为也会被称作或故意扭曲为“恐慌”。当民生灾祸发生时，受害者们发出质问和抗议，媒体有所调查和揭露、知识人士作出剖析和批评、正义舆论力量对之进行谴责、社会民众要求当事官员或政府权力部门承担责任并对有关人士作出惩戒，这些都是对民生灾祸以其今后防范措施应有的集体理性行为，但因为不符合“正能量”的要求，经常被涂抹或歪曲成恐慌性反应行为。这种故意混淆，甚至指鹿为马的做法对于重视和认真对待真正的恐慌是非常不利的。道德恐慌是人类对生存环境的危机意识和行为反应，它有两面性，一方面，它是人们察觉到危险的结果，警觉危险有助于趋利避害，保护自己。但是，另一方面，道德恐慌是一种对现实的构建和看法，而不一定就是现实真相本身。因此，它包含着相当程度的主观或非理性因素，经常会被夸大、扭曲，也很容易被利用和操控。被操控的恐慌会成为一种对当事人的实质性危害，而不是保护。恐慌的对立面不是不恐慌，而是警觉和采取理性的应对行动。单纯的不恐慌可能是一种麻痹、无所谓或听天由命，要不就根本是虚幻的幸福感。1959年9月15日美国总统肯尼迪在奧克拉荷馬州Tulsa发表的讲话中有一句名言，“现在不是为了让人民感觉幸福而不告诉他们真相的时候。拉响警报不是为了恐慌，而是为了激励公众有所行动。”&nbsp;二 恐慌与反社会和犯罪行为&nbsp;道德恐慌这个说法是由英国社会学家史丹利·柯恩（Stanley Cohen）于1970年代初提出的，先是运用于对青年亚文化的研究，后被运用于对其他亚文化，尤其是对反社会或犯罪行为的研究。柯恩在《民间恶魔与道德恐慌》（Folkdevils and moral panics）一书里，针对1960年代英国媒体对当时青年文化的负面描述及其引起的社会反响指出，媒体倾向于重复报道一种反社会行为，令公众对某一特定社群产生恐惧和加以打压。这种恐慌往往由一次特别严重的个别事件引起，令社会过分关注某一问题，如枪械问题、帮会问题、邪教问题、家庭暴力等。柯恩认为，社会不时受到道德恐慌周期的影响，主要是因为媒体对某些事件所作的刻板和脸谱式报道。尽管后来有些研究者对柯恩的道德恐慌见解提出不同的意见和看法，但也都特别关注民众道德恐慌与媒体的关系。在英国，柯恩提出大众道德恐慌的问题，具有现实批判的意义。他指出，道德恐慌起到的作用是表述理想的社会秩序：勇敢的警察是好人，独立的年轻人是坏人。但重要的是，恐慌还是一种工具，让更大的权力和更多的预算流向治安力量。以摩登派和摇滚派一事为例：警察大批涌入海滨小镇；警方和法院暂时限制了公民自由，如禁止骑着轻型摩托车的年轻人进入海滩度假区，没收他们的裤腰带以羞辱他们，或是将他们长时间关押而不开庭审理；警方的线人潜入年轻人的俱乐部或咖啡馆；议会通过惩罚性的《恶意毁坏法》(MaliciousDamage Act)。柯恩还指出，当局可以以各种目的利用“民间恶魔”。例如，曾有一度，英国政府削减福利的绝佳藉口是：有一些不负责任的单身母亲为了骗取国家福利而滥生孩子。后来，英国政府利用另一种“民间恶魔”达到了同样的目的，这一回是那些欺骗“心善手软的英国”而寻求政治庇护的“假难民”。科恩的道德恐慌能研究帮助人们看到，普通人“自己如何受到操纵，过于认真地对待某些事物，却没有对其他事物给予足够的重视”。在更为极端的情况下，类似于中世纪“审巫”、斯大林“莫斯科审判”、“斗争地主”“镇压反革命”“揪斗走资派”“电视认罪”都是针对某些特定的人群，以此作为加强统治权力的手段。鉴于历史上的这类经验教训，《牛津社会学词典》（OxfordDictionary of Sociology）特别指出，民众的道德恐慌“经常受到道德倡导者或媒体的左右”。在这一过程中，媒体发挥的作用可能很明显，也可能不明显，可能是自觉和主动的，也可能是不自觉或被动的。对引起恐慌的事情，即使媒体不直接进行揭露或谴责，只要它予以报道，就足以引起普通民众的担忧、焦虑、紧张和惊慌。&nbsp;三 &nbsp;民众道德恐慌的社会心理机制&nbsp;研究者们对民众的道德恐慌有不同的侧重点，有的强调心理的因素，有的强调社会制度的危机。当今在中国引起民众道德恐慌的诸多事件，如问题疫苗和假优质奶粉，都属于反社会或犯罪行为，也都关怀民生灾祸。对这种性质的恐慌，需要结合心理因素和社会危机去考察其社会心理机制。造成民众道德恐慌的大致有五个社会心理机制因素，第一，发生了某件令人震惊的事情，造成了强烈的心理刺激，这样的事情完全违背社会认可的道德规范，甚至简直就是闻所未闻、匪夷所思、骇人听闻。第二，民众对发生的事情缺乏信息，尤其是缺乏来自正式渠道的可靠信息，而同时民间又充斥着来自各种暗中渠道的非正式信息——流言传闻、小道消息，谣传猜测。在媒体受权力控制的社会制度中，这种情况尤其严重。第三，民众有身遭受危险、身处险境的感觉，但无法准确了解事情的真相，越是这样，就越是容易夸大危险的程度和受害的印象。这是对危险缺乏应对之策，不知该如何应对的必然结果。第四，他们在对危险缺乏真实了解的情况下，会自以为是地采取不恰当的自我保护手段和作出过度的应急反应。第五，恐慌现象会因某种原因或外力干预而消失或消除，但造成危险的实质性问题并没有得到解决。2012年“世界末日”预言在一些国家造成的民众恐慌就是一个例子，表现出道德恐慌的一些基本特征。末世论的预言，美洲玛雅文明中的玛雅曆长达5,126年週期的结束，地球、世界和人类社会在公元2012年12月21日前后数天之内将会发生灾难性变化。此说法与太阳风暴、尼比鲁碰撞、地球磁极反转、时间波归零理论等谣言结合，成为2012年“世界末日说／人类灭亡说/人类重生说”的预言。这个预言中的世界末日或其他重大事件并未发生。但是，“预言”仍然在一些人群中造成了恐慌。例如，法国南部的一个小村庄比加拉什被视为末日中的避难所，许多人以为在这个地方可以安全度过世界末日，因此涌入大批游客和媒体。当地警察只好设下路障，阻止更多人进入小镇中。在经济状况颇为糟糕的乌克兰，竟然有98%的人搜索了“世界末日”的消息，而搜索“经济危机”的却只有2%。中国一些地区的民众抢购蜡烛和火柴。“世界末日”引起恐慌，首先是因为它骇人听闻、令人害怕，威胁到了一般民众的生存价值（生命、健康、未来），因此成为一种道德恐慌。末日预言被媒体广为报道，媒体也许并不是要危言耸听，而只是在提供一些社会文化性的“客观知识”或“趣闻”。然而，这已经足以引起一些民众的恐慌。媒体报道和民众恐慌便相互刺激，一旦有民众产生恐慌反应，媒体就会越加起劲地予以报道，报道越多，恐惧越强越广。“世界末日”被说得越玄乎、离奇，有的民众就越是害怕。由于他们无法知道到底有多危险，所以更觉得大祸临头，惶惶不可终日。在这种情况下，许多反应都是非理性的，病急乱投医，抓住什么，什么就是救命稻草。例如，据新华网报道，四川隆昌县、双流县集中出现民众抢购蜡烛火柴的恐慌行为，并在四川的一些地方持续。于是，政府进行了干预，“通过电视、网络等形式普及科学常识，引导群众不信谣不传谣，合理消费，破除传言所带来的影响”。这一恐慌不可能长久持续，世界末日没有发生，当然是恐慌消失的直接原因。但是，政府权力的干预可能也是一个因素。&nbsp;四 稳定社会和危机状态下的民众恐慌&nbsp;社会心理研究不只是关注民众道德恐慌的一般特征，而且还对两种不同状态下的民众道德恐慌做了区分，一种是社会稳定的状态，另一种是社会规范、道德价值或政治制度出现了危机的状态。看上去相同的民生灾祸在两种不同的状态下会有不同性质的恐慌。例如，美国密歇根州因把污染的弗林特河(FlintRiver) 水作为居民用水的水源，发生了居民中毒的事件。这引起当地居民的恐慌，但同时也引发了美国公众舆论、媒体、政治人物、联邦政府的高度重视。整个美国社会对此批评不断，民众和国会对当地政府官员的问责和谴责都在媒体上公开报道。美国民众并不因为这一水污染事件觉得美国的整体制度或价值观出现了危机，因此，尽管祸害很严重，但那只是一个局部事件，恐慌也就比较有限。如果美国的社会制度、道德人心、公共秩序出现了整体危机，那么，密歇根州水污染就一定会被视为美国整体危机的冰山一角，有的民众就会觉得这样的美国已经烂透了，没救了，有条件的话，不如趁早赶紧准备移民到别的环境保护有保障和公共秩序比较稳定的国家去。因此，一个国家社会的稳定或危机状态与政府权力是否民主、权力是否有所制衡、法治是否健全、公民权利和人权是否得到尊重和保障、媒体是否能独立自主等等因素是联系在一起的。不能把民众恐慌不加区别地一味归罪于媒体的不当报道。在具体的国家社会里考察和了解民众的道德恐慌需要确定什么是主要的不同类型，而在这些类型中，媒体又发挥怎样的不同作用。中国出现和起作用的民众道德恐慌，大致可以分为两类。一种是民众自发的，主要由民生祸害引发，相当频繁，性质也非常恶劣。总的趋势是，恐慌程度越是累积，绝望情绪越是浓厚。另一种则受政府权力或政策的主导或影响，在“文革”期间表现的最为典型，虽然至今没有绝迹，但已经比较少见。相比之下，更经常发生的是前一种恐慌，前面提到的非典、毒奶粉、有毒食品、社会暴力化、人心险恶、环境污染、法治不彰等造成的恐慌都属此类。这两类道德恐慌都有明显的中国特色，也都与中国的政治和社会制度密切相关，直接或间接与“文革”对社会道德的破坏有关。其中，“灾祸”或“危害”的观念起着微妙的关键作用。一方面是，普通民众重视的是与民生有关的灾祸，这种灾祸经常被淡化、掩盖和禁止报道，甚至被美化为发展经济、提高GDP、增强国力的必要代价。另一方面、一些与民生无关的“危害”却在被制造出来，加以渲染，起到冲淡和转移对民生灾祸注意力的作用，操控民众的生存安危意识。这样的手段，有的成功，有的不那么成功，可是无论如何，多少都会有一些影响，这也就是为什么它是一种永远都不会被自动放弃的手段。“文革”之前，“阶级斗争你死我活”危言耸听，已经喧嚣尘上，“文革”中更是达到了癫狂状态。它营造一种性命攸关的生死危险和恐怖效果，极为有效地控制了几乎所有中国人思维和行为。一个又一个的渲染威胁或危险的新口号——“广积粮、深挖洞”、“美帝苏修亡我之心不死”“走资派复辟，劳动人民要受二茬罪”——都在诉诸民众的安危忧患，诱发他们的道德恐慌。今天，这样的手段又有了新的变化形式，危险和威胁已经不是来自美帝、苏修、蒋匪帮反攻大陆、党内走资派篡权复辟，而是来自西方价值观、境外敌对势力、公知、网络大V。近年来，中国不断出现民生祸害事件，所产生的道德恐慌效应在整个社会的危机状态中发酵膨胀。民生危机感是整个社会危机感的一部分。民众道德恐慌有着明显的社会危机特征。首先，造成强烈社会不安心理和恐慌刺激的事件虽然直接与民众的健康和生命有关，但也与政府、制度和权威的信任危机有关。说起“公共危害”，人们想到的不仅是非典、问题疫苗、毒奶粉、有毒食品、致癌的污水排放和空气污染、雾霾、矿灾、天津港口爆炸，也同样会想到时风日下、社会暴戾化和粗鄙化、公民权利缺乏保障、法治不彰、无处讲理、官贵民贱、无官不贪、官官相卫等等。其次，媒体对这些事情的报道受到严格限制，民众得不到他们认为是可靠的信息，而官方发布的信息则又缺乏公信力。再者，民众无法准确估计到底面临着怎样的生存威胁，基本上只能采取听天由命、过一天算一天，难得糊涂的应对态度。有条件的会采取逃离“灾区”的办法，而关于这种逃离的消息（如移民国外或一些名人为避雾霾而逃离北京）则又加深了无力逃离者们的恐慌。为了抑制民众恐慌，政府权力对媒体不断强化对真实报道的限制，这又更增添了民众的不信任感和无助恐慌。对媒体真实报道的管制原本是为了稳定社会，消除恐慌，表面上也似乎起到了一些预期的作用——对负面社会事件或关于灾祸恐慌的报道从媒体上消失了，社会显得风平浪静、人心稳定、幸福美满。但是，民众对食品、环境污染、人生安全、医疗健康、老有所养等等的恐慌是否真的消除或消减，却很难说。造成这类恐慌的根本问题并没有得到重视和解决，民众对此心知肚明。有的人变得麻木，有的人选择沉默，有的人听天由命，恐慌的消减只是表面的，也是暂时的，这增加了未来恐慌爆发的不可预测性。&nbsp;五 开启民智是消除民众恐慌的长远之策&nbsp;民众恐慌与政府权力的关系一直受到研究者们的关注。有的民众恐慌是政府权力不愿见到的，但有的民众恐慌却是它可以利用的。对这两种不同的民众道德恐慌，媒体都起着重要的作用，但作用并不相同。在第一种情况中，媒体报道真相，起着相对独立的作用，这样的媒体不被权力信任，会受到严格管制；在第二种情况中，媒体是权力的附庸，是被操纵和利用的工具。在媒体能独立运行的国家社会里，第二种情况基本上是不存在的，但却有许多关于媒体往何处去的讨论。在今天的中国现状下，不妨姑且搁着这个问题，而换一个角度来看——改变民众道德恐慌的根本途径不在于媒体应该成为怎样的媒体，而是在于民众可以成为怎样的民众。哈佛大学认知心理学教授斯托芬·平克（StevenPinker）在《头脑比大众媒体强》（MindOver Mass Media）一文中指出，尽管媒体报道确实能够影响民众想法，但民众有什么想法并不能完全归因于媒体的影响。他指出，“媒体批评者的看法似乎是，人的头脑消费什么，就变成了什么，这样看待信息，无异于‘人吃什么，就变成什么’。这就像原始人相信，吃凶猛的动物，自己也会变得凶猛”。人类接受外界或他人的影响，并非从大众传媒时代开始，“大量的信息会让人依赖信息，难以集中精神思考，对欠缺注意力的人们来说尤其如此。但是，注意力不集中并不是一个新现象。解决的办法不是抱怨新（的传媒）技术，而是培养自我控制能力，这与抵抗生活中其他诱惑的道理是相同的。”在大众信息时代，最重要的是“鼓励深度思考能力”和培养理性公民应有的思维方式。如平克所言，“深度思考、刨根问底、严密推理，这些都不是人自然而然就已能经会了的。这些都必须在特殊的体制中学习获得，我们把这样的特殊体制称为‘大学’，这样的能力需要不断地维护，我们称之为‘分析’‘批评’和‘辩论’。它们不是靠手捧厚厚的百科全书就能获得的，也不会因为在网络上有效获取信息就蒸发消失。”民众的道德恐慌是一种复杂的现象，不能简单地归结为某一个原因（如缺乏真实信息）或某一个表现（如非理性的冲动行为）。乌克兰学者伊娜·别特乌克（InnaBytiuk） 在《现代媒体中的“道德恐慌”产生机制：乌克兰经验》（Mechanisms of “Moral Panic” Generation in ModernMedia: Ukrainian Experience）一文中指出，需要从多个角度来进行综合，方能比较周全地了解道德恐慌中的媒体报道与民众看法之间的双边关系。在这一双边关系中，起作用的是一种规限和强化社会道德界限（一旦逾越便从善变为恶）的机制，媒体和民众共识对设立和维护这一界限都能发挥重要作用。民众道德恐慌发生在传统道德规范与恶化的现实发生冲突的时候，这种冲突给人们的生活带来模糊不明的危机感和不确定性的应对冲动。民众道德恐慌可能会引发对灾祸的反抗，但也可能被权力人物、意见领袖或特殊利益集团利用和操控，本身成为灾祸的根源。对于社会的稳定和改良来说，民众的恐慌，特别是被操纵的和非理性的害怕和恐惧，是一种具有破坏作用的“群氓现象”，法国社会学家古斯塔夫·勒邦（GustaveLe Bon）在《乌合之众》一书里对此有过详细的论述。这样的恐慌是为了应对灾祸，但本身也能成为灾祸。正如英国哲学家罗素所说，“害怕灾祸会使得每个人的行为都增强灾祸。从心理效果上说，这就好比剧院着火时喊‘有火’会踩死人一样”。为了建设一个对灾祸有足够集体应变能力的理性社会，认识社会恐慌应该成为国民教育的一个内容。国民教育不只是技能或技术的知识获取，而且也必须包括认识人类自己的普遍心理机制及其政治、社会、文化的形成因素。这是一种智民教育，一种对所有民众都有用的良能教育。它的意义不仅在于消除恐慌，而且更在于帮助人们明白：在民生灾祸发生时惊慌失措、各自保命、自求多福，虽然每个人都不想束手待毙，但众人一起却束手无策，这样的集体恐慌，是多么憋屈、愚蠢、无望和悲惨可怜，因此也是一种必须改变的生存困境。（原刊《大家》，题为《现在不是为了人民幸福而不告诉他们真相的时候 》，2016年4月18日。）&nbsp;</content></doc>
<doc>     <docid>123<docid>     <title>[Material Playground] Flamingo</title>     <link>http://www.phonekr.com/material-playground-flamingo/</link>     <content>不知道你是否还记得第一届 Material Design Awards 的各位获奖者们? 这些应用在今天看来依然是非常优秀的应用, 如果还没用过的话请尽量试用一番. 今天要介绍的这款应用, 就是来自于第一届 Material Design Award 得主, Weather Timeline 的开发者 Sam Ruston 的一款新应用 —— Flamingo.Material PlaygroundFlamingo 是一款第三方 Twitter 客户端. 市面上已经有一些不错的 Twitter 客户端了, 比如 Twidere, Falcon Pro, Carbon 等等, 而在这里特别推荐 Flamingo 的理由是什么呢?Flamingo 的一大特色就是提供了多而不杂, 基于 Material Design 的主题定制功能. 这个主题定制可不是那种换个颜色意思意思的主题定制, 而是如上图一般, 可以改变整个应用的导航布局的主题定制. 用户可以自行选择顶级导航的数量, 位置, 是否固定, 图标 / 文字的呈现与否, 等等. 当然, 颜色的定制也是无比详尽, 让人不由得想起了另一款 Twitter 客户端 Tweedle.作为一款 Twitter 客户端, Flamingo 提供了基本所有的基础功能, 还做了一些好玩的附加功能, 比如说在发推的时候可以直接从 Giphy 搜索 GIF 图片. 另外, Flamingo 还提供了长按预览图片和用户的操作. 实际使用时非常便利.很多人都非常喜欢 Twitter 客户端在点下桃心时的动画, Sam 把这个动画也搬上了 Flamingo. 不仅桃心有动画, 转推时也有相同的动画, 让使用时的愉悦感再次增加不少.查看用户个人资料时的详情页, 会根据用户的头像颜色改变主色调, 算是 palette library 比较常见的运用了. 设置里的选项在丰富的同时不杂乱, 大部分都可以让人一眼就明白是干什么用的. 比较可惜的是用户不能在更改配色 / 样式时实时预览, 这对于那些对部件名称不甚熟悉的用户而言并不友好. 不过考虑到会用到高级的定制功能的用户想必都不是对这些名词一无所知的人, 而真对此一无所知的用户也可以愉快地在默认主题里找到自己心仪的一款, 这个瑕疵就显得不是那么严重了.Flamingo 提供了十二款不同的默认配色, 可以满足绝大多数用户的需求. 而如果你在 Flamingo 登录了多个 Twitter 账户, 你还可以选择为他们单独设置不同的主题.Flamingo 当然也提供了更详尽的更改配色功能, 不过 Sam 在这方面做了一个明智的选择: 他将可供选择的颜色限定在了比较小的范围内, 而不是像很多其他提供主题定制的应用一样, 干脆丢一个 RGB/HSV 选择器给用户. 这么一来, 用户既不会在面对大量颜色选择时不知所措, 也免去了对由于用户审美不过关造成的可怕结果带来的担忧. 不过话虽如此, 用户还是可以在如此限定的选择范围内制造出一些瞎眼的组合. 不过至于这个话题, 那就不是本篇文章该讨论的范围了.虽然如果你在平板上访问 Play Store 里 Flamingo 的介绍页, 会看到上面写着 Designed for Phones, 但是 —— 嘿, 这可是一款出自 Sam Ruston 之手的应用! 从 Hue 开始, 他就一直很注重平板适配, 所以你看, Flamingo 有着出色的平板适配.Beta 版Flamingo 尚在 Beta 开发中, 但是 Sam 并没有采用 Google Play 的 Beta 发布, 而是直接将其公开. 他承诺了会及时更新, 而且在 Twitter 上也非常积极地听取着大家的反馈. 但是由于这款应用尚在开发中, 所以运行起来并不是那么稳定. 大多数用户都或多或少地遇到了一些崩溃. 所以在 Sam 决定摘下 Flamingo 的 beta 帽子前, 并不建议将其作为唯一的 Twitter 客户端使用. 不过, 如果你是一个对设计精良的应用感兴趣的用户, 或是想要学习优秀 Material Design 设计的设计师, 那么这 $0.99 绝对会让你觉得物有所值.Play Store 连接: Flamingo for Twitter ($0.99)</content></doc>
<doc>     <docid>124<docid>     <title>Material Design 更新: 动效, 增长与用户教育</title>     <link>http://www.phonekr.com/motion-growth-communications/</link>     <content>今天, Material Design 迎来了毫无预兆的一个大更新, 突然地完善了 (本应在两年前就有的) 动效设计讲解与加入了面向中小团队与个人开发者的初体验设计指导.MotionMaterial Motion &#8211; Google Design&nbsp;动效设计这个部分经过了一番彻底的改头换面, 增加了不少详细的说明 (看到上面这张图相信不少已经试过制作 Material Design 风格动效的设计师们应该会露出会心的苦笑吧, 现在终于可以不用自己去费精力摸索其中的规律了), 包括动效持续的长度, 加速度的使用, material 的移动, 创建与消除, 等等, 几乎涵盖了 Material Design 动效的全部细节, 还指出了一些常见的错误 (这点非常重要, 有很多设计师 / 开发者凭着来源不明的经验模仿 Material Design 动效, 做出来的东西千奇百怪, 令人不悦, 完全丧失了 Material Design 动效的初衷), 值得对动效感兴趣的开发者和设计师仔细阅读.&nbsp;更新里还包含了对于图标动效和载入动画的一些有趣的建议, 千万不要错过.Growth &amp; communicationsIntroduction &#8211; Growth &amp; Communication &#8211; Google Design用户教育的部分, 一直以来都为 Android Design/Material Design 所忽视 (虽然 ADiA 有一期专门的节目介绍), 但这次是 Google 第一次为用户教育模块写下详细的介绍. 对于中小团队和个人开发者而言, 初体验设计对于应用的生死存亡而言至关重要, 这次 Google 终于给出了一份指导文档, 还是很有意义的.初体验设计的模块中, 包括了非常常用而至关重要的空界面设计, 内容定制模块, 功能介绍等等, 都附有详细的设计图. 当然, 你也可以按照自己的思考来进行定制, 不过至少 Google 终于给出了一个参考标准.另外, 这个模块强烈建议配合 Google Primer 服用, 效果倍增.初体验设计的模块中, 包括了非常常用而至关重要的空界面设计, 内容定制模块, 功能介绍等等, 都附有详细的设计图.</content></doc>
<doc>     <docid>125<docid>     <title>Bottom Navigation —— 如果要用, 请认真用</title>     <link>http://www.phonekr.com/material-bottom-navigation/</link>     <content>在 π 日, Google 对 Material Design 进行了大家期盼已久 (说句实话, 这里的 ｢期盼已久｣ 换作 ｢又惧又期待｣ 会比较合适吧) 的更新, 加入了对 bottom navigation 的明确规范.Navigation PatternsComponent &#8211; Bottom Navigation&nbsp;如果你的应用：有 3-5 个顶级导航；需要频繁在顶级导航项之间切换；希望顶级导航项能够吸引用户的注意力；只针对手机；那么， 便可以考虑使用 bottom navigation.Material Design 的 bottom navigation 与 iOS HIG 规范的 tab bar 理所当然地有共同之处:就算进入子级界面, bottom navigation 依然显现;在顶级界面中, 点击 bottom navigation 当前激活的项目会回到当前列表的顶端.但是在使用时, 不要直接照搬 iOS tab bar, 毕竟两者还有很多区别:往上卷动时隐藏, 往下卷动时显现;当前激活的项目文字会变大 (未激活 12sp, 激活 14sp);触摸会产生 ripple 反馈;Bottom navigation 可以有不同的颜色;可以选用只有激活项带有文字标签, 未激活项仅显示图标的样式;避免在平板以及大屏设备上使用, 建议转换为 drawer;切换不同顶级导航项时, 内容区采用淡入淡出的动画;切换顶级导航项的时候, 重置当前导航项的状态 (不保留状态 / 历史);避免与顶部 tabs (对应 iOS 上的 segmented control) 同时出现.不管你是不是打算在应用里采用 bottom navigation, 都应该看一看这些规范. 同时, 强烈建议在考虑采用 bottom navigation 之前, 先想想你的应用到底适不适合 bottom navigation.最后是个人感想: 虽然 Google 不断强调 Material Design 是 ｢一套活的规范, 不是板上钉钉｣, 但是就这样推翻坚持多年的传统多少令人无法接受 — 当然, 实际上令人无法接受的是 Google 先违反, 然后再修改规范的这种行为.有句话我想大家都很熟悉: ｢存在即合理.｣ 这里姑且不讨论这句话的对错, 在 UI/UX 的讨论上, 某种范式的出现必然是为了解决某种具体的问题.故, 放下心中的成见, 有的时候, 做有些事情, bottom navigation 是更为合适的解决方案. 当然, 如果它对你而言并不是更为合适的解决方案, 那就更无需为此操心了.同样的， bottom navigation 也不是万灵药， 它有很多不擅长或者不如 tabs/drawer 的地方， 具体可以参看： 如何看待新版 Google Photos 的 bottom tab bar？ &#8211; NovaDNG 的回答.</content></doc>
<doc>     <docid>126<docid>     <title>So… Happy Birthday, Material!</title>     <link>http://www.phonekr.com/so-happy-birthday-material/</link>     <content>(标题请配合 Matías Duarte 在 Material Now 演讲开头中的致辞服用)(这篇文章, 其实很大程度上是写给我自己看的)是的, 在去年的今天, Google I/O 2014 上, Matías Duarte 穿着他那一身标志性的花衬衫, 为大家开启了通往 Material 世界的大门.&nbsp;想起自己第一次看到 Material Design 的时候, 心里其实是充满了厌恶的. 没错, 那个让我对 Material Design 产生厌恶的应用就是 Google I/O 2014. 到现在为止, 我都还觉得那是我见过最糟糕的 ｢Material Design 应用｣ 之一 (同样糟糕的还有那时刚刚改版的 Hangouts 和 Google+).同样让我觉得不能接受的还有, Google 从官方色版中, 完全抹去了我最喜爱的 Holo Blue (#33B5E5) 的痕迹.但随着 Material Design 发布, 它也在快速的发展和完善. 等到 Material Design 正式出现在 Android 上 (Android 5.0 正式发布) 的时候, 已经过了将近半年. 那个时候的 Material Design 已然向大家展现出无限的可能性.在 Material Design 宣布进入正式版不久之后, 我也开始履行诺言, 着手制作 Material Design Toolkit for Nexus 4. 可以说, 这段制作过程的开始是很不开心的. 可以说, 当时我非常想要 ｢毁约｣. 几乎是骂骂咧咧地, 我一边翻看规范, 一边在 Ps 里画图 — 那时的 Material Design 尚有很多不完善之处. 但是随着制作的进行, 当我为了制作 Toolkit 翻阅第十遍 (以上) Material Design, 逐渐完善我对它的理解的时候, 我渐渐发现, 自己变得不那么讨厌 Material Design 了.是的, 随着规范自身的完善, 以及我对规范了解的深入, 我开始逐渐领略 Material Design 的美妙. 随之发生的变化就是, 我开始放下 Android Design 了. 又过了不久, 同四年前一样, 我开始宣传起了 Material Design. (同时, 我也渐渐开始改变起以往黑白灰的穿衣风格)和我不同, 有无数设计师从最开始就对 Material Design 充满热忱. 在 Material Design 发布伊始, 他们就对其给予盛赞, 并且, 他们中的很多人, 都对推动 Material Design 发展做出了贡献. 同时, 也有无数开发者制作出了各种 Material Design 相关的库, 供更多开发者们方便的调用&#8230; 可以说, 一切都是那么的欣欣向荣.然而 Material Design 依然很年轻. 一方面, Google 依然在致力完善它; 另一方面, 很多开发者, 设计师和用户对 Material Design 的理解仅仅停留在 ｢Drawer 导航 + FAB + 半透明通知栏｣ 上.而在国内, Material Design 的发展更是堪称步履维艰. 原本我以为, 相比起 Android Design 直到生命末期才出现一份基本可看的中文译本, Material Design 在发布第二天便有了中文译本, 这是一个很好的开端; 没想到, 国内对 Material Design 的热情, 似乎也就只是一阵风一般. 之前如雨后春笋般发表的 Material Design 中文译本, 更新至今的恐怕一只手能数的过来.我想, 或许, 我们如今所处的状况, 和四年前并没什么区别. 先前在 Android Design 时代积累下来的那一点儿成果, 某种意义上算是前功尽弃. 而在 Android Design 时代就冥顽不灵的那几个最大的阻碍, 如今, 依然, 是最大的阻碍. 他们自身已经是阻碍, 而他们的存在更是产生了恶劣的影响, 加剧了推广 Material Design 的困难.而我, 当然不能因此退缩. 为 Material Design 庆祝生日, 某种程度上, 也是在庆祝自己的一段新旅程的开始, 为自己加油打气.所以, 在今年的 I/O 大会上, 当 Matías Duarte 大声说出, ｢Happy birthday, material!｣ 的时候, 骄傲, 激动与心酸一同涌上心头, 让我几乎快要哭出声来.希望, 在接下来的日子里, Google 能继续完善 Material Design — 不单是设计规范的方面, 同样还有 Android 开发的方面.在这个重要的日子, 我要大张旗鼓地为 Material Design 庆祝生日. Happy birthday, material!</content></doc>
<doc>     <docid>127<docid>     <title>Material Design in Action — 哔哩哔哩动画 Android 客户端</title>     <link>http://www.phonekr.com/bilibili-for-android-redesign/</link>     <content>前言哔哩哔哩动画是中国大陆的一家弹幕视频网站，在中国二次元用户中颇受欢迎。哔哩哔哩动画之前推出过采用 Android Design 的 Android 客户端，虽然有使用了部分过时控件（例如 Scrollable Tabs）之类的问题，但整体素质依旧较高，受到 Android 用户的广泛好评。而在 6 月初的 3.9 及 4.0 更新后，哔哩哔哩抛弃了过去的 Android Design 转而使用了 iOS 风格的设计，如图所示：左为 v3.3.0，右为v4.0.0此次更新在用户中的争议颇大，部分用户反对此次改版，认为新版哔哩哔哩动画客户端失去了原有的 Android 风格，令人失望。个人认为哔哩哔哩的情况比较特殊：原来进行过 Redesign 的应用有一开始就是 iOS 风格的，也有采用 Android Design 风格，但并不完美的。对哔哩哔哩这种原来是 Android Design 风格，但后期转换为 iOS 风格的 App 进行 Redesign 是一件很有挑战性的事情。于是在对新版进行了一段时间的体验之后，我开始利用新版的特性和部分交互逻辑对哔哩哔哩动画进行基于 Material Design 的 Redesign 尝试。在微博上发布了几张预告效果图之后，我意外地收到了认证资料为“bilibili副总裁”的微博用户 @光头哥光头哥 的私信。因为在私信里这位微博用户对一些问题进行了询问，加上设计师在知乎上对于这次设计风格改变的解释，我认为哔哩哔哩本身是想采用 Material Design 的，然而对于 Material Design 本身并不是十分了解，因此才会采用 iOS 的设计风格。我个人对哔哩哔哩的态度感到很欣慰，希望能在以后拿出更好的设计。我也希望我的这篇文章能够起到一些帮助。对底部 Tab Bar 说 No在文章开始之前，我想先回答之前 @光头哥光头哥 在私信中提出的一个问题：为什么安卓用户对底部 toolsbar 这么介意？首先要纠正一个用词错误：用于切换不同页面的 Bar 叫 Tab Bar，而不是 Tools Bar.这点在 Apple 官方的 iOS 7 UI Transition Guide 中也有提到。Apple 官方对于 iOS Tab Bar 的解释那么纠正完用词错误，接下来就要回答这个问题了：为何 Android 上最好不要出现底部 Tab Bar 呢？首先，Android 提供了更多样的交互方式，例如 Drawer，Floating Action Button 等。活用这些交互方式可以灵活地将用户引导至其他视图上。其次，即使要使用 Tab Bar ，Google 官方也已经提供了解决方案——各式各样的顶部 Tab Bars.而且，顶部 Tab Bar 均可以滑动切换，这样就无需担心单手操作性了。Tabs!另外对于虚拟键用户来说，使用底部 Tab Bar 也会带来“双底栏”的问题，影响美观性。（并不是针对HTC）所以，在 Android 上使用底部 Tab Bar 是一种毫无必要的行为，不仅不会对单手操作带来任何便利，反而会造成更多的麻烦。Google 很早就谈到了这一点：Pure Android 页面中列出了很多“不该做”的事情，其中之一就是“不要使用底部 Tab Bars”。之前 @光头哥光头哥 和我提到过，因为哔哩哔哩的内容架构极其丰富，于是想把内容的分类筛选在页眉留给用户。即使是这样，采用双 Tab Bars 也没有多大必要，可以参考第一点，使用其他方式实现原来底部 Tab Bar 的功能，我会在下面提到我是如何去实现这一点的。1.首页对首页的改进是整个 Redesign 中最重要的一环之一，毕竟这次设计争议最大的就是采用底部 Tab Bar 的设计。我对首页的改进有：去掉底部 Tab Bar，保留顶部 Tab Bar加入标准 App Bar，颜色取自 v3.3.0 的 Action Bar个人信息放入 Drawer“关注”、“发现”和“游戏”整合入“发现” Floating Action Button下载、消息（目前似乎客户端未加入消息系统）等按钮单独作为 Action 放置于 App Bar 上首页项目和 Banner 采用 Cards 设计如上文所述，我使用了将选项分散的思路，将原先底部 Tab Bar 的选项分散到其他模块。下文我会一一讲解。当用户向上滚动首页列表的时候，App Bar 将会自动隐藏，只留下 Tab Bar 。一个小细节：我试着使用了类似 Google Play Store 的滚动 Cards 布局展示“番剧更新”项，在最右侧露出 Card 的一端来提醒用户这一排可以进行滚动。同时我保留了 Tab Bar 的下拉菜单的设计，点击最右边的箭头就可以调出菜单，能直接点击进入 Tab 项，也能对 Tab 项进行重排。2.个人信息之前的 v3.3.0 及更早的版本将个人信息放在最左边的 Tab ，而最新的 v4.0.0 将个人信息放在“我的” Tab。个人认为这个区域完全可以用 Drawer 替代。这里的修改不多，主要是以下几点：个人信息区域加入头图，硬币改为和网页版一致的“B”图标去掉“离线任务选项”，相应的项目已移动至 App Bar“设置”“帮助与反馈”放置在单独区域之前的各个版本，各个平台的客户端均未加入头图项，所以我在做这个设计的时候也思考了一下要不要加入头图，后面对比了几个版本的解决方案，还是决定加入头图。3.“发现” FABv4.0.0 加入了“关注”、“发现”和“游戏”三个 Tab 项目。按道理来说，一个放在 App Bar 上的搜索即可解决问题，但是考虑到“游戏”等项目的特殊属性需要足够的曝光度等，最终决定将这三项合并为一个 “发现” Floating Action Button.如图所示，“发现” FAB 处于屏幕右下方，若用户点击，FAB 中的其他项目会自动展开：为了让“游戏”“排行”等项在日常使用时能拥有更高的曝光率，我将常用的“搜索”等项放入了此 FAB 。4.播放页面第一步首先当然是采用了“正常”的 App Bar——原来播放界面的 App Bar 高度并不标准。其次在这个界面我使用了不同的配色方案——以标志性的粉色作为底色，字体和图标以白色呈现。同时将“点击播放”按钮去掉，变成点击封面图即可播放，封面图也进行了适当地放大。最后将原先在视频信息下的 Tab 转移到上面，所以一共做的改动有：更换为正常高高度的 App Bar将 Tab Bar 提上，与 App Bar 整合使用与首页不同的配色方案去掉“点击播放”按钮，和封面图整合下载、收藏和分享等项集合至 App Bar添加“评论” FAB第二步做完第一步之后我发现，似乎把那些选项都放在 App Bar 上并不是很好的选择。于是我试图对着 FAB 下手，做成了类似首页“发现”的扩展 FAB，如图所示：于是这一步的改进就是：下载、收藏和分享等项集合至一个 FAB，点击展开第三步然而在思考了一会之后，又觉得放一个 FAB 在这似乎有些多余。在 v3.3.0 中，这些选项放置在 Split Action Bar 上，然而 Material Design 中已经去掉了 SAB 。于是我试图使用 Quick Return 模式来放置这些选项，结果个人还是很满意的：最后对原来居中的视频标题重新调节成偏上，最终成品如下：最后一步做的调整有：改用 Quick Return 模式在底端放置选项将视频标题由居中修改为偏上5.引导页面每个 App 在进行设计和交互大改的时候都应该对用户进行引导和提示。微信在 5.2 上启用 Android Design 时就吃了这个亏，直接升级的用户并不知道这个版本会对设计大改，结果改完就崩溃了——这个新界面到底该怎么用？？？所以如果哔哩哔哩需要启用 Material Design 设计，一定要做一个引导流程让用户知悉新版的变化。首先是首次启动的引导页，通过强调“新版”来提示用户。之后是一个提示界面，用圈点的形式提示用户原来的功能都去了哪里。同时对于 Drawer 给予适当提示，让用户知道调出 Drawer 除了点击汉堡包图标还能向右滑动调出。以上只是随便制作的，非常粗糙的引导页。相信哔哩哔哩的设计师们能想出更好的主意。后记制作这次的 Redesign 是一次充满挑战的历程，我希望这次的 Redesign 能给予各位一些启发。哔哩哔哩官方已经放话了，正在研究 Material Design。那么就让我们期待一个更好的哔哩哔哩客户端吧~( ゜- ゜)つロ 乾杯~彩蛋：好想看Nova做的啊啊啊啊！</content></doc>
<doc>     <docid>128<docid>     <title>你说你看到了沉浸模式，你可能只是见到鬼了</title>     <link>http://www.phonekr.com/you_didnt_see_immersive_mode/</link>     <content>我都不敢相信，现在 2015 年快过一半了，还有不少所谓 Android 爱好者分不清“沉浸模式”和“透明栏”之间的区别。那好，我们来好好捋一捋“沉浸模式”究竟是个什么玩意。什么是沉浸模式？从 Android 4.4 开始，Android 为 &#8220;setSystemUiVisibility()&#8221; 提供了一个新的标记 &#8220;SYSTEM_UI_FLAG_IMMERSIVE&#8221;，就是我们所谈的 &#8220;Immersive Mode&#8221;，也就是沉浸模式，全称为 &#8220;Immersive Full-Screen Mode&#8221; 。Google 提供这个新模式的初衷，是为了让应用能够实现真正完整的全屏模式体验。之前 Android 靠两个标记实现全屏模式，一个是 &#8220;SYSTEM_UI_FLAG_FULLSCREEN&#8221;，另一个是 &#8220;SYSTEM_UI_FLAG_HIDE_NAVIGATION&#8221;（仅适用于使用导航栏的设备，即虚拟按键） 。这两个标记都存在一些问题，例如使用第一个标记的时候，除非 App 提供暂时退出全屏模式的功能（例如部分电子书软件中点击一次屏幕中央位置），用户是一直都没法看见状态栏的。这样，如果用户想去看看通知中心有什么通知，那就必须点击一次屏幕，显示状态栏，然后才能调出通知中心。而第二个标记的问题在于，Google 认为导航栏对于用户来说是十分重要的，所以只会短暂隐藏导航栏。一旦用户做其他操作，例如点击一次屏幕，导航栏就会马上被重新调出。这样的设定对于看图软件，视频软件等等没什么大问题，但是对于游戏之类用户需要经常点击屏幕的 App，那就几乎是悲剧了——这也是为什么你在 Android 4.4 之前找不到什么全屏模式会自动隐藏导航栏的应用。那么 Google 面对这样的问题自然也不会坐视不管。还记得 iOS 是怎么处理用户在全屏应用下调出通知中心/控制中心操作的么？对，用户做一个向内滑动的手势，一个小箭头就会出现，在不影响当前应用全屏的情况下引导用户操作。Google 借鉴了 iOS 的逻辑，4.4 之后加入的这个 Immersive Full-Screen Mode 允许用户在应用全屏的情况下，通过在原有的状态栏/导航栏区域内做向内滑动的手势来实现短暂调出状态栏和导航栏的操作，且不会影响应用的正常全屏，短暂调出的状态栏和导航栏会呈半透明状态，并且在一段时间内或者用户与应用内元素进行互动的情况下自动隐藏。这个新加入的特性理所当然地受到了广泛好评：从此 Android 终于可以在全屏应用下不影响用户的正常操作了，难怪 Android Developers 页面中会这么描述 Immersive Full-Screen Mode：&#8230;lets your app go truly &#8220;full screen.&#8221;当然，讲了这么多有关“沉浸模式”的介绍，目的并不是要告诉你“沉浸模式”有多么多么好，而是为了告诉你，目前你们所说的“支持沉浸模式”“沉浸状态栏”等等，和真正的“沉浸模式”，即 Immersive Full-Screen Mode 是一点关系都没有的。接下来我要告诉你们，你们口中的“沉浸”究竟是个什么东西。“沉浸状态栏”究竟是什么？Google 在 Android 4.4 的 API 描述页面里提到了“Translucent system UI styling”，即半透明化的系统UI风格。这个“半透明化”包括了状态栏和通知栏，当开发者让应用支持这个新特性的时候，状态栏和导航栏可以单独/同时变为渐变的半透明样式。说到这里大家应该都明白了——没错，这就是你们口中经常提到的“沉浸模式”“沉浸状态栏”。记住了，他们的学名是&#8221;Translucent Bars&#8221;，透明栏，包括了状态栏（Translucent status bar）和导航栏（Translucent navigation bar）。在 Android 5.0 之后引入了 Material Design，状态栏和导航栏也玩出了更多花样。现在除了原有的“半透明”模式以外，还有“全透明”以及“变色”模式，一种会完全隐藏背景，另一种可以取色作为背景颜色。不同的状态栏风格不同的导航栏风格，可以注意到加入了全透明（Transparent）背景有关更多 Material Design 中关于系统栏的描述可以参考这里总结如果你认真看到了这里，那么你应该明白了一个重要的事情：此“沉浸”非彼“沉浸”。真正的沉浸模式，指的是一种全屏模式，而你一般在开发者/爱好者/用户那里听到的“沉浸模式”绝大部分情况下指的是“半透明栏”或者是 Android 5.0 之后加入的“全透明/变色栏”。至于所谓“沉浸式状态栏/导航栏”之类的描述，则完全是无稽之谈。关于国人对于“半透明栏”和“沉浸模式”之间的误解是怎么产生的，我并不清楚，或许是当时某个科技网站的小编理解错误，翻译新闻时将两个东西扯在了一起；也或许是某个开发者在介绍透明栏时误以为“沉浸模式”是恰当的翻译，但总之，错并不是问题，知错不改才是问题。如果你能理解这一点，请再也不要弄混这两个完全不一样的东西了。</content></doc>
<doc>     <docid>129<docid>     <title>发几张 Chromebook Pixel LS 2015 的图片</title>     <link>http://www.phonekr.com/chromebook-pixel-ls-2015-gallery/</link>     <content>  截图:  (本文在 Chromebook 上撰写)</content></doc>
<doc>     <docid>130<docid>     <title>揭开白色 Nexus 4 的面纱</title>     <link>http://www.phonekr.com/unveil-white-nexus-4/</link>     <content>一直以来, 我心目中最美的 Nexus 手机一直是 Nexus 4. 直到今天, 我还在使用它作为设计稿预览机, 并为它制作 Photoshop UI Kit. 不幸 (或者说是有幸?) 的事情是我的第一台 Nexus 4 在陪伴我两年之后电池开始鼓包, 音量下也已经完全失灵. 现在二手 Nexus 4 的价格已经算是白菜价了, 我便毫不犹豫地订购了一台白色 Nexus 4.接下来就是开箱了.&nbsp;Nexus 4 的外包装. 和 Nexus 7 的盒子风格一致, 一看就是姐弟 (你懂的).左右两侧一样的 Nexus 4. 下面是 LG 的 Logo.感觉和 Nexus 7 的盒子后面一模一样的宣传文字, 只是把 7 替换成 4 而已…盒子底部贴着各种信息的条形码. 然后由于是 LG 代工所以 Made in Korea (咱 Nexus 7 就是霸气的 Made in Taiwan…)分离内外盒. 内盒很低调, 在相同的位置有一个 Nexus 的 Logo.中规中矩的摆放方式… (你还指望看到什么?!) 感觉好大, 比 Vision 大了两圈… 这就是 4.7″ 的威力么? O0O整个盒子手感非常好, 不像之前 Windows 8 的盒子那样松松垮垮的.盒子的内容物: 手机本体, 快速指南, 保修卡, 充电器, 数据线和 SIM 卡槽针. 什么, 你说没有耳机? 那当然啦, 这么便宜的价格你指望有耳机? 自己买去~来一张 Bling Bling (虽然图中完全没有 Bling&#8230;) 的后盖.对比下大小. 手边就这些设备. 从左至右… 不用我多说吧? ^v^除去保护膜, 新手机看起来就是漂亮… 和另外一些采用了 OGS 技术的手机不一样, Nexus 4 在这样的角度下还是很容易就能看出屏幕和机身的边界的.去掉保护膜之后的背面. 这个像素颗粒闪烁的效果很难用相机(或者说是我的相机太破了)表现出来.可爱的 LED 指示灯. 继承自 Galaxy Nexus.开机. 屏幕非常精细. 嘛, 别去点大图, 这个精细度我觉得已经很够了… 之前撕掉 Vision 的保护膜的时候也觉得 Vision 的屏幕很精细, 结果和 Nexus 4 一比还是弱了…&nbsp;稍微谈谈上手的感受吧. Nexus 4 的边缘很圆润, 虽然我喜欢直角, 但是圆润的边缘明显的好处就是握在手上的时候感觉非常好. 4.7″ 的屏幕对我这种从 3.7″ 一下飞跃上来的人来讲到底还是太大了, 手感不对(手感很”好”但是不”对”), 很容易按错小的按键. 好在 Android 4.2 的输入法对于输入的精确度并不是很高, 触宝也是. 想要单手持握且不改变握姿就触摸到屏幕左上角确实很有难度.震动反馈感觉很好. 我以前一直觉得 HTC 那种非常刚劲的反馈是我最爱的(相反的是三星那软绵绵犹豫不决的反馈), Nexus 4 的震动反馈虽然没有那么刚劲但也算是毫不迟疑, 没有绵软的感觉, 可以说挺舒服的. 后背是玻璃所以不会像 Vision 那样大冷天的冻手&#8230;最后再来 BlingBling 一回唉? 你还想看更多的内容? 唉呀唉呀这只不过是篇赶时间写的开箱文, 不要想太多啦~ 其他的内容, 我会在晚些的正式评测里写的, 包你满意~</content></doc>
<doc>     <docid>131<docid>     <title>Material Design in Action — 猿题库</title>     <link>http://www.phonekr.com/yuan-ti-ku-redesign/</link>     <content>猿题库是一款免费的手机做题软件，在中学学生中拥有一定的人气。猿题库很早之前就发布了 Android 版本的客户端，但猿题库的联合创始人，郭常圳先生，并不认同 Android Design （或者现在的 Material Design），而且认为应用程序的设计规范，应当由开发商来决定。然而当我试用猿题库的时候发现，这个应用对其进行 Material Design 的适配，其实并不困难。因此就有了对其进行重新设计的念头。由于郭先生对 Android / Material Design 以及对跨平台应用遵守规范的误解，我会在展示作品之前，先简单说一说我心目中的跨平台应用应该是如何设计的。跨平台应用应该怎么做？现今，绝大部分的移动互联网应用，都会选择开发双平台（iOS 和 Android）或多平台的跨平台客户端。iOS 的情况比较简单，因为绝大多数公司都会遵循 iOS 的设计规范，很少出现把别的平台的设计风格“搬”到 iOS 上的情况。然而 Android 就要复杂得多了。Android 在 4.0 之前是没有一个统一标准的规范的，默认控件也比较丑陋，于是开发商们就“怎么方便怎么来”，基本上都把 iOS 风格的控件和交互直接照搬到 Android 上。情况在 4.0 之后有了改观，Google 为 Android 打造了更加美观的 Holo Theme ，并且提出了 Android Design 规范，从此 Android 应用的设计风格开始进入了新的时代。然而现在的 Android 应用并没有呈现出“大一统”的状态，而是一个“分水岭”的状态。一边是大部分国外的公司和开发者的应用，经过几个 Android 版本的迭代之后，绝大部分已经遵循了 Android Design，同时有些应用已经开始遵循 Material Design 以期在最新的 Android 5.0 Lollipop 中拥有更好的表现；另一边是大部分国内公司和开发者的应用，纵使 Android Design 已经推出了多年，他们仍然视而不见，继续使用 iOS 的那一套设计风格。这其中也有一些例外，微信在 5.2 版本中做了一个不太好的尝试，开始试图让微信遵循 Android Design 规范。但这次尝试十分短暂，在受到了用户的批评后，他们马上在 5.4 版本里换回了 iOS 风格。因此，有人提出，用户不需要跨平台应用针对不同平台做不同的设计。这个观点是对的吗？个人认为，不对。虽然使用 iOS 风格的设计在 Android 上“又不是不能用”，但如果你想为自己的应用从观感，使用体验等各个层次来一个全面的提升，还是应该试着去遵守平台的规范。更不用说 Material Design 在 Android 5.0 上提供了非同寻常的使用体验，极具个性的动画效果，能为应用带来优秀的视觉享受。微博官方客户端（iOS 风格）和 Blacklight 微博客户端（Material Design 风格）在 Android 5.0 上运行效果的对比所以，用户需要，有必要，有权利在不同的平台上用上遵循规范设计，体验更好的应用。我看跨平台应用——“求同 存异”前面提到了，微信曾经在 5.2 版本里短暂地尝试了一下 Android Design ，结果在 5.4 中，又被用户“骂回去”了。微信这么做对吗？当然不对。新事物总是需要学习的，微信应该做的是在下一个版本当中对 5.3 的风格继续改进，而不是当缩头乌龟。微信 5.2 的设计为什么会被用户骂？很简单，UI 大改，用户自然需要学习，而之前的 iOS 版本设计风格的 UI 和新的 Android Design UI 之间，几乎毫无瓜葛，用户一时摸不着头脑，于是就开始骂娘了。这是 Android Design 的错吗？当然不是！事实上，微信在 iOS 和 Android 上的设计，都只能算是非常一般而已。在 5.2 版本上的所谓 Android Design 风格还十分简陋，都有很大的提升空间。最主要的是，微信在不同平台上的设计，割裂感太大了。What the f&#8230;?如上图所示，iOS 版本和 Android 版本（5.3）的微信，简直可以说是两个应用。如果用户从 iOS 版本切换到 Android 上，肯定会产生不适应感，而这是优秀的跨平台应用不应该做的。在我看来，优秀的跨平台应用必然共有一个特征——求同存异。以下是一些优秀的跨平台应用（图片来自 NovaDNG）：&nbsp;从上面的应用展示中，大家可以看出这些应用让用户能明确体验到应用在不同平台间的差别，又不至于产生不适应感，学习成本也较小。同时，在界面设计上都遵循了相应的平台规范。这，就是“求同存异”的内涵。用户在使用这些应用的时候，没有那种硬生生的割裂感，只需要很短的时间就能适应在新平台上的操作。所以，所谓“分裂”其实只是因为应用自己做得不够好，而不是平台规范的错。同样，如果应用做得足够好，用户也不需要太久时间就能适应新的平台设计。Talk is cheap,show me the&#8230;OK.其实在我试用猿题库的时候就发现了一个事实——这款应用看上去一副 iOS 样，其实交互上已经很接近 Android Design 了，最典型的就是那个 Drawer 。所以我觉得猿题库是款很可惜的 App ，明明只要付出一点点努力，就可以在 Android 平台上变得更好&#8230;于是我自己动手制作了一套猿题库重新设计的效果图，仅供参考。这只是一种尝试，我相信，肯定还会有其他比我更好的实现方法，关键是肯不肯做。1.登录画面状态栏和导航栏都进行了 Translucent 化，为的是更有冲击力的第一观感（好像听上去和 Nova 差不多&#8230;）。稍微更改了一下 Logo 和按钮的布局，原来的按钮样式被换成了 Boarderless Button.这里偷个懒，直接放上新用户的引导界面，省去登录界面了。2.引导界面&#8230;到了这里，大家应该明白我前面“可惜”的意味了吧？我只是做了很小的改动（换成标准的 App Bar 和控件，列表改成标准的两栏布局，去掉了那个箭头，仅此而已），整个界面就已经很 &#8220;Materialized&#8221; 了&#8230;所以我这里改动不多。接下来就是主界面了。3.主界面原版上方的概览画面面简直就是硬伤，排版在我看来非常混乱。所以在这次重设计中，我试着用卡片的方式承载这部分内容，同时把内容尽量规整地向中间靠拢。至于底部的 List ，我更新了样式，原来的&#8221;+&#8221;图标改成了现在的&#8221;Expand More&#8221;图标，写题的图标也做了小许改进。Drawer 在原版就已经出现了，于是我只对 Drawer 样式做了修改，使其更贴近 Material Design 的 Drawer 样式。原来右上方的“更多”按钮被我更换成了“More”，新页面展示也变成了 Drop Down Menu.4.写题界面这个界面可以说改动也很大。首先是 App Bar 上的 Actions 都去了他们该去的位置（计时器的字体也做了修改，并且加粗处理）。至于底部的 Drawer （暂时找不出更好的方式描述这个模块），我把原来的拖动区域整合到了 Drawer 里，以使整个界面看上去更加简洁。选题界面的标题，内容和按钮位置也进行了微调。练习报告界面。还是之前在主界面那里的问题。排版混乱。于是我按照之前主界面的思路，重新排了版，将原来底部的按钮换成了 Flat buttons.写在最后相信大家都发现了，我重制的界面其实不多，一部分原因是我懒（，另一部分原因是，这个应用需要做的绝大部分都是控件的修改和细节上的优化，因此不需要大幅度地推翻重建，只需要完成一两个模块做为演示，我相信就能带来一定的启发。除此之外，猿题库还有一些问题需要改进，例如去掉 Splash Screen 等等。但不可否认的是，这款应用对中学生来说，帮助是很大的。希望开发团队能够认真考虑一下，拿出一个更好的 Android 版本。写在最后的最后这是我第一次对 Android 应用做较为系统的界面重制，在这里要再再再再次感谢 NovaDNG ，没有他的影响，我现在也不会往 Designer 的方向发展。祝大家在 2015 年一切顺利~</content></doc>
<doc>     <docid>132<docid>     <title>｢数据? 那是什么? 能吃么? 好吃么?｣</title>     <link>http://www.phonekr.com/do-not-get-tricked-by-data/</link>     <content>在近一年前, 腾讯终于扭扭捏捏地把微信改成了靠近 Android Design 的样子. 虽然外表有那么点儿 Android Design 的味道, 但设计却十分糟烂, 被无数用户吐槽. 结果到了八月, 微信又把 UI 改回了 iOS 风格.我 100% 不认为腾讯因为 5.2 被用户唾骂而放弃 Android Design 是什么明智的决定, 与其因为碰了一次钉子就认为 &#8220;Android Design 不符合用户的使用习惯&#8221;, 不如好好研究 Android Design, 在遵循规范的前提下把微信做得更好.很多人拿后台数据说话, 我就解释一下数据好了. 数据不是真理, 数据也可以被轻易的操作. 就拿这次微信来做例子:对比对象一方是使用了很久 (从 Android 2.X 时代起微信就一直是 iOS 风格 UI), 成熟 (就算是在 iOS 上微信的 UI 也很难说是优秀, 所以这里用成熟) 且用户习惯 (如前述, 微信老用户都习惯了这套) 的 iOS-Like UI;另一方是新推送的 (新年前才推送更新), 设计糟烂 (和 Android Design 貌合神离, 只是套了个皮, 完全没能体现对 Android Design 理解且存在大量违背 Android Design 设计之处) 且没有任何引导(一个全新设计拿到用户手中居然没有给任何的事先说明和引导教程) 的 Android Deisgn;对比的结果可以说是显而易见的.若 Android Design 一方同样是使用了很久, 设计经过深思熟虑且尽可能完全符合 Android Design (在这里姑且不谈超越) 且做出了合适的引导与教程, 你觉得数据会是什么样子的呢?另外, 关于 &#8220;用户不知道也不会在意 Android Design&#8221; 这样的论点: 用户完全没必要知道什么规范, 用户当然也喜欢用脚投票, 而这并不妨碍开发方在这个规范的框架中做出优秀趁手的产品. 在微信这个事件上, &#8220;用户用脚投票选择 iOS UI&#8221; 这个现象只能说明 &#8220;微信的 Android Design 做得很烂&#8220;, 而不能说明 &#8220;Android Design 不适合微信&#8221;.产品经理也当然没必要满嘴 Android Design 或者 Action Overflow, 但是如果他们不知道如何用好 Android Design 或者 Action Overflow, 就是他们的失职.</content></doc>
<doc>     <docid>133<docid>     <title>Overview, Android 中新的 Recents 界面</title>     <link>http://www.phonekr.com/overview-is-the-new-recents/</link>     <content>在 Android 5.0 中, 原先的 ｢最近任务｣(Recents) 界面被 ｢概览｣(Overview) 界面替换了.在实际上手 5.0 之前, 我也一度对这个界面的实际效果产生怀疑, 但是实际上手之后发现自己多虑了.首先, 新的多任务界面在 Nexus 4 上可以最多显示清楚五个应用 (第五个应用的标题会被略遮住一些, 第六个往后会露出一条缝, 只能看出颜色), 在 4.X 上最多能显示四个. 另外, 卡片的 App Bar 可以跟随应用改变颜色 (比如 Gmail 卡就是红色的 Bar, Keep 就是黄色, Messenger 就是蓝色, 等等), 也增加了应用的识别度. 而 4.X Recents 界面里的缩略图识别度其实很低, 的大部分时候还是要靠图标和标题 —— 而实际上在 5.0 中, 标题和图标的大小并没有缩小.而在 4.X 上, 还有一个很严重的问题就是多任务界面与其他屏幕的转换非常诡异. 如果你仔细观察过 Android 4.X 从某个应用进入 Recents 的动画, 你会发现这个动画是不能接应的 (在屏幕缩小的过程中, 内容会扭曲, 然后变成 Recents 里面的小块, 有兴趣的同学可以自己把动画持续时间调成 X10 看看). 而在 5.0 中, 进出 Overview 界面的动画非常平顺 (不会发生扭曲, 而是直接缩放 + 展开), 同时也符合系统自己的隐喻 (5.0 中, 打开应用的动画不再是放大, 而是一张卡片从屏幕底部飞入, 从主屏进入 Overview 界面也是一堆卡片从屏幕底部飞入), 也就是说, 在 4.X 里, Recents 是一个专门的层级, 位于桌面与应用之间, 而在 5.0 中, 桌面与 Overview 合为一体 (Google 甚至把 Google Search Box 也放进了 Overview 界面), 是系统层级方面的调整. 如果这时再配上 4.X 的 Recents, 就打乱了这层级关系.而且, 如果你在 5.0 的 Overview 界面稍作停留, 每张卡片的右上角都会出现一个小 X, 这样便可以让那些 (到现在都) 还不知道划去卡片可以关闭应用的用户关闭应用. 这个操作其实和 Chrome 是保持一致的. 同时在 5.0 中, Document UI 允许一个应用同时显示多个界面在 Overview 中 (如 Chrome 的多个标签页), 在卡片下他们会靠得更近以区分于其他应用, 而如果是 4.X 的 Recents 的话则不能体现出这一点.还有一个很有意思的地方就是, 如果在 4.X 上, 当有超过 3 个应用被打开时, 多任务界面中想点击最上面的那个应用几乎是不可能的, 而在 5.0 中, 卡片的存在使得整个多任务列表可以被拉到屏幕 2/3 高度, 最上面的一张卡片可以触及的范围甚至达到了屏幕的下半部分, 可以直接单手触到, 非常便利. 而楼上其他同学也提到了, 要滑动同样数量应用的距离, 5.0 上是比 4.X 上要短的.而如果你仔细观察开头给出的图片, 你会发现一些细节. 首先, 新的 Chrome 和 Chrome Beta 都支持通过读取网页的某个 HTML 标签来改变 Overview 界面里 App Bar 的颜色. 这对于增加网页/Web App 的辨识度而言产生了极大的帮助.其次, 如果你细心的话, 会注意到知乎 Alpha 和 Google Wallet 在 Overview 里显示的图标和他们的应用图标不一样. 这就是 Overview 的一个新特性, 我们可以自定义显示在 Overview 里的图标. 我去掉了此处知乎图标的底座, 这样能够让知乎在 Overview 里看起来更和谐.第三是没有在上图中体现的一个新特性. 只要我们愿意, 我们可以让知乎在 Overview 中显示不同的 Title —— 比如说, 当你在阅读答案时, 进入 Overview 界面, 知乎显示的标题就是 ｢回答｣, 如果你在某个人的个人主页, 那么在 Overview 里知乎的标题就是这个人的名字. 也就是说, 当 3.0 版 (或者以后其他版本) 里知乎支持多帐号之后, 你就可以在 Overview 里看到你的两个账号分别以两张卡片呈现, 知乎图标变成你的头像, 知乎后面是你的帐号名字~这些新特性如果好好使用的话, 对于提升一个应用的易用性也好辨识度也好, 都是有极大意义的.</content></doc>
<doc>     <docid>134<docid>     <title>｢质感｣ 的 ｢厚度｣</title>     <link>http://www.phonekr.com/material-thickness/</link>     <content>如果你有看过 Material Design, 那也许会对这个描述有印象:Material has varying x &amp; y dimensions (measured in dps) and a uniform thickness (1dp). Materialnever has a thickness of 0.那么, 这个 idp thickness 到底是什么意思呢?这里的 1dp thick 并不是一个实际的数字, 它有两个含义: Material 有固定的厚度, Material 的厚度是一个网格中允许存在的最小值.什么意思呢?在 Holo (或者说 Android Design) 时代, Google 就已经强调了阴影和高光的使用, 但是, Holo 中的阴影和高光并不完全是高度变化的产物, 相当一部分的阴影和高光是由控件本身的厚度产生的 (比如 Action Bar 下方的阴影).而 Material Design 里, 厚度这个属性被去除了. 也就是说, 同样是 Action Bar 和 App Bar 产生的投影, 在 Android Design 中, 投影是因为 Action Bar 有厚度 (厚度是多少我们不知道), 而在 Material Design 中, App Bar 的投影却是由于 App Bar 的高度高于下面的内容而产生的. 同样的, 其他的 Material 元素也和 App Bar 一样会产生投影, 而这些投影并不是由厚度产生的, 而是由高度差产生的. Google 规定了 Material 固有的厚度, 也就是问题描述中的 1dp thick.Material 有固定的厚度, 然后呢? 实际上, Material 的厚度应该是一个虚数. 你可以把它想象成一张无限薄却不透明的材料. 但是 Google 显然不可能用这种暧昧的描述. 而在 Material Design 中, 基本不存在 &#8220;0.5dp&#8221; 这样的数值, Material Design 的网格也是以 8dp 为单位存在, Google 同样不能采用 &#8220;0.1dp thick&#8221; 这样的表述. 但是 Material 必须有厚度. 这个时候, 拿一个最小整数单位来提示 &#8220;这个东西有厚度&#8221;, 就只能选择 1dp 了.</content></doc>
<doc>     <docid>135<docid>     <title>对于 Google 在 iOS 上采用 Material Design 这种事情, 我还是挺欢迎的</title>     <link>http://www.phonekr.com/material-design-on-ios/</link>     <content>自从 Material Design 发布之后, Google 就陆陆续续在 iOS 上把几个重要的自家应用的风格改成了 Material Design. 而在此之前, Google 的几个 iOS 应用基本上都是遵循苹果的 Human Interface Guideline 来制作的.完全 Material Design 的 InboxGoogle 当初在订制 Material Design Guideline 的时候, 就已经把跨 iOS 平台纳入目标了. 对比 Android Design 你会发现 Material Design 在很多地方都靠近了 iOS HIG (当然, ｢违背｣ 的地方也非常多). 如果在 iOS 上运行一个 Android Design 风格的应用, 会让用户觉得非常诡异, 就像在 Android 原生系统上运行一个 iOS 风格的应用一样. 而制作精良 (在我看来 Google News &amp; Weather 就是随便应付的感觉) 的 Material Design 应用运行在 iOS 上, 给人造成的不适感却会小很多.写到上面这句话的时候我不由得想跑个题, 说说 ｢搬运设计风格｣ 这事儿. 为什么我对于 Google 把 Material Design 搬运到 iOS 上持宽容态度, 而对国内这些把 iOS 风格搬运到 Android 上的公司就恨不得除之而后快? 从文字描述上看起来很接近的两件事其实在本质上截然相反. 对于在 iOS 上 ｢不遵循规范｣ 设计的宽容很大一部分原因是优秀的 iOS 应用即使没有完全遵循 HIG 也不会差得太远, 或者说完全从另一个平台搬运 UI —— 当然也不是完全没有应用搬运其他平台的 UI, 但是即使完全搬运其他平台 UI, 能够被接受的几乎都在 iOS 上做得甚至比被搬运平台的应用更优秀 (之前 @冬虫夏草卡洛斯 说过: 最优秀的 Metro App 都在 iOS 上.说的就是这个事儿, 恐怕不久之后大家会发现, 最优秀的 Material Design 应用都在 iOS 上也说不定呢 XD). 而很多被容忍/接受的 ｢违规行为｣ 都是正向的 ｢超越规范｣, 而不是 ｢突破下限｣. 反观 Android 上那些被人嫌弃的应用, 它们最大的问题真的只是 ｢把 iOS 风格搬运到 Android 上｣ 么?话虽如此, 现在这几个 Google 应用大多都没有用上 iOS 系统级滑动返回, 而是用的左上角返回或者上下拉返回这些非标准的操作, 对于 iOS 用户来说其实挺不友好的. 而 News &amp; Weather 给人以很强的粗制滥造感, 以及充满 Google 风格的各式各样的小问题, 那又是另外一说了.做得好, 自然大家喜欢, 做得不好, 大家自然就骂了.</content></doc>
<doc>     <docid>136<docid>     <title>NovaDNG 2014 年度应用</title>     <link>http://www.phonekr.com/best-of-2014/</link>     <content>又到了一年一度写年终总结的时候了&#8230; 这一年因为参加了工作的缘故, 锋客这边文章的更新频率大幅下降了, 所以这几天我会搬运一些知乎上的回答过来.然后就是这篇文章的正题, Best of 2014!按照时间排序~发布于一月份的 Vivino 是一款酒友应用, 能够识别酒标, 在线评酒和为你发现身边的酒庄/酒吧发布于二月份的 Muzei 是一款动态壁纸, 在每天推送一张世界名画做壁纸之余又添加了模糊效果不至影响主屏使用, 藉由开放 API 的便利又有着数百款插件可供选择同样发布于二月份的 Type Machine 是一款系统应用, 能够像时光机一般拯救因为意外丢失的文字发布于三月份的 Link Bubble 是一款浏览器, 能够最大限度地利用等待载入的时间(没有图)同样发布于三月份的 Pixl Preview 是一款设计工具, 它能让设计师直接在 Android 手机上预览 Photoshop 上的设计稿发布于四月份的 Google Camera 是一款相机, 能够拍摄球形全景与后期模糊照片, 界面极端简洁 同样发布于四月份的 Scene 和 CloudMagic 分别是一款操作新颖的图片浏览器与一款集成了非常多有趣功能的邮件客户端发布于七月份的 Journey 是一款设计精良的日记应用, 在遵循了 Material Design 的同时提供了 Markdown 支持, 并且有 Web 端与 Chrome App同样发布于七月份的 Unclouded 是一款设计精美的云盘管理器, 可以方便地查看与管理复数账号的 Google Drive, Dropbox, Box 与 OneDrive.发布于八月份的 Weather Timeline 是一款天气应用, 精致的动画与有趣的 ｢天气时光机｣ 功能带来了很多惊喜发布于十二月的 Action Launcher 3 是一款桌面应用, 接近原生 Google Now Launcher 的外观与趁手的 Cover, Shutter 快捷操作让桌面的效率倍增以上就是 NovaDNG 的 2014 年 Android App 精选集~</content></doc>
<doc>     <docid>137<docid>     <title>Google 大概是真的打算放弃 Android 平板了</title>     <link>http://www.phonekr.com/android-tablet-is-doomed/</link>     <content>本来这篇文章的目的是打算好好黑一下 Nexus 9 的, 毕竟手上这台 Nexus 9 的黑点实在是太多了. 但是没想到 HTC 大概已经听到了众 Nexus 9 用户的不满, 塌陷的音量键, 松软的后盖这两个制造工艺问题在新出货的 Nexus 9 上已经得到了解决, 可以取暖的功能随着 Android 5.0.1 也已经取消了, 所以黑点的话恐怕真的没多少了.但是正当我准备和公园的朋友们说 ｢Nexus 9 貌似没什么东西可写 (hēi) 了｣ 的时候, 更新版的 Play Store 让我不得不重新考虑这个问题.多分栏布局哪儿去了?当年 Android 3.0 发布的时候, Google 就已经为 Android 平板设计了一套非常合理便捷的布局 —— Multi-pane Layouts. 可以看到, 多分栏布局在平板上非常便利, 既能合理利用屏幕空间展示更多内容, 也方便进行操作. 可以说, 多分栏布局显著地提升了 Android 平板的使用效率.但是, 从 Android 4.1 起, Google 开始逐渐移除 Android 上的多分栏布局. 首先是取消了 Tablet UI, 接着是设置里的多分栏布局消失了. 然后, 就发生在不久之前的是, 在 Hangouts 2.3 版本中, Google 去掉了 Hangouts 的多分栏支持. 这也使得 Hangouts 在平板上几乎失去了可用性, 布局排版就是简单的手机版放大, 一塌糊涂.而早期版本的 Hangouts 上, 多分栏布局既能显示出对话列表, 又能让对话双方的文字不至于离得太远以便阅读.而就在几天前, Play Store 更新之后, 多分栏布局也被取消了.再看看不久前更新的 Play Store:空荡荡的卡片占满了整个页面. 在更新以前, 这个界面下是采用了多分栏布局的. 左侧栏是应用列表 —— 实话说应用列表使用左边部分面积已经完全足够了. 在右边是应用的大图和快速操作, 可以直接启动, 更新或卸载应用, 甚至还可以取消订阅应用内的内容. 更重要的是, 右边栏的内容几乎是无需加载的, 而点击进入应用详情时难免需要加载一段时间. 无论是操作效率也好, 对空间的利用也好, 多分栏布局都是远远高于传统单栏布局的.(这是很早很早之前的 Play 市场)Google 似乎根本不在意应用在平板上表现如何除上面所述那些取消了多分栏的应用之外, Play Games, Inbox 等另一批 Google 应用在诞生的第一天起对平板支持就异常糟糕. 在新推出的 Inbox for Android 上, 压根儿看不出一点点为平板优化过的影子, 糟糕的可读性令 Inbox 在平板上几乎不能用. (所幸, Gmail 还保留着多分栏布局).你能想象在一块十寸大屏上使用 Play Music 却没法以全屏大小查看一张专辑封面的完整大图么? 是的, Google 就是不让你这么做. 相比之下, 反而是在大改版之前的 Play Music 对平板更友好.尽管在 Material Design 里承诺得相当美好, 但是至少目前部分 Material 化的 Play Music 让我觉得非常不尽如人意.Walkman 至少允许你查看完整专辑封面, 以不是太小的图. (实际上 Walkman 这样的布局也可以称之为多分栏布局)还有奇葩的 Google+:完全不能体现出平板屏幕大的优势, 白白浪费了屏幕空间, 操作也相当不便.还有很多我没有截图也懒得截图的画面, 从各种各样的角度暴露出十寸平板上 Google 应用设计的不上心. 除了 Nexus 9 之外, 我还同时在使用一台索尼 Xperia Z2 Tablet. 而索尼自己的平板应用却都有不错的平板优化 (至少不会给人以粗制滥造的感觉). 两边一对比, 更是彰显了 Google 对平板的不重视.内容消费设备? 生产力设备?除了上面提到的应用之外, 有个很有趣的现象: Play Movies &amp; TV, Play Books 和 Play Newsstand 这三个以内容为主导的 Play 应用却一直保持着优秀的平板适配. Chrome 也还保持着多分栏布局 (在设置页中). Google Drive 以及旗下的三个 Drive 应用也有为平板优化操作. 再加上 Nexus 9 的官方附件里有 Keyboard Folio, 我想 Google 对 Nexus 9 的定位应该就显得很明确了: 内容消费 + 生产力设备. 和内容消费以及生产力无关的应用都玩儿蛋去, 凑合能用就行了; 和内容消费及生产力密切相关的应用就能得到特别优待, 有还算不错的平板布局.还有个比较搞笑的事情是, 最近微软在测试的 Office for Android Tablet 尚不支持 Android 5.0, 所以 Nexus 9 也只能望洋兴叹.Google 内部的碎片化 在 Nexus 9 上, 我看到了非常优秀的平板布局范例 —— Google Calendar, Maps 及 Gmail; 还算凑合的平板布局 —— News &amp; Weather, Keep 及 YouTube; 还有遭烂得令人无法忍受的平板布局 —— Hangouts, Inbox 及 Google+ Photos. 真的很难相信这些应用都是由同一家公司, 遵循着同一套规范做出来的.团队越大, 部门越多, 要统一规划就越困难, 这个道理大家都懂. 但是 Nexus 9 上呈现出来的这一派乱象, 很明显地超出了我们理解和容忍的范围 —— 一个新发布的应用做得很烂, 那索性不用, 但是一个原先很棒的老应用更新之后变得乱七八糟, 这就让人完全无法忍受了.Google 发布 Material Design 也不是一天两天的事情了, 但是现在很多 Google 还没能完全符合这套规范 —— Hangouts 直到这两天的更新才把界面上的一些元素 Material 化, Device Manager, Translate 等一系列应用现在还是 Holo 风格, Google+ Photos, Drive 系列应用的 Material Design 不伦不类&#8230; 一切的一切都让我觉得, Material Design 只是一个看起来很美的幻影.连 Google 都不知道应该如何正确的使用, 如何用好 Material Design, 我们拿什么去要求第三方开发者/设计师遵循着套规范呢? 同样的, 连 Google 第一方应用的平板适配都如此不伦不类, Google 拿什么去要求第三方开发者为 Android 平板进行适配呢?也许最后, Android 平板会沦为寨版的天下 (更遑论现在很多 Android 寨版性价比还不如 WinTel 寨版), Android 不得不龟缩到手机 + Phablet 阵地固守, 将平板市场拱手让给 iOS (原本就是这个市场绝对的王者) 与新秀 WinTel 平板进行刀刀见血的厮杀.乌鸦老师问: Android 平板还有未来吗? 这个问题的答案, 我不知道.</content></doc>
<doc>     <docid>138<docid>     <title>导航抽屉到底归属于哪个层级?</title>     <link>http://www.phonekr.com/navigation-drawer-where-does-it-belong/</link>     <content>这篇文章译自 +Juhani Lehtimäki 的博文 Navigation Drawer &#8211; Where Does it Belong in the View Hierarchy? 英文能力过关的同学可以直接去看原文~事情本来是没那么复杂的&#8230;Android Design | Navigation Drawer但是一切都变了. 我们常说 &#8220;先破而后立&#8221;, 当导航抽屉成为 Google 设计规范的一部分时, Google 明确告诉我们该这么做, 而且提供了可以让开发者直接调用的工具.难道说 Google 在一开始的时候犯了个错误? 也许第一眼看上去这样做是对的, 但是从规范上看来确实是有些问题的.所以现在规范改变了. Google 调整了这些东西. 在新的 Material Design 规范中, Navigation Drawer (现在被叫做 Side Nav, 侧边导航栏) 一跃来到了所有东西的顶端.&nbsp;Material Design | Layout我们现在又一次来到了变革的潮流中. Google 正在不断的改变自己与应用的设计, 与此同时很多变数也随着这些改变来到. 虽然我个人是很希望看到 Google 能统一他们使用侧边导航栏的方式并且对开发者们传递一个明确的信息&#8230;也许你会问, &#8220;但是层级又有什么关系呢? 反正他们都 &#8216;能用&#8217; 不是么?&#8221;我认为这很重要, 事关重大. 这关系到用户是如何认知他们正在操控的物件. 如果抽屉式主要的导航方式, 那么它就是最不能出错的.层级关系能让用户明白现在他正在操作的东西归属于应用的哪个部分.上图展现了早先版本中抽屉所处的层级, 而新的 Photos 应用也遵循了这样的层级. 在我看来这么做有两个地方有很大问题:首先, 抽屉在这个位置暗示了 Action Bar 在我导航到其他入口的时候不会有变化&#8230; 但是它却变了.其次, 当抽屉展开时, Action Bar 上的按钮还是有效的, 但是它们的效果对象却是被遮住了一半 (在手机上被遮住更多) 的那些项目.令人困惑, 不是吗?&nbsp;最新版的 Google Hangouts 则采用了与 Tab 平齐的抽屉. 这给了用户 &#8220;当我从抽屉中导航到别处时, Tab 不会受到影响&#8221; 的暗示, 问题是, Tab 还是会受到影响的. 这种结构明显是错误的.&nbsp;最新版的 Newsstand 中抽屉的表现是最接近 Material Design 规范中提到的 Google 应用了, 我认为这样的实现是很棒的, 而且是正确的. 当我从抽屉中导航的时候, 所有的内容都会改变, 包括 Action Bar. 这与现实的对应是最紧密的.把 Drawer 设置为最高层级也可以很有效地避免发生上图这种视觉错误 (当 Action Bar 在滑动时隐藏了的时候).好吧, 一切都在不断的变化, 而 Google 看起来也还没拿准主意. 我还是希望 Google 能早日找回一致性, 这样我们开发者和设计师才能跟进. 在那之前, 我们还是谨慎为妙.当然, 改变熟悉的事物绝不是一件容易的事情. 我在 Google+ 上发起了一个投票希望看看大家的意见. 从结果看来改变是要花些时间的&#8230;</content></doc>
<doc>     <docid>139<docid>     <title>MX 4 与联发科</title>     <link>http://www.phonekr.com/mx-4-and-mtk/</link>     <content>这是一篇来自不愿意透露姓名的网友的投稿在 MX 4 昨日下午正式亮相之前，关于它配置的猜测已经在魅族论坛、微博和媒体上漫天飞舞。其中最受关注的话题之一就是它使用什么样的 CPU？是不是联发科的 MT 6595？不知道有多少人和我一样带着这个疑问走进魅族发布会场或者开始观看现场直播。到了第 11 分钟，我以为答案要揭晓了。因为魅族总裁白永祥开始介绍处理器：“我们采用了目前最先进的智能八核处理器，可以给你飞一样的体验。”（插图来自魅族 MX 4 发布会）如此先进的处理器，哪个厂出品的？可是，除了描述它智能八核的强大之外，魅族总裁并未明确说出这款处理的型号，幻灯片上也没有标注。答案依然闷在葫芦里。我记得：在魅族去年 MX 3 发布会的同样环节里，MX 3 所搭载的 &#8220;Exynos 5&#8243;（三星猎户座 5 CPU）在幻灯片上写得清清楚楚，而且白总还用他并不标准的英语拼读了 “Exynos” 这个有些拗口的单词。（插图来自魅族 MX 3 发布会视频）发布会结束之际，听到周围的“魅友”询问身边的朋友：“究竟说没说 CPU 是啥啊？”，被问到的眼镜男生回答：“没听见。智能八核，肯定是 6595 啊！”。我也有同样的疑问，但不能只根据“智能八核”就轻率得出结论，万一还是三星的 CPU 呢？我需要摸到真机。在手机体验区前排队的漫长时间里，一直有身穿蓝色“魅粉服”、脖子上挂着“魅友”参会证的男生和周围的人讨论手机的参数。究竟是不是 MT 6595？内存有没有 3G？拍照效果究竟怎么样？经过 20 分钟的等待，终于轮到我入场，走向一台机器的时候，一位看起来 30 来岁的先生正在翻看着 MX 4 的设置目录，询问旁边的工作人员：“究竟哪儿能看配置信息啊？”那位女工作人员回答他：“手机里看不了，你去官网看吧”。大哥离开后，终于轮到我捧起 MX 4。顾不上欣赏它的航空铝材做工以及 Flyme 4.0 的改进，先点进应用商店下载个 cpu-z 检测工具再说。结果连接的名叫 “demo” 的 Wi-Fi 网络不畅通，下载没速度。不过这点小事情难不住我，谁让咱是媒体呐，果断点选名称包含 “Media” 的 Wi-Fi，输入密码，搞定！于是我得到了下面的的结果：是的，就是联发科出产的 MT 6595 处理器。是的，就是 2G RAM。从发布会回到家，出于职业习惯打开魅族的官网。果然已经上线了 MX 4 的精美描述。然而在这些精美的图片里，描述性能的部分，依然没有标注 CPU 的型号：而在 MX 3 的类似页面的相同位置上，却清清楚楚写明了 “MX 3 采用 Exynos 5410 芯片”：最终，在 MX 4 页面最后方的“技术规格”里，总算找到了官方标出的 CPU 型号：“MediaTek 6595 魅族定制版”。在这里，魅族并没有用更为人所熟悉的 “MT”、“MTK” 或者联发科，而是选择了 MediaTek 这个更陌生的单词。当然魅族这么叫也没有错，因为联发科技有限公司的英文名就叫做 MediaTek Inc.，只是这家公司常被简称为 MTK 或者联发科。所以绕了这么一圈，最终还是确定 MX 4 就是使用了联发科 MT 6595 芯片。我只是有点郁闷，为什么在发布会开始第 11 分钟的时候不直接就说明白了？关于这个问题的答案，睿智如读者诸君，肯定也有自己的一份猜测。既然已经采用了，终究会被知道的。越说得不明确，越容易激发好奇心。聪明的用户，不管怎么样都会去搞明白想买的手机用的究竟是什么 CPU。另外一些用户也许根本不在乎自己手机用的是什么 CPU，只要自己买得起、符合所在网络、做工精致、足够流畅、系统交互精美、功能有惊喜。而魅族在这些方面并无欠缺。也许 “中低端” 的阴影依然在困扰联发科的品牌，但 MT 6595 是一块着实不错的芯：A17+A7 大小核方案，兼顾性能和功耗。在 Android 旗舰尚未进入 64 位的 2014 秋季，这是一块可堪一战的 CPU，正如魅族白永祥先生在发布上所描述的那样，它比 MX 3 上的三星 Exynos 5410 强出太多。而且，你看他还能跑这么高的分：（插图来自MX 4发布会）不知道躲在魅族官网角落里的 MediaTek 会不会觉得委屈？我只是简单地期待在更醒目的位置看到魅族将它标注出来，如同三星 Exynos。这样才公平，不管对于联发科，还是对于消费者。魅族，你觉得呢？</content></doc>
<doc>     <docid>140<docid>     <title>Splash Screen 是魔鬼, 不要在你的应用中加入这东西!</title>     <link>http://www.phonekr.com/dont-use-splash-screen-on-your-app/</link>     <content>回国快一年了. 既然人在国内, 就免不了用到各式各样的国产应用. 而偏偏安卓应用的质量还大多不太能看, 问题数不胜数. 我写下这篇文章, 借此来谈谈在安卓应用上最常见的一个问题: Splash Screen.&nbsp;实际上, Splash Screen 算是一件很有历史的东西了. 它的起源大概可以追溯到早年 PC 游戏和各类大型桌面软件上 —— 这些应用软件在启动时需要加载大量的资源, 又不能让用户产生软件死掉的感觉, 所以一个游戏或者软件加载的时候, 就会显示一个启动画面, 然后带上一个进度条什么的, 让用户知道这个软件是在加载中而不是死掉了 (当然, 还有一些软件确实是一面显示着启动画面, 一面死掉了&#8230;).而在移动应用上采用 Splash Screen, 又可以追溯到 iPhone 刚刚发布的时候 —— 当然, 那个时候的“启动画面”还不是 Splash Screen. 最早的启动画面是一张仿画面造应用内容的画面, 或者干脆就是一张应用截图:(Image credit: Cyril Mottier)iOS 应用利用这样的一张启动画面, 令用户认为应用已经载入, 与此同时在后台拉取应用数据与资源, 并稍后呈现给用户. 这样的方式取得了不错的效果, iOS 很快给大家留下了“启动速度快”的好印象. 毕竟早期 iPhone 宥于硬件条件限制, 很多应用从点击图标开始加载到可用状态几乎都要花上两三秒. 如果显示一个黑屏, 那确实是太令人不耐烦了. 而到了今天, 随着硬件机能的飞跃, iOS HIG 里已经不再建议开发者把应用截图作为启动画面, 而是建议开发者尽最大努力避免启动画面 (As much as possible, avoid displaying a splash screen or other startup experience).实际上, 标准的 Android 应用的启动也是这么一个逻辑： 先载入应用的框架 (当然, 在 Android 上不是图片, 而是实打实的应用框架), 同时在后台拉取应用内容, 之后呈现给用户. 详见： Android Design in Action —— 初期体验. 上一个版本的知乎 Android 客户端就是这么做的, 体验也相当之不错.(Image Credit: +Android Developers)可以看到, 从最开始 Apple 就没打算让启动画面变成现在的 Splash Screen 的模样. 但是不知从什么时候开始, 越来越多的开发方开始打起了这块屏幕的歪心思. 开始的时候仅仅是在框架图片上加个公司 Logo 强化一下品牌什么的, 然后就不知不觉的变本加厉, 连框架图片都不要了, 直接变成了一张公司 Logo, 甚至是广告什么的…… 启动画面就这么变了味儿, 演化成了 Splash Screen.目光转回安卓这里. 大家都应该知道, 在国内, 尤其是国内的大公司, 安卓从来都是 iOS 的附属品, iOS 方面怎么搞, 安卓方面也亦步亦趋跟着. 于是当大家在 iOS 应用上把启动画面搞成了各种公司 Logo 和广告之后, 安卓应用当然是逃不了一劫, 只能乖乖跟着改. 而且在国内, 他们甚至可以在 Splash Screen 上加入可以点击的链接……那么, 为什么 Apple 和 Google 都把 Splash Screen 看作过街老鼠, 恨不得除之而后快呢?首先最明显的一点就是, 现在的机能与应用配合, 已经不需要那么长的时间来加载应用资源了 (但是即使时至今日, 依然有一些应用由于优化差劲等原因, 依然需要耗费很多时间来启动, 比如, Path……). 在理想的状况下, 用户点开这个应用到应用已经完全准备就绪之间的时间, 应该是短于一秒甚至五百毫秒. 这个时候加入 Splash Screen, 只会拖慢应用的启动.其次, 启动画面会打断用户的思考. 很多时候, 用户是在心里带着一个特定的任务打开应用的 (比如, 计算器.当然,也许知乎用户并不会经常带着任务打开这个应用吧). 此时如果应用给用户闪了一个带有其他信息的 Splash Screen, 有一定的几率会导致用户一瞬间忘记掉自己原先的任务 —— 在先前的一篇文章里, 我怒斥了 Smartisan ROM 计算器那极为糟糕的设计, 就是因为它的界面设计会让用户在启动它的瞬间看到视觉错觉而导致忘记自己原先的任务. 对于计算器这样一个应用, 让用户忘记自己打开它是为了什么, 简直是不可饶恕的错误. 同理, Splash Screen 的加入也让很多其他的应用犯下了这样的错误.而在 Android 上, 这个问题会变得更为严重 —— Android 作为一个多任务系统, 非常经常需要在应用之间跳转. 当用户心里带着任务从另一个应用跳转到这个带有 Splash Screen 的应用时, 他有可能会因为被 Splash Screen 吸引而一时忘掉了自己原先进入这个应用的目的, 严重的阻碍了跨应用交互体验.另外, 由于多任务的特性, 应用往往会有很多个不同的入口 —— 有的时候是直接进入主屏幕, 有的时候是进入某个子层级.有的应用更因为加入 Splash Screen 而打断了导航流程, 体验极其糟糕.若是要在应用中加入 Splash Screen, 就必然需要额外的资源. 很多国内应用的 Splash Screen 是一张图片, 而在 Android 屏幕分辨率如此碎片化的今天, 准备 Splash Screen 使用的图片无疑会占用很多空间. 更令人感到哭笑不得的是, 有些国产应用的启动器没有为不同的屏幕分辨率/比例进行优化, 在 Nexus 4, 魅族 MX 2/3 这样非主流/标准分辨率的机器上显示的就是一张拉伸过的图片, 丑陋之极.不管你的 Logo 有多好看, 都没必要专门用一个 Splash Screen 来展示 —— Android 标准 Action Bar 上已经留了一个位置给应用的 Logo (Oops, 如果这个应用采用的是 iOS UI 的话, 那 Top Bar 上确实是没有放 Logo 的地方呢). 更何况, 想要呈示应用品牌的话还有很多更好的办法, 为什么非要选择 Splash Screen 这种最不讨喜的办法呢?更重要的是, 不管你的 Splash Screen 做得多精美好看, 它都是在浪费用户的时间.而当 Apple 最早提出启动画面得概念时, 是为了让用户觉得应用启动迅速, 响应灵敏. 而这个出于好意的决定今天却被各个开发商用来无端浪费用户的时间. 作为一个移动应用, 内容和功能才是第一要义, 而应用多显示一毫秒 Splash Screen, 就是多浪费了无数用户一毫秒时间. Android 的设计原则中, 特别强调了 Simplified My Life 以及 Make important things fast, 不就是为了避免用户的时间被无端浪费? 开发方没有任何的理由给用户增加无谓的等待. 人们已经在生活中等待了足够多的了： 等地铁, 等红灯, 排队, 等待网页内容加载, 等待下载, 化妆/等待伴侣化妆…… 为什么还要再让他们在应用里浪费时间呢? 更何况, 智能手机本就是为了减少我们的等待而生的.这篇文章的部分观点整理自 +Cyril Mottier 的博客 Splash Screens Are Evil, Don’t Use Them! 与 +Roman Nurik 的博客 A mobile design anecdote on perceived latency and touch feedback &#8212; Fast can sometimes feel slow.</content></doc>
<doc>     <docid>141<docid>     <title>快图浏览开始 Beta 测试啦~</title>     <link>http://www.phonekr.com/quickpic-beta-testing/</link>     <content>Google+ Community: QuickPic Beta或者 QQ 群: 293875492欢迎加入~又: 有问题不要在这里反馈, 我会直接无视的~</content></doc>
<doc>     <docid>142<docid>     <title>Android Design in Action —— 以落网为例</title>     <link>http://www.phonekr.com/adia-luoo-redesign/</link>     <content>&nbsp;落网是一个搜集介绍国内独立音乐的网站. 它的每一首歌都由人工推荐, 每一个主题都由落和他的伙伴们随心境打造 (一句话简介 by 刘文慧). 更多关于落网的资料, 请参看爱范儿对落网的报导 《不小心，落网》. 落网在一周前上线了 Android 客户端, 可以看出他们有意想要朝 Android Design 考虑, 但是不知出于什么原因 (推测是为了支持 Android 2.3), 整个应用非常的别扭, 控件的使用也很诡异. 这个应用的设计有着诸多可改进之处. 这次我就以落网 Android 版本作为例子, 讲解一下应该如何改进一款”原本就有意向遵循 Android Design”的应用, 同时希望这个范例能给大家带来一些参考.这一次的主题是&#8221;保守&#8221;, 也就是说, 我不会在这次重设计中用上太多花哨新奇的效果, 都是中规中矩的改进.1. 最新期刊 (首屏) 落网的首屏采用了大号卡片流的呈现形式, 美观大方, 冲击力很强大, 我很喜欢这个设计. 就呈现形式而言, 我觉得并无不妥, 便没做更改.将 Action Bar 颜色稍微加深, 改为落网网页版的背景色 #dddddd采用标准的 Drawer Hamburger将原 Logo 的圆形底座去除, 拿出天鹅作为 Logo放大正在播放信息的专辑图片, 加入曲名, 艺人名以及播放状态指示采用标准 Android 卡片分离期刊号与期刊名, 期刊名改为落网品牌色 #990000将评论与收藏数纵向放置, 颜色改为落网品牌色加入 Contextual Overflow, 内含直接播放选项采用 Translucent Navigation Bar2. 导航 (Drawer) 落网原先采用了撤去式 Drawer, 但是偌大的空间里只放了个人, 音乐, 收藏和设置四个项目, 显得空荡. 我保留了原先 Drawer 中项目的顺序, 留出了以后将会加入的播放器的入口.采用 Google 官方 Drawer, 并让 Action Bar 上标题位置显示落网的名字把帮助和反馈拉到 Drawer 中将 Slogan 改为了落网品牌色微调个人资料显示风格 (Play Store 风格)给 Drawer 背景加入三段分隔颜色3. 期刊分类 原先的期刊分类给我一种索然无味的感觉, 如果仅仅是现实分类的名称文字的话完全没必要用 Grid List 啊&#8230; 于是我就做了一点大胆的尝试.采用标准 Android 卡片将每个分类加入对应的描述图片(分类的图上有好多彩蛋&#8230;)4. 专题详情 详情页做得稍微大胆了一些, 主要是因为我觉得这个页面的布局太适合 Translucent 和 Multiplexed Action Bar 了.将标题和期刊号放进 Action Bar 的标题处, 顶替原先并不重要的曲数信息采用 Multiplexed Action Bar 和 Translucent Status Bar (卷动之后 Overflow 和播放按钮进入 Tabs 层)加入标签信息将播放按钮改成落网品牌色底座 + 白色图形将评论, 收藏和分享放入 Action Overflow 以节省纵向空间曲目列表专辑封面放大, 字号放大5. 播放器 其实我挺搞不懂的, 为什么其他界面都是亮色调, 唯独播放浮窗是暗色调呢? 所以我就把它改成了亮色调&#8230;采用亮色调曲名改为品牌色, 滚动显示更多按钮改用 Overflow 样式播放控制按钮改用 Android 标准样式, 并覆盖专辑封面颜色 (这个似乎很流行的样子)播放进度控制采用标准 Android 进度条 + 把手浮窗整体下移其实我还做了另一个版本的播放器:试着采用右侧 Drawer 作为播放器, 因为比起右上角播放状态按钮, Drawer 可以从右侧边缘直接唤出, 对大屏操作更为友好, 纵向空间充足而可以直接展开所有操作. 改动太明显了我就不说了 (其实只是偷懒而已). 有个需要强调的地方就是, 在制作 Drawer 里需要拖动的控件时, 请务必屏蔽 Drawer 的滑动关闭手势.6. 评论 标题栏加入期刊标题写评论按钮移至底部, 以 Quick Return 样式呈现加大字号, 加大行距, 规范边距加强对比度将用户名改为品牌色将时间与赞统一放置于用户名右侧7. 设置我不太明白为什么在设置里会突然出现一个 iOS 6 风格的开关&#8230;移除重复的个人信息入口将开关改为选框采用标准 Android 列表分类评分已经在 Drawer 里了, 所以这里就不需要了总结重设计到这里就差不多结束了. 播放器界面由于原应用里未完成, 我就没做. 自从完成了 Nexus 4 Mock Up 工具之后, 做这样的重设计就变得轻松愉悦&#8230; 果然是工欲善其事必先利其器嘛. 落网方面的人态度也很友好, 不知道什么时候能看到他们改进的成果~另外, 这次我没做图标重设计.例行的对比图:主界面Drawer分类专辑详情播放器浮窗播放器 Drawer评论页设置页&nbsp;最后感谢刘文慧将落网推荐给我~</content></doc>
<doc>     <docid>143<docid>     <title>Google Camera 初体验</title>     <link>http://www.phonekr.com/google-camera/</link>     <content>就在不久之前, Android 4.4 上的自带相机更新为了 Google Camera. 这个更新是个从图标到体验的从内而外的大更新.首先新的 Google Camera 肯定不能叫做原生相机了, 我打赌它不会被包含在 AOSP 里, 应该变成了像 Google Keyboard, Google Calendar 这样的东西.新的相机图标和之前 Android Police 泄漏的图标相距甚远, 而 Google 没有理由在短时间内多次替换一个应用的图标. 不过新图标比起旧图标确实略显扁平.拍照体验这部分比较个人. 我觉得新 Google Camera 比老相机 体验要差. 我非常喜欢老相机的扇形菜单, 结果 Google Camera 里去除了, 直接打回最普通的点按式菜单, 我很不高兴. 左侧隐藏的模式切换菜单对于某些智商不够的用户而言恐怕是一辈子都不会发现该怎么调出的.不过实话说来我很喜欢这个模式切换菜单, 这比老相机的模式切换要好看一些, 不过老相机更直观. 我也很喜欢选定一个模式之后的切换动画 (圆形扩散, 背景模糊). 一些原本只要滑动两次就能进入的设置被挪到了专门的设置菜单里. 而且设置菜单居然是 Holo Light 的&#8230; 有点诡异啊.曝光补偿居然变成了默认隐藏, 需要到设置里开启手动调整之后才会出现. 拍照界面下屏幕底部一整块灰色区域都是快门按钮 (不过我也很好奇为什么 Google 不在拍照界面进入 Immersive Mode). 至于 Photo Sphere, 和 Panorama, 和老版本基本上可以说是大同小异.和 4.4 原生相机一样, Google Camera 自带图库功能, 从拍照界面左划进入. 图库的操作和之前几乎没有区别, 上下滑动依然可以删除照片.在 (且仅在) 这里可以调整之前拍的后期模糊照片. Google Camera 提供了焦点选择和模糊力度调整. 效果还不错.这是我刚刚拍的后期模糊照片:这是最大模糊力度的. 效果很梦幻, 我很喜欢 (但其实很不准确).这是默认模糊力度的. 可以发现花瓶边缘有一点后期处理的痕迹. 不过我觉得已经比 HTC M8 的后期处理效果好多了.另外, 后期模糊的照片可以进行再调整, 应该是保存了类似 RAW 的原始数据文件 (在 DCIM 文件夹中只有处理完成的图片).耗电十分感人. 我仅仅用它拍了三张照片 + 两次后期模糊调整, 就变成这副模样了. 而且手机的温度和玩了半小时极品飞车有得一拼, 不知道是不是我的个别情况 (但是我这可是 Android 4.4 原生 Nexus 4 啊&#8230;).看看好像也没什么好多说的了. 总之我挺喜欢 Google Camera 的新功能, 但是对去掉了原先的扇形菜单表示不满.下载地址: Google Camera</content></doc>
<doc>     <docid>144<docid>     <title>小米移动的三驾马车</title>     <link>http://www.phonekr.com/mi-troika/</link>     <content>在两年以前, 我也曾经是一个&#8221;发烧友&#8221; —— 一个最疯狂时一天刷四五次机, 两天不刷机心里就不会舒服的人. 我也曾经是 MIUI 的老用户, 只是在 Android 进入了 4.0 时代之后我就不再刷 MIUI 了. 至于原因, 后文会提到. 但即使疯狂如我, 在 Android 已经发展到 4.4, 各厂旗舰纷纷踏上四核大道的今天, 也已经突破了连续三个月使用原生系统 (Nexus 4, Android 4.4, Rooted + ART) 不刷机的记录. 就在我已经&#8221;原生大法好, 退刷保平安&#8221;的这个时候, 小米推出了他们号称&#8221;不用刷机的 MIUI&#8221;的小米系统. 既然可以不刷机 (言下之意: 可以不用中断我的不刷机记录了, 耶!), 而且我又已经很久不用 MIUI 了, 对他们现在是什么样有点儿好奇心, 于是我便下了一个&#8230; 当然, 今天我并不打算在这里讨论小米系统本身 (关于我对小米系统的看法可以移步我的微博, 到时候估计会专门写一篇来黑), 而是来浅谈一下小米系统的企图. 尽管我很想说说它的战略地位, 但怎奈我不是小米的人我也说不清楚. 文章里的事件大多凭印象, 如有错漏及不妥请不吝指出. 想看我黑小米的同学们可以 Ctrl + W 了&#8230;MIUI 的困局MIUI, 是小米公司的生存和立足之本. 在前 4.0 时代, 小米靠着 MIUI 拿下了第一批&#8221;发烧友 (或许我该说, &#8220;刷友&#8221;?)&#8221;, 建立了自己的用户基础. MIUI 能够在大部分主流机型上提供相对完整的米系体验. 由于 Rigo Design 出色的设计 (MIUI V5) 以及小米团队对本地化正确的理解, MIUI 取得了极好的口碑.尽管 MIUI 为小米公司掘出了第一桶金, MIUI 的适配成本却居高不下. MIUI 一直走热门手机官方适配, 其他手机社区大神移植维护路线, 在 Android 4.0 之前, 由于那时的 MIUI 仍然是基于 CyanogenMod, 开发和移植难度并不会很高, 稳定程度与 bug 都可以接受. 进入 Android 4.0 时代之后, MIUI 转向原生开发路线, 导致官方适配机型维护成本激增且没有原厂 Android 4.0 的机型都不能升级至官方 MIUI V4, 而层出不穷的 Bug 也开始使很多非官方支持机型 (与很多官方支持机型) 的 MIUI 用户感到困扰. 而且在这时可以很明显的发现, 官方支持机型的增加显著放慢了, 有很多&#8221;准热门机型&#8221;都没有官方支持. 很快, 小米意识到这个问题并把 MIUI 的架构改成 PatchROM, 然后由自己或合作开发组做基于原厂固件的适配. 但是即使如此, MIUI 开发成本和实际效果之间仍然没能取得很好的平衡. 这个时候, 一些原 MIUI 用户选择了离去.彼时 MIUI 的刷机动力 —— 优化, &#8220;发烧&#8221;与美化, 在 Android 4.X 时代逐渐显得疲乏. 在 Android 4.X 时代以前, Android 手机体验较差, UI 也嫌丑陋. 在这样的条件下, 用户选择刷如 MIUI 一方面是看中了 MIUI 具有很强的本土化优势, 另一方面基于 CyanogenMod 往往能带来比原厂 ROM 更加流畅的体验, 而 MIUI 的特色主题功能又能一改 Android 2.X 的丑陋面貌. 但是从 4.0 开始, Android Design 规范出现, Android 有了一套自己的成体系的整体设计风格, 并且系统 UI 与 Android Design 配合完美, 因此部分用户抛弃了 MIUI 投入了 AOSP 和 CM 等风格接近原生的 ROM 的怀抱中. 在 Android 4.1 之后, Project Butter 的加入又极大改善了 Android 长久以来被人诟病的卡顿迟缓, 当其中一些为了性能而刷上 MIUI 的用户发现原生 Android 4.1 比 MIUI V4 (Android 4.0) 流畅时, 这批用户也选择了离开 MIUI.很显然, 曾经风光一时的 MIUI 在今天已经显出了疲态.小米手机的陪衬当越来越多的用户选择离开 MIUI 的时候, 小米公司自然不能坐视不理. 在用户､ 口碑基础尚存, 而在适配上却呈现疲态的形势下, 为了保障 MIUI 所承载的服务盈利模式, 小米以硬件来扩大利润､ 增强用户粘性并且进一步变革中国 Android 软硬件生态的扩张势在必行. 而他们的杀手锏就是小米手机. 1999 的超低价格, 顶级配置, &#8220;为发烧而生&#8221;&#8230; 各种宣传, 一方面吸引 MIUI 老用户购入小米手机, 另一方面也开拓了新市场 —— 很多大学生觊觎小米手机的超高性价比, 成为了小米的用户.但是, 尽管小米手机提供了最完整的小米系体验, 对于普通用户而言, 获取小米手机的成本反而是三者中最高的. 即使在今天, 购买红米手机依然很难一次成功, 身边很多同学朋友都因为无法直接在官网上抢到而选择在淘宝等渠道加价购买. 在这里不讨论小米手机是否玩期货和饥饿营销, 但这显然是砸了小米手机&#8221;高性价比&#8221;的招牌. 而在这个时间点上, 小米也转移了宣传重点, 开始不断宣传小米手机的配置高, 跑分高, 性价比高, 减少了提到 MIUI 中人性化本地化改进的次数 —— 实际上在我印象中, 自从小米手机出现之后, 我就再没看到小米官方那么高调地做 MIUI 人性化功能的宣传了.而实际上, 在 MIUI V5 时代, 小米手机的配置与使用体验并不比刷了官方支持的 MIUI 的其他厂商高端机型要好. 这点可以体现在相机/屏幕/其他各种硬件素质等很多地方 —— 毕竟 1999 就是 1999, 没办法和那些动辄 3000､ 4000 的高端机比. 而实际上, 小米手机似乎也从来没打算做高端, 从小米手机 1 开始就是打性价比牌, 走&#8221;屌丝&#8221;路线.在这台三驾马车中, 小米手机从来都只是从马 (Side Horses), 没有成为主力过.小米系统的渗透雷军曾经说过, 小米的铁人三项是软件, 硬件与互联网服务, 而这三项里最有价值 (增长潜力, 用户黏性) 的其实还是互联网服务 —— 说白了, 就是内容. 不管是 MIUI 还是小米手机, 最高目的都是将用户导向小米的互联网服务 (硬件 + 软件 + 服务比软件 + 服务赚钱). 而小米系统就是那个能够以最低的成本普及小米的互联网服务的选择. 还有一个不能忽视的地方: 在互联网服务能够直接带来收益的付费项目 —— 主题, 应用, 音乐, 书: 这些服务都有着由其它传统同类网站已经培养多时, 有消费习惯的用户, 尤其是电子书和主题. 而这些用户有消费在线内容的需求､ 习惯和经历 —— 中, 他们的用户往往都是高端用户 —— 只有高端用户才能更好的意识到内容的价值, 并愿意为内容付费. 通常情况下, 我们很难在低端用户的低端手机上看到付费内容. 而如前文铺垫, 可以发现, MIUI 的中高端用户其实是在不断流失的. 现今三星等国际大厂及其他国产厂商的 ROM/UI 逐渐进步, 有的厂商甚至搞出了不输于 MIUI 的体验和优化, 而手机硬件的不断发展和 Android 4.1+ 的普及也使得新款中高端手机能够轻松推动这些 ROM/UI, 因为优化带来的刷机动力逐渐消失, 即 MIUI 的最有力传播途径 (刷机动力) 已经消失; 而小米手机又主打中低端, 对高端用户构不成吸引力. 那么小米应该依靠什么来重新打入中高端用户这么一片市场? 重点依然是 MIUI. 如果能让 MIUI 更方便的渗透到中高端用户中, 小米互联网服务的用户就会随之增多. 在此之前, 小米曾经有一次不甚成功的尝试, 那就是小米桌面 + 百变锁屏 (卖主题). 这次尝试的中心思想其实就是分离核心应用以便推广, 实质为简化版的 MIUI. 而这个思路, 是正确的思路. 观察小米系统的安装包, 你会发现他的文件名是 &#8220;MiuiLite&#8220;, 而安装之后显示的英文名则是&#8221;MIUI Express&#8220;. 这两个名字很好的概括了小米系统的性质, 那就是精简版的 MIUI, 一个即装即用的 MIUI. 这个 MIUI 比 ROM 本体小很多, 在一个应用里直接集成了大部分系统核心应用. 而小米系统作为一个 Android 应用, 适配不同机型的成本要远远低于 MIUI ROM. 以应用的形式出现的另一个好处就是那些刷机困难/无法刷机的行货手机也瞬间从 NPC 变成了可攻略对象, 瞬间又扩展了一批可能用户. 而官网上得知, 首批推荐机型为 HTC One, Samsung Galaxy Note III, Sony Xperia Z Ultra, 都是高端大屏手机, 而小米系统虽然相对固件而言体积较小, 但是这毕竟是在系统之上运行的一整套软件, 对内存和处理器的要求都很高, 而且有大量服务常驻后台. 能符合流畅运行小米系统条件的设备以及上文提到的国行/中国运营商定制手机的用户, 消费能力不会低. 可以看出小米从&#8221;发烧友&#8221;向真正准高端用户进攻的尝试. 由此, 小米系统的高端路线可见一斑.这一次, 小米重新祭出了改善体验的大招. 在早先的造势宣传中, 不断强调系统应用体验的重要性, 主打宣传对桌面 (主题), 拨号/联系人, 短信和云服务这些一部手机基础功能的改善. 这一瞬间, 小米似乎又回到了 MIUI 刚刚起步时的原点 —— 重视本土化､ 人性化的操作, 优秀的设计 (是不是优秀这个可以再议), 重新把目标瞄向了对内容有消费能力与意愿的中高端用户, 和 (也许和前面重合度很高的) 不愿意/懒得/不会刷机的普通用户, 更好的传播 MIUI 与小米服务. 而 MIUI 和小米系统的用户都是小米生态系统 (商店应用/主题, 音乐, 视频内容, 书等小米系内容) 内的一员.&nbsp;接过了来自由于受竞争者和用户需求减弱冲击而动力疲软的 MIUI 的接力棒, 小米系统正式成为小米移动三驾马车的主马. 尽管小米手机被国内传统厂商借鉴模式并在渠道和宣传上打压而且一时无法摆脱低端印象, 但是小米系统在准高端用户领域做出了积极的尝试. 由此, 小米通过小米系统, MIUI 和小米手机这台三驾马车, 进一步扩展了自身互联网服务的受众群体, 高低搭配远近结合, 完成了小米移动的中盘布局, 堪称完美的妙着. </content></doc>
<doc>     <docid>145<docid>     <title>A New Journey</title>     <link>http://www.phonekr.com/a-new-journey/</link>     <content>大家好。真对不起用了这么俗套的开场，但是想必我们手中正敲击的键盘也不会是您走在前头的时候落下的，就这么着吧。但是我们想做真正被你们需要的事。有几位前辈都这么说过：“大家都能做新闻，要你们干嘛？”。有道理，大家获取新闻的途径太多了，永远没有一个地方可以保证自己的消息最及时。但是做新闻并不是件容易的事。正因为不容易，我们希望替屏幕那头的您，找来每个领域我们认为最专业、认知最透彻的人。我们希望，大家可以不再需要每天带着焦虑症刷新各类科技微博、网站去追踪每一分每一秒可能发生的事，更不希望在充斥小道和捏造的环境里每个人都满腹猜疑，从而自己劳神去挖掘信息的源头、去关注更多的消息来源、去面对更多的未知和烦躁。所以啊，我们会以自己为担保，挑选每天最有价值、最可信的新闻，在您上班路上以及睡前整理出来。就像喝牛奶或者刷牙一样，轻松而平常。这么一群有热情的人每天只干两次活儿是闲不下来的。我们会在剩余的时间里，尝试用最客观的态度、最冷静的文法、最精炼的文字，去解读近期的热门话题或者传言，去剖析每一个争论背后我们认为的答案。顺带一提，我们叫 TingTalk。这是我曾经想要开的咖啡厅的名字。Ting 可以是“听”的拼音，也是拟声。清脆、干净，不拖沓。就像我曾经很喜欢一段咖啡厅环境音里的那声服务铃，让人觉得一切都井井有条，一切都在运转当中，一切都如往常那样让人心安。优雅、宁静。台北有个地方叫“温罗汀”，它“有着华人世界少见密度最高的书店群，以及重要文人故居，加上附近台湾大学青年学子所带进的小众风潮——这一区域不只有书香、咖啡香，还有独立自有的人文精神。”。这是“汀”的取材，而“说”，则是单纯的，对每一个人而言最友好的传递方式。很感谢你看到这里，也很高兴认识你。文: TingTalk</content></doc>
<doc>     <docid>146<docid>     <title>关于未来, 以及一些才不是怎么样都好呢的事情…</title>     <link>http://www.phonekr.com/about-my-near-future/</link>     <content>(Image credit: Gnosis)初次见面的读者, 初次见面. 好久不见的读者, 好久不见. 不知道锋客网的新老读者对 NovaDNG 有什么样的了解? 也许你有关注他的微博, Google+ 或者 Twitter, 也许在知乎上看过他的回答. 也许在你的眼中他是一个 Android Design 狂信者, 也许是一个 Android Design 布道师, 也许是个自高自大的人, 也许是个偏执狂&#8230;如果你对他稍微更了解一些的话, 你会知道他是个大学生, 曾经在美国留学, 那一年里他整天泡在图书馆里, 而自从去年六月回到中国之后行踪就飘忽不定, 不知道到底在干些什么. 锋客网的文章也总是有一搭没一搭的写着, 有时候人品爆发连续两三天每天一篇, 有时候文思枯竭一个月没一篇&#8230;&nbsp;不过这些都不再重要了.五月起, NovaDNG 就会正式加入一个新团队, 其名为 Q-Supreme (中文名叫快宜信息技术)(嗯哼, 这个名字还是 NovaDNG 自己起的呢~). 觉得这个名字很陌生? 当然啦, 因为这是一个新生的团队. 所以你看, 这个名字连链接都没有. 但是不要小看了这个团队. 这个团队目前由五名成员组成, 而随便拉出两个人来, 你会发现他们都是大神. 比如 —— 心之所在和作者南岭. 而这个公司就是在快图浏览的基础之上建立起来的.稍等一下&#8230; NovaDNG 不应该是个大学生吗? 怎么突然就去工作了? 其实在三月中旬的时候, 南岭大叔找上了 NovaDNG, 把他的想法告诉了 NovaDNG, 并请他去上海和他们促膝详谈. NovaDNG 便欣然去了上海. 在上海, NovaDNG 和南岭大叔一番畅谈. 他发现, 南岭大叔除了非常低调之外, 三观正, 技术硬, 人品也非常好, 总之趣味相投, 惺惺相惜. 之后, 他便决定加入这个新生的公司. 加入了公司之后呢? 嗯, 也许你们会有更多的机会在公众场合看到 NovaDNG 本人 —— 他正在计划着去厦门, 上海, 南京, 广州的 GDG 做 Android Design 宣讲. 同时, 这个计划得到了南岭大叔的支持. 另外读者们也可以放心, NovaDNG 依然会继续耕耘锋客网, 将自己在工作中的心得体会整理成文章发布在这里.NovaDNG 自然不会中断他的学习. 工作的单位离复旦大学新闻学院/艺术学院非常近, 离同济大学不过四五站地铁, 而地铁十号线能直达上海市图书馆. Q-Supreme 是弹性工作时间, 而 NovaDNG 在复旦和同济都有朋友和同学&#8230; 所以, NovaDNG 选择在工作之余和周末在复旦蹭课, 或者就像还在美国的时候一样窝在图书馆里看书&#8230; (啊, 总感觉似乎是在给新团队做广告的样子呢&#8230;) 当然, 他也会和以前一样不断的从互联网的海洋中汲取知识. 所以你应该放心, 虽然人不在学校, 但是下班之后的 NovaDNG 依然把自己看作一个学生, 希望能够学到更多的东西. &nbsp;其实说了这么多, NovaDNG 的心里话是: 就要第一次正式参加工作了, 好紧张&#8230;在 NovaDNG 的身边, 大家都规规矩矩的上着大学, 在大学里或者读着书, 或者开着小差, 或者玩着游戏, 或者谈着恋爱&#8230; 在此之前, NovaDNG 都在专注的做着他认为正确的事情, 丝毫不在意旁人的目光. 但是这次, 在这个时间, 他突然停了下来, 环顾四周. NovaDNG 发现自己是孤独的. 身边的同龄人里只有他一个人选择了在这个时间离开学校进入工作, 只有他一个人. 而去上海工作意味着再一次离开他熟悉的城市与亲人, 来到一个新环境. 而和美国不同, 尽管上海的人们依然讲着普通话, 他却不能像在大学时那样, 把自己窝在图书馆离和网络上试图避免在现实中和人接触; 他必须面对除了同事以外的各种各样的人, 站上 GDG 和其他活动的演讲台, 拼尽全力实现自己的理想, 而不是像在大学里一样只是把理想当作天边的星星.他其实非常害怕寂寞. 锋客这个团队就是因为他对寂寞的恐惧而组建的. 他天真地认为, 聚集起一些志同道合的同龄人, 寂寞就会离他而去. 而事实上, 尽管他曾试图尽力维护这个团队, 但这个团队到现在却免不了七零八落. 锋客对于 NovaDNG 来说是一个心灵的藏身处, 这个藏身处曾经热闹过, 但是现在, 这里依然是寂寞的. 他假装自己经习惯了这样的寂寞, 但是现在当他停下来环顾四周时, 却又依然被这种感觉击倒.NovaDNG 只在大学里待了一年. 这带来的后果就是, 他可是相当的 &#8220;Too young, too simple, sometimes naïve.&#8221; 也许有时候, 保持着天真未尝是件坏事, 但是对于刚刚进入这个世界的他而言, 这是一个致命的缺点. 也许他心里已经意识到了这个问题, 怎奈&#8221;天真&#8221;这样的属性也不是想要摆脱便能摆脱得了的. 想到这些, 他只觉得冷汗涔涔, 倍感压力. 而在紧张的同时, 他的内心又充满了对未来的向往.上海是一个大舞台. 汇聚了各种各样的角色, NovaDNG 在网上认识的很多高人都在上海. 上海还有百度 ISUX, 阿里, 新蛋.. 和其他的令人向往的地方. 就像站在大观园里的刘姥姥一样, NovaDNG 的心情非常复杂. 新的环境, 新的公司, 新的朋友, 新的同事&#8230; 就像刚刚去美国的时候一样, 一切都会是新的. 而且和大学不一样, 这一次, 他只能靠自己了. 一想到终于, 他能够用自己的力量完成自己的目标, 如何让他不觉得激动兴奋?早些时候 NovaDNG 对媒体行业充满了憧憬, 成为记者是他一直以来的梦想. 因此你也许会注意到, 锋客网上时常会发一些带着采访报道性质的文章. 但是在去年的时候, 他在求职成为媒体记者的道路上遭遇了挫败. 之后他也发现, 几个进了媒体行业的才华横溢的朋友们, 待遇都不尽如人意. 于是他便将更多的时间花在对 UI 与 UX 的研究学习上. 直到今天. 但即使在今天, 他依然对新闻抱有热忱. (也就是说, 你以后也会在锋客网看到采访报道性质的文章) 而对媒体的兴趣也造就了他的产品观. 尽管还没做过产品经理, 他的好朋友龚叔曾经评价他&#8221;会是个不错的产品经理&#8221;. 这次来到新团队, 他也会第一次尝试扮演产品经理这个角色.  希望他能在这条路上顺利的走下去吧. 毕竟, 他可同时是产品经理和 UI/UXD 呢.&nbsp;NovaDNG 依然将工作之余的自己看作一个学生. 进了新公司之后, 他依然怀有自己的小梦想, 但是会全力为了实现目标而奋斗. 也许他会变, 但是请相信他会朝着好的方向变化. 他依然会在锋客网写文章, 频率也许没那么高, 但是想想, 他已经在锋客网写作三年 (算上极智的话) 了, 不会那么轻易的放弃的. 而且, 南岭大叔保证, 下班之后的时间是自由的 —— 这也意味着, 他依然会做一些 Redesign 尝试, 或者帮一些小团队/个人开发者设计/修改 UI. 感谢南岭大叔.对了, NovaDNG 葫芦里依然有点儿药没有卖完, 敬请期待~&nbsp;就让我在这里尽情的矫情一回吧.</content></doc>
<doc>     <docid>147<docid>     <title>异闻录 18：猴族危机</title>     <link>http://www.phonekr.com/tensei-18/</link>     <content>NovaDNG: 异闻录是一个全新的栏目, 每天晚上的大概这个时间, 胡桑会为我们带来轻松愉♂悦的当天科技新闻汇总. 至于你问我为什么突然新增加了这么个栏目&#8230; 啊哈哈, 佐佑理不知道呢~它们会毁了那些孩子的灵魂，把他们引到黑暗面里去。 (They can destroy their souls and lead them to the dark side.) ——波兰一位神父严厉批评了乐高玩具它不可能从一家到另一家间传播得那么快，让那么多人在黑死病期间死掉。 (It cannot spread fast enough from one household to the next to cause the huge number of cases that we saw during the Black Death epidemics.)——英国科学家推翻了原来的鼠疫感染论，提出了空气传播疾病才是黑死病主因的新学说我们认为，DNA 片段是大自然的产品，并不能仅因为被分离出来就将其视为专利。 (We hold that a naturally occurring DNA segment is a product of nature and not patent eligible merely because it has been isolated.)——美国最高法院裁决 DNA 不能成为专利，但是人工复制的基因拥有知识产权我是西斯大帝，我要参加总统选举&nbsp;战无不胜的朝鲜航天局 Logo 疑似借鉴了美帝 NASA 的设计&nbsp;Windows XP：老当益壮，宁移白首之心；穷且益坚，不坠青云之志&nbsp;Chrome： 无路请缨，等终军之弱冠；有怀投笔，慕宗悫之长风&nbsp;5.3%Android KitKat 版本的市场占有率已经超过 5.3%，现在 4.0 及其以上版本的占有率高达 81%94431224亚特兰大机场成为 2013 年最繁忙的机场，北京机场以 1000 万多的吞吐差距位列第二&nbsp;4 亿LINE 今日用户正式突破 4 亿，每日信息发送在 100 亿条以上20 亿苹果试图从与三星的专利纠纷诉讼中获得 20 亿美元的巨额赔款&nbsp;1，中国男人马云表示国内某男艺人的婚外情无关紧要他只是犯了男人都会犯的错误，现在笑话他的人也许也会犯同样的错。马云说了这番话后，台下哄堂大笑，男嘉宾笑得前仰后合，女嘉宾乐得花枝乱颤。晚宴结束后，马云接到来自成龙的短信：马总你说得太棒了！今夜小聚，高尔夫球还是春卷，任君选择。&nbsp;2，这是谁干的！微软网站 Windows on Devices 开天窗前日。——新产品就要上线了，上面的大老板很看重哟，大家可千万别捅出什么娄子出来。——嘿嘿。 ……今日。Boss：——谁干的，这是谁干的？！——老板，愚人节快乐！次日，临时工小明被辞退，他幽怨地表示：作为一个文科生，刚来美国把时差记混了有什么办法。&nbsp;3，猴族危机三星、东芝和 HTC 在愚人节使用了相同的彩蛋玩笑&nbsp;你看这是一副手套而已，其实它可以打手机！——HTC你看这只是一副手套而已，其实它可以用来拍 4K 视频！——东芝你看这就只是一副手套而已，其实它是一个 1600 万像素的相机！——三星你看这就只是一副手套，它也的确只是一副手套，但这是一副由原研哉老师亲自设计的手套，纯白款只要 3999 元哟！——某国内未推出智能手机系统4，要想过此路，留下买路钱旧金山每年将向 Google 等公司的员工公共汽车征收费用以允许他们继续使用停车站——你们占用了我们的公共设施！——那我们交钱行不行？——好！……——你们这样做会加剧普通人出行负担！——那我们交钱行不行？——好！……——你们……你们这样科技巨头已经破坏了我们城市的人文美！——那我们交钱行不行？——好！&nbsp;5，毕业生纽约超过一半的科技公司从业者没有大学文凭春风得意的大学毕业生 Jack 揣着终面通知踏进梦寐以求的公司。——我是哈佛、康奈尔的工程学双学位学士，兄弟你呢？——呃，我就上过一个学院（college）而已，最后还退学了。——诶？那你还真不简单，学历不高……哎，不好意思。——嘿嘿，没事。不过我感觉我这一关你应该是过不去了。——?——哦，我就是这家公司的 CEO 咯，嘿嘿。——！——对了，我之前上的伊顿。Jack 面如死灰，白色衬衣的领口被汗水全部浸湿了。&nbsp;6，不好笑的玩笑EA COO 因为愚人节开的玩笑而不得不向 Wii U 道歉——这是银座的一间旺铺，不知大人是否能赏光和我们一起运作？——嗯，这个还是可以考虑一下的嘛，但是你们卖了那么多楼怎么还留有旺铺？——你们和他们合作，但不也是留了一手吗？EA 和索尼相视大笑，把酒言欢。此时，苦闷的任天堂一个人在东京湾的夜风中苦苦思索如何发掘新的游戏性。&nbsp;7，嘴炮无双苹果和三星的专利诉讼纠纷继续白热化苹果律师厉声批评：三星现在已经彻底坠入抄袭的黑暗面了！三星律师机智反击：乖儿子，爹等会儿给你买糖吃。苹果律师稍微一愣，憋红了脸说到：你，你就只会抄袭！三星律师轻轻拂过发梢，一阵清扬香气飘荡在法庭内：乔布斯当年还是这样说 Android 的呢，Google 抄袭了？哼，无-稽-之-谈！旁听的 Google 代表无辜地望着庭上的律师，无可奈何地苦笑了。</content></doc>
<doc>     <docid>148<docid>     <title>Android Design in Action —— 十大导航错误</title>     <link>http://www.phonekr.com/navigation-anti-patterns/</link>     <content>大家好, 这里是 2014 年第一期正式的 ADiA 教程. 在上一次的设计错误文章里, 我们已经简略的提过了一下导航设计上的错误, 这一次, 我们就这个话题展开, 指出一些大家在设计应用导航时经常被犯下的错误以便警示大家. 十大导航设计”反模式”, Android 开发者联系团队为你用心呈现~ 希望大家看 (乖) 得 (乖) 开 (中) 心 (枪)~&nbsp;1. 将导航项放在 Action Overflow 里我应该已经不止一次在各种 App 上看到有人把导航项放在 Action Overflow 中了. 经常被放进 Action Overflow 的导航有&#8221;主页 (脑子一定是被保险柜夹了)&#8221;, &#8220;商店 (有时其实可以理解)&#8221;, &#8220;我的信息 (微信, twitter 中枪)&#8221;, 甚至一些分类. 但是 Action Overflow 真的不是导航项该去的地方, 别忘了这地方是 Action Overflow, 是用来放操作的. 还有另一个很重要的原因是, 在很多有着 Menu 按钮的手机上, 应用中是不会显示 Action Overflow 的, 他们得被 Menu 键唤出, 可见性太低了, 而且关于 Menu 键还有一大堆问题 (这里就不展开了).还有一点很重要的就是, 在现在的 Android 上, 界面 UI 已经逐渐形成了一个规律 —— 导航靠左, 操作靠右. 如果你硬是要把导航放进 Action Overflow, 无形中也会违背这个规律.&nbsp;2. 错误的导航层级这个错误也是颇为常见的. 在 Android 中我们有很多常见的导航方式, 比如 Tabs, Spinners 和 Drawer. 这些导航方式当然是可以搭配着使用的, 但是当你搭配使用这些导航方式的时候, 请注意他们之间的层级关系. 当你规划你的导航层级的时候, 一般情况下是要构造一个树状结构, 在一个层级下有其他的子层级, 以此类推. 在 Android 中, 不同层级一般对应着不同的导航方式. 而错误的用法是, 比如上图中那样的, 用 Tab 作为最高导航层, Spinners 作为次层, 而 Drawer 作为最次层. 在 Android 上, 这三个导航方式对应的层级是遵循着比较严格的规定的.上图呢才是一般情况下的正确做法. 通常情况下, Drawer (如果有的话) 代表着最高的导航层级, 然后则是 Spinners, 再次是 Tabs. 如果你有超过三级的导航层级, 我们强烈建议你把最顶端的几个都放在 Drawer 中 (只有 Drawer 能容纳超过一个导航层级, 因为 Drawer 中的项目能够以合理的方式展开), 然后把剩下两个层级分配各 Spinners 和 Tabs. 当然, 实际上作为一个移动应用, 简化层级也是非常重要的, 我们强烈的不推荐你在应用中采用非常深的导航层级, 这只会让用户感到困惑.还有一点需要注意的是, 虽然在上面的示意图中 Spinner 和 Drawer 共存而且看起来 Spinner 在 Action Bar 上 (Drawer 实际上在 Action Bar 之下), 但是在实际应用中, 当用户划出 Drawer 的时候, 你应该让 Drawer 渐变成另一副模样 —— 只留下在应用中全局通用的操作, 比如搜索, 隐去其他的东西, 比如 Spinners, 换成 App 的名字. 这样的话就不会产生导航层级上的困惑了.另外, 关于 Drawer, 我们还有另一期专门介绍它的 ADiA: Android Design 趋势——Navigation Drawer.&nbsp;3. 不能滑动切换的 Tabs.在 Android 中, Tab 几乎是绑定了横向滑动的操作. 用户对 Tabs 的期望就是他们可以被滑动. 如果你在页面上采用了 paginate (ViewPager) 内容, 那么内容上的滑动操作就会和 Tabs 的全局滑动产生混淆. 当然, 如果页面中只有一小部分是可以滑动的内容 —— 比如一个非全屏的图片浏览, 那么这么做是完全没问题的, 只要不与 Tabs 本身的滑动手势冲突即可.正确的做法很简单, 只要把横向的 ViewPager 改为纵向就行了. 当然, 如果你有其他的解决方案也很好, 只要规避与导航的手势冲突就可以了.  &nbsp;4.  深层/顽固的 Tabs什么叫做&#8221;深层&#8221;的 Tabs? 要解释深层, 一般来讲我们用&#8221;浅层&#8221;来做对比. 在 Android 上, Tabs 应该是浅的. 你用 Tabs 来作为视图更变, 或者分类切换之用, 而不应该在 Tabs 之内再有层级和历史. 通常情况下, Tabs 只应该在导航界面出现. 在上图的例子中, 用户点击一个项目, 理应打开一个全新的页面, 而不是刷新 Tabs 下的内容. 这种持续出现的 Tab 就是我们所说的深层 Tabs, 或者说在 Tabs 之内有历史.之所以不这么做的原因是, 当你离开了这个 Tab, 比如说滑动到了另一个 Tab 上的时候, 你就把这个 Tab 置于了一种尴尬的境地 —— 现在这个 Tab (对于用户而言不可见) 应该显示什么呢? 当用户从另一个 Tab 回到这个 Tab (无论是点击还是滑动) 时, 他应该保持原来的样子 (显示内容) 呢, 还是显示列表? 在这种情况下, 用户会很容易的感到困惑. 为了避免这种尴尬, 我们建议 Tabs 最好做得浅一些.另外, 若你的 Tabs 坚持不变的话, 很大程度会影响到 Back 的作用. 当用户切换到不同的 Tab 并且在这个 Tab 中做了一些操作之后, Back 的作用就会变得不甚明确. 如果你非得在同一个视图内显示新内容, 那么我们建议你采用 Drawer, Drawer 才是为全局内容切换而生的.上图显示的才是正确的做法, 打开一个新的, 没有 Tabs, 有 Up 的界面, 而不是继续显示 Tabs.&nbsp;5. 溯回 (反向遍历) Tabs前面说的 Tabs 不应该深层, 同样也提到了 Tabs 不应该包含历史. 什么叫做不因该包含历史呢? 就是指, 你在 Tabs 上的操作不能被 Back 溯回. 同一个导航层级是不应该被溯回的.&nbsp;6. 溯回 (反向遍历) Drawer和 Tabs 一样, Drawer 中的导航项也不应该被溯回. 理由同上. 当用户在不同的导航项中切换时, 你应该重置任务状态. 在不同的导航项目中切换就像是切换到不同的应用中一样 (比如说, 在 Google+ 中, Photos Tab 根本就是另一个应用&#8230; ). 在用户按下 Back 的时候, 你应该退出应用, 或者回到应用的主界面 —— 这里的主界面是指那个自然状态下的初始界面, 一个你特别希望用户 (同时用户也特别期待能够容易地) 回到的地方.&nbsp;7. 深层的 Navigation Drawer前文说过, 一个移动应用不应该有复杂的结构. 如果你需要特别多的导航层级, 那么说明你真正应该做的其实是简化你的应用结构. Drawer 存在的意义是提供一个稳定的导航枢纽, 让用户不需要记住自己在什么地方, 他只要打开 Drawer 就能自然的明白一切. 但是, 如果在 Drawer 里面弹出了一个次级 Drawer 会把很多人逼疯.Drawer 虽然有能力承载多个导航层级, 但是正确的做法不是这样的.当你需要在 Drawer 中放入多个导航层级的时候, 不应该以新弹出一个 Drawer 的方式, 而是应该以展开/折叠的方式呈现这个子层级. 展开和折叠并不会造成整个控件的剧变, 同时能展示给用户少多一些的项目. 关于 Drawer 上的导航项以及触摸区域的设置, 在 Android Design 中另有提及.如果你的导航层级真的很深, 你可以单独做出一个次级导航页 展示所有的导航项目. 比如说, 在 Play Music 中, 曲库下的 Tabs (艺人, 专辑, 风格, 曲目) 其实完全可以做成 Drawer 中的次级导航项, 但是把它们分散到 Tabs 中能够更好的优化导航. (上图这样则是有点类似腹肌式的导航方式. 当然, 最好不要只是在上面写着文字, 可以往里面添加点图片啊, 内容预览什么的)&nbsp;8. 错误的 Drawer 转场我们在这里说转场的时候, 是意味着过渡动画和一个有着 Drawer 的界面和没有 Drawer 的界面之间的切换. 下面两个错误都和这个转场有关.当用户打开 Drawer, 按下其中一个项目之后, 他不应该被带去一个有着 Up 箭头的新界面. 所有在 Drawer 中呈现的导航项, 都应该在其界面中显示 Drawer 指示 (比如说, &#8220;汉堡&#8221;). 而且, 当用户通过 Drawer 从其中一个导航项进入另一个导航项,  他不应该看到标准的视图切换动画 (渐变 + 放大, 常见于进入新界面/新活动时), 而应该是一个细致而迅速的渐隐 + 渐显动画, 伴随着 Drawer 的关闭而完成. 同样的动画也应该应用在 Action Bar 的转变上. 还有一个对于开发者而言常见的讨论是, 应该用 Activity 还是 Fragment? 这个问题并没有标准答案, 也很难回答. 一般来说还是视情况而定 —— 它实现起来难度如何? 对于我的应用而言靠谱吗? 如果你有什么建议的话当然欢迎评论.上图展示的就是正确的做法, 在 Action Bar 上显示 Drawer Indicator.&nbsp;9. 不显示 Up 箭头上文说过, 所有出现在 Drawer 中的导航页面都应该显示 Drawer 指示, 这点反过来也是一样成立的 —— 没有显示在 Drawer 中的东西就不应该显示 Drawer 指示. 比如在上图, 当用户进入某个内容的时候, Drawer 指示依然显示. 实际上, 这个内容页已经不是导航页了, 也没有在 Drawer 中显示, 这里是应用更深的层级, 已经不归 Drawer 管了. 这里应该显示的是 Up.在显示 Up 同时, 你也可以允许用户以边缘滑动的方式唤出 Drawer. 你不需要总是显示 Drawer 指示来告诉用户可以唤出 Drawer, 因为在次级界面中唤出 Drawer 是某种意义上的&#8221;进阶用户操作&#8221;. 有人发现了, 那很好, 没人发现, 不要紧, 通过 Up 他们依然能够找回他们需要的导航. 另外, 你可以看看 Google Play Newsstand 是如何处理在没有 Drawer 指示的地方处理 Drawer 的 —— 渐变动画真的非常重要.&nbsp;10. 右侧导航前文说过, Android 上有个规律就是&#8221;导航靠左, 操作靠右&#8221;. 对于从左向右阅读的用户而言, 左侧导航项能够更好的强调导航层级. 另外, 由于 Spinners 只能出现在左侧, Tabs 也往往将最左侧的一个设为默认, 右侧的 Drawer 与这些操作距离过远. 而且, Drawer 指示放在左边, 操作的时候向左回缩, 如果在右侧使用 Drawer 的话就会遇到视觉隐喻冲突.正确的做法就是如上图所示. 当然, 如果在从右向左的语言环境下 (比如说, 希伯来文什么的, 不过我觉得我们国家的开发者应该不怎么会去做希伯来语适配吧&#8230;), 那当然是应该反转这些东西的位置.&nbsp;以上就是本期 ADiA 介绍的全部十个导航设计错误. 如果你有更多的常见/不常见错误, 或者对于上面提出的错误有更好的解决方案, 当然欢迎评论.最后, 一如既往的感谢 +Roman Nurik 和 +Nick Butcher 的 Android Design in Action 活动.</content></doc>
<doc>     <docid>149<docid>     <title>极客公园环聊日常 —— 由 IUNI 引发的杂谈</title>     <link>http://www.phonekr.com/iuni-and-more/</link>     <content>今天晚上龚叔 (+Carlos Gong) 在环聊里转发了一条 IUNI 的微博, 引发了一场挺有启发的讨论.&nbsp;出场人物:+Geoffrey.R HSU: 我 (全程打酱油)+王洪森: @王洪森 (主角 1)+Carlos Gong: @冬虫夏草卡洛斯 (主角 2)+John York: @detecti1914 (吐槽役 1)+Tony Qian: @tonyq0802 (吐槽役 2)&nbsp;Part 1: IUNI 与动画Carlos Gong &#8211; 6:48 PMhttp://weibo.com/p/1006063840873722 我得说，作为第一个版本，INUI 似乎没让人太失望。PPT 整体上比老罗/李楠/雷军都要舒服些。虽然小细节上值得吐槽的地方有。王 洪森 &#8211; 6:52 PM我觉得有点动画很多余浪费性能Geoffrey.R Hsu &#8211; 6:53 PM我觉得动画还不错看着挺愉悦的也不算繁复John York (detecti1914) &#8211; 6:53 PM卖点是设计么王 洪森 &#8211; 6:54 PM老罗的锤子我后来在我朋友手机上体验过我觉得有细节、有灵气，但很多地方都缺乏深思熟虑，想当了前面没想到后面John York (detecti1914) &#8211; 6:54 PM特性没看到什么的感觉王 洪森 &#8211; 6:54 PM我觉得 INUI 的操作不直观虽然操作方式很基本，挺适合手机，但给的提示太少用户不看演示，不可能天然知道。Geoffrey.R Hsu &#8211; 6:57 PM闹钟那里简直精仿 iOS 7…设计也不是很好…王 洪森 &#8211; 6:59 PM我觉得是一个性能理想化，设计苹果化的 UI 设计Geoffrey.R Hsu &#8211; 6:59 PM+1精辟的总结王 洪森 &#8211; 7:01 PM直观和直接是我现在觉得比较合理的设计，否则为了动画效果影响开发进度，就会跟老罗一个德行，只有跳票。Tony Qian &#8211; 7:03 PM动画这东西，看着好看，用着还想好用，那太难了。王 洪森 &#8211; 7:04 PMiOS 上的 path 算是能做到这点，但已经比较要求性能配合了。Geoffrey.R Hsu &#8211; 7:04 PMAndroid 现在是打算开始重视动画了王 洪森 &#8211; 7:05 PM其实我觉得交互的趣味，可能比动画更有点意义，比如 clearGeoffrey.R Hsu &#8211; 7:05 PM4.4 新加入了那个 scenes 就是个信号好的交互也需要配合上合理的动画才能发挥全力啊&nbsp;Part 2: 风格问题Tony Qian &#8211; 7:05 PM这个系统是 iOS 7 么王 洪森 &#8211; 7:05 PM同意哈哈，拖泥你真黑确实，开创性少了点，还不如 Windows PhoneTony Qian &#8211; 7:09 PM跟在别人屁股后面肯定是死啊这也不拍明年苹果 iOS 8 风格大变丫就傻逼了Geoffrey.R Hsu &#8211; 7:09 PM哈哈哈Tony Qian &#8211; 7:09 PM老罗当年拍胸脯说跟着苹果 3.5 一生挚爱结果现在尴尬了Geoffrey.R Hsu &#8211; 7:09 PMiOS 8 视觉风格应该不会改了Tony Qian &#8211; 7:10 PMUbuntu Phone 也好，Jolla 也好都有自己独立的风格王 洪森 &#8211; 7:10 PMiOS 7 真的太大胆了，目前从放出的 7.1 测试版来看，苹果还在努力优化及合理化它Tony Qian &#8211; 7:10 PM都在力求和 Andorid iOS 保持区别的时候，国内还跟在 (iOS) 屁股后面王 洪森 &#8211; 7:11 PM同意拖泥Geoffrey.R Hsu &#8211; 7:11 PM是啊托尼 +2王 洪森 &#8211; 7:12 PM国内的总是想把安卓做成 iOSGeoffrey.R Hsu &#8211; 7:12 PM没错啊…王 洪森 &#8211; 7:12 PM真心不知道为了个什么Geoffrey.R Hsu &#8211; 7:12 PM国外的都在创新, 国内的都在学 iOS价值观问题… 吧…Tony Qian &#8211; 7:14 PM我一直觉得 Google 在设计上多用点心，Android 还能上好几个档次第三方 OME 机会很多的Geoffrey.R Hsu &#8211; 7:14 PM是的问题就是 Google 不打算让 Android 的设计出风头啊…努力在减少系统的存在感呢&nbsp;Part 3: 关于 MIUI 和小米 (还有元宵)王 洪森 &#8211; 7:15 PM不过背后使用安卓这层，我觉得小米无论从品牌形象，产品、甚至幻灯片，丫人家起码是风格一致的，虽然品味不敢恭维，但起码丫没有准备要像 iOS （视觉上），而且至少一致。Tony Qian &#8211; 7:16 PM没错~王 洪森 &#8211; 7:16 PM就怕东一榔头西一榔头，或者丑到要死还不知道改的。Geoffrey.R Hsu &#8211; 7:16 PM+3MIUI 其实还是有仿 iOS…王 洪森 &#8211; 7:17 PM6目前没追7Geoffrey.R Hsu &#8211; 7:17 PM嗯那算是历史遗留问题王 洪森 &#8211; 7:18 PM我觉得它更多的是在系统操作的抉择上趋向 iOS。比如安装和卸载等。Carlos Gong &#8211; 7:19 PMMIUI V5 的时候明显感觉到整个系统从开始规划的时候就进行了统一的架构设计和风格规范。Geoffrey.R Hsu &#8211; 7:19 PM毕竟是 Rigo 操刀龚星Carlos Gong &#8211; 7:19 PM我觉得这是 V5 比 V3 V4 最大的进步。也是 MIUI 甩掉国内其它 ROM 最重要的一点。Geoffrey.R Hsu &#8211; 7:20 PMRigo 在架构规划方面我觉得目前国内无出其右其实就连乐 OS 都很好Tony Qian &#8211; 7:21 PM原来那个元宵是洪森啊我以为是 Carlos 的新头像呢王 洪森 &#8211; 7:21 PM其实但从产品层面出发，我觉得是不完整和全面的。安卓原生确实更符合 Google 的调性。John York (detecti1914) &#8211; 7:21 PMCarlos Gong 以前用过类似的吧Geoffrey.R Hsu &#8211; 7:21 PM哈哈哈哈哈哈哈哈王 洪森 &#8211; 7:21 PM魅族在产品层面的设计其实也不错Geoffrey.R Hsu &#8211; 7:21 PM那个元宵哈哈哈哈哈哈哈Carlos Gong &#8211; 7:22 PM现在也在用啊，我的 QQ 头像～王 洪森 &#8211; 7:22 PM但问题是他们的手机界面那么好看，而幻灯片那么难看就是有问题的Geoffrey.R Hsu &#8211; 7:22 PMFlyme 2.0 其实挺好的…&nbsp;Part 4: 颜色问题 (以及基佬)王 洪森 &#8211; 7:23 PM大家都能知道小米的品牌色是那个比较偏红的橘色却很难说出魅族的品牌色Tony Qian &#8211; 7:23 PM等诺基亚来创新下，三星这种销量第一的怂包没戏，HTC 快死了，LG 就是个跟班，Sony 被之前的成功拖累。看好诺基亚Carlos Gong &#8211; 7:23 PMIUNI 幻灯片还好吧，至少不算丑。细节就不说了，恶心的地方不少。。。。Geoffrey.R Hsu &#8211; 7:23 PM蓝色啊Tony Qian &#8211; 7:23 PM小米那个品牌色是牺牲了美感堆砌出来的到处都是橙色Carlos Gong &#8211; 7:23 PM至于风格。。。。。 刚刚开始，没法要求他们用北极蓝做出一套自己的幻灯片然后全厂到处用吧。。。。Tony Qian &#8211; 7:23 PM橙色，不管好不好看王 洪森 &#8211; 7:24 PM而魅族的发布会弄到那么大阵仗却用了个苹果官方模版了事Carlos Gong &#8211; 7:24 PM小米开始各个场合用橙色也是在小米一代出了以后的时候。。。。魅族这个。。。。。 李楠的个人趣味影响太大了。。。。。苹果的官方模板和高桥流文字排版是李楠个人的爱好。Geoffrey.R Hsu &#8211; 7:25 PM小米橙太 2.3 了…魅族蓝比较 4.0王 洪森 &#8211; 7:26 PM魅族的蓝并没有充分被贯彻和突出Carlos Gong &#8211; 7:26 PM魅族蓝没有充分贯彻 +1Geoffrey.R Hsu &#8211; 7:26 PM至少幻灯片上没有+2王 洪森 &#8211; 7:26 PM我们明显对知乎的蓝更有印象Geoffrey.R Hsu &#8211; 7:26 PM哈哈哈哈哈哈哈哈Carlos Gong &#8211; 7:26 PM是的。Tony Qian &#8211; 7:26 PMflyme 3.0 感觉整体变暗了和之前的蓝有点不同Geoffrey.R Hsu &#8211; 7:27 PM知乎换图标之后蓝色也变暗了Tony Qian &#8211; 7:27 PM原来很基佬现在是老gay 的感觉王 洪森 &#8211; 7:27 PM靠Geoffrey.R Hsu &#8211; 7:27 PMFlyme 3.0 不如 2.0 好看…王 洪森 &#8211; 7:27 PMxingyuan也暗了Geoffrey.R Hsu &#8211; 7:27 PM基佬和老 gay 的区别是啥…王 洪森 &#8211; 7:27 PM也变老gay了Carlos Gong &#8211; 7:28 PM拖泥的一直没暗～王 洪森 &#8211; 7:28 PM嗯，年轻的 gay&nbsp;Part 5: Flyme 与魅族 (以及小伙伴们的腹黑日常)Carlos Gong &#8211; 7:28 PM我刚从西单大悦城回来。那边的 MX2 也已经默认 flyme 3 了～Geoffrey.R Hsu &#8211; 7:28 PM我漏掉了什么没看吗…Carlos Gong &#8211; 7:29 PMMX2 刚开始的时候是软件硬件眼前都一亮的。。。。 现在握着还是温润舒适大小正好，软件看着已经味道有点不对了。王 洪森 &#8211; 7:29 PM魅族自己出的应用，除了底部的 smartbar 几乎没办法看出是他们家的东西Carlos Gong &#8211; 7:29 PM不过话说 MX3 的背其实很舒服。。。王 洪森 &#8211; 7:30 PM而小米的一看就能知道Tony Qian &#8211; 7:30 PMMX 3 握感比 MX 2 下降了很多Carlos Gong &#8211; 7:30 PM额。。。。 flyme 2.0 时代有一个突出特征是右上角的 scrollable tabs，3.0 砍了。王 洪森 &#8211; 7:31 PMMX 3 背部闪光灯附近手感很次，剌手Carlos Gong &#8211; 7:31 PM措辞改一下，2.0 时代有一个很突出的特征是浅蓝色顶部 action bar 带右上角 scrollable tabs，这个设计现在貌似是砍掉了。王 洪森 &#8211; 7:31 PM小米的装在什么 rom 上都能看出是小米而魅族首先不能随便装在别的上面Tony Qian &#8211; 7:32 PMMX 2 的闪光灯不是 LED 的，会发热，如果用来当做手电筒，会把后盖融化Carlos Gong &#8211; 7:32 PM小米的突出风格，其实也是 V5 之后 RIGO 接管才做出来的。不过现在风格已经明显到把多看装在 iOS 上都知道是小米出品了。。。。Tony Qian &#8211; 7:32 PM现在去给 Mac mini 上 SSD，求祝福Carlos Gong &#8211; 7:32 PM#祝挂Tony Qian &#8211; 7:33 PMMac 怎么备份啊王 洪森 &#8211; 7:33 PM祝你永远幸福仍掉就可以了，不用备份&nbsp;Part 6: 魅族与小米的设计与产品Carlos Gong &#8211; 7:33 PM大到 T 字结构，小到分享按钮的样式，多看 for iOS 都是一股浓烈的小米味道。王 洪森 &#8211; 7:35 PM魅族设计早期是 eico 做的Carlos Gong &#8211; 7:35 PM后来魅族把 eico 当时的项目主管挖过去了。黄章回归演讲的时候坐在左边那个。王 洪森 &#8211; 7:36 PM唯一记得的是音乐是个大唱片，很老的拟真设计，结果还很少人用到。还有一个“设计”就是底部的大M，只能开魅族首页，史上最屎设计。Geoffrey.R Hsu &#8211; 7:39 PMeico 我很不喜欢王 洪森 &#8211; 7:40 PM不过其壁纸那几个气球，配合解锁时需要的上滑动作是有引导的。而且让人感觉轻，这部分觉得要比小米那个各种炒作的山水城市的高几个段位。Carlos Gong &#8211; 7:40 PM小米的壁纸大赛就是个笑话。。。。魅族一直很会玩界面上的这一套。flyme 1.0 开始就有一个特别舒服的充电界面。王 洪森 &#8211; 7:42 PMeico 设计的 weico pro 没比官方客户端好多少，当我在犹豫装weico 还是官方客户端的时候，我突然豁然开朗，因为我已经没在玩微博了。让它们都去死去吧。Carlos Gong &#8211; 7:42 PM有的时候会觉得小米已经把这种诡异的不正常气质固化下来想改都很难改了。尽管这样，感觉 MX3 的 1999 现货还是没法和小米直接竞争。原因说不好，但就是这样。王 洪森 &#8211; 7:44 PM软硬结合这事其实魅族做得比小米好。Carlos Gong &#8211; 7:44 PM是的。王 洪森 &#8211; 7:44 PM但手机只是一部分，小米有他们可以消费的内容而魅族只能空享受下没有飞线的手机本人小米已经有亚文化相关的各种周边，包括虚拟的，包括物理的。Carlos Gong &#8211; 7:46 PM「我觉得 MIUI 的强大之处大致是三个地方：1、系统层面上，有成体系的结构隐喻、美学风格和基本界面架构（锤子和 Vibe 这种属于没体系的）。2、launcher 和自带应用的特性和体验。比如彻底无打扰的录音机，和电话短信联系人这些基础功能上的特性体验。3、在界面和需求上对生态圈的号召力和控制力。比如有能力让国内应用优先适配 MIUI 的界面风格，比如自己有全套云服务、内容服务（收购的多看）甚至是未来的智能家居服务（比如小米电视和小米路由器）。」这是之前我的总结，但感觉这个跟手机竞争关系其实不大。。。。王 洪森 &#8211; 7:46 PM比如主题，多少设计师在为他做设计呀Carlos Gong &#8211; 7:47 PM毕竟生态在纯手机方面又能有多少影响力呢～尤其是在国内。王 洪森 &#8211; 7:47 PM比如图文的内容通过多看，用米币购买同时路由器、盒子、电视等等手机用途用法不断涌现还都在小米帝国里魅族就只有无飞线，窄边框和M首页和smart bar，不知道在闹哪样李楠当年致力于让短信和微博私信打通，好号称包含多少思考我就觉得很 2相同的精力哪怕做个半死不活的米聊，都不会显得太尴尬魅族本身毫无互联网产品可以称道&nbsp;结尾卖萌Geoffrey.R Hsu &#8211; 7:53 PM洪森大哥 +13龚叔 +5王 洪森 &#8211; 7:53 PM请叫我元宵Carlos Gong &#8211; 7:54 PM洪森 +14Geoffrey.R Hsu &#8211; 8:32 PM元宵大哥 +15Carlos Gong</content></doc>
<doc>     <docid>150<docid>     <title>SALONPAS 撒隆巴斯 镇痛贴 140枚*2件 153.8元包邮包税，2件起购</title>     <link>http://www.smzdm.com/p/6544825/</link>     <content>好评镇痛贴，近期好价~宝贝格子目前售价76.9元，2件起购，包邮包税，近期好价格，需要的可以入手了。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>151<docid>     <title>双11预售：《CLAMP 魔卡少女樱》库洛牌完全复刻版套装 官方版 337元包邮（40元定金，11.11付尾款需用券）</title>     <link>http://www.smzdm.com/p/6544775/</link>     <content>隐藏着黑暗力量的钥匙啊，在我面前显示你真正的力量，与你定下契约的小樱命令你，封印解除~天猫国际目前开启双11预售活动，支付定金40元，可在11月11日当天享受定金膨胀优惠，再叠加满300减20优惠券，实付337元包邮，朋友们，是时候证明自己是一枚合格的樱厨了~本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>152<docid>     <title>DECATHLON 迪卡侬 DOMYOS WAW 女士运动上衣  29.9元</title>     <link>http://www.smzdm.com/p/6544604/</link>     <content>天鹅绒，运动自如~天猫迪卡侬旗舰店目前上衣售价29.9元，原价129元，尺码十分齐全，实属入手好价。穿着舒适，有需要的可以下手了~本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>153<docid>     <title>凑单品：Cadet 宠物零食 整只鸡胸肉170g  8.9元</title>     <link>http://www.smzdm.com/p/6544818/</link>     <content>100%纯肉质，适口性佳~狗民网商城目前售价8.9元，来到之前推荐的好价格，需要的可以凑单入手。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>154<docid>     <title>双11预售：Ronshen 容声 BCD-639WD11HYA 639升 对开门冰箱  2849元包邮（预付100元定金）</title>     <link>http://www.smzdm.com/p/6544729/</link>     <content>支持App远程操控，639升大容量对开门冰箱历史新低。天猫容声官方旗舰店目前开启双11预售，预售价3299元，现支付100元定金可抵扣150元并赠送400元专用优惠券，在11月11日1点支付尾款后，可做到实付2849元包邮到手的好价，刷新推荐历史价格新低，已是目前为止全网电商渠道最优报价，有需要的朋友可以关注一下。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>155<docid>     <title>双11预售：illy 意利 意式浓缩深度烘焙咖啡粉 250g*2罐 94元（定金10元，11.11付尾款）</title>     <link>http://www.smzdm.com/p/6544724/</link>     <content>深度烘焙，香味浓郁~天猫国际海外直营当前售价114元，可用定金15元，抵30，11.11付尾款。虽然有税，但可领一张免税券，还可在天猫国际首页进口商品5元无门槛优惠券，下单实付94元包邮，折47元/瓶，入手好价。喜欢的可以入手。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>156<docid>     <title>双11预售：Danisa 丹麦皇冠 风味曲奇饼干 908g 56元含税包邮（需10元定金，11.11付尾款）</title>     <link>http://www.smzdm.com/p/6544431/</link>     <content>天猫国际attent海外旗舰店目前售价61元，可支付10元定金抵15元，11月11日支付46元尾款，实际到手56元含税包邮，近期低价，喜欢这个口味的值友可以关注。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>157<docid>     <title>拼单好价，移动端：Pelikan 百利金 P480系列 钢笔 F尖 亮绿色*4件 287.16元包邮，合71.79元/件</title>     <link>http://www.smzdm.com/p/6543856/</link>     <content>高口碑入门钢笔，多色可选，拼单好价。京东全球购移动端目前售价99元，购买4件参加满299减50活动，再叠加全球购满299-100券，实付287.16元包邮到手，每件折合低至71.79元。新低价。目前蓝色，红色和绿色均是好价。可根据颜色喜好拼单购入。喜欢的朋友不要错过。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>158<docid>     <title>WMF 厨房套装 压力锅快易锅6.5L+中华炒锅32cm+煎锅平底锅24cm 1599元包邮</title>     <link>http://www.smzdm.com/p/6544766/</link>     <content>套锅历史低价，蒸焖炖汤均可~亚马逊中国目前售价1599元包邮，低于历史推荐好价。淘宝同款套装（不含炒锅铲）售价5000元以上。这次的价格优势较大，需要的值友可以关注一下。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>159<docid>     <title>双11预售：Puritan's Pride 普丽普莱 双倍氨糖软骨素 240粒*2瓶 169元+22.49元税费（需30元定金，需用券）</title>     <link>http://www.smzdm.com/p/6544370/</link>     <content>双倍浓度，缓解关节疼痛~聚划算普丽普莱海外旗舰店目前售价219元，可付30元定金抵60元，11月11日支付尾款159元，再叠加20元优惠券，实付169元包邮，另需税费22.49元。折后含税每瓶95元左右，有需要的值友可以关注一下。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>160<docid>     <title>预售：WHALEY 微鲸 WTV55K1J 55英寸 4K平板电视 2499元包邮</title>     <link>http://www.smzdm.com/p/6543826/</link>     <content>10bit面板，赠品丰富，55英寸4K预约好价。苏宁易购目前售价2699元，11月1日0点至1点下单立减200，实付2499元到手。持平历史最低价。前500名还可获得价格199元手环及一年微鲸会员。相比于天猫预售，不必支付定金就可以做到同价。55英寸4K不到2500就能入手还是比较合适的。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>161<docid>     <title>MEIZU 魅族 MX6 全网通手机 1609元包邮(1639-30)</title>     <link>http://www.smzdm.com/p/6544490/</link>     <content>4GB+32GB，双色温闪光灯，近期好价。新蛋中国目前售价1639元，可以使用蛋券“sm60”做到1609元到手的价格，有兴趣的值友可以关注一下。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>162<docid>     <title>LANCOME 兰蔻 水份缘舒缓系列套装 2件套 599元包邮包税</title>     <link>http://www.smzdm.com/p/6544737/</link>     <content>日霜+晚霜组合，清爽不油腻，入手好价~网易考拉海购目前售价599元，下单包邮包税。入手好价，有需要的值友可考虑下手~本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>163<docid>     <title>SUPOR 苏泊尔 YS24ED 好帮手不锈钢压力锅 24cm+美厨三层蒸锅 26CM 254元包邮（双重优惠后）</title>     <link>http://www.smzdm.com/p/6544734/</link>     <content>双重安全阀门，导热均匀~1号店目前售价299元，参加满199减80活动，还可叠加使用满299减50优惠券，凑单售价85元的蒸锅，双重优惠后实付254元，折合近期好价格。更多商品可以到活动页面挑选，另外可以用券的页面在此。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>164<docid>     <title>凑单品：NUK Vario Cup多色带盖婴儿防漏 学饮杯 12个月以上 39元</title>     <link>http://www.smzdm.com/p/6544606/</link>     <content>材质安全，宽口径，有防漏垫片，税前好价。京东全球购目前报价39元，持平之前推荐价格，算上税费也是好价，适合凑单带回，有需要的朋友可以入手。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>165<docid>     <title>双11预售：Onitsuka Tiger 鬼塚虎 OKT037 中性款休闲T恤 135元（15元定金，11.11付尾款）</title>     <link>http://www.smzdm.com/p/6544371/</link>     <content>嘘~萌不萌~天猫Onitsuka Tiger官方旗舰店双11预售价为145元，定金15元，双11可低付25元，最终实付135元。还有类似款也是好价。                                                                                                                                Onitsuka Tiger 鬼塚虎 OKT044 休闲T恤                       价格￥135天猫精选					                                                                                    	本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>166<docid>     <title>tutuanna 300D 纯色加厚踩脚裤  79元</title>     <link>http://www.smzdm.com/p/6544615/</link>     <content>入手好价，有需可入~ 天猫精选tutuanna旗舰店目前售价79元，不包邮，可凑单至129元包邮带回。需要注意的是只有一个尺码可选，适用于身高150~165cm的妹子，此外店内还有满159元减10元、满259元减20元等优惠券可领，有需要的值友可考虑下手。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>167<docid>     <title>2016双11预售：Tong Tai 童泰 秋冬季 婴儿睡袋加厚款 79元包邮（10元定金，11.11付尾款）</title>     <link>http://www.smzdm.com/p/6544673/</link>     <content>分腿睡袋，安全拉链，秋冬加厚款~天猫童泰旗舰店目前售价99元，10定金可抵30，下单实付79元，平日售价在150左右，还有一款黄色也是同价。有需要的家长可以关注。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>168<docid>     <title>双11预售：皇上皇 金福 五花腊肉 500g 51元包邮（用券）（定金10元，11.11付尾款）</title>     <link>http://www.smzdm.com/p/6544593/</link>     <content>肥瘦均匀，微醺酒香，地道广式风味~天猫皇上皇旗舰店目前售价59元，可用10元抵15元，11.11付尾款，同时可在店铺首页领取3元无门槛优惠券，下单实付51元包邮，入手好价。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>169<docid>     <title>SIEMENS 西门子 SK23E800TI 嵌入式洗碗机 2580元包邮</title>     <link>http://www.smzdm.com/p/6544226/</link>     <content>6套清洗容量，冷凝烘干，近期好价。国美在线目前特价至2580元包邮，再到近期好价，有需求的不要错过。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>170<docid>     <title>GUCCI 古驰 133483 3G200 双G提花图案羊毛围巾 ￥1299+￥154.58含税直邮（约￥1454）</title>     <link>http://www.smzdm.com/p/6544660/</link>     <content>降低196元。多色可选，经典双G，柔软舒适~京东全球购目前售价1299元，多色可选，加上154.58元的税费，到手约1454元，比之前推荐的降低196元。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>171<docid>     <title>WMF 福腾宝 Perfect 压力锅 6.5 L 1059元包邮</title>     <link>http://www.smzdm.com/p/6544708/</link>     <content>不锈钢中加入18%铬+10%镍，更防锈耐腐蚀~亚马逊中国目前售价1059元，持平之前推荐的秒杀价格，需要的可以看下。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>172<docid>     <title>Ventry 温特瑞 泰国天然乳胶欧罗枕/面包枕 429元包邮（需用券）</title>     <link>http://www.smzdm.com/p/6540563/</link>     <content>专为爱睡高枕的你设计~西集网售价459元，使用本站满299立减30元的优惠券，实付429元包邮到手，使用积分还能做到更便宜。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>173<docid>     <title>27日6点开始，移动端：POVOS 奔腾 S1556 电水壶 1.5L 59元</title>     <link>http://www.smzdm.com/p/6544192/</link>     <content>食品级304不锈钢、加厚双层材质，再到好价。京东移动端将于26日6点特价至59元，近期好价。近期有需求的朋友可以留意。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>174<docid>     <title>双11预售：Crocs 卡骆驰 中性 11001 沙滩洞洞鞋 184元（30元定金，11.11付尾款）</title>     <link>http://www.smzdm.com/p/6544304/</link>     <content>经典款~天猫crocs户外旗舰店双11预售价199元，现在付定金30元，双11时可抵用45元，最终实付184元包邮，喜欢的可以考虑~本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>175<docid>     <title>Finish 亮碟 洗碗机机体清洁剂 250ml*10件 199元包邮（299-200）</title>     <link>http://www.smzdm.com/p/6544671/</link>     <content>清除顽固污渍，保护被碗碟和洗碗机不受腐蚀~京东目前售价39.9元，参加满399减200活动，下单10件，满减后实付199元，折合19.9元/件，近期好价格，适合拼单入手。本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>176<docid>     <title>Jabra 捷波朗 Eclipse 智能通话蓝牙耳机 557元包邮</title>     <link>http://www.smzdm.com/p/6544339/</link>     <content>价格实惠、功能强大。京东全球购自营售价498元&nbsp;Jabra 捷波朗 ECLIPSE 壹石 （需缴纳11.9%跨境电商综合税）共557元本文来自什么值得买网站（www.smzdm.com）。</content></doc>
<doc>     <docid>177<docid>     <title>如何读懂并写出装逼的函数式代码</title>     <link>http://coolshell.cn/articles/17524.html</link>     <content>今天在微博上看到了 有人分享了下面的这段函数式代码，我把代码贴到下面，不过我对原来的代码略有改动，对于函数式的版本，咋一看，的确令人非常费解，仔细看一下，你可能就晕掉了，似乎完全就是天书，看上去非常装逼，哈哈。不过，我感觉解析那段函数式的代码可能会一个比较有趣过程，而且，我以前写过一篇《函数式编程》的入门式的文章，正好可以用这个例子，再升华一下原来的那篇文章，顺便可以向大家更好的介绍很多基础知识，所以写下这篇文章。先看代码这个代码平淡无奇，就是从一个数组中找到一个数，O(n)的算法，找不到就返回 null。下面是正常的 old-school 的方式。不用多说。//正常的版本function find (x, y) {  for ( let i = 0; i &lt; x.length; i++ ) {    if ( x[i] == y ) return i;  }  return null;}let arr = [0,1,2,3,4,5]console.log(find(arr, 2))console.log(find(arr, 8))结果到了函数式成了下面这个样子（好像上面的那些代码在下面若影若现，不过又有点不太一样，为了消掉if语言，让其看上去更像一个表达式，动用了 ? 号表达式）：//函数式的版本const find = ( f =&gt; f(f) ) ( f =&gt;  (next =&gt; (x, y, i = 0) =&gt;    ( i &gt;= x.length) ?  null :      ( x[i] == y ) ? i :        next(x, y, i+1))((...args) =&gt;          (f(f))(...args)))let arr = [0,1,2,3,4,5]console.log(find(arr, 2))console.log(find(arr, 8))为了讲清这个代码，需要先补充一些知识。Javascript的箭头函数首先先简单说明一下，ECMAScript2015 引入的箭头表达式。箭头函数其实都是匿名函数，其基本语法如下：(param1, param2, …, paramN) =&gt; { statements } (param1, param2, …, paramN) =&gt; expression     // 等于 :  =&gt; { return expression; } // 只有一个参数时,括号才可以不加:(singleParam) =&gt; { statements }singleParam =&gt; { statements }//如果没有参数,就一定要加括号:() =&gt; { statements }下面是一些示例：var simple = a =&gt; a &gt; 15 ? 15 : a; simple(16); // 15simple(10); // 10let max = (a, b) =&gt; a &gt; b ? a : b;// Easy array filtering, mapping, ...var arr = [5, 6, 13, 0, 1, 18, 23];var sum = arr.reduce((a, b) =&gt; a + b);  // 66var even = arr.filter(v =&gt; v % 2 == 0); // [6, 0, 18]var double = arr.map(v =&gt; v * 2);       // [10, 12, 26, 0, 2, 36, 46]看上去不复杂吧。不过，上面前两个 simple 和 max 的例子都把这箭头函数赋值给了一个变量，于是它就有了一个名字。有时候，某些函数在声明的时候就是调用的时候，尤其是函数式编程中，一个函数还对外返回函数的时候。比如下在这个例子：function MakePowerFn(power) {  return function PowerFn(base) {    return Math.pow(base, power);  } }power3 = MakePowerFn(3); //制造一个X的3次方的函数power2 = MakePowerFn(2); //制造一个X的2次方的函数console.log(power3(10)); //10的3次方 = 1000console.log(power2(10)); //10的2次方 = 100其实，在 MakePowerFn 函数里的那个 PowerFn 根本不需要命名，完全可以写成：function MakePowerFn(power) {  return function(base) {    return Math.pow(base, power);  } }如果用箭头函数，可以写成：MakePowerFn = power  =&gt; {  return base =&gt; {    return Math.pow(base, power);  } }我们还可以写得更简洁（如果用表达式的话，就不需要 { 和 }， 以及 return 语句 ）：MakePowerFn = power =&gt; base =&gt; Math.pow(base, power)我还是加上括号，和换行可能会更清楚一些：MakePowerFn = (power) =&gt; (  (base) =&gt; (Math.pow(base, power)))好了，有了上面的知识，我们就可以进入一个更高级的话题——匿名函数的递归。匿名函数的递归函数式编程立志于用函数表达式消除有状态的函数，以及for/while循环，所以，在函数式编程的世界里是不应该用for/while循环的，而要改用递归（递归的性能很差，所以，一般是用尾递归来做优化，也就是把函数的计算的状态当成参数一层一层的往下传递，这样语言的编译器或解释器就不需要用函数栈来帮你保存函数的内部变量的状态了）。好了，那么，匿名函数的递归该怎么做？一般来说，递归的代码就是函数自己调用自己，比如我们求阶乘的代码：function fact(n){  return n==0 ? 1 :  n * fact(n-1);};result = fact(5);在匿名函数下，这个递归该怎么写呢？对于匿名函数来说，我们可以把匿名函数当成一个参数传给另外一个函数，因为函数的参数有名字，所以就可以调用自己了。 如下所示：function combinator(func) {  func(func);}这个是不是有点作弊的嫌疑？Anyway，我们再往下，把上面这个函数整成箭头函数式的匿名函数的样子。（func) =&gt; (func(func)) 现在你似乎就不像作弊了吧。把上面那个求阶乘的函数套进来是这个样子：首先，先重构一下fact，把fact中自己调用自己的名字去掉：function fact(func, n) {  return n==0 ? 1 :  n * func(func, n-1);}fact(fact, 5); //输出120然后，我们再把上面这个版本变成箭头函数的匿名函数版：var fact = (func, n) =&gt; ( n==0 ? 1 :  n * func(func, n-1) )fact(fact, 5)这里，我们依然还要用一个fact来保存这个匿名函数，我们继续，我们要让匿名函数声明的时候，就自己调用自己。也就是说，我们要把 (func, n) =&gt; ( n==0 ? 1 :  n * func(func, n-1) )这个函数当成调用参数，传给下面这个函数：(func, x) =&gt; func(func, x) 最终我们得到下面的代码： ( (func, x) =&gt; func(func, x) ) (  //函数体  (func, n) =&gt; ( n==0 ? 1 :  n * func(func, n-1) ), //第一个调用参数  5 //第二调用参数); 好像有点绕，anyway, 你看懂了吗？没事，我们继续。动用高阶函数的递归但是上面这个递归的匿名函数在自己调用自己，所以，代码中有hard code的实参。我们想实参去掉，如何去掉呢？我们可以参考前面说过的那个 MakePowerFn 的例子，不过这回是递归版的高阶函数了。HighOrderFact = function(func){  return function(n){    return n==0 ? 1 : n * func(func)(n-1);  };};我们可以看，上面的代码简单说来就是，需要一个函数做参数，然后返回这个函数的递归版本。那么，我们怎么调用呢？fact = HighOrderFact(HighOrderFact);fact(5); 连起来写就是：HighOrderFact ( HighOrderFact ) ( 5 )但是，这样让用户来调用很不爽，所以，以我们一个函数把  HighOrderFact ( HighOrderFact )  给代理一下：fact = function ( hifunc ) {  return hifunc ( hifunc );} (  //调用参数是一个函数  function (func) {     return function(n){      return n==0 ? 1 : n * func(func)(n-1);    };  });fact(5); //于是我们就可以直接使用了用箭头函数重构一下，是不是简洁了一些？fact = (highfunc =&gt; highfunc ( highfunc ) ) (  func =&gt; n =&gt;  n==0 ? 1 : n * func(func)(n-1));上面就是我们最终版的阶乘的函数式代码。回顾之前的程序我们再来看那个查找数组的正常程序：//正常的版本function find (x, y) {  for ( let i = 0; i &lt; x.length; i++ ) {    if ( x[i] == y ) return i;  }  return null;}先把for干掉，搞成递归版本：function find (x, y, i=0) {  if ( i &gt;= x.length ) return null;  if ( x[i] == y ) return i;  return find(x, y, i+1);}然后，写出带实参的匿名函数的版本（注：其中的if代码被重构成了 ？号表达式）：( (func, x, y, i) =&gt; func(func, x, y, i) ) (  //函数体  (func, x, y, i=0) =&gt; (      i &gt;= x.length ?  null :         x[i] == y  ?  i : func (func, x, y, i+1)  ), //第一个调用参数  arr, //第二调用参数  2 //第三调用参数)最后，引入高阶函数，去除实参：const find = ( highfunc =&gt; highfunc( highfunc ) ) (   func =&gt; (x, y, i = 0) =&gt; (     i &gt;= x.length ?  null :           x[i] == y  ?  i : func (func) (x, y, i+1)   ));注：函数式编程装逼时一定要用const字符，这表示我写的函数里的状态是 immutable 的，天生骄傲！再注：我写的这个比原来版的那个简单了很多，原来版本的那个又在函数中套了一套 next， 而且还动用了不定参数，当然，如果你想装逼装到天上的，理论上来说，你可以套N层，呵呵。现在，你可以体会到，如此逼装的是怎么来的了吧？。其它你还别说这就是装逼，简单来说，我们可以使用数学的方式来完成对复杂问题的描述，那怕是递归。其实，这并不是新鲜的东西，这是Alonzo Church 和 Haskell Curry 上世纪30年代提出来的东西，这个就是 Y Combinator 的玩法，关于这个东西，你可以看看下面两篇文章：《The Y Combinator (Slight Return)》，《Wikipedia: Fixed-point combinator》（全文完）关注CoolShell微信公众账号可以在手机端搜索文章（转载本站文章请注明作者和出处 酷 壳 &#8211; CoolShell.cn ，请勿用于任何商业用途）——=== 访问 酷壳404页面 寻找遗失儿童。 ===——本广告收入已由广告主捐给Wikipedia相关文章2013年12月27日 函数式编程2014年03月20日 Python修饰器的函数式编程2012年09月20日 C/C++语言中闭包的探究及比较2011年10月31日 API设计：用流畅接口构造内部DSL2010年01月21日 最为奇怪的程序语言的特性2013年12月03日 Lua简明教程2011年08月15日 对象的消息模型2012年02月27日 再谈javascript面向对象编程 </content></doc>
<doc>     <docid>178<docid>     <title>关于高可用的系统</title>     <link>http://coolshell.cn/articles/17459.html</link>     <content>在《这多年来我一直在钻研的技术》这篇文章中，我讲述了一下，我这么多年来一直在关注的技术领域，其中我多次提到了工业级的软件，我还以为有很多人会问我怎么定义工业级？以及一个高可用性的软件系统应该要怎么干出来？这样我也可以顺理成章的写下这篇文章，但是没有人问，那么，我只好厚颜无耻的自己写下这篇文章了。哈哈。另外，我在一些讨论高可用系统的地方看到大家只讨论各个公司的技术方案，其实，高可用的系统并不简单的是技术方案，一个高可用的系统其实还包括很多别的东西，所以，我觉得大家对高可用的系统了解的还不全面，为了让大家的认识更全面，所以，我写下这篇文章。理解高可用系统首先，我们需要理解什么是高可用，英文叫High Availability（Wikipedia词条），基本上来说，就是要让我们的计算环境（包括软硬件）做到full-time的可用性。在设计上一般来说，需要做好如下的设计：对软硬件的冗余，以消除单点故障。任何系统都会有一个或多个冗余系统做standby对故障的检测和恢复。检测故障以及用备份的结点接管故障点。这也就是failover需要很可靠的交汇点（CrossOver）。这是一些不容易冗余的结点，比如域名解析，负载均衡器等。听起似乎很简单吧，然而不是，细节之处全是魔鬼，冗余结点最大的难题就是对于有状态的结点的数据复制和数据一致性的保证（无状态结点的冗余相对比较简单）。冗余数据所带来的一致性问题是魔鬼中的魔鬼：如果系统的数据镜像到冗余结点是异步的，那么在failover的时候就会出现数据差异的情况。如果系统在数据镜像到冗余结点是同步的，那么就会导致冗余结点越多性能越慢。所以，很多高可用系统都是在做各种取舍，这需要比对着业务的特点来的，比如银行账号的余额是一个状态型的数据，那么，冗余时就必需做到强一致性，再比如说，订单记录属于追加性的数据，那么在failover的时候，就可以到备机上进行追加，这样就比较简单了（阿里目前所谓的异地双活其实根本做不到状态型数据的双活）。下面，总结一下高可用的设计原理：要做到数据不丢，就必需要持久化要做到服务高可用，就必需要有备用（复本），无论是应用结点还是数据结点要做到复制，就会有数据一致性的问题。我们不可能做到100%的高可用，也就是说，我们能做到几个9个的SLA。高可用系统的技术解决方案我在《分布式系统的事务处理》中引用过下面这个图：这个图来自来自：Google App Engine的co-founder Ryan Barrett在2009年的Google I/O上的演讲《Transaction Across DataCenter》（视频： http://www.youtube.com/watch?v=srOgpXECblk）这个图基本上来说是目前高可用系统中能看得到的所有的解决方案的基础了。M/S、MM实现起来不难，但是会有很多问题，2PC的问题就是性能不行，而Paxos的问题就是太复杂，实现难度太大。总结一下各个高可用方案的的问题：对于最终一致性来说，在宕机的情况下，会出现数据没有完全同步完成，会出现数据差异性。对于强一致性来说，要么使用性能比较慢的XA系的两阶段提交的方案，要么使用性能比较好，但是实现比较复杂的Paxos协议。注：这是软件方面的方案。当然，也可以使用造价比较高的硬件解决方案，不过本文不涉及硬件解决方案。另外，现今开源软件中，很多缓存，消息中间件或数据库都有持久化和Replication的设计，从而也都有高可用解决方案，但是开源软件一般都没有比较高的SLA，所以，如果我们使用开源软件的话，需要注意这一点。高可用技术方案的示例下面，我们来看一下MySQL的高可用的方案的SLA（下图下面红色的标识表示了这个方案有几个9）：图片来源：MySQL High Availability Solutions简单解释一下MySQL的这几个方案（主要是想表达一个越多的9就越复杂）MySQL Repleaction就是传统的异步数据同步或是半同步Semi-Sync（只要有一个slave收到更新就返回成功）这个方式本质上不到2个9。MySQL Fabric简单来说就是数据分片下的M/S的读写分离模式。这个方案的的可用性可以达到99%DRBD通过底层的磁盘同步技术来解决数据同步的问题，就是RAID 1——把两台以上的主机的硬盘镜像成一个。这个方案不到3个9Solaris Clustering/Oracle VM ，这个机制监控了包括硬件、操作系统、网络和数据库。这个方案一般会伴随着节点间的“心跳机制”，而且还会动用到SAN（Storage Area Network）或是本地的分布式存储系统，还会动用虚拟化技术来做虚拟机的迁移以降低宕机时间的概率。这个解决方案完全就是一个“全栈式的解决方案”。这个方案接近4个9。MySQL Cluster是官方的一个开源方案，其把MySQL的集群分成SQL Node 和Data Node，Data Node是一个自动化sharing和复制的集群NDB，为了更高的可用性，MySQL Cluster采用了“完全同步”的数据复制的机制来冗余数据结点。这个方案接近5个9。那么，这些2个9，3个9，4个9，5个9是什么意思呢？又是怎么来的呢？请往下看。高可用性的SLA的定义上面那些都不是本文的重点，本文的重点现在开始，如何测量系统的高可用性。当然是SLA，全称Service Level Agrement，也就是有几个9的高可用性。工业界有两种方法来测量SLA，一个是故障发生到恢复的时间另一个是两次故障间的时间但大多数都采用第一种方法，也就是故障发生到恢复的时间，也就是服务不可用的时间，如下表所示：系统可用性%宕机时间/年宕机时间/月宕机时间/周宕机时间/天90% (1个9)36.5 天72 小时16.8 小时2.4 小时99% (2个9)3.65 天7.20 小时1.68 小时14.4 分99.9% (3个9)8.76 小时43.8 分10.1 分钟1.44 分99.99% (4个9)52.56 分4.38 分1.01 分钟8.66 秒99.999% (5个9)5.26 分25.9 秒6.05 秒0.87 秒比如，99.999%的可用性，一年只能有5分半钟的服务不可用。感觉很难做到吧。就算是3个9的可用性，一个月的宕机时间也只有40多分钟，看看那些设计和编码不认真的团队，把所有的期望寄托在人肉处理故障的运维团队， 一个故障就能处理1个多小时甚至2-3个小时，连个自动化的工具都没有，还好意思在官网上声明自己的SLA是3个9或是5个9，这不是欺骗大众吗？。影响高可用的因素老实说，我们很难计算我们设计的系统有多少的可用性，因为影响一个系统的因素实在是太多了，除了软件设计，还有硬件，还有每三方的服务（如电信联通的宽带SLA），当然包括“建筑施工队的挖掘机”。所以，正如SLA的定义，这不仅仅只是一个技术指标，而是一种服务提供商和用户之间的contract或契约。这种工业级的玩法，就像飞机一样，并不是把飞机造出来就好了，还有大量的无比专业的配套设施、工具、流程、管理和运营。简而言之，SLA的几个9就是能持续提供可用服务的级别，不过，工业界中，会把服务不可用的因素分成两种：一种是有计划的，一种是无计划的。无计划的宕机原因下图来自Oracle的 《High Availability Concepts and Best Practices》&nbsp;有计划的宕机原因下图来自Oracle的 《High Availability Concepts and Best Practices》&nbsp;我们可以看到，上面的宕机原因包括如下：无计划的系统级的故障 &#8211;  包括主机、操作系统、中间件、数据库、网络、电源以及外围设备数据和中介的故障 &#8211; 包括人员误操作、硬盘故障、数据乱了还有：自然灾害、人为破坏、以及供电问题。有计划的日常任务：备份，容量规划，用户和安全管理，后台批处理应用运维相关：数据库维护、应用维护、中间件维护、操作系统维护、网络维护升级相关：数据库、应用、中间件、操作系统、网络、包括硬件升级真正决定高可用系统的本质原因从上面这些会影响高可用的SLA的因素，你看到了什么？如果你还是只看到了技术方面或是软件设计的东西，那么你只看到了冰山一角。我们再仔细想一想，那个5个9的SLA在一年内只能是5分钟的不可用时间，5分钟啊，如果按一年只出1次故障，你也得在五分钟内恢复故障，让我们想想，这意味着什么？如果你没有一套科学的牛逼的软件工程的管理，没有牛逼先进的自动化的运维工具，没有技术能力很牛逼的工程师团队，怎么可能出现高可用的系统啊。是的，要干出高可用的系统，这TMD就是一套严谨科学的工程管理，其中包括但不限于了：软件的设计、编码、测试、上线和软件配置管理的水平工程师的人员技能水平运维的管理和技术水平数据中心的运营管理水平依赖于第三方服务的管理水平深层交的东西则是——对工程这门科学的尊重：对待技术的态度一个公司的工程文化领导者对工程的尊重所以，以后有人在你面前提高可用，你要看的不是他的技术设计，而还要看看他们的工程能力，看看他们公司是否真正的尊重工程这门科学。其它有好些非技术甚至技术人员和我说过，做个APP做个网站，不就是找几个码农过来写写代码嘛。等系统不可用的时候，他们才会明白，要找技术能力比较强的人，但是，就算你和他们讲一万遍道理，他们也很难会明白写代码怎么就是一种工程了，而工程怎么就成了一门科学了。其实，很多做技术的人都不明白这个道理。包括很多技术人员也永远不会理解，为什么要做好多像Code Review、自动化运维、自动化测试、持续集成之类这样很无聊的东西。就像我在《从Code Review 谈如何做技术》中提到的，阿里很多的工程师，架构师/专家，甚至资深架构师都没有这个意识，当然，这不怪他们，因为经历决定思维方式，他们的经历的是民用级的系统，做的都是堆功能的工作，的确不需要。看完这些，最后让我们都扪心自问一下，你还敢说你的系统是高可用的了么？ ;-)（全文完）关注CoolShell微信公众账号可以在手机端搜索文章（转载本站文章请注明作者和出处 酷 壳 &#8211; CoolShell.cn ，请勿用于任何商业用途）——=== 访问 酷壳404页面 寻找遗失儿童。 ===——本广告收入已由广告主捐给Wikipedia相关文章2014年01月20日 分布式系统的事务处理2013年07月05日 IoC/DIP其实是一种管理思想2011年10月25日 多些时间能少写些代码2011年06月10日 软件真的好难做啊2011年09月08日 千万不要把 bool 设计成函数参数2012年03月09日 Bret Victor &#8211; Inventing on Principle2014年04月12日 从Code Review 谈如何做技术2016年09月18日 什么是工程师文化？</content></doc>
<doc>     <docid>179<docid>     <title>缓存更新的套路</title>     <link>http://coolshell.cn/articles/17416.html</link>     <content>看到好些人在写更新缓存数据代码时，先删除缓存，然后再更新数据库，而后续的操作会把数据再装载的缓存中。然而，这个是逻辑是错误的。试想，两个并发操作，一个是更新操作，另一个是查询操作，更新操作删除缓存后，查询操作没有命中缓存，先把老数据读出来后放到缓存中，然后更新操作更新了数据库。于是，在缓存中的数据还是老的数据，导致缓存中的数据是脏的，而且还一直这样脏下去了。我不知道为什么这么多人用的都是这个逻辑，当我在微博上发了这个贴以后，我发现好些人给了好多非常复杂和诡异的方案，所以，我想写这篇文章说一下几个缓存更新的Design Pattern（让我们多一些套路吧）。这里，我们先不讨论更新缓存和更新数据这两个事是一个事务的事，或是会有失败的可能，我们先假设更新数据库和更新缓存都可以成功的情况（我们先把成功的代码逻辑先写对）。更新缓存的的Design Pattern有四种：Cache aside, Read through, Write through, Write behind caching，我们下面一一来看一下这四种Pattern。Cache Aside Pattern这是最常用最常用的pattern了。其具体逻辑如下：失效：应用程序先从cache取数据，没有得到，则从数据库中取数据，成功后，放到缓存中。命中：应用程序从cache中取数据，取到后返回。更新：先把数据存到数据库中，成功后，再让缓存失效。注意，我们的更新是先更新数据库，成功后，让缓存失效。那么，这种方式是否可以没有文章前面提到过的那个问题呢？我们可以脑补一下。一个是查询操作，一个是更新操作的并发，首先，没有了删除cache数据的操作了，而是先更新了数据库中的数据，此时，缓存依然有效，所以，并发的查询操作拿的是没有更新的数据，但是，更新操作马上让缓存的失效了，后续的查询操作再把数据从数据库中拉出来。而不会像文章开头的那个逻辑产生的问题，后续的查询操作一直都在取老的数据。这是标准的design pattern，包括Facebook的论文《Scaling Memcache at Facebook》也使用了这个策略。为什么不是写完数据库后更新缓存？你可以看一下Quora上的这个问答《Why does Facebook use delete to remove the key-value pair in Memcached instead of updating the Memcached during write request to the backend?》，主要是怕两个并发的写操作导致脏数据。那么，是不是Cache Aside这个就不会有并发问题了？不是的，比如，一个是读操作，但是没有命中缓存，然后就到数据库中取数据，此时来了一个写操作，写完数据库后，让缓存失效，然后，之前的那个读操作再把老的数据放进去，所以，会造成脏数据。但，这个case理论上会出现，不过，实际上出现的概率可能非常低，因为这个条件需要发生在读缓存时缓存失效，而且并发着有一个写操作。而实际上数据库的写操作会比读操作慢得多，而且还要锁表，而读操作必需在写操作前进入数据库操作，而又要晚于写操作更新缓存，所有的这些条件都具备的概率基本并不大。所以，这也就是Quora上的那个答案里说的，要么通过2PC或是Paxos协议保证一致性，要么就是拼命的降低并发时脏数据的概率，而Facebook使用了这个降低概率的玩法，因为2PC太慢，而Paxos太复杂。当然，最好还是为缓存设置上过期时间。Read/Write Through Pattern我们可以看到，在上面的Cache Aside套路中，我们的应用代码需要维护两个数据存储，一个是缓存（Cache），一个是数据库（Repository）。所以，应用程序比较啰嗦。而Read/Write Through套路是把更新数据库（Repository）的操作由缓存自己代理了，所以，对于应用层来说，就简单很多了。可以理解为，应用认为后端就是一个单一的存储，而存储自己维护自己的Cache。Read ThroughRead Through 套路就是在查询操作中更新缓存，也就是说，当缓存失效的时候（过期或LRU换出），Cache Aside是由调用方负责把数据加载入缓存，而Read Through则用缓存服务自己来加载，从而对应用方是透明的。Write ThroughWrite Through 套路和Read Through相仿，不过是在更新数据时发生。当有数据更新的时候，如果没有命中缓存，直接更新数据库，然后返回。如果命中了缓存，则更新缓存，然后再由Cache自己更新数据库（这是一个同步操作）下图自来Wikipedia的Cache词条。其中的Memory你可以理解为就是我们例子里的数据库。Write Behind Caching PatternWrite Behind 又叫 Write Back。一些了解Linux操作系统内核的同学对write back应该非常熟悉，这不就是Linux文件系统的Page Cache的算法吗？是的，你看基础这玩意全都是相通的。所以，基础很重要，我已经不是一次说过基础很重要这事了。Write Back套路，一句说就是，在更新数据的时候，只更新缓存，不更新数据库，而我们的缓存会异步地批量更新数据库。这个设计的好处就是让数据的I/O操作飞快无比（因为直接操作内存嘛 ），因为异步，write backg还可以合并对同一个数据的多次操作，所以性能的提高是相当可观的。但是，其带来的问题是，数据不是强一致性的，而且可能会丢失（我们知道Unix/Linux非正常关机会导致数据丢失，就是因为这个事）。在软件设计上，我们基本上不可能做出一个没有缺陷的设计，就像算法设计中的时间换空间，空间换时间一个道理，有时候，强一致性和高性能，高可用和高性性是有冲突的。软件设计从来都是取舍Trade-Off。另外，Write Back实现逻辑比较复杂，因为他需要track有哪数据是被更新了的，需要刷到持久层上。操作系统的write back会在仅当这个cache需要失效的时候，才会被真正持久起来，比如，内存不够了，或是进程退出了等情况，这又叫lazy write。在wikipedia上有一张write back的流程图，基本逻辑如下：&nbsp;再多唠叨一些1）上面讲的这些Design Pattern，其实并不是软件架构里的mysql数据库和memcache/redis的更新策略，这些东西都是计算机体系结构里的设计，比如CPU的缓存，硬盘文件系统中的缓存，硬盘上的缓存，数据库中的缓存。基本上来说，这些缓存更新的设计模式都是非常老古董的，而且历经长时间考验的策略，所以这也就是，工程学上所谓的Best Practice，遵从就好了。2）有时候，我们觉得能做宏观的系统架构的人一定是很有经验的，其实，宏观系统架构中的很多设计都来源于这些微观的东西。比如，云计算中的很多虚拟化技术的原理，和传统的虚拟内存不是很像么？Unix下的那些I/O模型，也放大到了架构里的同步异步的模型，还有Unix发明的管道不就是数据流式计算架构吗？TCP的好些设计也用在不同系统间的通讯中，仔细看看这些微观层面，你会发现有很多设计都非常精妙……所以，请允许我在这里放句观点鲜明的话——如果你要做好架构，首先你得把计算机体系结构以及很多老古董的基础技术吃透了。3）在软件开发或设计中，我非常建议在之前先去参考一下已有的设计和思路，看看相应的guideline，best practice或design pattern，吃透了已有的这些东西，再决定是否要重新发明轮子。千万不要似是而非地，想当然的做软件设计。4）上面，我们没有考虑缓存（Cache）和持久层（Repository）的整体事务的问题。比如，更新Cache成功，更新数据库失败了怎么吗？或是反过来。关于这个事，如果你需要强一致性，你需要使用“两阶段提交协议”——prepare, commit/rollback，比如Java 7 的XAResource，还有MySQL 5.7的 XA Transaction，有些cache也支持XA，比如EhCache。当然，XA这样的强一致性的玩法会导致性能下降，关于分布式的事务的相关话题，你可以看看《分布式系统的事务处理》一文。（全文完）&nbsp;&nbsp;关注CoolShell微信公众账号可以在手机端搜索文章（转载本站文章请注明作者和出处 酷 壳 &#8211; CoolShell.cn ，请勿用于任何商业用途）——=== 访问 酷壳404页面 寻找遗失儿童。 ===——本广告收入已由广告主捐给Wikipedia相关文章2012年05月03日 用Unix的设计思想来应对多变的需求2013年02月01日 从面向对象的设计模式看软件设计2012年03月26日 需求变化与IoC2013年07月05日 IoC/DIP其实是一种管理思想2013年07月30日 7个示例科普CPU Cache2009年03月02日 101个设计模式2011年05月03日 读书笔记：对线程模型的批评2010年11月26日 JDK里的设计模式</content></doc>
<doc>     <docid>180<docid>     <title>性能测试应该怎么做？</title>     <link>http://coolshell.cn/articles/17381.html</link>     <content>偶然间看到了阿里中间件Dubbo的性能测试报告，我觉得这份性能测试报告让人觉得做这性能测试的人根本不懂性能测试，我觉得这份报告会把大众带沟里去，所以，想写下这篇文章，做一点科普。首先，这份测试报告里的主要问题如下：1）用的全是平均值。老实说，平均值是非常不靠谱的。2）响应时间没有和吞吐量TPS/QPS挂钩。而只是测试了低速率的情况，这是完全错误的。3）响应时间和吞吐量没有和成功率挂钩。为什么平均值不靠谱关于平均值为什么不靠谱，我相信大家读新闻的时候经常可以看到，平均工资，平均房价，平均支出，等等这样的字眼，你就知道为什么平均值不靠谱了。（这些都是数学游戏，对于理工科的同学来说，天生应该有免疫力）软件的性能测试也一样，平均数也是不靠谱的，这里可以参看这篇详细的文章《Why Averages Suck and Percentiles are Great》，我在这里简单说一下。我们知道，性能测试时，测试得到的结果数据不总是一样的，而是有高有低的，如果算平均值就会出现这样的情况，假如，测试了10次，有9次是1ms，而有1次是1s，那么平均数据就是100ms，很明显，这完全不能反应性能测试的情况，也许那1s的请求就是一个不正常的值，是个噪点，应该去掉。所以，我们会在一些评委打分中看到要去掉一个最高分一个最低分，然后再算平均值。另外，中位数（Mean）可能会比平均数要稍微靠谱一些，所谓中位数的意就是把将一组数据按大小顺序排列，处在最中间位置的一个数叫做这组数据的中位数 ，这意味着至少有50%的数据低于或高于这个中位数。当然，最为正确的统计做法是用百分比分布统计。也就是英文中的TP &#8211; Top Percentile ，TP50的意思在，50%的请求都小于某个值，TP90表示90%的请求小于某个时间。比如：我们有一组数据：[ 10ms,  1s, 200ms, 100ms]，我们把其从小到大排个序：[10ms, 100ms, 200ms, 1s]，于是我们知道，TP50，就是50%的请求ceil(4*0.5)=2时间是小于100ms的，TP90就是90%的请求ceil(4*0.9)=4时间小于1s。于是：TP50就是100ms，TP90就是1s。我以前在路透做的金融系统响应时间的性能测试的要求是这样的，99.9%的请求必须小于1ms，所有的平均时间必须小于1ms。两个条件的限制。为什么响应时间（latency）要和吞吐量（Thoughput）挂钩系统的性能如果只看吞吐量，不看响应时间是没有意义的。我的系统可以顶10万请求，但是响应时间已经到了5秒钟，这样的系统已经不可用了，这样的吞吐量也是没有意义的。我们知道，当并发量（吞吐量）上涨的时候，系统会变得越来越不稳定，响应时间的波动也会越来越大，响应时间也会变得越来越慢，而吞吐率也越来越上不去（如下图所示），包括CPU的使用率情况也会如此。所以，当系统变得不稳定的时候，吞吐量已经没有意义了。吞吐量有意义的时候仅当系统稳定的时候。所以，吞吐量的值必需有响应时间来卡。比如：TP99小于100ms的时候，系统可以承载的最大并发数是1000qps。这意味着，我们要不断的在不同的并发数上测试，以找到软件的最稳定时的最大吞吐量。&nbsp;为什么响应时间吞吐量和成功率要挂钩我们这应该不难理解了，如果请求不成功的话，都还做毛的性能测试。比如，我说我的系统并发可以达到10万，但是失败率是40%，那么，这10万的并发完全就是一个笑话了。性能测试的失败率的容忍应该是非常低的。对于一些关键系统，成功请求数必须在100%，一点都不能含糊。&nbsp;如何严谨地做性能测试一般来说，性能测试要统一考虑这么几个因素：Thoughput吞吐量，Latency响应时间，资源利用（CPU/MEM/IO/Bandwidth&#8230;），成功率，系统稳定性。下面的这些性能测试的方式基本上来源自我的老老东家汤森路透，一家做real-time的金融数据系统的公司。一，你得定义一个系统的响应时间latency，建议是TP99，以及成功率。比如路透的定义：99.9%的响应时间必需在1ms之内，平均响应时间在1ms以内，100%的请求成功。二，在这个响应时间的限制下，找到最高的吞吐量。测试用的数据，需要有大中小各种尺寸的数据，并可以混合。最好使用生产线上的测试数据。三，在这个吞吐量做Soak Test，比如：使用第二步测试得到的吞吐量连续7天的不间断的压测系统。然后收集CPU，内存，硬盘/网络IO，等指标，查看系统是否稳定，比如，CPU是平稳的，内存使用也是平稳的。那么，这个值就是系统的性能四，找到系统的极限值。比如：在成功率100%的情况下（不考虑响应时间的长短），系统能坚持10分钟的吞吐量。五，做Burst Test。用第二步得到的吞吐量执行5分钟，然后在第四步得到的极限值执行1分钟，再回到第二步的吞吐量执行5钟，再到第四步的权限值执行1分钟，如此往复个一段时间，比如2天。收集系统数据：CPU、内存、硬盘/网络IO等，观察他们的曲线，以及相应的响应时间，确保系统是稳定的。六、低吞吐量和网络小包的测试。有时候，在低吞吐量的时候，可能会导致latency上升，比如TCP_NODELAY的参数没有开启会导致latency上升（详见TCP的那些事），而网络小包会导致带宽用不满也会导致性能上不去，所以，性能测试还需要根据实际情况有选择的测试一下这两咱场景。（注：在路透，路透会用第二步得到的吞吐量乘以66.7%来做为系统的软报警线，80%做为系统的硬报警线，而极限值仅仅用来扛突发的peak）是不是很繁锁？是的，只因为，这是工程，工程是一门科学，科学是严谨的。欢迎大家也分享一下你们性能测试的经验和方法。（全文完）&nbsp;关注CoolShell微信公众账号可以在手机端搜索文章（转载本站文章请注明作者和出处 酷 壳 &#8211; CoolShell.cn ，请勿用于任何商业用途）——=== 访问 酷壳404页面 寻找遗失儿童。 ===——本广告收入已由广告主捐给Wikipedia相关文章2012年06月20日 性能调优攻略2012年11月20日 如何测试洗牌程序2012年12月19日 Web工程师的工具箱2014年01月20日 分布式系统的事务处理2013年05月30日 无锁HashMap的原理与实现2014年04月17日 从LongAdder看更高效的无锁实现2012年01月16日 由12306.cn谈谈网站性能技术 2012年03月13日 多版本并发控制(MVCC)在分布式系统中的应用</content></doc>
<doc>     <docid>181<docid>     <title>让我们来谈谈分工</title>     <link>http://coolshell.cn/articles/17295.html</link>     <content>昨天，我看到一个新闻——雅虎取消了QA团队，工程师必须自己负责代码质量，并使用持续集成代替QA。 同时，也听到网友说，“听微软做数据库运维的工程师介绍，他们也是把运维工程师和测试工程师取消了，由开发全部完成。每个人都是全栈工程师”。于是，我顺势引用了几年前写过一篇文章《我们需要专职的QA吗？》，并且又鼓吹了一下全栈。当然，一如既往的得到了一些的争议和嘲弄;-)。有人认为取消QA基本上是公司没钱的象征，这个观点根本不值一驳，属于井底之蛙。有人认为，社会分工是大前提，并批评我说怎么不说把所有的事全干的，把我推向了另外一个极端。另外，你千万不要以为有了分工，QA的工作就保得住了。就像《乔布斯传》中乔布斯质疑财务制度的时候说的，有时候，很多人都不问为什么，觉得存在的东西都是理所应当的东西。让我们失去了独立思考的机会。分工也是一样。所以，为了说完整分工这个逻辑。请大家耐住性子，让我就先来谈谈“分工的优缺点”吧。分工的优点和缺点首先，分工（Division of Labour）应该是由 Adam Smith 在1776年的《国富论》中提出来的，Adam在那时候就观察到分工对于手工业生产效率的提高。他将效率提高的原因归结于三点：熟练程度的增加。当一个工人单纯地重复同一道工序时，其对这道工序的熟练程度会大幅增加。表现为产量和质量的提高。如果没有分工，由一道工序转为另一道工序时会损失时间，而分工避免了这中间的损失。由于对于工序的了解和熟练度的增加，更有效率的机械和工具被发明出来，从而提高了产量。分工的确是提高生产力。我想到了福特公司一开始做出来的汽车几乎卖不出去，原因有两个，一个是成本太高，另外是生产太复杂，产能太低。于是福特公司开始把制造一辆汽车的工序分解开来，进行分工，分工给福特公司带来的好处是：很多工作可以并行了，而且因为事情变得简单后，执行力也变强了一个非常复杂和高深的汽车制造因为分工后，很多工作不需要很NB的人来干了，只需要一般劳动者经过简单的培训就可以干了。而且，越干越熟练，越干越专业，最终可能让合适的人合适的事。分工后导致了很多重复劳动可以用技术来解决，于是福特公司出现生产流水线的技术（你是否还记得卓别林《摩登时代》里的工业生产流水线的场景，那取自福特公司）。于是，福特公司的生产效率大大提高，最终实现了让每个美国家庭都能买得起汽车的理想，同时让美国成为了轮子上的国家。不过，我们需要注意的是，在《国富论》中，Adam他同时也提到，分工如果过细，同样会带来问题——简单重复的劳动会让人变成一个不会思考的机器，从而越来越笨，进而变成平庸的无技能的人。自“分工”出现以后，争论就没有停止过。Karl Max同样认为分工越来越细，会导致人的技术越来越差，同时，大量的重复劳动也会导致人对工作的失出热情，产生厌倦和抵触心理，最终会导致生产力的下降。同时，还有一些经济学家也同样表明分工的一些缺点：导致人只关注整个事情中的一小块，缺乏全局视角，导致视野受限，没有完全领会工作的意义和目标，从而导致各种返工。对于组织而言，分工也会导致出现大量的沟通协同成本，并出现碎片的生产方式，以及组织的孤岛形式，并不利于提高生产力。当然，奥地利经济学家Ludwig von Mises 并不这么认为，他认为，在分工所得到的好处面前，这些副作用不算什么。并且，他认为在资本主义的制度下，完全是可以平衡分工的各种优点和各种缺点，从而可以达到提高生产力和提高人员素质的双赢解的。比如说，分工中的各种沟通问题是可以通过一个标准协议来解的，造灯泡的，造开关的，造灯座的完全不知道对方的存在，他们只所以可以让做出来的东西拼在一起，完全是通过了一种标准协议完成的。这也是为什么这个世界上有各种各样的标准化的组织。还有很多经济学家对分工都有自己的见解和想法。不过基本上就是上面这些Pros和Cons了。下图是一个PPT的两个slids，可以点击看大图（来源）全球化下的分工分工带来问题在全球化的浪潮下变得尤为突出。其委婉地被讲成是比较优势（Comparative Advantage）比较优势（又叫相对优势）是经济学的概念，解释了为何在拥有相对的机会成本的优势下生产，贸易对双方都有利。当一方（一个人，一间公司，或一国）进行一项生产时所付出的机会成本比另一方低，这一方面拥有了进行这项生产的比较优势。于是，一个国家倘若专门生产自己相对优势较大的产品，并通过国际贸易换取自己不具有相对优势的产品就能获得利益。于是乎，分工本来想要的是——合适的人干合适的事，但是在比较优势的情况下，商业社会把分工变成了——不是选择合适的人、公司或国家，而是选择成本低的人、公司或国家。经济合作与发展组织OECD最近（2015年6月28日）对全球化这样建议的——“有效率的政策的本质不是阻止失业而是鼓励就业，如果各个国家都在收获全球化的利益而不是开放贸易的话，那么一些地方就会失去工作机会，当然也伴随着在另一些地方出现新的工作机会，这是全球化进程不可避免的，而我们面对的挑战是怎么能流畅调整我们的流程，能为那些新出现的工作机会找到合适的技能匹配的工人”。通过上面的说明，我想你可以知道，为什么中国成为了世界劳动力大国，而为什么当初美国科技公司进入中国的时候，首先把测试的工作放到了中国。这就是所谓的全球化分工。同时我们也可以看到，像我们中国这样技术能力的确非常不足的国家，的确是可以通过分工这种形式，让我们这些技能一般的技术人员参与一个复杂的有技术含量的项目当中。这其中就是分工的光明面和阴暗面。那么，我们想一想，随着中国的人力成本的越来越大，国际化的分工因为商业资本的因素，必然不会选择中国，只会选择人力成本更低的国家，比如印度、越南、甚至人力成本更低的国家。美国雅虎和Adobe不是离开中国了么？再看看中国因为人民币的汇率或是人力成本的上升，我们在早几年关了多少个Made in China的工厂，这就是全球化的分工，商业上来说，他不是找最合适的人，而是找成本最低的人。所以，你千万不要以为我一提倡全栈了，你QA的工作就保不住了，就算没有全栈，就算是你还在坚持的社会化的分工，也可能让你的QA的工作就保不住了，除非，你能提供更低的价格。（想想这其中的逻辑吧，人家美国人把一些技术工作（比如测试）外包到中国的原因不是因为中国人聪明，想得周全，适合干这个测试这个事，而是因为中国人廉价，所以，当中国不在廉价了，自然就会找更廉价的地方了）为什么国家要从Made in China转型？不就是因为中国早期拿到的国际化分工就是这些没有技术含量的支持性的分工么？也因此而造就了大量的技能很一般的工人。为了能在全球化分工中能拿到更有质量的工作，我们必然要从劳动密集型转向成知识密集型，必然要从支持性的工作转变为产出性的工作，必然需要单一技能型的技工转变为复合型的人才。分工的温床和天敌分工的温床主要有两个，一个是成本和效率，资本家或企业主或一个国家为了追求更快成本更底的生产方式，他们必然会进行大规模的分工，伴随着分工，他们也会把一些知识或技术密集型的工作生生地变成劳动密集型的工作。然后层层外包。一个是组织的大小，当一个组织的人数不断的变大，那么，你只能把工作和任务分得更细。这是被人数逼的，而不是实际需要的。这就是为什么我们可以看到很多大公司里要么人浮于事，要么瞎忙。分工的天敌主要有一个——那就是技术！每当新技术出现的时候，一些复杂的工序会被一台机器或是一种高超的技术所取代，不管是被技术自动化，还是被技术所简化，总之，以前本来需要数十人或是数百人才能干的事，突然之间只需要一个人就可以干完了。生产力得到了巨大的释放。所以，你这就是我们常听的——科技是第一生产力！说到这里，让我们再来看看雅虎的那条新闻——在软件开发流程中去掉QA团队会发生什么？更少的代码错误，更快的开发周期。这是雅虎工程师过去一年的实验结果。雅虎的Warp Drive计划将程序开发从批发布转移了持续交付模式，工程师的代码不经过QA团队的人工检查而是直接发布。开发模式的转变导致了处理问题理念的根本性改变，迫使工程师开发自动检查工具去识别原来由人工检查发现的错误。雅虎的技术团队现在全部是工程师，而不再有QA团队容身之处。雅虎的首席架构师 Amotz Maimon说，他们本来预计可能会发生严重问题，结果出乎意料，每个曾经对此抱有怀疑态度的人都说新做法很有效。所以，当你面对一些难题的时候，比如线上的故障，或是一个复杂的软件生产活动，你是要加更多的流程更多的人呢，还是要用技术解决问题呢？一边是温床，一边是天敌，你想好了吗？什么样分工才是好的分工是必然的，因为很简单，你不可能一个人干完所有的事情，所以必需要分工，分工不是问题，而问题则变成了——什么样的分工是理想的，是优雅的，是有效率的？华君武漫画《科学分工？》对于分工来说，一般来是一种组织和管理形为。就目前来说，现代的公司有两种分工模式，分别是Control 和 Commitment 这两种分工。Control就是控制型的管理，它是一种是基于工作技能的分工，于是员工会被这种分工分配到一个比较窄的技能里去完成一个非常明确的工作。而Commitment则是面向员工的责任心和所承担的目标来分工并完成工作的。相比起前者来说，这样的分工在完成工作时，需要的不仅仅是技能，还需要更多的责任感。这么说吧，对于基于工作技能的分工，你会看到，这样的公司会把技术人员按编程语言来分，比如：Java、PHP、C/C++，或是分成：Web端、iOS端、Android端、后端、算法、数据。或是分成：开发，测试，运维。对于基于Commitment的分工，你会看到他们这样分的，软件工程师（不分前后端，不分语言，不分运维，测试），因为这样的公司认为，他招的不是只有特定语言技能的Coder，而是而学多种语言多种技术能保证软件质量以及能对软件维护的软件工程师。这种公司的软件工程师是各种团队都可以去的，而他们的分工更多的是按软件的功能，软件的模块，或是软件的产品线来分工。基于技能的分工已是过去时，而基于 Commitment 的分工是更有效率的分工的未来。你可以参看McAlister-Kizzier, Donna. 的文献 &#8220;Division of Labor.&#8221; 。小结我说了这么多，不知道你看懂了我想表达什么没有？我不强加我的价值观，只希望你自己问自己几个问题：1）作为工作的人，在分工中你会怎样选择？是成为一颗棋子，一颗螺丝钉，还是成为一个多面手？2）作为工作的人，当你选择工作或任务的时候，你是选择做支持性的工作，还是做产出性的工作？你是选择做劳动密集型重复工作，还是做知识密集型的创新性的工作？3）作为老板，你是想要什么样的员工？听话的只会加班和干重复工作的劳动力，还是有责任心的为企业和产品负责的员工？4）作为老板，你是想通过分工释放低端员工的生产力，还是通过科技或技术去创造更NB的生产力？5）作为老板，分工中的问题，你找到比较优的解了吗？比如，对于不同团队间的协议，你找到了吗？可能，在不同的情况下你会有不同的答案。但是对我来说呢，无论是什么情况，我都只会有一个答案。（全文完）关注CoolShell微信公众账号可以在手机端搜索文章（转载本站文章请注明作者和出处 酷 壳 &#8211; CoolShell.cn ，请勿用于任何商业用途）——=== 访问 酷壳404页面 寻找遗失儿童。 ===——本广告收入已由广告主捐给Wikipedia相关文章2013年07月24日 加班与效率2013年03月11日 《Rework》摘录及感想2011年10月25日 多些时间能少写些代码2016年09月18日 什么是工程师文化？2013年07月05日 IoC/DIP其实是一种管理思想2014年04月12日 从Code Review 谈如何做技术2012年04月11日 我们需要专职的QA吗？2011年07月06日 软件公司的两种管理方式</content></doc>
<doc>     <docid>182<docid>     <title>Cuckoo Filter：设计与实现</title>     <link>http://coolshell.cn/articles/17225.html</link>     <content>（感谢网友 @我的上铺叫路遥 投稿）对于海量数据处理业务，我们通常需要一个索引数据结构，用来帮助查询，快速判断数据记录是否存在，这种数据结构通常又叫过滤器(filter)。考虑这样一个场景，上网的时候需要在浏览器上输入URL，这时浏览器需要去判断这是否一个恶意的网站，它将对本地缓存的成千上万的URL索引进行过滤，如果不存在，就放行，如果（可能）存在，则向远程服务端发起验证请求，并回馈客户端给出警告。索引的存储又分为有序和无序，前者使用关联式容器，比如B树，后者使用哈希算法。这两类算法各有优劣：比如，关联式容器时间复杂度稳定O(logN)，且支持范围查询；又比如哈希算法的查询、增删都比较快O(1)，但这是在理想状态下的情形，遇到碰撞严重的情况，哈希算法的时间复杂度会退化到O(n)。因此，选择一个好的哈希算法是很重要的。时下一个非常流行的哈希索引结构就是bloom filter，它类似于bitmap这样的hashset，所以空间利用率很高。其独特的地方在于它使用多个哈希函数来避免哈希碰撞，如图所示（来源wikipedia），bit数组初始化为全0，插入x时，x被3个哈希函数分别映射到3个不同的bit位上并置1，查询x时，只有被这3个函数映射到的bit位全部是1才能说明x可能存在，但凡至少出现一个0表示x肯定不存在。但是，bloom filter的这种位图模式带来两个问题：一个是误报（false positives），在查询时能提供“一定不存在”，但只能提供“可能存在”，因为存在其它元素被映射到部分相同bit位上，导致该位置1，那么一个不存在的元素可能会被误报成存在；另一个是漏报（false nagatives），同样道理，如果删除了某个元素，导致该映射bit位被置0，那么本来存在的元素会被漏报成不存在。由于后者问题严重得多，所以bloom filter必须确保“definitely no”从而容忍“probably yes”，不允许元素的删除。关于元素删除的问题，一个改良方案是对bloom filter引入计数，但这样一来，原来每个bit空间就要扩张成一个计数值，空间效率上又降低了。Cuckoo Hashing为了解决这一问题，本文引入了一种新的哈希算法——cuckoo filter，它既可以确保该元素存在的必然性，又可以在不违背此前提下删除任意元素，仅仅比bitmap牺牲了微量空间效率。先说明一下，这个算法的思想来源是一篇CMU论文，笔者按照其思路用C语言做了一个简单实现（Github），附上对一段文本数据进行导入导出的正确性测试。接下来我会结合自己的示例代码讲解哈希算法的实现。我们先来看看cuckoo hashing有什么特点，它的哈希函数是成对的（具体的实现可以根据需求设计），每一个元素都是两个，分别映射到两个位置，一个是记录的位置，另一个是备用位置。这个备用位置是处理碰撞时用的，这就要说到cuckoo这个名词的典故了，中文名叫布谷鸟，这种鸟有一种即狡猾又贪婪的习性，它不肯自己筑巢，而是把蛋下到别的鸟巢里，而且它的幼鸟又会比别的鸟早出生，布谷幼鸟天生有一种残忍的动作，幼鸟会拼命把未出生的其它鸟蛋挤出窝巢，今后以便独享“养父母”的食物。借助生物学上这一典故，cuckoo hashing处理碰撞的方法，就是把原来占用位置的这个元素踢走，不过被踢出去的元素还要比鸟蛋幸运，因为它还有一个备用位置可以安置，如果备用位置上还有人，再把它踢走，如此往复。直到被踢的次数达到一个上限，才确认哈希表已满，并执行rehash操作。如下图所示（图片来源）：&nbsp;我们不禁要问发生哈希碰撞之前的空间利用率是多少呢？不幸地告诉你，一维数组的哈希表上跟其它哈希函数没什么区别，也就50%而已。但如果是二维的呢？一个改进的哈希表如下图所示，每个桶（bucket）有4路槽位（slot）。当哈希函数映射到同一个bucket中，在其它三路slot未被填满之前，是不会有元素被踢的，这大大缓冲了碰撞的几率。笔者自己的简单实现上测过，采用二维哈希表（4路slot）大约80%的占用率（CMU论文数据据说达到90%以上，应该是扩大了slot关联数目所致）。Cuckoo Filter设计与实现cuckoo hashing的原理介绍完了，下面就来演示一下笔者自己实现的一个cuckoo filter应用，简单易用为主，不到500行C代码。应用场景是这样的：假设有一段文本数据，我们把它通过cuckoo filter导入到一个虚拟的flash中，再把它导出到另一个文本文件中。flash存储的单元页面是一个log_entry，里面包含了一对key/value，value就是文本数据，key就是这段大小的数据的SHA1值（照理说SHA1是可以通过数据源生成，没必要存储到flash，但这里主要为了测试而故意设计的，万一key和value之间没有推导关系呢）。#define SECTOR_SIZE    (1 &lt;&lt; 10)#define DAT_LEN        (SECTOR_SIZE - 20)  /* minus sha1 size *//* The log entries store key-value pairs on flash and the * size of each entry is assumed just one sector fit. */struct log_entry {        uint8_t sha1[20];        uint8_t data[DAT_LEN];};顺便说明一下DAT_LEN设置，之前我们设计了一个虚拟flash（用malloc模拟出来），由于flash的单位是按页大小SECTOR_SIZE读写，这里假设每个log_entry正好一个页大小，当然可以根据实际情况调整。以上是flash的存储结构，至于哈希表里的slot有三个成员tag，status和offset，分别是哈希值，状态值和在flash的偏移位置。其中status有三个枚举值：AVAILIBLE，OCCUPIED，DELETED，分别表示这个slot是空闲的，占用的还是被删除的。至于tag，按理说应该有两个哈希值，对应两个哈希函数，但其中一个已经对应bucket的位置上了，所以我们只要保存另一个备用bucket的位置就行了，这样万一被踢，只要用这个tag就可以找到它的另一个安身之所。enum { AVAILIBLE, OCCUPIED, DELETED, };/* The in-memory hash bucket cache is to filter keys (which is assumed SHA1) via * cuckoo hashing function and map keys to log entries stored on flash. */struct hash_slot_cache {        uint32_t tag : 30;  /* summary of key */        uint32_t status : 2;  /* FSM */        uint32_t offset;  /* offset on flash memory */};乍看之下size有点大是吗？没关系，你也可以根据情况调整数据类型大小，比如uint16_t，这里仅仅为了测试正确性。至于哈希表以及bucket和slot的创建见初始化代码。buckets是一个二级指针，每个bucket指向4个slot大小的缓存，即4路slot，那么bucket_num也就是slot_num的1/4。这里我们故意把slot_num调小了点，为的是测试rehash的发生。#define ASSOC_WAY  (4)  /* 4-way association */struct hash_table {    struct hash_slot_cache **buckets;    struct hash_slot_cache *slots;    uint32_t slot_num;    uint32_t bucket_num;};int cuckoo_filter_init(size_t size){    ...    /* Allocate hash slots */    hash_table.slot_num = nvrom_size / SECTOR_SIZE;    /* Make rehashing happen */    hash_table.slot_num /= 4;    hash_table.slots = calloc(hash_table.slot_num, sizeof(struct hash_slot_cache));    if (hash_table.slots == NULL) {        return -1;    }    /* Allocate hash buckets associated with slots */    hash_table.bucket_num = hash_table.slot_num / ASSOC_WAY;    hash_table.buckets = malloc(hash_table.bucket_num * sizeof(struct hash_slot_cache *));    if (hash_table.buckets == NULL) {        free(hash_table.slots);        return -1;    }    for (i = 0; i &lt; hash_table.bucket_num; i++) {        hash_table.buckets[i] = &amp;hash_table.slots[i * ASSOC_WAY];    }}下面是哈希函数的设计，这里有两个，前面提到既然key是20字节的SHA1值，我们就可以分别是对key的低32位和高32位进行位运算，只要bucket_num满足2的幂次方，我们就可以将key的一部分同bucket_num &#8211; 1相与，就可以定位到相应的bucket位置上，注意bucket_num随着rehash而增大，哈希函数简单的好处是求哈希值十分快。#define cuckoo_hash_lsb(key, count)  (((size_t *)(key))[0] &amp; (count - 1))#define cuckoo_hash_msb(key, count)  (((size_t *)(key))[1] &amp; (count - 1))终于要讲解cuckoo filter最重要的三个操作了——查询、插入还有删除。查询操作是简单的，我们对传进来的参数key进行两次哈希求值tag[0]和tag[1]，并先用tag[0]定位到bucket的位置，从4路slot中再去对比tag[1]。只有比中了tag后，由于只是key的一部分，我们再去从flash中验证完整的key，并把数据在flash中的偏移值read_addr输出返回。相应的，如果bucket[tag[0]]的4路slot都没有比中，我们再去bucket[tag[1]]中比对（代码略），如果还比不中，可以肯定这个key不存在。这种设计的好处就是减少了不必要的flash读操作，每次比对的是内存中的tag而不需要完整的key。static int cuckoo_hash_get(struct hash_table *table, uint8_t *key, uint8_t **read_addr){    int i, j;    uint8_t *addr;    uint32_t tag[2], offset;    struct hash_slot_cache *slot;    tag[0] = cuckoo_hash_lsb(key, table-&gt;bucket_num);    tag[1] = cuckoo_hash_msb(key, table-&gt;bucket_num);    /* Filter the key and verify if it exists. */    slot = table-&amp;gt;buckets[tag[0]];    for (i = 0; i bucket_num) == slot[i].tag) {        if (slot[i].status == OCCUPIED) {            offset = slot[i].offset;            addr = key_verify(key, offset);            if (addr != NULL) {                if (read_addr != NULL) {                    *read_addr = addr;                }                break;            }        } else if (slot[i].status == DELETED) {            return DELETED;        }    }    ...}接下来先将简单的删除操作，之所以简单是因为delete除了将相应slot的状态值设置一下之外，其实什么都没有干，也就是说它不会真正到flash里面去把数据清除掉。为什么？很简单，没有必要。还有一个原因，flash的写操作之前需要擦除整个页面，这种擦除是会折寿的，所以很多flash支持随机读，但必须保持顺序写。static void cuckoo_hash_delete(struct hash_table *table, uint8_t *key){    uint32_t i, j, tag[2];    struct hash_slot_cache *slot;    tag[0] = cuckoo_hash_lsb(key, table-&gt;bucket_num);    tag[1] = cuckoo_hash_msb(key, table-&gt;bucket_num);    slot = table-&gt;buckets[tag[0]];    for (i = 0; i bucket_num) == slot[i].tag) {        slot[i].status = DELETED;        return;    }    ...}了解了flash的读写特性，你就知道为啥插入操作在flash层面要设计成append。不过我们这里不讨论过多flash细节，哈希表层面的插入逻辑其实跟查询差不多，我就不贴代码了。这里要贴的是如何判断并处理碰撞，其实这里也没啥玄机，就是用old_tag和old_offset保存一下临时变量，以便一个元素被踢出去之后还能找到备用的安身之所。但这里会有一个判断，每次踢人都会计数，当alt_cnt大于512时候表示哈希表真的快满了，这时候需要rehash了。static int cuckoo_hash_collide(struct hash_table *table, uint32_t *tag, uint32_t *p_offset){    int i, j, k, alt_cnt;    uint32_t old_tag[2], offset, old_offset;    struct hash_slot_cache *slot;    /* Kick out the old bucket and move it to the alternative bucket. */    offset = *p_offset;    slot = table-&gt;buckets[tag[0]];    old_tag[0] = tag[0];    old_tag[1] = slot[0].tag;    old_offset = slot[0].offset;    slot[0].tag = tag[1];    slot[0].offset = offset;    i = 0 ^ 1;    k = 0;    alt_cnt = 0;KICK_OUT:    slot = table-&gt;buckets[old_tag[i]];    for (j = 0; j &lt; ASSOC_WAY; j++) {        if (offset == INVALID_OFFSET &amp;&amp; slot[j].status == DELETED) {            slot[j].status = OCCUPIED;            slot[j].tag = old_tag[i ^ 1];            *p_offset = offset = slot[j].offset;            break;        } else if (slot[j].status == AVAILIBLE) {            slot[j].status = OCCUPIED;            slot[j].tag = old_tag[i ^ 1];            slot[j].offset = old_offset;            break;        }    }    if (j == ASSOC_WAY) {        if (++alt_cnt &gt; 512) {            if (k == ASSOC_WAY - 1) {                /* Hash table is almost full and needs to be resized */                return 1;            } else {                k++;            }        }        uint32_t tmp_tag = slot[k].tag;        uint32_t tmp_offset = slot[k].offset;        slot[k].tag = old_tag[i ^ 1];        slot[k].offset = old_offset;        old_tag[i ^ 1] = tmp_tag;        old_offset = tmp_offset;        i ^= 1;        goto KICK_OUT;    }    return 0;}rehash的逻辑也很简单，无非就是把哈希表中的buckets和slots重新realloc一下，空间扩展一倍，然后再从flash中的key重新插入到新的哈希表里去。这里有个陷阱要注意，千万不能有相同的key混进来！虽然cuckoo hashing不像开链法那样会退化成O(n)，但由于每个元素有两个哈希值，而且每次计算的哈希值随着哈希表rehash的规模而不同，相同的key并不能立即检测到冲突，但当相同的key达到一定规模后，噩梦就开始了，由于rehash里面有插入操作，一旦在这里触发碰撞，又会触发rehash，这时就是一个rehash不断递归的过程，由于其中老的内存没释放，新的内存不断重新分配，整个程序就如同陷入DoS攻击一般瘫痪了。所以每次插入操作前一定要判断一下key是否已经存在过，并且对rehash里的插入使用碰撞断言防止此类情况发生。笔者在测试中不幸中了这样的彩蛋，调试了大半天才搞清楚原因，搞IT的同学们记住一定要防小人啊~static void cuckoo_rehash(struct hash_table *table){    ...    uint8_t *read_addr = nvrom_base_addr;    uint32_t entries = log_entries;    while (entries--) {        uint8_t key[20];        uint32_t offset = read_addr - nvrom_base_addr;        for (i = 0; i &amp;lt; 20; i++) {            key[i] = flash_read(read_addr);            read_addr++;        }        /* Duplicated keys in hash table which can cause eternal         * hashing collision! Be careful of that!         */        assert(!cuckoo_hash_put(table, key, &amp;offset));        if (cuckoo_hash_get(&amp;old_table, key, NULL) == DELETED) {            cuckoo_hash_delete(table, key);        }        read_addr += DAT_LEN;    }    ...}到此为止代码的逻辑还是比较简单，使用效果如何呢？我来帮你找个大文件unqlite.c测试一下，这是一个嵌入式数据库源代码，共59959行代码。作为需要导入的文件，编译我们的cuckoo filter，然后执行：./cuckoo_db unqlite.c output.c你会发现生成output.c正好也是59959行代码，一分不差，probably yes终于变成了definitely yes。同时也可以看到，cuckoo filter真的很快！如果你想看hashing的整个过程，可以参照README里把调试宏打开。最后，欢迎给这个小玩意提交PR！参考资料Cuckoo Filter的论文和PPT：Cuckoo Filter: Practically Better Than Bloom关注CoolShell微信公众账号可以在手机端搜索文章（转载本站文章请注明作者和出处 酷 壳 &#8211; CoolShell.cn ，请勿用于任何商业用途）——=== 访问 酷壳404页面 寻找遗失儿童。 ===——本广告收入已由广告主捐给Wikipedia相关文章2013年10月09日 伙伴分配器的一个极简实现2011年02月28日 打印质数的各种算法2012年09月07日 无锁队列的实现2012年05月17日 rsync 的核心算法2013年07月14日 二叉树迭代器算法2014年08月06日 谜题的答案和活动的心得体会2014年08月03日 【活动】解迷题送礼物2011年05月04日 可视化的数据结构和算法</content></doc>
<doc>     <docid>183<docid>     <title>Docker基础技术：DeviceMapper</title>     <link>http://coolshell.cn/articles/17200.html</link>     <content>在上一篇介绍AUFS的文章中，大家可以看到，Docker的分层镜像是怎么通过UnionFS这种文件系统做到的，但是，因为Docker首选的AUFS并不在Linux的内核主干里，所以，对于非Ubuntu的Linux分发包，比如CentOS，就无法使用AUFS作为Docker的文件系统了。于是作为第二优先级的DeviceMapper就被拿出来做分层镜像的一个实现。Device Mapper 简介DeviceMapper自Linux 2.6被引入成为了Linux最重要的一个技术。它在内核中支持逻辑卷管理的通用设备映射机制，它为实现用于存储资源管理的块设备驱动提供了一个高度模块化的内核架构，它包含三个重要的对象概念，Mapped Device、Mapping Table、Target device。Mapped Device 是一个逻辑抽象，可以理解成为内核向外提供的逻辑设备，它通过Mapping Table描述的映射关系和 Target Device 建立映射。Target device 表示的是 Mapped Device 所映射的物理空间段，对 Mapped Device 所表示的逻辑设备来说，就是该逻辑设备映射到的一个物理设备。Mapping Table里有 Mapped Device 逻辑的起始地址、范围、和表示在 Target Device 所在物理设备的地址偏移量以及Target 类型等信息（注：这些地址和偏移量都是以磁盘的扇区为单位的，即 512 个字节大小，所以，当你看到128的时候，其实表示的是128*512=64K）。DeviceMapper 中的逻辑设备Mapped Device不但可以映射一个或多个物理设备Target Device，还可以映射另一个Mapped Device，于是，就是构成了一个迭代或递归的情况，就像文件系统中的目录里除了文件还可以有目录，理论上可以无限嵌套下去。DeviceMapper在内核中通过一个一个模块化的 Target Driver 插件实现对 IO 请求的过滤或者重新定向等工作，当前已经实现的插件包括软 Raid、加密、多路径、镜像、快照等，这体现了在 Linux 内核设计中策略和机制分离的原则。如下图所示。从图中，我们可以看到DeviceMapper只是一个框架，在这个框架上，我们可以插入各种各样的策略（让我不自然地想到了面向对象中的策略模式），在这诸多“插件”中，有一个东西叫Thin Provisioning Snapshot，这是Docker使用DeviceMapper中最重要的模块。图片来源：http://people.redhat.com/agk/talks/FOSDEM_2005/Thin Provisioning 简介Thin Provisioning要怎么翻译成中文，真是一件令人头痛的事，我就不翻译了。这个技术是虚拟化技术中的一种。它是什么意思呢？你可以联想一下我们计算机中的内存管理中用到的——“虚拟内存技术”——操作系统给每个进程N多N多用不完的内址地址（32位下，每个进程可以有最多2GB的内存空间），但是呢，我们知道，物理内存是没有那么多的，如果按照进程内存和物理内存一一映射来玩的话，那么，我们得要多少的物理内存啊。所以，操作系统引入了虚拟内存的设计，意思是，我逻辑上给你无限多的内存，但是实际上是实报实销，因为我知道你一定用不了那么多，于是，达到了内存使用率提高的效果。（今天云计算中很多所谓的虚拟化其实完全都是在用和“虚拟内存”相似的Thin Provisioning的技术，所谓的超配，或是超卖）&nbsp;好了，话题拉回来，我们这里说的是存储。看下面两个图（图片来源），第一个是Fat Provisioning，第二个是Thin Provisioning，其很好的说明了是个怎么一回事（和虚拟内存是一个概念） 那么，Docker是怎么使用Thin Provisioning这个技术做到像UnionFS那样的分层镜像的呢？答案是，Docker使用了Thin Provisioning的Snapshot的技术。下面我们来介绍一下Thin Provisioning的Snapshot。Thin Provisioning Snapshot 演示下面，我们用一系列的命令来演示一下Device Mapper的Thin Provisioning Snapshot是怎么玩的。首先，我们需要先建两个文件，一个是data.img，一个是meta.data.img：~hchen$ sudo dd if=/dev/zero of=/tmp/data.img bs=1K count=1 seek=10M1+0 records in1+0 records out1024 bytes (1.0 kB) copied, 0.000621428 s, 1.6 MB/s~hchen$ sudo dd if=/dev/zero of=/tmp/meta.data.img bs=1K count=1 seek=1G1+0 records in1+0 records out1024 bytes (1.0 kB) copied, 0.000140858 s, 7.3 MB/s注意命令中seek选项，其表示为略过of选项指定的输出文件的前10G个output的bloksize的空间后再写入内容。因为bs是1个字节，所以也就是10G的尺寸，但其实在硬盘上是没有占有空间的，占有空间只有1k的内容。当向其写入内容时，才会在硬盘上为其分配空间。我们可以用ls命令看一下，实际分配了12K和4K。~hchen$ sudo ls -lsh /tmp/data.img12K -rw-r--r--. 1 root root 11G Aug 25 23:01 /tmp/data.img~hchen$ sudo ls -slh /tmp/meta.data.img4.0K -rw-r--r--. 1 root root 101M Aug 25 23:17 /tmp/meta.data.img然后，我们为这个文件创建一个loopback设备。（loop2015和loop2016是我乱取的两个名字）~hchen$ sudo losetup /dev/loop2015 /tmp/data.img~hchen$ sudo losetup /dev/loop2016 /tmp/meta.data.img~hchen$ sudo losetup -a/dev/loop2015: [64768]:103991768 (/tmp/data.img)/dev/loop2016: [64768]:103991765 (/tmp/meta.data.img)现在，我们为这个设备建一个Thin Provisioning的Pool，用dmsetup命令：~hchen$ sudo dmsetup create hchen-thin-pool \                  --table &quot;0 20971522 thin-pool /dev/loop2016 /dev/loop2015 \                           128 65536 1 skip_block_zeroing&quot;其中的参数解释如下（更多信息可参看Thin Provisioning的man page）：dmsetup create是用来创建thin pool的命令hchen-thin-pool 是自定义的一个pool名，不冲突就好。&#8211;table是这个pool的参数设置0代表起的sector位置20971522代码结句的sector号，前面说过，一个sector是512字节，所以，20971522个正好是10GB/dev/loop2016是meta文件的设备（前面我们建好了）/dev/loop2015是data文件的设备（前面我们建好了）128是最小的可分配的sector数65536是最少可用sector的water mark，也就是一个threshold1 代表有一个附加参数skip_block_zeroing是个附加参数，表示略过用0填充的块然后，我们就可以看到一个Device Mapper的设备了：~hchen$ sudo ll /dev/mapper/hchen-thin-poollrwxrwxrwx. 1 root root 7 Aug 25 23:24 /dev/mapper/hchen-thin-pool -&gt; ../dm-4接下来，我们的初始还没有完成，还要创建一个Thin Provisioning 的 Volume：~hchen$ sudo dmsetup message /dev/mapper/hchen-thin-pool 0 &quot;create_thin 0&quot;~hchen$ sudo dmsetup create hchen-thin-volumn-001 \            --table &quot;0 2097152 thin /dev/mapper/hchen-thin-pool 0&quot;其中：第一个命令中的create_thin是关键字，后面的0表示这个Volume的device 的 id第二个命令，是真正的为这个Volumn创建一个可以mount的设备，名字叫hchen-thin-volumn-001。2097152只有1GB好了，在mount前，我们还要格式化一下：~hchen$ sudo mkfs.ext4 /dev/mapper/hchen-thin-volumn-001mke2fs 1.42.9 (28-Dec-2013)Discarding device blocks: doneFilesystem label=OS type: LinuxBlock size=4096 (log=2)Fragment size=4096 (log=2)Stride=16 blocks, Stripe width=16 blocks65536 inodes, 262144 blocks13107 blocks (5.00%) reserved for the super userFirst data block=0Maximum filesystem blocks=2684354568 block groups32768 blocks per group, 32768 fragments per group8192 inodes per groupSuperblock backups stored on blocks:32768, 98304, 163840, 229376Allocating group tables: doneWriting inode tables: doneCreating journal (8192 blocks): doneWriting superblocks and filesystem accounting information: done好了，我们可以mount了（下面的命令中，我还创建了一个文件）~hchen$ sudo mkdir -p /mnt/base~hchen$ sudo mount /dev/mapper/hchen-thin-volumn-001 /mnt/base~hchen$ sudo echo &quot;hello world, I am a base&quot; &gt; /mnt/base/id.txt~hchen$ sudo cat /mnt/base/id.txthello world, I am a base好了，接下来，我们来看看snapshot怎么搞：~hchen$ sudo dmsetup message /dev/mapper/hchen-thin-pool 0 &quot;create_snap 1 0&quot;~hchen$ sudo dmsetup create mysnap1 \                   --table &quot;0 2097152 thin /dev/mapper/hchen-thin-pool 1&quot;~hchen$ sudo ll /dev/mapper/mysnap1lrwxrwxrwx. 1 root root 7 Aug 25 23:49 /dev/mapper/mysnap1 -&gt; ../dm-5上面的命令中：第一条命令是向hchen-thin-pool发一个create_snap的消息，后面跟两个id，第一个是新的dev id，第二个是要从哪个已有的dev id上做snapshot（0这个dev id是我们前面就创建了了）第二条命令是创建一个mysnap1的device，并可以被mount。下面我们来看看：~hchen$ sudo mkdir -p /mnt/mysnap1~hchen$ sudo mount /dev/mapper/mysnap1 /mnt/mysnap1~hchen$ sudo ll /mnt/mysnap1/total 20-rw-r--r--. 1 root root 25 Aug 25 23:46 id.txtdrwx------. 2 root root 16384 Aug 25 23:43 lost+found~hchen$ sudo cat /mnt/mysnap1/id.txthello world, I am a base我们来修改一下/mnt/mysnap1/id.txt，并加上一个snap1.txt的文件：~hchen$ sudo echo &quot;I am snap1&quot; &gt;&gt; /mnt/mysnap1/id.txt~hchen$ sudo echo &quot;I am snap1&quot; &gt; /mnt/mysnap1/snap1.txt~hchen$ sudo cat /mnt/mysnap1/id.txthello world, I am a baseI am snap1~hchen$ sudo cat /mnt/mysnap1/snap1.txtI am snap1我们再看一下/mnt/base，你会发现没有什么变化：~hchen$ sudo ls /mnt/baseid.txt      lost+found~hchen$ sudo cat /mnt/base/id.txthello world, I am a base你是不是已经看到了分层镜像的样子了？你还要吧继续在刚才的snapshot上再建一个snapshot~hchen$ sudo dmsetup message /dev/mapper/hchen-thin-pool 0 &quot;create_snap 2 1&quot;~hchen$ sudo dmsetup create mysnap2 \                   --table &quot;0 2097152 thin /dev/mapper/hchen-thin-pool 2&quot;~hchen$ sudo ll /dev/mapper/mysnap2lrwxrwxrwx. 1 root root 7 Aug 25 23:52 /dev/mapper/mysnap1 -&gt; ../dm-7~hchen$ sudo mkdir -p /mnt/mysnap2~hchen$ sudo mount /dev/mapper/mysnap2 /mnt/mysnap2~hchen$ sudo  ls /mnt/mysnap2id.txt  lost+found  snap1.txt 好了，我相信你看到了分层镜像的样子了。看完演示，我们再来补点理论知识吧：Snapshot来自LVM（Logic Volumn Manager），它可以在不中断服务的情况下为某个device打一个快照。Snapshot是Copy-On-Write的，也就是说，只有发生了修改，才会对对应的内存进行拷贝。另外，这里有篇文章Storage thin provisioning benefits and challenges可以前往一读。Docker的DeviceMapper上面基本上就是Docker的玩法了，我们可以看一下docker的loopback设备：~hchen $ sudo losetup -a/dev/loop0: [64768]:38050288 (/var/lib/docker/devicemapper/devicemapper/data)/dev/loop1: [64768]:38050289 (/var/lib/docker/devicemapper/devicemapper/metadata)其中data 100GB，metadata 2.0GB~hchen $ sudo ls -alhs /var/lib/docker/devicemapper/devicemapper506M -rw-------. 1 root root 100G Sep 10 20:15 data1.1M -rw-------. 1 root root 2.0G Sep 10 20:15 metadata 下面是相关的thin-pool。其中，有个当一大串hash串的device是正在启动的容器：~hchen $ sudo ll /dev/mapper/dock*lrwxrwxrwx. 1 root root 7 Aug 25 07:57 /dev/mapper/docker-253:0-104108535-pool -&gt; ../dm-2lrwxrwxrwx. 1 root root 7 Aug 25 11:13 /dev/mapper/docker-253:0-104108535-deefcd630a60aa5ad3e69249f58a68e717324be4258296653406ff062f605edf -&gt; ../dm-3我们可以看一下它的device id（Docker都把它们记下来了）：~hchen $ sudo cat /var/lib/docker/devicemapper/metadata/deefcd630a60aa5ad3e69249f58a68e717324be4258296653406ff062f605edf{&quot;device_id&quot;:24,&quot;size&quot;:10737418240,&quot;transaction_id&quot;:26,&quot;initialized&quot;:false}device_id是24，size是10737418240，除以512，就是20971520 个 sector，我们用这些信息来做个snapshot看看（注：我用了一个比较大的dev id &#8211; 1024）：~hchen$ sudo dmsetup message &quot;/dev/mapper/docker-253:0-104108535-pool&quot; 0 \                                    &quot;create_snap 1024 24&quot;~hchen$ sudo dmsetup create dockersnap --table \                    &quot;0 20971520 thin /dev/mapper/docker-253:0-104108535-pool 1024&quot;~hchen$ sudo mkdir /mnt/docker~hchen$ sudo mount /dev/mapper/dockersnap /mnt/docker/~hchen$ sudo ls /mnt/docker/id lost+found rootfs~hchen$ sudo ls /mnt/docker/rootfs/bin dev etc home lib lib64 lost+found media mnt opt proc root run sbin srv sys tmp usr var我们在docker的容器里用findmnt命令也可以看到相关的mount的情况（因为太长，下面只是摘要）：# findmntTARGET                SOURCE               /                 /dev/mapper/docker-253:0-104108535-deefcd630a60[/rootfs]/etc/resolv.conf  /dev/mapper/centos-root[/var/lib/docker/containers/deefcd630a60/resolv.conf]/etc/hostname     /dev/mapper/centos-root[/var/lib/docker/containers/deefcd630a60/hostname]/etc/hosts        /dev/mapper/centos-root[/var/lib/docker/containers/deefcd630a60/hosts]Device Mapper 行不行？Thin Provisioning的文档中说，这还处理实验阶段，不要上Production.These targets are very much still in the EXPERIMENTAL state. Please do not yet rely on them in production.另外，Jeff Atwood在Twitter上发过这样的一推这个推指向的这个讨论中，其中指向了这个code diff，基本上就是说，DeviceMapper这种东西问题太多了，我们应该把其加入黑名单。Doker的Founder也这样回复到：所以，如果你在使用loopback的devicemapper的话，当你的存储出现了问题后，正确的解决方案是：rm -rf /var/lib/docker（全文完）关注CoolShell微信公众账号可以在手机端搜索文章（转载本站文章请注明作者和出处 酷 壳 &#8211; CoolShell.cn ，请勿用于任何商业用途）——=== 访问 酷壳404页面 寻找遗失儿童。 ===——本广告收入已由广告主捐给Wikipedia相关文章2015年04月17日 Docker基础技术：Linux CGroup2015年08月24日 Docker基础技术：AUFS2015年04月16日 Docker基础技术：Linux Namespace（下）2015年04月16日 Docker基础技术：Linux Namespace（上）2009年03月16日 Linux 相关的资源站makelinux.net2013年01月09日 应该知道的Linux技巧2009年05月10日 十个你可能不曾用过的Linux命令2014年11月21日 vfork 挂掉的一个问题</content></doc>
<doc>     <docid>184<docid>     <title>Docker基础技术：AUFS</title>     <link>http://coolshell.cn/articles/17061.html</link>     <content>AUFS是一种Union File System，所谓UnionFS就是把不同物理位置的目录合并mount到同一个目录中。UnionFS的一个最主要的应用是，把一张CD/DVD和一个硬盘目录给联合 mount在一起，然后，你就可以对这个只读的CD/DVD上的文件进行修改（当然，修改的文件存于硬盘上的目录里）。AUFS又叫Another UnionFS，后来叫Alternative UnionFS，后来可能觉得不够霸气，叫成Advance UnionFS。是个叫Junjiro Okajima（岡島順治郎）在2006年开发的，AUFS完全重写了早期的UnionFS 1.x，其主要目的是为了可靠性和性能，并且引入了一些新的功能，比如可写分支的负载均衡。AUFS在使用上全兼容UnionFS，而且比之前的UnionFS在稳定性和性能上都要好很多，后来的UnionFS 2.x开始抄AUFS中的功能。但是他居然没有进到Linux主干里，就是因为Linus不让，基本上是因为代码量比较多，而且写得烂（相对于只有3000行的union mount和10000行的UnionFS，以及其它平均下来只有6000行代码左右的VFS，AUFS居然有30000行代码），所以，岡島不断地改进代码质量，不断地提交，不断地被Linus拒掉，所以，到今天AUFS都还进不了Linux主干（今天你可以看到AUFS的代码其实还好了，比起OpenSSL好N倍，要么就是Linus对代码的质量要求非常高，要么就是Linus就是不喜欢AUFS）。不过，好在有很多发行版都用了AUFS，比如：Ubuntu 10.04，Debian6.0, Gentoo Live CD支持AUFS，所以，也OK了。好了，扯完这些闲话，我们还是看一个示例吧（环境：Ubuntu 14.04）首先，我们建上两个目录（水果和蔬菜），并在这两个目录中放上一些文件，水果中有苹果和蕃茄，蔬菜有胡萝卜和蕃茄。$ tree.├── fruits│   ├── apple│   └── tomato└── vegetables    ├── carrots    └── tomato然后，我们输入以下命令：# 创建一个mount目录$ mkdir mnt# 把水果目录和蔬菜目录union mount到 ./mnt目录中$ sudo mount -t aufs -o dirs=./fruits:./vegetables none ./mnt#  查看./mnt目录$ tree ./mnt./mnt├── apple├── carrots└── tomato我们可以看到在./mnt目录下有三个文件，苹果apple、胡萝卜carrots和蕃茄tomato。水果和蔬菜的目录被union到了./mnt目录下了。我们来修改一下其中的文件内容：$ echo mnt &gt; ./mnt/apple$ cat ./mnt/applemnt$ cat ./fruits/applemnt上面的示例，我们可以看到./mnt/apple的内容改了，./fruits/apple的内容也改了。$ echo mnt_carrots &gt; ./mnt/carrots$ cat ./vegetables/carrots $ cat ./fruits/carrotsmnt_carrots上面的示例，我们可以看到，我们修改了./mnt/carrots的文件内容，./vegetables/carrots并没有变化，反而是./fruits/carrots的目录中出现了carrots文件，其内容是我们在./mnt/carrots里的内容。也就是说，我们在mount aufs命令中，我们没有指它vegetables和fruits的目录权限，默认上来说，命令行上第一个（最左边）的目录是可读可写的，后面的全都是只读的。（一般来说，最前面的目录应该是可写的，而后面的都应该是只读的）所以，如果我们像下面这样指定权限来mount aufs，你就会发现有不一样的效果（记得先把上面./fruits/carrots的文件删除了）：$ sudo mount -t aufs -o dirs=./fruits=rw:./vegetables=rw none ./mnt$ echo &quot;mnt_carrots&quot; &gt; ./mnt/carrots $ cat ./vegetables/carrotsmnt_carrots$ cat ./fruits/carrotscat: ./fruits/carrots: No such file or directory现在，在这情况下，如果我们要修改./mnt/tomato这个文件，那么究竟是哪个文件会被改写？$ echo &quot;mnt_tomato&quot; &gt; ./mnt/tomato $ cat ./fruits/tomatomnt_tomato$ cat ./vegetables/tomatoI am a vegetable可见，如果有重复的文件名，在mount命令行上，越往前的就优先级越高。你可以用这个例子做一些各种各样的试验，我这里主要是给大家一个感性认识，就不展开试验下去了。那么，这种UnionFS有什么用？历史上，有一个叫Knoppix的Linux发行版，其主要用于Linux演示、光盘教学、系统急救，以及商业产品的演示，不需要硬盘安装，直接把CD/DVD上的image运行在一个可写的存储设备上（比如一个U盘上），其实，也就是把CD/DVD这个文件系统和USB这个可写的系统给联合mount起来，这样你对CD/DVD上的image做的任何改动都会在被应用在U盘上，于是乎，你可以对CD/DVD上的内容进行任意的修改，因为改动都在U盘上，所以你改不坏原来的东西。我们可以再发挥一下想像力，你也可以把一个目录，比如你的源代码，作为一个只读的template，和另一个你的working directory给union在一起，然后你就可以做各种修改而不用害怕会把源代码改坏了。有点像一个ad hoc snapshot。Docker把UnionFS的想像力发挥到了容器的镜像。你是否还记得我在介绍Linux Namespace上篇中用mount namespace和chroot山寨了一镜像。现在当你看过了这个UnionFS的技术后，你是不是就明白了，你完全可以用UnionFS这样的技术做出分层的镜像来。下图来自Docker的官方文档Layer，其很好的展示了Docker用UnionFS搭建的分层镜像。关于docker的分层镜像，除了aufs，docker还支持btrfs, devicemapper和vfs，你可以使用 -s 或 &#8211;storage-driver= 选项来指定相关的镜像存储。在Ubuntu 14.04下，docker默认Ubuntu的 aufs（在CentOS7下，用的是devicemapper，关于devicemapper，我会以以后的文章中讲解）你可以在下面的目录中查看相关的每个层的镜像：/var/lib/docker/aufs/diff/&lt;id&gt; 在docker执行起来后（比如：docker run -it ubuntu /bin/bash ），你可以从/sys/fs/aufs/si_[id]目录下查看aufs的mount的情况，下面是个示例：#ls /sys/fs/aufs/si_b71b209f85ff8e75/br0      br2      br4      br6      brid1    brid3    brid5    xi_pathbr1      br3      br5      brid0    brid2    brid4    brid6 # cat /sys/fs/aufs/si_b71b209f85ff8e75/*/var/lib/docker/aufs/diff/87315f1367e5703f599168d1e17528a0500bd2e2df7d2fe2aaf9595f3697dbd7=rw/var/lib/docker/aufs/diff/87315f1367e5703f599168d1e17528a0500bd2e2df7d2fe2aaf9595f3697dbd7-init=ro+wh/var/lib/docker/aufs/diff/d0955f21bf24f5bfffd32d2d0bb669d0564701c271bc3dfc64cfc5adfdec2d07=ro+wh/var/lib/docker/aufs/diff/9fec74352904baf5ab5237caa39a84b0af5c593dc7cc08839e2ba65193024507=ro+wh/var/lib/docker/aufs/diff/a1a958a248181c9aa6413848cd67646e5afb9797f1a3da5995c7a636f050f537=ro+wh/var/lib/docker/aufs/diff/f3c84ac3a0533f691c9fea4cc2ceaaf43baec22bf8d6a479e069f6d814be9b86=ro+wh/var/lib/docker/aufs/diff/511136ea3c5a64f264b78b5433614aec563103b4d4702f3ba7d4d2698e22c158=ro+wh64656667686970/run/shm/aufs.xino你会看到只有最顶上的层（branch）是rw权限，其它的都是ro+wh权限只读的。关于docker的aufs的配置，你可以在/var/lib/docker/repositories-aufs这个文件中看到。AUFS的一些特性AUFS有所有Union FS的特性，把多个目录，合并成同一个目录，并可以为每个需要合并的目录指定相应的权限，实时的添加、删除、修改已经被mount好的目录。而且，他还能在多个可写的branch/dir间进行负载均衡。上面的例子，我们已经看到AUFS的mount的示例了。下面我们来看一看被union的目录（分支）的相关权限：rw表示可写可读read-write。ro表示read-only，如果你不指权限，那么除了第一个外ro是默认值，对于ro分支，其永远不会收到写操作，也不会收到查找whiteout的操作。rr表示real-read-only，与read-only不同的是，rr标记的是天生就是只读的分支，这样，AUFS可以提高性能，比如不再设置inotify来检查文件变动通知。权限中，我们看到了一个术语：whiteout，下面我来解释一下这个术语。一般来说ro的分支都会有wh的属性，比如 &#8220;[dir]=ro+wh&#8221;。所谓whiteout的意思，如果在union中删除的某个文件，实际上是位于一个readonly的分支（目录）上，那么，在mount的union这个目录中你将看不到这个文件，但是read-only这个层上我们无法做任何的修改，所以，我们就需要对这个readonly目录里的文件作whiteout。AUFS的whiteout的实现是通过在上层的可写的目录下建立对应的whiteout隐藏文件来实现的。看个例子：假设我们有三个目录和文件如下所示（test是个空目录）：# tree.├── fruits│   ├── apple│   └── tomato├── test└── vegetables    ├── carrots    └── tomato我们如下mount：# mkdir mnt# mount -t aufs -o dirs=./test=rw:./fruits=ro:./vegetables=ro none ./mnt# # ls ./mnt/apple  carrots  tomato 现在我们在权限为rw的test目录下建个whiteout的隐藏文件.wh.apple，你就会发现./mnt/apple这个文件就消失了: # touch ./test/.wh.apple# ls ./mntcarrots  tomato上面这个操作和 rm ./mnt/apple是一样的。相关术语Branch – 就是各个要被union起来的目录（就是我在上面使用的dirs的命令行参数）Branch根据被union的顺序形成一个stack，一般来说最上面的是可写的，下面的都是只读的。Branch的stack可以在被mount后进行修改，比如：修改顺序，加入新的branch，或是删除其中的branch，或是直接修改branch的权限Whiteout 和 Opaque如果UnionFS中的某个目录被删除了，那么就应该不可见了，就算是在底层的branch中还有这个目录，那也应该不可见了。Whiteout就是某个上层目录覆盖了下层的相同名字的目录。用于隐藏低层分支的文件，也用于阻止readdir进入低层分支。Opaque的意思就是不允许任何下层的某个目录显示出来。在隐藏低层档的情况下，whiteout的名字是’.wh.&lt;filename&gt;’。在阻止readdir的情况下，名字是’.wh..wh..opq’或者 ’.wh.__dir_opaque’。相关问题看到上面这些，你一定会有几个问题：其一、你可能会问，要有文件在原来的地方被修改了会怎么样？mount的目录会一起改变吗？答案是会的，也可以是不会的。因为你可以指定一个叫udba的参数（全称：User’s Direct Branch Access），这个参数有三个取值：udba=none – 设置上这个参数后，AUFS会运转的更快，因为那些不在mount目录里发生的修改，aufs不会同步过来了，所以会有数据出错的问题。udba=reval – 设置上这个参数后，AUFS会去查文件有没有被更新，如果有的话，就会把修改拉到mount目录内。udba=notify – 这个参数会让AUFS为所有的branch注册inotify，这样可以让AUFS在更新文件修改的性能更高一些。其二、如果有多个rw的branch（目录）被union起来了，那么，当我创建文件的时候，aufs会创建在哪里呢？ aufs提供了一个叫create的参数可以供你来配置相当的创建策略，下面有几个例子。create=rr | round−robin 轮询。下面的示例可以看到，新创建的文件轮流写到三个目录中hchen$ sudo mount -t aufs  -o dirs=./1=rw:./2=rw:./3=rw -o create=rr none ./mnthchen$ touch ./mnt/a ./mnt/b ./mnt/chchen$ tree.├── 1│   └── a├── 2│   └── c└── 3    └── bcreate=mfs[:second] | most−free−space[:second] 选一个可用空间最好的分支。可以指定一个检查可用磁盘空间的时间。create=mfsrr:low[:second] 选一个空间大于low的branch，如果空间小于low了，那么aufs会使用 round-robin 方式。更多的关于AUFS的细节使用参数，大家可以直接在Ubuntu 14.04下通过 man aufs 来看一下其中的各种参数和命令。AUFS的性能AUFS的性能慢吗？也慢也不慢。因为AUFS会把所有的分支mount起来，所以，在查找文件上是比较慢了。因为它要遍历所有的branch。是个O(n)的算法（很明显，这个算法有很大的改进空间的）所以，branch越多，查找文件的性能也就越慢。但是，一旦AUFS找到了这个文件的inode，那后以后的读写和操作原文件基本上是一样的。所以，如果你的程序跑在在AUFS下，open和stat操作会有明显的性能下降，branch越多，性能越差，但是在write/read操作上，性能没有什么变化。IBM的研究中心对Docker的性能给了一份非常不错的性能报告（PDF）《An Updated Performance Comparison of Virtual Machinesand Linux Containers》我截了两张图出来，第一张是顺序读写，第二张是随机读写。基本没有什么性能损失的问题。而KVM在随机读写的情况也就有点慢了（但是，如果硬盘是SSD的呢？）&nbsp;顺序读写&nbsp;随机读写延伸阅读Introduce UnionFSUnion file systems: Implementations, part IUnion file systems: Implementations, part 2Another union filesystem approachUnioning file systems: Architecture, features, and design choices（全文完）关注CoolShell微信公众账号可以在手机端搜索文章（转载本站文章请注明作者和出处 酷 壳 &#8211; CoolShell.cn ，请勿用于任何商业用途）——=== 访问 酷壳404页面 寻找遗失儿童。 ===——本广告收入已由广告主捐给Wikipedia相关文章2015年04月17日 Docker基础技术：Linux CGroup2015年04月16日 Docker基础技术：Linux Namespace（下）2015年08月26日 Docker基础技术：DeviceMapper2015年04月16日 Docker基础技术：Linux Namespace（上）2009年04月13日 Ubuntu的并行启动2009年06月30日 Ksplice Uptrack — Ubuntu更新不用重启2009年05月10日 十个你可能不曾用过的Linux命令2009年08月14日 你用Linux命令行吗？</content></doc>
<doc>     <docid>185<docid>     <title>Docker基础技术：Linux CGroup</title>     <link>http://coolshell.cn/articles/17049.html</link>     <content>前面，我们介绍了Linux Namespace，但是Namespace解决的问题主要是环境隔离的问题，这只是虚拟化中最最基础的一步，我们还需要解决对计算机资源使用上的隔离。也就是说，虽然你通过Namespace把我Jail到一个特定的环境中去了，但是我在其中的进程使用用CPU、内存、磁盘等这些计算资源其实还是可以随心所欲的。所以，我们希望对进程进行资源利用上的限制或控制。这就是Linux CGroup出来了的原因。Linux CGroup全称Linux Control Group， 是Linux内核的一个功能，用来限制，控制与分离一个进程组群的资源（如CPU、内存、磁盘输入输出等）。这个项目最早是由Google的工程师在2006年发起（主要是Paul Menage和Rohit Seth），最早的名称为进程容器（process containers）。在2007年时，因为在Linux内核中，容器（container）这个名词太过广泛，为避免混乱，被重命名为cgroup，并且被合并到2.6.24版的内核中去。然后，其它开始了他的发展。Linux CGroupCgroup 可​​​让​​​您​​​为​​​系​​​统​​​中​​​所​​​运​​​行​​​任​​​务​​​（进​​​程​​​）的​​​用​​​户​​​定​​​义​​​组​​​群​​​分​​​配​​​资​​​源​​​ &#8212; 比​​​如​​​ CPU 时​​​间​​​、​​​系​​​统​​​内​​​存​​​、​​​网​​​络​​​带​​​宽​​​或​​​者​​​这​​​些​​​资​​​源​​​的​​​组​​​合​​​。​​​您​​​可​​​以​​​监​​​控​​​您​​​配​​​置​​​的​​​ cgroup，拒​​​绝​​​ cgroup 访​​​问​​​某​​​些​​​资​​​源​​​，甚​​​至​​​在​​​运​​​行​​​的​​​系​​​统​​​中​​​动​​​态​​​配​​​置​​​您​​​的​​​ cgroup。主要提供了如下功能：Resource limitation: 限制资源使用，比如内存使用上限以及文件系统的缓存限制。Prioritization: 优先级控制，比如：CPU利用和磁盘IO吞吐。Accounting: 一些审计或一些统计，主要目的是为了计费。Control: 挂起进程，恢复执行进程。使​​​用​​​ cgroup，系​​​统​​​管​​​理​​​员​​​可​​​更​​​具​​​体​​​地​​​控​​​制​​​对​​​系​​​统​​​资​​​源​​​的​​​分​​​配​​​、​​​优​​​先​​​顺​​​序​​​、​​​拒​​​绝​​​、​​​管​​​理​​​和​​​监​​​控​​​。​​​可​​​更​​​好​​​地​​​根​​​据​​​任​​​务​​​和​​​用​​​户​​​分​​​配​​​硬​​​件​​​资​​​源​​​，提​​​高​​​总​​​体​​​效​​​率​​​。在实践中，系统管理员一般会利用CGroup做下面这些事（有点像为某个虚拟机分配资源似的）：隔离一个进程集合（比如：nginx的所有进程），并限制他们所消费的资源，比如绑定CPU的核。为这组进程 分配其足够使用的内存为这组进程分配相应的网络带宽和磁盘存储限制限制访问某些设备（通过设置设备的白名单）那么CGroup是怎么干的呢？我们先来点感性认识吧。首先，Linux把CGroup这个事实现成了一个file system，你可以mount。在我的Ubuntu 14.04下，你输入以下命令你就可以看到cgroup已为你mount好了。hchen@ubuntu:~$ mount -t cgroupcgroup on /sys/fs/cgroup/cpuset type cgroup (rw,relatime,cpuset)cgroup on /sys/fs/cgroup/cpu type cgroup (rw,relatime,cpu)cgroup on /sys/fs/cgroup/cpuacct type cgroup (rw,relatime,cpuacct)cgroup on /sys/fs/cgroup/memory type cgroup (rw,relatime,memory)cgroup on /sys/fs/cgroup/devices type cgroup (rw,relatime,devices)cgroup on /sys/fs/cgroup/freezer type cgroup (rw,relatime,freezer)cgroup on /sys/fs/cgroup/blkio type cgroup (rw,relatime,blkio)cgroup on /sys/fs/cgroup/net_prio type cgroup (rw,net_prio)cgroup on /sys/fs/cgroup/net_cls type cgroup (rw,net_cls)cgroup on /sys/fs/cgroup/perf_event type cgroup (rw,relatime,perf_event)cgroup on /sys/fs/cgroup/hugetlb type cgroup (rw,relatime,hugetlb)或者使用lssubsys命令：$ lssubsys  -mcpuset /sys/fs/cgroup/cpusetcpu /sys/fs/cgroup/cpucpuacct /sys/fs/cgroup/cpuacctmemory /sys/fs/cgroup/memorydevices /sys/fs/cgroup/devicesfreezer /sys/fs/cgroup/freezerblkio /sys/fs/cgroup/blkionet_cls /sys/fs/cgroup/net_clsnet_prio /sys/fs/cgroup/net_prioperf_event /sys/fs/cgroup/perf_eventhugetlb /sys/fs/cgroup/hugetlb我们可以看到，在/sys/fs下有一个cgroup的目录，这个目录下还有很多子目录，比如： cpu，cpuset，memory，blkio……这些，这些都是cgroup的子系统。分别用于干不同的事的。如果你没有看到上述的目录，你可以自己mount，下面给了一个示例：mkdir cgroupmount -t tmpfs cgroup_root ./cgroupmkdir cgroup/cpusetmount -t cgroup -ocpuset cpuset ./cgroup/cpuset/mkdir cgroup/cpumount -t cgroup -ocpu cpu ./cgroup/cpu/mkdir cgroup/memorymount -t cgroup -omemory memory ./cgroup/memory/一旦mount成功，你就会看到这些目录下就有好文件了，比如，如下所示的cpu和cpuset的子系统：hchen@ubuntu:~$ ls /sys/fs/cgroup/cpu /sys/fs/cgroup/cpuset/ /sys/fs/cgroup/cpu:cgroup.clone_children  cgroup.sane_behavior  cpu.shares         release_agentcgroup.event_control   cpu.cfs_period_us     cpu.stat           taskscgroup.procs           cpu.cfs_quota_us      notify_on_release  user/sys/fs/cgroup/cpuset/:cgroup.clone_children  cpuset.mem_hardwall             cpuset.sched_load_balancecgroup.event_control   cpuset.memory_migrate           cpuset.sched_relax_domain_levelcgroup.procs           cpuset.memory_pressure          notify_on_releasecgroup.sane_behavior   cpuset.memory_pressure_enabled  release_agentcpuset.cpu_exclusive   cpuset.memory_spread_page       taskscpuset.cpus            cpuset.memory_spread_slab       usercpuset.mem_exclusive   cpuset.mems你可以到/sys/fs/cgroup的各个子目录下去make个dir，你会发现，一旦你创建了一个子目录，这个子目录里又有很多文件了。hchen@ubuntu:/sys/fs/cgroup/cpu$ sudo mkdir haoel[sudo] password for hchen: hchen@ubuntu:/sys/fs/cgroup/cpu$ ls ./haoelcgroup.clone_children  cgroup.procs       cpu.cfs_quota_us  cpu.stat           taskscgroup.event_control   cpu.cfs_period_us  cpu.shares        notify_on_release好了，我们来看几个示例。CPU 限制假设，我们有一个非常吃CPU的程序，叫deadloop，其源码如下：int main(void){    int i = 0;    for(;;) i++;    return 0;}用sudo执行起来后，毫无疑问，CPU被干到了100%（下面是top命令的输出）  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND      3529 root      20   0    4196    736    656 R 99.6  0.1   0:23.13 deadloop   然后，我们这前不是在/sys/fs/cgroup/cpu下创建了一个haoel的group。我们先设置一下这个group的cpu利用的限制：hchen@ubuntu:~# cat /sys/fs/cgroup/cpu/haoel/cpu.cfs_quota_us -1root@ubuntu:~# echo 20000 &gt; /sys/fs/cgroup/cpu/haoel/cpu.cfs_quota_us我们看到，这个进程的PID是3529，我们把这个进程加到这个cgroup中：# echo 3529 &gt;&gt; /sys/fs/cgroup/cpu/haoel/tasks然后，就会在top中看到CPU的利用立马下降成20%了。（前面我们设置的20000就是20%的意思）  PID USER      PR  NI    VIRT    RES    SHR S %CPU %MEM     TIME+ COMMAND      3529 root      20   0    4196    736    656 R 19.9  0.1   8:06.11 deadloop    下面的代码是一个线程的示例：#define _GNU_SOURCE         /* See feature_test_macros(7) */#include &lt;pthread.h&gt;#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;sys/stat.h&gt;#include &lt;sys/types.h&gt;#include &lt;unistd.h&gt;#include &lt;sys/syscall.h&gt;const int NUM_THREADS = 5;void *thread_main(void *threadid){    /* 把自己加入cgroup中（syscall(SYS_gettid)为得到线程的系统tid） */    char cmd[128];    sprintf(cmd, &quot;echo %ld &gt;&gt; /sys/fs/cgroup/cpu/haoel/tasks&quot;, syscall(SYS_gettid));    system(cmd);     sprintf(cmd, &quot;echo %ld &gt;&gt; /sys/fs/cgroup/cpuset/haoel/tasks&quot;, syscall(SYS_gettid));    system(cmd);    long tid;    tid = (long)threadid;    printf(&quot;Hello World! It's me, thread #%ld, pid #%ld!\n&quot;, tid, syscall(SYS_gettid));        int a=0;     while(1) {        a++;    }    pthread_exit(NULL);}int main (int argc, char *argv[]){    int num_threads;    if (argc &gt; 1){        num_threads = atoi(argv[1]);    }    if (num_threads&lt;=0 || num_threads&gt;=100){        num_threads = NUM_THREADS;    }    /* 设置CPU利用率为50% */    mkdir(&quot;/sys/fs/cgroup/cpu/haoel&quot;, 755);    system(&quot;echo 50000 &gt; /sys/fs/cgroup/cpu/haoel/cpu.cfs_quota_us&quot;);    mkdir(&quot;/sys/fs/cgroup/cpuset/haoel&quot;, 755);    /* 限制CPU只能使用#2核和#3核 */    system(&quot;echo \&quot;2,3\&quot; &gt; /sys/fs/cgroup/cpuset/haoel/cpuset.cpus&quot;);    pthread_t* threads = (pthread_t*) malloc (sizeof(pthread_t)*num_threads);    int rc;    long t;    for(t=0; t&lt;num_threads; t++){        printf(&quot;In main: creating thread %ld\n&quot;, t);        rc = pthread_create(&amp;threads[t], NULL, thread_main, (void *)t);        if (rc){            printf(&quot;ERROR; return code from pthread_create() is %d\n&quot;, rc);            exit(-1);        }    }    /* Last thing that main() should do */    pthread_exit(NULL);    free(threads);}内存使用限制我们再来看一个限制内存的例子（下面的代码是个死循环，其它不断的分配内存，每次512个字节，每次休息一秒）：#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;string.h&gt;#include &lt;sys/types.h&gt;#include &lt;unistd.h&gt;int main(void){    int size = 0;    int chunk_size = 512;    void *p = NULL;    while(1) {        if ((p = malloc(p, chunk_size)) == NULL) {            printf(&quot;out of memory!!\n&quot;);            break;        }        memset(p, 1, chunk_size);        size += chunk_size;        printf(&quot;[%d] - memory is allocated [%8d] bytes \n&quot;, getpid(), size);        sleep(1);    }    return 0;}然后，在我们另外一边：# 创建memory cgroup$ mkdir /sys/fs/cgroup/memory/haoel$ echo 64k &gt; /sys/fs/cgroup/memory/haoel/memory.limit_in_bytes# 把上面的进程的pid加入这个cgroup$ echo [pid] &gt; /sys/fs/cgroup/memory/haoel/tasks 你会看到，一会上面的进程就会因为内存问题被kill掉了。磁盘I/O限制我们先看一下我们的硬盘IO，我们的模拟命令如下：（从/dev/sda1上读入数据，输出到/dev/null上）sudo dd if=/dev/sda1 of=/dev/null我们通过iotop命令我们可以看到相关的IO速度是55MB/s（虚拟机内）：  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO&gt;    COMMAND           8128 be/4 root       55.74 M/s    0.00 B/s  0.00 % 85.65 % dd if=/de~=/dev/null...然后，我们先创建一个blkio（块设备IO）的cgroupmkdir /sys/fs/cgroup/blkio/haoel并把读IO限制到1MB/s，并把前面那个dd命令的pid放进去（注：8:0 是设备号，你可以通过ls -l /dev/sda1获得）：root@ubuntu:~# echo '8:0 1048576'  &gt; /sys/fs/cgroup/blkio/haoel/blkio.throttle.read_bps_device root@ubuntu:~# echo 8128 &gt; /sys/fs/cgroup/blkio/haoel/tasks再用iotop命令，你马上就能看到读速度被限制到了1MB/s左右。  TID  PRIO  USER     DISK READ  DISK WRITE  SWAPIN     IO&gt;    COMMAND           8128 be/4 root      973.20 K/s    0.00 B/s  0.00 % 94.41 % dd if=/de~=/dev/null...CGroup的子系统好了，有了以上的感性认识我们来，我们来看看control group有哪些子系统：blkio &#8212; 这​​​个​​​子​​​系​​​统​​​为​​​块​​​设​​​备​​​设​​​定​​​输​​​入​​​/输​​​出​​​限​​​制​​​，比​​​如​​​物​​​理​​​设​​​备​​​（磁​​​盘​​​，固​​​态​​​硬​​​盘​​​，USB 等​​​等​​​）。cpu &#8212; 这​​​个​​​子​​​系​​​统​​​使​​​用​​​调​​​度​​​程​​​序​​​提​​​供​​​对​​​ CPU 的​​​ cgroup 任​​​务​​​访​​​问​​​。​​​cpuacct &#8212; 这​​​个​​​子​​​系​​​统​​​自​​​动​​​生​​​成​​​ cgroup 中​​​任​​​务​​​所​​​使​​​用​​​的​​​ CPU 报​​​告​​​。​​​cpuset &#8212; 这​​​个​​​子​​​系​​​统​​​为​​​ cgroup 中​​​的​​​任​​​务​​​分​​​配​​​独​​​立​​​ CPU（在​​​多​​​核​​​系​​​统​​​）和​​​内​​​存​​​节​​​点​​​。​​​devices &#8212; 这​​​个​​​子​​​系​​​统​​​可​​​允​​​许​​​或​​​者​​​拒​​​绝​​​ cgroup 中​​​的​​​任​​​务​​​访​​​问​​​设​​​备​​​。​​​freezer &#8212; 这​​​个​​​子​​​系​​​统​​​挂​​​起​​​或​​​者​​​恢​​​复​​​ cgroup 中​​​的​​​任​​​务​​​。​​​memory &#8212; 这​​​个​​​子​​​系​​​统​​​设​​​定​​​ cgroup 中​​​任​​​务​​​使​​​用​​​的​​​内​​​存​​​限​​​制​​​，并​​​自​​​动​​​生​​​成​​​​​内​​​存​​​资​​​源使用​​​报​​​告​​​。​​​net_cls &#8212; 这​​​个​​​子​​​系​​​统​​​使​​​用​​​等​​​级​​​识​​​别​​​符​​​（classid）标​​​记​​​网​​​络​​​数​​​据​​​包​​​，可​​​允​​​许​​​ Linux 流​​​量​​​控​​​制​​​程​​​序​​​（tc）识​​​别​​​从​​​具​​​体​​​ cgroup 中​​​生​​​成​​​的​​​数​​​据​​​包​​​。​​​net_prio &#8212; 这个子系统用来设计网络流量的优先级hugetlb &#8212; 这个子系统主要针对于HugeTLB系统进行限制，这是一个大页文件系统。​​​注意，你可能在Ubuntu 14.04下看不到net_cls和net_prio这两个cgroup，你需要手动mount一下：$ sudo modprobe cls_cgroup$ sudo mkdir /sys/fs/cgroup/net_cls$ sudo mount -t cgroup -o net_cls none /sys/fs/cgroup/net_cls$ sudo modprobe netprio_cgroup$ sudo mkdir /sys/fs/cgroup/net_prio$ sudo mount -t cgroup -o net_prio none /sys/fs/cgroup/net_prio关于各个子系统的参数细节，以及更多的Linux CGroup的文档，你可以看看下面的文档：Linux Kernel的官方文档Redhat的官方文档CGroup的术语CGroup有下述术语：任务（Tasks）：就是系统的一个进程。控制组（Control Group）：一组按照某种标准划分的进程，比如官方文档中的Professor和Student，或是WWW和System之类的，其表示了某进程组。Cgroups中的资源控制都是以控制组为单位实现。一个进程可以加入到某个控制组。而资源的限制是定义在这个组上，就像上面示例中我用的haoel一样。简单点说，cgroup的呈现就是一个目录带一系列的可配置文件。层级（Hierarchy）：控制组可以组织成hierarchical的形式，既一颗控制组的树（目录结构）。控制组树上的子节点继承父结点的属性。简单点说，hierarchy就是在一个或多个子系统上的cgroups目录树。子系统（Subsystem）：一个子系统就是一个资源控制器，比如CPU子系统就是控制CPU时间分配的一个控制器。子系统必须附加到一个层级上才能起作用，一个子系统附加到某个层级以后，这个层级上的所有控制族群都受到这个子系统的控制。Cgroup的子系统可以有很多，也在不断增加中。下一代的CGroup上面，我们可以看到，CGroup的一些常用方法和相关的术语。一般来说，这样的设计在一般情况下还是没什么问题的，除了操作上的用户体验不是很好，但基本满足我们的一般需求了。不过，对此，有个叫Tejun Heo的同学非常不爽，他在Linux社区里对cgroup吐了一把槽，还引发了内核组的各种讨论。对于Tejun Heo同学来说，cgroup设计的相当糟糕。他给出了些例子，大意就是说，如果有多种层级关系，也就是说有多种对进程的分类方式，比如，我们可以按用户来分，分成Professor和Student，同时，也有按应用类似来分的，比如WWW和NFS等。那么，当一个进程即是Professor的，也是WWW的，那么就会出现多层级正交的情况，从而出现对进程上管理的混乱。另外，一个case是，如果有一个层级A绑定cpu，而层级B绑定memory，还有一个层级C绑定cputset，而有一些进程有的需要AB，有的需要AC，有的需要ABC，管理起来就相当不易。 层级操作起来比较麻烦，而且如果层级变多，更不易于操作和管理，虽然那种方式很好实现，但是在使用上有很多的复杂度。你可以想像一个图书馆的图书分类问题，你可以有各种不同的分类，分类和图书就是一种多对多的关系。所以，在Kernel 3.16后，引入了unified hierarchy的新的设计，这个东西引入了一个叫__DEVEL__sane_behavior的特性（这个名字很明显意味目前还在开发试验阶段），它可以把所有子系统都挂载到根层级下，只有叶子节点可以存在tasks，非叶子节点只进行资源控制。我们mount一下看看：$ sudo mount -t cgroup -o __DEVEL__sane_behavior cgroup ./cgroup$ ls ./cgroupcgroup.controllers  cgroup.procs  cgroup.sane_behavior  cgroup.subtree_control $ cat ./cgroup/cgroup.controllerscpuset cpu cpuacct memory devices freezer net_cls blkio perf_event net_prio hugetlb我们可以看到有四个文件，然后，你在这里mkdir一个子目录，里面也会有这四个文件。上级的cgroup.subtree_control控制下级的cgroup.controllers。举个例子：假设我们有以下的目录结构，b代表blkio，m代码memory，其中，A是root，包括所有的子系统（）。# A(b,m) - B(b,m) - C (b)#               \ - D (b) - E# 下面的命令中， +表示enable， -表示disable# 在B上的enable blkio# echo +blkio &gt; A/cgroup.subtree_control# 在C和D上enable blkio # echo +blkio &gt; A/B/cgroup.subtree_control# 在B上enable memory  # echo +memory &gt; A/cgroup.subtree_control在上述的结构中，cgroup只有上线控制下级，无法传递到下下级。所以，C和D中没有memory的限制，E中没有blkio和memory的限制。而本层的cgroup.controllers文件是个只读的，其中的内容就看上级的subtree_control里有什么了。任何被配置过subtree_control的目录都不能绑定进程，根结点除外。所以，A,C,D,E可以绑上进程，但是B不行。我们可以看到，这种方式干净的区分开了两个事，一个是进程的分组，一个是对分组的资源控制（以前这两个事完全混在一起），在目录继承上增加了些限制，这样可以避免一些模棱两可的情况。当然，这个事还在演化中，cgroup的这些问题这个事目前由cgroup的吐槽人Tejun Heo和华为的Li Zefan同学负责解决中。总之，这是一个系统管理上的问题，而且改变会影响很多东西，但一旦方案确定，老的cgroup方式将一去不复返。参考Linux Kernel Cgroup DocumentsReahat Resource Management GuideFixing control groupsThe unified control group hierarchy in 3.16Cgroup v2(PDF)（全文完）关注CoolShell微信公众账号可以在手机端搜索文章（转载本站文章请注明作者和出处 酷 壳 &#8211; CoolShell.cn ，请勿用于任何商业用途）——=== 访问 酷壳404页面 寻找遗失儿童。 ===——本广告收入已由广告主捐给Wikipedia相关文章2015年08月24日 Docker基础技术：AUFS2015年08月26日 Docker基础技术：DeviceMapper2015年04月16日 Docker基础技术：Linux Namespace（下）2015年04月16日 Docker基础技术：Linux Namespace（上）2012年06月20日 性能调优攻略2013年01月09日 应该知道的Linux技巧2014年11月21日 vfork 挂掉的一个问题2009年05月10日 十个你可能不曾用过的Linux命令</content></doc>
<doc>     <docid>186<docid>     <title>Docker基础技术：Linux Namespace（上）</title>     <link>http://coolshell.cn/articles/17010.html</link>     <content>时下最热的技术莫过于Docker了，很多人都觉得Docker是个新技术，其实不然，Docker除了其编程语言用go比较新外，其实它还真不是个新东西，也就是个新瓶装旧酒的东西，所谓的The New &#8220;Old Stuff&#8221;。Docker和Docker衍生的东西用到了很多很酷的技术，我会用几篇 文章来把这些技术给大家做个介绍，希望通过这些文章大家可以自己打造一个山寨版的docker。当然，文章的风格一定会尊重时下的“流行”——我们再也没有整块整块的时间去看书去专研，而我们只有看微博微信那样的碎片时间（那怕我们有整块的时间，也被那些在手机上的APP碎片化了）。所以，这些文章的风格必然坚持“马桶风格”（希望简单到占用你拉一泡屎就时间，而且你还不用动脑子，并能学到些东西）废话少说，我们开始。先从Linux Namespace开始。 简介Linux Namespace是Linux提供的一种内核级别环境隔离的方法。不知道你是否还记得很早以前的Unix有一个叫chroot的系统调用（通过修改根目录把用户jail到一个特定目录下），chroot提供了一种简单的隔离模式：chroot内部的文件系统无法访问外部的内容。Linux Namespace在此基础上，提供了对UTS、IPC、mount、PID、network、User等的隔离机制。举个例子，我们都知道，Linux下的超级父亲进程的PID是1，所以，同chroot一样，如果我们可以把用户的进程空间jail到某个进程分支下，并像chroot那样让其下面的进程 看到的那个超级父进程的PID为1，于是就可以达到资源隔离的效果了（不同的PID namespace中的进程无法看到彼此）Linux Namespace 有如下种类，官方文档在这里《Namespace in Operation》分类系统调用参数相关内核版本Mount namespacesCLONE_NEWNSLinux 2.4.19UTS namespacesCLONE_NEWUTSLinux 2.6.19IPC namespacesCLONE_NEWIPCLinux 2.6.19PID namespacesCLONE_NEWPIDLinux 2.6.24Network namespacesCLONE_NEWNET始于Linux 2.6.24 完成于 Linux 2.6.29User namespacesCLONE_NEWUSER始于 Linux 2.6.23 完成于 Linux 3.8)主要是三个系统调用clone() &#8211; 实现线程的系统调用，用来创建一个新的进程，并可以通过设计上述参数达到隔离。unshare() &#8211; 使某进程脱离某个namespacesetns() &#8211; 把某进程加入到某个namespaceunshare() 和 setns() 都比较简单，大家可以自己man，我这里不说了。下面还是让我们来看一些示例（以下的测试程序最好在Linux 内核为3.8以上的版本中运行，我用的是ubuntu 14.04）。clone()系统调用首先，我们来看一下一个最简单的clone()系统调用的示例，（后面，我们的程序都会基于这个程序做修改）：#define _GNU_SOURCE#include &lt;sys/types.h&gt;#include &lt;sys/wait.h&gt;#include &lt;stdio.h&gt;#include &lt;sched.h&gt;#include &lt;signal.h&gt;#include &lt;unistd.h&gt;/* 定义一个给 clone 用的栈，栈大小1M */#define STACK_SIZE (1024 * 1024)static char container_stack[STACK_SIZE];char* const container_args[] = {    &quot;/bin/bash&quot;,    NULL};int container_main(void* arg){    printf(&quot;Container - inside the container!\n&quot;);    /* 直接执行一个shell，以便我们观察这个进程空间里的资源是否被隔离了 */    execv(container_args[0], container_args);     printf(&quot;Something's wrong!\n&quot;);    return 1;}int main(){    printf(&quot;Parent - start a container!\n&quot;);    /* 调用clone函数，其中传出一个函数，还有一个栈空间的（为什么传尾指针，因为栈是反着的） */    int container_pid = clone(container_main, container_stack+STACK_SIZE, SIGCHLD, NULL);    /* 等待子进程结束 */    waitpid(container_pid, NULL, 0);    printf(&quot;Parent - container stopped!\n&quot;);    return 0;}从上面的程序，我们可以看到，这和pthread基本上是一样的玩法。但是，对于上面的程序，父子进程的进程空间是没有什么差别的，父进程能访问到的子进程也能。下面， 让我们来看几个例子看看，Linux的Namespace是什么样的。UTS Namespace下面的代码，我略去了上面那些头文件和数据结构的定义，只有最重要的部分。int container_main(void* arg){    printf(&quot;Container - inside the container!\n&quot;);    sethostname(&quot;container&quot;,10); /* 设置hostname */    execv(container_args[0], container_args);    printf(&quot;Something's wrong!\n&quot;);    return 1;}int main(){    printf(&quot;Parent - start a container!\n&quot;);    int container_pid = clone(container_main, container_stack+STACK_SIZE,             CLONE_NEWUTS | SIGCHLD, NULL); /*启用CLONE_NEWUTS Namespace隔离 */    waitpid(container_pid, NULL, 0);    printf(&quot;Parent - container stopped!\n&quot;);    return 0;}运行上面的程序你会发现（需要root权限），子进程的hostname变成了 container。hchen@ubuntu:~$ sudo ./utsParent - start a container!Container - inside the container!root@container:~# hostnamecontainerroot@container:~# uname -ncontainerIPC NamespaceIPC全称 Inter-Process Communication，是Unix/Linux下进程间通信的一种方式，IPC有共享内存、信号量、消息队列等方法。所以，为了隔离，我们也需要把IPC给隔离开来，这样，只有在同一个Namespace下的进程才能相互通信。如果你熟悉IPC的原理的话，你会知道，IPC需要有一个全局的ID，即然是全局的，那么就意味着我们的Namespace需要对这个ID隔离，不能让别的Namespace的进程看到。要启动IPC隔离，我们只需要在调用clone时加上CLONE_NEWIPC参数就可以了。int container_pid = clone(container_main, container_stack+STACK_SIZE,             CLONE_NEWUTS | CLONE_NEWIPC | SIGCHLD, NULL); 首先，我们先创建一个IPC的Queue（如下所示，全局的Queue ID是0）hchen@ubuntu:~$ ipcmk -Q Message queue id: 0hchen@ubuntu:~$ ipcs -q------ Message Queues --------key        msqid      owner      perms      used-bytes   messages    0xd0d56eb2 0          hchen      644        0            0    如果我们运行没有CLONE_NEWIPC的程序，我们会看到，在子进程中还是能看到这个全启的IPC Queue。hchen@ubuntu:~$ sudo ./uts Parent - start a container!Container - inside the container!root@container:~# ipcs -q------ Message Queues --------key        msqid      owner      perms      used-bytes   messages    0xd0d56eb2 0          hchen      644        0            0    但是，如果我们运行加上了CLONE_NEWIPC的程序，我们就会下面的结果：root@ubuntu:~$ sudo./ipcParent - start a container!Container - inside the container!root@container:~/linux_namespace# ipcs -q------ Message Queues --------key        msqid      owner      perms      used-bytes   messages    我们可以看到IPC已经被隔离了。PID Namespace我们继续修改上面的程序：int container_main(void* arg){    /* 查看子进程的PID，我们可以看到其输出子进程的 pid 为 1 */    printf(&quot;Container [%5d] - inside the container!\n&quot;, getpid());    sethostname(&quot;container&quot;,10);    execv(container_args[0], container_args);    printf(&quot;Something's wrong!\n&quot;);    return 1;}int main(){    printf(&quot;Parent [%5d] - start a container!\n&quot;, getpid());    /*启用PID namespace - CLONE_NEWPID*/    int container_pid = clone(container_main, container_stack+STACK_SIZE,             CLONE_NEWUTS | CLONE_NEWPID | SIGCHLD, NULL);     waitpid(container_pid, NULL, 0);    printf(&quot;Parent - container stopped!\n&quot;);    return 0;}运行结果如下（我们可以看到，子进程的pid是1了）：hchen@ubuntu:~$ sudo ./pidParent [ 3474] - start a container!Container [    1] - inside the container!root@container:~# echo $$1你可能会问，PID为1有个毛用啊？我们知道，在传统的UNIX系统中，PID为1的进程是init，地位非常特殊。他作为所有进程的父进程，有很多特权（比如：屏蔽信号等），另外，其还会为检查所有进程的状态，我们知道，如果某个子进程脱离了父进程（父进程没有wait它），那么init就会负责回收资源并结束这个子进程。所以，要做到进程空间的隔离，首先要创建出PID为1的进程，最好就像chroot那样，把子进程的PID在容器内变成1。但是，我们会发现，在子进程的shell里输入ps,top等命令，我们还是可以看得到所有进程。说明并没有完全隔离。这是因为，像ps, top这些命令会去读/proc文件系统，所以，因为/proc文件系统在父进程和子进程都是一样的，所以这些命令显示的东西都是一样的。所以，我们还需要对文件系统进行隔离。Mount Namespace下面的例程中，我们在启用了mount namespace并在子进程中重新mount了/proc文件系统。int container_main(void* arg){    printf(&quot;Container [%5d] - inside the container!\n&quot;, getpid());    sethostname(&quot;container&quot;,10);    /* 重新mount proc文件系统到 /proc下 */    system(&quot;mount -t proc proc /proc&quot;);    execv(container_args[0], container_args);    printf(&quot;Something's wrong!\n&quot;);    return 1;}int main(){    printf(&quot;Parent [%5d] - start a container!\n&quot;, getpid());    /* 启用Mount Namespace - 增加CLONE_NEWNS参数 */    int container_pid = clone(container_main, container_stack+STACK_SIZE,             CLONE_NEWUTS | CLONE_NEWPID | CLONE_NEWNS | SIGCHLD, NULL);    waitpid(container_pid, NULL, 0);    printf(&quot;Parent - container stopped!\n&quot;);    return 0;}运行结果如下：hchen@ubuntu:~$ sudo ./pid.mntParent [ 3502] - start a container!Container [    1] - inside the container!root@container:~# ps -elf F S UID        PID  PPID  C PRI  NI ADDR SZ WCHAN  STIME TTY          TIME CMD4 S root         1     0  0  80   0 -  6917 wait   19:55 pts/2    00:00:00 /bin/bash0 R root        14     1  0  80   0 -  5671 -      19:56 pts/2    00:00:00 ps -elf上面，我们可以看到只有两个进程 ，而且pid=1的进程是我们的/bin/bash。我们还可以看到/proc目录下也干净了很多：root@container:~# ls /proc1          dma          key-users   net            sysvipc16         driver       kmsg        pagetypeinfo   timer_listacpi       execdomains  kpagecount  partitions     timer_statsasound     fb           kpageflags  sched_debug    ttybuddyinfo  filesystems  loadavg     schedstat      uptimebus        fs           locks       scsi           versioncgroups    interrupts   mdstat      self           version_signaturecmdline    iomem        meminfo     slabinfo       vmallocinfoconsoles   ioports      misc        softirqs       vmstatcpuinfo    irq          modules     stat           zoneinfocrypto     kallsyms     mounts      swapsdevices    kcore        mpt         sysdiskstats  keys         mtrr        sysrq-trigger下图，我们也可以看到在子进程中的top命令只看得到两个进程了。这里，多说一下。在通过CLONE_NEWNS创建mount namespace后，父进程会把自己的文件结构复制给子进程中。而子进程中新的namespace中的所有mount操作都只影响自身的文件系统，而不对外界产生任何影响。这样可以做到比较严格地隔离。<!--另外，如果你熟悉mount命令，你会知道，mount命令有以下这些参数：--make-shared ： 共享方式的mount，主要是为了文件的共享和镜像。--make-slave ： 这种mount方式更大的意义是为了“只读”的场景，也就是从动式的mount。--make-private：这种mount方式主要就是为了隔离。如proc文件系统。--make-unbindable：标记为不可绑定。-->你可能会问，我们是不是还有别的一些文件系统也需要这样mount? 是的。Docker的 Mount Namespace下面我将向演示一个“山寨镜像”，其模仿了Docker的Mount Namespace。首先，我们需要一个rootfs，也就是我们需要把我们要做的镜像中的那些命令什么的copy到一个rootfs的目录下，我们模仿Linux构建如下的目录：hchen@ubuntu:~/rootfs$ lsbin  dev  etc  home  lib  lib64  mnt  opt  proc  root  run  sbin  sys  tmp  usr  var然后，我们把一些我们需要的命令copy到 rootfs/bin目录中（sh命令必需要copy进去，不然我们无法 chroot ）hchen@ubuntu:~/rootfs$ ls ./bin ./usr/bin ./bin:bash   chown  gzip      less  mount       netstat  rm     tabs  tee      top       ttycat    cp     hostname  ln    mountpoint  ping     sed    tac   test     touch     umountchgrp  echo   ip        ls    mv          ps       sh     tail  timeout  tr        unamechmod  grep   kill      more  nc          pwd      sleep  tar   toe      truncate  which./usr/bin:awk  env  groups  head  id  mesg  sort  strace  tail  top  uniq  vi  wc  xargs注：你可以使用ldd命令把这些命令相关的那些so文件copy到对应的目录：hchen@ubuntu:~/rootfs/bin$ ldd bash	linux-vdso.so.1 =&gt;  (0x00007fffd33fc000)	libtinfo.so.5 =&gt; /lib/x86_64-linux-gnu/libtinfo.so.5 (0x00007f4bd42c2000)	libdl.so.2 =&gt; /lib/x86_64-linux-gnu/libdl.so.2 (0x00007f4bd40be000)	libc.so.6 =&gt; /lib/x86_64-linux-gnu/libc.so.6 (0x00007f4bd3cf8000)	/lib64/ld-linux-x86-64.so.2 (0x00007f4bd4504000)下面是我的rootfs中的一些so文件：hchen@ubuntu:~/rootfs$ ls ./lib64 ./lib/x86_64-linux-gnu/./lib64:ld-linux-x86-64.so.2./lib/x86_64-linux-gnu/:libacl.so.1      libmemusage.so         libnss_files-2.19.so    libpython3.4m.so.1libacl.so.1.1.0  libmount.so.1          libnss_files.so.2       libpython3.4m.so.1.0libattr.so.1     libmount.so.1.1.0      libnss_hesiod-2.19.so   libresolv-2.19.solibblkid.so.1    libm.so.6              libnss_hesiod.so.2      libresolv.so.2libc-2.19.so     libncurses.so.5        libnss_nis-2.19.so      libselinux.so.1libcap.a         libncurses.so.5.9      libnss_nisplus-2.19.so  libtinfo.so.5libcap.so        libncursesw.so.5       libnss_nisplus.so.2     libtinfo.so.5.9libcap.so.2      libncursesw.so.5.9     libnss_nis.so.2         libutil-2.19.solibcap.so.2.24   libnsl-2.19.so         libpcre.so.3            libutil.so.1libc.so.6        libnsl.so.1            libprocps.so.3          libuuid.so.1libdl-2.19.so    libnss_compat-2.19.so  libpthread-2.19.so      libz.so.1libdl.so.2       libnss_compat.so.2     libpthread.so.0libgpm.so.2      libnss_dns-2.19.so     libpython2.7.so.1libm-2.19.so     libnss_dns.so.2        libpython2.7.so.1.0包括这些命令依赖的一些配置文件：hchen@ubuntu:~/rootfs$ ls ./etcbash.bashrc  group  hostname  hosts  ld.so.cache  nsswitch.conf  passwd  profile  resolv.conf  shadow你现在会说，我靠，有些配置我希望是在容器起动时给他设置的，而不是hard code在镜像中的。比如：/etc/hosts，/etc/hostname，还有DNS的/etc/resolv.conf文件。好的。那我们在rootfs外面，我们再创建一个conf目录，把这些文件放到这个目录中。hchen@ubuntu:~$ ls ./confhostname     hosts     resolv.conf这样，我们的父进程就可以动态地设置容器需要的这些文件的配置， 然后再把他们mount进容器，这样，容器的镜像中的配置就比较灵活了。好了，终于到了我们的程序。#define _GNU_SOURCE#include &lt;sys/types.h&gt;#include &lt;sys/wait.h&gt;#include &lt;sys/mount.h&gt;#include &lt;stdio.h&gt;#include &lt;sched.h&gt;#include &lt;signal.h&gt;#include &lt;unistd.h&gt;#define STACK_SIZE (1024 * 1024)static char container_stack[STACK_SIZE];char* const container_args[] = {    &quot;/bin/bash&quot;,    &quot;-l&quot;,    NULL};int container_main(void* arg){    printf(&quot;Container [%5d] - inside the container!\n&quot;, getpid());    //set hostname    sethostname(&quot;container&quot;,10);    //remount &quot;/proc&quot; to make sure the &quot;top&quot; and &quot;ps&quot; show container's information    if (mount(&quot;proc&quot;, &quot;rootfs/proc&quot;, &quot;proc&quot;, 0, NULL) !=0 ) {        perror(&quot;proc&quot;);    }    if (mount(&quot;sysfs&quot;, &quot;rootfs/sys&quot;, &quot;sysfs&quot;, 0, NULL)!=0) {        perror(&quot;sys&quot;);    }    if (mount(&quot;none&quot;, &quot;rootfs/tmp&quot;, &quot;tmpfs&quot;, 0, NULL)!=0) {        perror(&quot;tmp&quot;);    }    if (mount(&quot;udev&quot;, &quot;rootfs/dev&quot;, &quot;devtmpfs&quot;, 0, NULL)!=0) {        perror(&quot;dev&quot;);    }    if (mount(&quot;devpts&quot;, &quot;rootfs/dev/pts&quot;, &quot;devpts&quot;, 0, NULL)!=0) {        perror(&quot;dev/pts&quot;);    }    if (mount(&quot;shm&quot;, &quot;rootfs/dev/shm&quot;, &quot;tmpfs&quot;, 0, NULL)!=0) {        perror(&quot;dev/shm&quot;);    }    if (mount(&quot;tmpfs&quot;, &quot;rootfs/run&quot;, &quot;tmpfs&quot;, 0, NULL)!=0) {        perror(&quot;run&quot;);    }    /*      * 模仿Docker的从外向容器里mount相关的配置文件      * 你可以查看：/var/lib/docker/containers/&lt;container_id&gt;/目录，     * 你会看到docker的这些文件的。     */    if (mount(&quot;conf/hosts&quot;, &quot;rootfs/etc/hosts&quot;, &quot;none&quot;, MS_BIND, NULL)!=0 ||          mount(&quot;conf/hostname&quot;, &quot;rootfs/etc/hostname&quot;, &quot;none&quot;, MS_BIND, NULL)!=0 ||          mount(&quot;conf/resolv.conf&quot;, &quot;rootfs/etc/resolv.conf&quot;, &quot;none&quot;, MS_BIND, NULL)!=0 ) {        perror(&quot;conf&quot;);    }    /* 模仿docker run命令中的 -v, --volume=[] 参数干的事 */    if (mount(&quot;/tmp/t1&quot;, &quot;rootfs/mnt&quot;, &quot;none&quot;, MS_BIND, NULL)!=0) {        perror(&quot;mnt&quot;);    }    /* chroot 隔离目录 */    if ( chdir(&quot;./rootfs&quot;) != 0 || chroot(&quot;./&quot;) != 0 ){        perror(&quot;chdir/chroot&quot;);    }    execv(container_args[0], container_args);    perror(&quot;exec&quot;);    printf(&quot;Something's wrong!\n&quot;);    return 1;}int main(){    printf(&quot;Parent [%5d] - start a container!\n&quot;, getpid());    int container_pid = clone(container_main, container_stack+STACK_SIZE,             CLONE_NEWUTS | CLONE_NEWIPC | CLONE_NEWPID | CLONE_NEWNS | SIGCHLD, NULL);    waitpid(container_pid, NULL, 0);    printf(&quot;Parent - container stopped!\n&quot;);    return 0;}sudo运行上面的程序，你会看到下面的挂载信息以及一个所谓的“镜像”：hchen@ubuntu:~$ sudo ./mount Parent [ 4517] - start a container!Container [    1] - inside the container!root@container:/# mountproc on /proc type proc (rw,relatime)sysfs on /sys type sysfs (rw,relatime)none on /tmp type tmpfs (rw,relatime)udev on /dev type devtmpfs (rw,relatime,size=493976k,nr_inodes=123494,mode=755)devpts on /dev/pts type devpts (rw,relatime,mode=600,ptmxmode=000)tmpfs on /run type tmpfs (rw,relatime)/dev/disk/by-uuid/18086e3b-d805-4515-9e91-7efb2fe5c0e2 on /etc/hosts type ext4 (rw,relatime,errors=remount-ro,data=ordered)/dev/disk/by-uuid/18086e3b-d805-4515-9e91-7efb2fe5c0e2 on /etc/hostname type ext4 (rw,relatime,errors=remount-ro,data=ordered)/dev/disk/by-uuid/18086e3b-d805-4515-9e91-7efb2fe5c0e2 on /etc/resolv.conf type ext4 (rw,relatime,errors=remount-ro,data=ordered)root@container:/# ls /bin /usr/bin/bin:bash   chmod  echo  hostname  less  more	mv	 ping  rm   sleep  tail  test	  top	 truncate  unamecat    chown  grep  ip	      ln    mount	nc	 ps    sed  tabs   tar	 timeout  touch  tty	   whichchgrp  cp     gzip  kill      ls    mountpoint	netstat  pwd   sh   tac    tee	 toe	  tr	 umount/usr/bin:awk  env  groups  head	id  mesg  sort	strace	tail  top  uniq  vi  wc  xargs关于如何做一个chroot的目录，这里有个工具叫DebootstrapChroot，你可以顺着链接去看看（英文的哦）接下来的事情，你可以自己玩了，我相信你的想像力 。：）在下一篇，我将向你介绍User Namespace、Network Namespace以及Namespace的其它东西。  >>> （上篇完，请参看下篇）关注CoolShell微信公众账号可以在手机端搜索文章（转载本站文章请注明作者和出处 酷 壳 &#8211; CoolShell.cn ，请勿用于任何商业用途）——=== 访问 酷壳404页面 寻找遗失儿童。 ===——本广告收入已由广告主捐给Wikipedia相关文章2015年04月16日 Docker基础技术：Linux Namespace（下）2015年08月26日 Docker基础技术：DeviceMapper2015年08月24日 Docker基础技术：AUFS2015年04月17日 Docker基础技术：Linux CGroup2009年04月18日 Linux设备驱动Hello World程序介绍2009年08月14日 你用Linux命令行吗？2009年10月28日 ldd 的一个安全问题2009年04月25日 Linux 的僵尸(zombie)进程</content></doc>
<doc>     <docid>187<docid>     <title>Docker基础技术：Linux Namespace（下）</title>     <link>http://coolshell.cn/articles/17029.html</link>     <content>在 Docker基础技术：Linux Namespace（上篇）中我们了解了，UTD、IPC、PID、Mount 四个namespace，我们模仿Docker做了一个相当相当山寨的镜像。在这一篇中，主要想向大家介绍Linux的User和Network的Namespace。好，下面我们就介绍一下还剩下的这两个Namespace。User NamespaceUser Namespace主要是用了CLONE_NEWUSER的参数。使用了这个参数后，内部看到的UID和GID已经与外部不同了，默认显示为65534。那是因为容器找不到其真正的UID所以，设置上了最大的UID（其设置定义在/proc/sys/kernel/overflowuid）。要把容器中的uid和真实系统的uid给映射在一起，需要修改 /proc/&lt;pid&gt;/uid_map 和 /proc/&lt;pid&gt;/gid_map 这两个文件。这两个文件的格式为：ID-inside-ns ID-outside-ns length其中：第一个字段ID-inside-ns表示在容器显示的UID或GID，第二个字段ID-outside-ns表示容器外映射的真实的UID或GID。第三个字段表示映射的范围，一般填1，表示一一对应。比如，把真实的uid=1000映射成容器内的uid=0$ cat /proc/2465/uid_map         0       1000          1再比如下面的示例：表示把namespace内部从0开始的uid映射到外部从0开始的uid，其最大范围是无符号32位整形$ cat /proc/$$/uid_map         0          0          4294967295另外，需要注意的是：写这两个文件的进程需要这个namespace中的CAP_SETUID (CAP_SETGID)权限（可参看Capabilities）写入的进程必须是此user namespace的父或子的user namespace进程。另外需要满如下条件之一：1）父进程将effective uid/gid映射到子进程的user namespace中，2）父进程如果有CAP_SETUID/CAP_SETGID权限，那么它将可以映射到父进程中的任一uid/gid。这些规则看着都烦，我们来看程序吧（下面的程序有点长，但是非常简单，如果你读过《Unix网络编程》上卷，你应该可以看懂）：#define _GNU_SOURCE#include &lt;stdio.h&gt;#include &lt;stdlib.h&gt;#include &lt;sys/types.h&gt;#include &lt;sys/wait.h&gt;#include &lt;sys/mount.h&gt;#include &lt;sys/capability.h&gt;#include &lt;stdio.h&gt;#include &lt;sched.h&gt;#include &lt;signal.h&gt;#include &lt;unistd.h&gt;#define STACK_SIZE (1024 * 1024)static char container_stack[STACK_SIZE];char* const container_args[] = {    &quot;/bin/bash&quot;,    NULL};int pipefd[2];void set_map(char* file, int inside_id, int outside_id, int len) {    FILE* mapfd = fopen(file, &quot;w&quot;);    if (NULL == mapfd) {        perror(&quot;open file error&quot;);        return;    }    fprintf(mapfd, &quot;%d %d %d&quot;, inside_id, outside_id, len);    fclose(mapfd);}void set_uid_map(pid_t pid, int inside_id, int outside_id, int len) {    char file[256];    sprintf(file, &quot;/proc/%d/uid_map&quot;, pid);    set_map(file, inside_id, outside_id, len);}void set_gid_map(pid_t pid, int inside_id, int outside_id, int len) {    char file[256];    sprintf(file, &quot;/proc/%d/gid_map&quot;, pid);    set_map(file, inside_id, outside_id, len);}int container_main(void* arg){    printf(&quot;Container [%5d] - inside the container!\n&quot;, getpid());    printf(&quot;Container: eUID = %ld;  eGID = %ld, UID=%ld, GID=%ld\n&quot;,            (long) geteuid(), (long) getegid(), (long) getuid(), (long) getgid());    /* 等待父进程通知后再往下执行（进程间的同步） */    char ch;    close(pipefd[1]);    read(pipefd[0], &amp;ch, 1);    printf(&quot;Container [%5d] - setup hostname!\n&quot;, getpid());    //set hostname    sethostname(&quot;container&quot;,10);    //remount &quot;/proc&quot; to make sure the &quot;top&quot; and &quot;ps&quot; show container's information    mount(&quot;proc&quot;, &quot;/proc&quot;, &quot;proc&quot;, 0, NULL);    execv(container_args[0], container_args);    printf(&quot;Something's wrong!\n&quot;);    return 1;}int main(){    const int gid=getgid(), uid=getuid();    printf(&quot;Parent: eUID = %ld;  eGID = %ld, UID=%ld, GID=%ld\n&quot;,            (long) geteuid(), (long) getegid(), (long) getuid(), (long) getgid());    pipe(pipefd);     printf(&quot;Parent [%5d] - start a container!\n&quot;, getpid());    int container_pid = clone(container_main, container_stack+STACK_SIZE,             CLONE_NEWUTS | CLONE_NEWPID | CLONE_NEWNS | CLONE_NEWUSER | SIGCHLD, NULL);        printf(&quot;Parent [%5d] - Container [%5d]!\n&quot;, getpid(), container_pid);    //To map the uid/gid,     //   we need edit the /proc/PID/uid_map (or /proc/PID/gid_map) in parent    //The file format is    //   ID-inside-ns   ID-outside-ns   length    //if no mapping,     //   the uid will be taken from /proc/sys/kernel/overflowuid    //   the gid will be taken from /proc/sys/kernel/overflowgid    set_uid_map(container_pid, 0, uid, 1);    set_gid_map(container_pid, 0, gid, 1);    printf(&quot;Parent [%5d] - user/group mapping done!\n&quot;, getpid());    /* 通知子进程 */    close(pipefd[1]);    waitpid(container_pid, NULL, 0);    printf(&quot;Parent - container stopped!\n&quot;);    return 0;}上面的程序，我们用了一个pipe来对父子进程进行同步，为什么要这样做？因为子进程中有一个execv的系统调用，这个系统调用会把当前子进程的进程空间给全部覆盖掉，我们希望在execv之前就做好user namespace的uid/gid的映射，这样，execv运行的/bin/bash就会因为我们设置了uid为0的inside-uid而变成#号的提示符。整个程序的运行效果如下：hchen@ubuntu:~$ iduid=1000(hchen) gid=1000(hchen) groups=1000(hchen)hchen@ubuntu:~$ ./user #&lt;--以hchen用户运行Parent: eUID = 1000;  eGID = 1000, UID=1000, GID=1000 Parent [ 3262] - start a container!Parent [ 3262] - Container [ 3263]!Parent [ 3262] - user/group mapping done!Container [    1] - inside the container!Container: eUID = 0;  eGID = 0, UID=0, GID=0 #&lt;---Container里的UID/GID都为0了Container [    1] - setup hostname!root@container:~# id #&lt;----我们可以看到容器里的用户和命令行提示符是root用户了uid=0(root) gid=0(root) groups=0(root),65534(nogroup)虽然容器里是root，但其实这个容器的/bin/bash进程是以一个普通用户hchen来运行的。这样一来，我们容器的安全性会得到提高。我们注意到，User Namespace是以普通用户运行，但是别的Namespace需要root权限，那么，如果我要同时使用多个Namespace，该怎么办呢？一般来说，我们先用一般用户创建User Namespace，然后把这个一般用户映射成root，在容器内用root来创建其它的Namesapce。Network NamespaceNetwork的Namespace比较啰嗦。在Linux下，我们一般用ip命令创建Network Namespace（Docker的源码中，它没有用ip命令，而是自己实现了ip命令内的一些功能——是用了Raw Socket发些“奇怪”的数据，呵呵）。这里，我还是用ip命令讲解一下。首先，我们先看个图，下面这个图基本上就是Docker在宿主机上的网络示意图（其中的物理网卡并不准确，因为docker可能会运行在一个VM中，所以，这里所谓的“物理网卡”其实也就是一个有可以路由的IP的网卡）上图中，Docker使用了一个私有网段，172.40.1.0，docker还可能会使用10.0.0.0和192.168.0.0这两个私有网段，关键看你的路由表中是否配置了，如果没有配置，就会使用，如果你的路由表配置了所有私有网段，那么docker启动时就会出错了。当你启动一个Docker容器后，你可以使用ip link show或ip addr show来查看当前宿主机的网络情况（我们可以看到有一个docker0，还有一个veth22a38e6的虚拟网卡——给容器用的）：hchen@ubuntu:~$ ip link show1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state ...     link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:002: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc ...    link/ether 00:0c:29:b7:67:7d brd ff:ff:ff:ff:ff:ff3: docker0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 ...    link/ether 56:84:7a:fe:97:99 brd ff:ff:ff:ff:ff:ff5: veth22a38e6: &lt;BROADCAST,UP,LOWER_UP&gt; mtu 1500 qdisc ...    link/ether 8e:30:2a:ac:8c:d1 brd ff:ff:ff:ff:ff:ff那么，要做成这个样子应该怎么办呢？我们来看一组命令：## 首先，我们先增加一个网桥lxcbr0，模仿docker0brctl addbr lxcbr0brctl stp lxcbr0 offifconfig lxcbr0 192.168.10.1/24 up #为网桥设置IP地址## 接下来，我们要创建一个network namespace - ns1# 增加一个namesapce 命令为 ns1 （使用ip netns add命令）ip netns add ns1 # 激活namespace中的loopback，即127.0.0.1（使用ip netns exec ns1来操作ns1中的命令）ip netns exec ns1   ip link set dev lo up ## 然后，我们需要增加一对虚拟网卡# 增加一个pair虚拟网卡，注意其中的veth类型，其中一个网卡要按进容器中ip link add veth-ns1 type veth peer name lxcbr0.1# 把 veth-ns1 按到namespace ns1中，这样容器中就会有一个新的网卡了ip link set veth-ns1 netns ns1# 把容器里的 veth-ns1改名为 eth0 （容器外会冲突，容器内就不会了）ip netns exec ns1  ip link set dev veth-ns1 name eth0 # 为容器中的网卡分配一个IP地址，并激活它ip netns exec ns1 ifconfig eth0 192.168.10.11/24 up# 上面我们把veth-ns1这个网卡按到了容器中，然后我们要把lxcbr0.1添加上网桥上brctl addif lxcbr0 lxcbr0.1# 为容器增加一个路由规则，让容器可以访问外面的网络ip netns exec ns1     ip route add default via 192.168.10.1# 在/etc/netns下创建network namespce名称为ns1的目录，# 然后为这个namespace设置resolv.conf，这样，容器内就可以访问域名了mkdir -p /etc/netns/ns1echo &quot;nameserver 8.8.8.8&quot; &gt; /etc/netns/ns1/resolv.conf 上面基本上就是docker网络的原理了，只不过，Docker的resolv.conf没有用这样的方式，而是用了上篇中的Mount Namesapce的那种方式另外，docker是用进程的PID来做Network Namespace的名称的。了解了这些后，你甚至可以为正在运行的docker容器增加一个新的网卡：ip link add peerA type veth peer name peerB brctl addif docker0 peerA ip link set peerA up ip link set peerB netns ${container-pid} ip netns exec ${container-pid} ip link set dev peerB name eth1 ip netns exec ${container-pid} ip link set eth1 up ; ip netns exec ${container-pid} ip addr add ${ROUTEABLE_IP} dev eth1 ;上面的示例是我们为正在运行的docker容器，增加一个eth1的网卡，并给了一个静态的可被外部访问到的IP地址。这个需要把外部的“物理网卡”配置成混杂模式，这样这个eth1网卡就会向外通过ARP协议发送自己的Mac地址，然后外部的交换机就会把到这个IP地址的包转到“物理网卡”上，因为是混杂模式，所以eth1就能收到相关的数据，一看，是自己的，那么就收到。这样，Docker容器的网络就和外部通了。当然，无论是Docker的NAT方式，还是混杂模式都会有性能上的问题，NAT不用说了，存在一个转发的开销，混杂模式呢，网卡上收到的负载都会完全交给所有的虚拟网卡上，于是就算一个网卡上没有数据，但也会被其它网卡上的数据所影响。这两种方式都不够完美，我们知道，真正解决这种网络问题需要使用VLAN技术，于是Google的同学们为Linux内核实现了一个IPVLAN的驱动，这基本上就是为Docker量身定制的。Namespace文件上面就是目前Linux Namespace的玩法。 现在，我来看一下其它的相关东西。让我们运行一下上篇中的那个pid.mnt的程序（也就是PID Namespace中那个mount proc的程序），然后不要退出。$ sudo ./pid.mnt [sudo] password for hchen: Parent [ 4599] - start a container!Container [    1] - inside the container!我们到另一个shell中查看一下父子进程的PID：hchen@ubuntu:~$ pstree -p 4599pid.mnt(4599)───bash(4600)我们可以到proc下（/proc//ns）查看进程的各个namespace的id（内核版本需要3.8以上）。下面是父进程的：hchen@ubuntu:~$ sudo ls -l /proc/4599/nstotal 0lrwxrwxrwx 1 root root 0  4月  7 22:01 ipc -&gt; ipc:[4026531839]lrwxrwxrwx 1 root root 0  4月  7 22:01 mnt -&gt; mnt:[4026531840]lrwxrwxrwx 1 root root 0  4月  7 22:01 net -&gt; net:[4026531956]lrwxrwxrwx 1 root root 0  4月  7 22:01 pid -&gt; pid:[4026531836]lrwxrwxrwx 1 root root 0  4月  7 22:01 user -&gt; user:[4026531837]lrwxrwxrwx 1 root root 0  4月  7 22:01 uts -&gt; uts:[4026531838]下面是子进程的：hchen@ubuntu:~$ sudo ls -l /proc/4600/nstotal 0lrwxrwxrwx 1 root root 0  4月  7 22:01 ipc -&gt; ipc:[4026531839]lrwxrwxrwx 1 root root 0  4月  7 22:01 mnt -&gt; mnt:[4026532520]lrwxrwxrwx 1 root root 0  4月  7 22:01 net -&gt; net:[4026531956]lrwxrwxrwx 1 root root 0  4月  7 22:01 pid -&gt; pid:[4026532522]lrwxrwxrwx 1 root root 0  4月  7 22:01 user -&gt; user:[4026531837]lrwxrwxrwx 1 root root 0  4月  7 22:01 uts -&gt; uts:[4026532521]我们可以看到，其中的ipc，net，user是同一个ID，而mnt,pid,uts都是不一样的。如果两个进程指向的namespace编号相同，就说明他们在同一个namespace下，否则则在不同namespace里面。这些文件还有另一个作用，那就是，一旦这些文件被打开，只要其fd被占用着，那么就算PID所属的所有进程都已经结束，创建的namespace也会一直存在。比如：我们可以通过：mount &#8211;bind /proc/4600/ns/uts ~/uts 来hold这个namespace。另外，我们在上篇中讲过一个setns的系统调用，其函数声明如下：int setns(int fd, int nstype);其中第一个参数就是一个fd，也就是一个open()系统调用打开了上述文件后返回的fd，比如：fd = open(&quot;/proc/4600/ns/nts&quot;, O_RDONLY);  // 获取namespace文件描述符setns(fd, 0); // 加入新的namespace 参考文档Namespaces in operationLinux Namespace Man PageCreat Containers &#8211; Part 1Introduction to Linux namespaces（应网友card323加入）（全文完）关注CoolShell微信公众账号可以在手机端搜索文章（转载本站文章请注明作者和出处 酷 壳 &#8211; CoolShell.cn ，请勿用于任何商业用途）——=== 访问 酷壳404页面 寻找遗失儿童。 ===——本广告收入已由广告主捐给Wikipedia相关文章2015年04月16日 Docker基础技术：Linux Namespace（上）2015年08月24日 Docker基础技术：AUFS2015年08月26日 Docker基础技术：DeviceMapper2015年04月17日 Docker基础技术：Linux CGroup2012年06月20日 性能调优攻略2014年11月21日 vfork 挂掉的一个问题2011年03月29日 如何学好C语言2010年04月09日 Unix传奇(下篇)</content></doc>
<doc>     <docid>188<docid>     <title>如果你也和我一样笑不出来 (评论: 你就适可而止吧)</title>     <link>https://book.douban.com/review/8132172/</link>     <content><a    href="https://www.douban.com/people/linfarfar/">林远远评论: 你就适可而止吧评价: 推荐</content></doc>
<doc>     <docid>189<docid>     <title>心疼当初那个奋不顾身的自己 (评论: 最初不过你好)</title>     <link>https://book.douban.com/review/8134254/</link>     <content><a    href="https://www.douban.com/people/53672944/">喵了个咪评论: 最初不过你好评价: 力荐</content></doc>
<doc>     <docid>190<docid>     <title>遇见你，才是最好的时光 (评论: 愿所有的姑娘都能嫁给爱情)</title>     <link>https://book.douban.com/review/8141697/</link>     <content><a    href="https://www.douban.com/people/53672944/">喵了个咪评论: 愿所有的姑娘都能嫁给爱情评价: 力荐</content></doc>
<doc>     <docid>191<docid>     <title>编辑，原来也可以很摇滚 。 (评论: 金色梦乡)</title>     <link>https://book.douban.com/review/8142275/</link>     <content><a    href="https://www.douban.com/people/67994820/">绵羊油蜜糖评论: 金色梦乡评价: 力荐</content></doc>
<doc>     <docid>192<docid>     <title>像现在这样生活就行，不要嘲笑和瞧不起现在的自己 (评论: 我不过别人指定的生活)</title>     <link>https://book.douban.com/review/8141690/</link>     <content><a    href="https://www.douban.com/people/53672944/">喵了个咪评论: 我不过别人指定的生活评价: 力荐</content></doc>
<doc>     <docid>193<docid>     <title>满满一书的唐人风情 (评论: 唐人小说)</title>     <link>https://book.douban.com/review/8122102/</link>     <content><a    href="https://www.douban.com/people/51610855/">太常寺协律郎评论: 唐人小说评价: 力荐</content></doc>
<doc>     <docid>194<docid>     <title>最孤独的魂游天外 (评论: 漫长的中场休息)</title>     <link>https://book.douban.com/review/8143204/</link>     <content><a    href="https://www.douban.com/people/flowermumu/">欢乐分裂评论: 漫长的中场休息评价: 推荐</content></doc>
<doc>     <docid>195<docid>     <title>文学奇境的私人词典 (评论: 想象地名)</title>     <link>https://book.douban.com/review/8135672/</link>     <content><a    href="https://www.douban.com/people/malingcat/">malingcat评论: 想象地名评价: 力荐</content></doc>
<doc>     <docid>196<docid>     <title>遵从天意承受孤独 (评论: 天意)</title>     <link>https://book.douban.com/review/8124455/</link>     <content><a    href="https://www.douban.com/people/lanlianhua/">棉花糖*胡子小姐东游记评论: 天意评价: 力荐</content></doc>
<doc>     <docid>197<docid>     <title>作者好厉害，能把诺奖理论介绍得如此通俗！ (评论: 合适)</title>     <link>https://book.douban.com/review/8124867/</link>     <content><a    href="https://www.douban.com/people/moshou/">魔云兽评论: 合适评价: 力荐</content></doc>
<doc>     <docid>198<docid>     <title>不能忘却的友情 (评论: 我在伦敦买了一头狮子)</title>     <link>https://book.douban.com/review/8142219/</link>     <content><a    href="https://www.douban.com/people/53672944/">喵了个咪评论: 我在伦敦买了一头狮子评价: 力荐</content></doc>
<doc>     <docid>199<docid>     <title>一次真正意义上的重生 (评论: 她他)</title>     <link>https://book.douban.com/review/8138345/</link>     <content><a    href="https://www.douban.com/people/53672944/">喵了个咪评论: 她他评价: 力荐</content></doc>
<doc>     <docid>200<docid>     <title>美国版“铁娘子” (评论: 希拉里)</title>     <link>https://book.douban.com/review/8122114/</link>     <content><a    href="https://www.douban.com/people/53672944/">喵了个咪评论: 希拉里评价: 力荐</content></doc>
<doc>     <docid>201<docid>     <title>我想陪你说说家国之外 (评论: 宋末大变局.四川风云  上册)</title>     <link>https://book.douban.com/review/8142679/</link>     <content><a    href="https://www.douban.com/people/81527250/">钟无艳评论: 宋末大变局.四川风云  上册评价: 力荐</content></doc>
<doc>     <docid>202<docid>     <title>一本温暖而治愈的友人帐 (评论: 夏目友人帐)</title>     <link>https://book.douban.com/review/8127681/</link>     <content><a    href="https://www.douban.com/people/53672944/">喵了个咪评论: 夏目友人帐评价: 力荐</content></doc>
<doc>     <docid>203<docid>     <title>真我至上：灵魂对肉体的背叛 (评论: 丹麦女孩)</title>     <link>https://book.douban.com/review/8130532/</link>     <content><a    href="https://www.douban.com/people/53672944/">喵了个咪评论: 丹麦女孩评价: 力荐</content></doc>
<doc>     <docid>204<docid>     <title>“润物细无声”的习惯养成策略 (评论: 微习惯)</title>     <link>https://book.douban.com/review/8134157/</link>     <content><a    href="https://www.douban.com/people/53672944/">喵了个咪评论: 微习惯评价: 力荐</content></doc>
<doc>     <docid>205<docid>     <title>像国王一样吃法国大餐 (评论: 愿上帝保佑法兰西厨子)</title>     <link>https://book.douban.com/review/8125359/</link>     <content><a    href="https://www.douban.com/people/53672944/">喵了个咪评论: 愿上帝保佑法兰西厨子评价: 力荐</content></doc>
<doc>     <docid>206<docid>     <title>可持续发展是资源未来的发展方向 (评论: 图解全球资源真相)</title>     <link>https://book.douban.com/review/8142993/</link>     <content><a    href="https://www.douban.com/people/53672944/">喵了个咪评论: 图解全球资源真相评价: 力荐</content></doc>
<doc>     <docid>207<docid>     <title>《梦三国》研发商电魂网络A股上市，募资8.7亿元</title>     <link>http://36kr.com/p/5055223.html?ktm_source=feed</link>     <content>今日，游戏开发商杭州电魂网络正式在上交所挂牌上市，该公司A股股本为24000万股，其中6000万股于2016年10月26日起上市交易，证券代码为&quot;603258&quot;。在集合竞价阶段，零成交，连续竞价阶段，电魂股票瞬间暴涨至43.98%，达到上市首涨幅限制，目前公司市值57.98亿元。根据其公告，电魂网络的A股发行价为15.62元/股，募集资金总额为87253.62万元，发行后每股净资产为5.96元，发行后每股收益为0.86元。扣除发行成本后的所有费用将用于网络游戏运营平台建设、网络游戏软件生产基地以及网络游戏新产品开发3个方向。电魂网络是一家游戏开发运营商，代表产品是MOBA网游《梦三国》，已经持续运营达7年，截至今年6月30日，该游戏的注册用户已超过1亿，最高同时在线人数突破54万。电魂游戏产品除了《梦三国》这款主力端游主力产品，电魂于2015年进入手游领域，推出了《梦梦爱三国》《梦三国手游》《硬霸三国》等产品。但公司主要的营收仍旧来自于《梦三国》这款游戏，手游收入占比并不多。根据其公告，《梦三国》这款游戏的营收收其实在逐年下滑，该款游戏报告期内实现的营业收入分别为4.71亿元、4.67亿元、4.19亿元和2.08亿元，这或许跟整个MOBA端游市场在近几年逐渐被LOL和DOTA垄断有关系。在电魂网络挂牌信息的风险提示中，也提及到“主营业务收入过度依赖单款游戏”的风险。根据这次电魂网络所募资金的用途可以看出，除了核心的新游戏研发，还有2.2亿元将用于网络游戏运营平台建设项目，其财报显示，靠着自主研发运营的梦平台和 51 任性游戏平台，在游戏联合运营领域的收入在逐年增长， 2014 年、 2015 年度及2016 年 1-6 月，公司通过联合运营方式取得联运收入 51.51 万元、 853.00 万元和 498.56 万元。另外，募集的8.74亿中，还有1.74亿元将用于网络游戏软件生产基地项目。</content></doc>
<doc>     <docid>208<docid>     <title>互联网金融整治风暴来袭，行业将现四大变局</title>     <link>http://36kr.com/p/5055189.html?ktm_source=feed</link>     <content>作者：薛洪言 苏宁金融研究院互联网金融研究中心主任；来源：苏宁财富资讯（ID：SuningWealthInsights） &nbsp;近日，《互联网金融风险专项整治工作实施方案》（下称《实施方案》）在国务院网站正式发布。随着这份4月即内部面世的文件的公开发布，舆论的焦点再次转回到已经持续半年有余的“互联网金融专项整治活动”上来。自2015年10月以来，以打击“非法集资”为抓手，互联网金融逐渐步入规范和整治阶段，以今年4月14日国务院召开电视电话会议统一部署整治行动为标志，互联网金融的政策环境和监管环境发生了重要变化。与之相应，其行业竞争环境、商业模式和发展前景也都有了深刻变化。今天的互联网金融很难再重复昨天的故事，那么，互联网金融的明天是什么？笔者就借着《实施方案》的公开发布，和大家聊一聊行业的变局。先回顾互联网金融监管环境的变化2015年之前，互联网金融一直是重点扶持的对象。2015年政府工作报告明确要求：“新兴产业和新兴业态是竞争高地……促进电子商务、工业互联网和互联网金融健康发展。”2015年7月，央行等十部委联合发布《关于促进互联网金融健康发展的指导意见》（下称《意见》），提出“作为新生事物，互联网金融既需要市场驱动，鼓励创新，也需要政策助力，促进发展”，此时，监管对互联网金融的态度是温和的、鼓励的。然而，2015年下半年以来，一些平台以互联网金融之名行金融诈骗之实且愈演愈烈，造成恶劣的社会影响，成为国家着手打击非法集资的转折点。2015年10月19日，国务院发布《关于进一步做好防范和处置非法集资工作的意见》（国发〔2015〕59号），明确要求“密切关注投资理财、非融资性担保、P2P网络借贷等新的高发重点领域”。2016年政府工作报告中明确提出“规范发展互联网金融”，在措辞上首次出现变化。2016年1月21日，北京市发布《进一步做好防范和处置非法集资工作的管理办法》；4月5日，上海市发布《进一步做好防范和处置非法集资工作的实施意见》；4月14日，国务院组织14部委召开电视会议，专题部署互联网金融整治事宜；10月13日，国务院正式公开发布《实施方案》。相较于1年前，互联网金融的政策环境发生了天翻地覆的变化。再来看《实施方案》究竟有多厉害就10月13日新发布的《实施方案》来说，严格了负面清单制管理，分别对P2P、股权众筹、第三方支付等互联网金融主要业态和资管类产品互联网渠道销售、房地产金融等重点专题列明了政策红线，并由各部委出台配套子方案配合实施，以确保专项整治工作的有序推进。下面，我们对《实施方案》的主要内容列表解读：互联网金融行业将出现哪些变化？整体上看，在目前的监管框架下，随着合规整改，互联网金融行业的商业模式将发生重要变化，深刻改变行业的竞争格局和发展空间。具体来说，行业在短期内将出现以下四大变化。变化1：牌照监管思路明确，从业机构数量将快速下降。作为曾经的主流创业领域，互联网金融行业存在数以千计的草根创业者，也是行业乱像频发的重要原因。从新出台的《实施方案》及各子行业配套方案看，互联网金融牌照监管的思路明晰。牌照监管将大大提高进入门槛，短期内将加速行业内中小机构的退出，与此同时，行业内马太效应加速，为大平台收割市场提供了绝佳的机会窗口。以p2p行业为例，新规明确了地方金融监管部门备案、互联网增值业务证书、银行存管等基础性门槛，据统计，行业内同时满足三项要求的平台不超过3%，绝大多数平台将不得不因为从业资质问题选择退出。数据显示，2016年1-9月，P2P平台正常运营数量累计减少了393家。未来几个月，随着过渡期最后期限的临近，中小平台退出的速度可能会大大加速。与此同时，排名行业前十的大平台成交量持续上升，2016年9月份，前十大平台成交量在行业的占比为33.97%，较半年前提升2.72个百分点，行业集中度进一步提升。变化2：互联网金融小微化方向凸显，与传统金融机构的竞争关系淡化。互联网金融从小微金融和普惠金融业务上崛起，随着各类实业巨头的陆续布局，开始向着供应链金融、一站式理财平台、企业金融等大金融方向发展，从而与传统金融机构有着越来越多、越来越激烈的竞争，脱离了监管机构对互联网金融和传统金融互补发展、错位竞争的初衷。通过一系列的制度文件，监管机构明确了互联网金融普惠化和小微化的特征，而小微金融一直是传统金融机构的薄弱环节，至此，互联网金融与传统金融机构的竞争关系大幅淡化，当然，互联网金融距离做大做强、再造国内金融体系的梦想也越来越远。以第三方支付为例，2015年12月出台的《非银行支付机构网络支付业务管理办法》明确了三类账户的划分，对于最高级别的Ⅲ类账户，也限定“所有支付账户的余额付款交易年累计不超过20万元”，并禁止支付机构为金融机构以及从事信贷、融资、理财、担保、信托、货币兑换等金融业务的其他机构开立支付账户，大幅缩小了第三方支付机构的业务范围。《实施方案》则再次明确要求引导非银行支付机构回归提供小额、快捷、便民小微支付服务的宗旨。8月份出台的《网络借贷信息中介机构业务活动管理暂行办法》也以规定单人借款限额的方式明确了网络借贷的小微本质。变化3：集中整顿期间，互联网金融暂时步入创新低潮期。根据《实施方案》相关要求，2016年4月至2017年3月为专项整治工作实施期，在此期间，主要的互联网企业将重心放在合规整改、兼并收购、收割小平台退出后的市场等方面，产品和模式创新的精力将会大打折扣，互联网金融行业暂时步入创新低潮期。以P2P行业为例，今年以来，行业内掀起了一波合规整改浪潮。一些平台通过砍掉C端资金来源实现去P2P化，转型为消费金融公司；一些理财平台悄然下架了非货币基金型的活期理财产品，一些理财平台开始下架大额投资标的，还有越来越多的平台因迟迟达不到资质要求而选择主动停业。受此影响，一向以追逐市场缝隙类需求即时创新著称的P2P行业，今年以来的行业产品创新活跃度大大下降，进入低潮期。变化4：辅助型的金融科技类企业迎来新的发展机遇。在主流的互联网金融业态忙于合规整改的同时，以服务于金融机构为宗旨的金融科技类企业，因不直接涉及金融业务而未被纳入到此次整顿中来，相比较而言，仍处于快速发展期。以大数据服务类金融科技企业为例，在大的行业环境中，IaaS、PaaS、SaaS逐渐成为潮流，越来越多的金融企业开始接受购买大数据服务的风控理念；从小的行业环境看，金融领域欺诈风险高发，大数据风控需求一直居高不下。在此背景下，大数据型金融科技企业针对性地推出了身份验证、用户画像、信用评估、黑名单、实时预警、催收管理以及账户安全、数据安全、系统安全；恶意营销管理、羊毛党识别等产品和服务，已经成为金融科技产业内发展速度最快和发展前景最广的细分行业之一。再比如，智能投顾依托现代科技手段实现了标准资产产品的组合化和智能化，带来产品层面的创新。通过智能投顾技术，客户得以享受全新的风险和收益组合，本质上已经是一种新的投资产品。相较于互联网理财对传统资管行业的影响，智能投顾的影响更为深远，将在产品创新、业务模式、销售策略等各方面给传统资管行业带来深远的影响。</content></doc>
<doc>     <docid>209<docid>     <title>扭曲认知力场：初创品牌如何四步做到</title>     <link>http://36kr.com/p/5055108.html?ktm_source=feed</link>     <content>作者：杨嘉伟 &nbsp; Forrester数字营销奖获得者Uber的启示那些估值超过10亿美元的初创企业，我们喜欢称之为独角兽。毋庸置疑，这份最新的独角兽创业公司名单都是品牌运营高手，你几乎没见到他们的广告推广，大量广泛的媒体报道已经使他们家喻户晓。而大家所熟悉的UBER更是个中顶尖高手。UBER2013年来华，短短的2年内，只通过集约的运营团队，持续不断的创造话题，就赢得了巨大的品牌曝光与声誉。这背后隐藏了什么样的品牌秘密？首先：UBER是共享经济的典型代表，它用互联网分享的创新模式，极大的颠覆了原有人们的用车模式，并且在全球有了大量的模仿者与跟随者，如中国的滴滴，印度的Olacabs。新的商业模式从品牌角度往往意味着它是一种全新品类。新品类的原生颠覆性使得它们往往具有巨大的原生话题能量；再加上已被美国本土验证成功的商业模式；以及互联网原发地美国的品牌高位势，用降维的模式，在中国市场攻击。这样的品牌天然就具有极大的爆发力，从而引发大量媒体关注，成为新经济现象。其次，UBER在品牌推广策略上思路清晰，从2013年入华以来，并未轻易启动广告攻击手法，而是持续制造公关事件。陆续发起了一键叫房、一键叫冰激凌、一键叫一亿现金、一键叫房……等轰动性话题。并且模拟一键叫车的模式，创造了一键叫医生、一键叫健身教练、一键叫设计师……等品牌故事，如真如幻，让消费者一时难辨真假。只是觉得UBER吊炸天，似乎全宇宙什么东西都可在UBER上一键呼叫，从而极大提升了超能UBER的品牌声誉。第三，UBER在华所有的“一键叫X”的事件策划，都是联合了在品牌调性上相配称的国内细分领域的领导品牌来实现的。比如一键叫房，UBER联合了华润置地。我曾经参与了UBER北京运营中心与华润置地联合发起的一键叫房活动的事件规划讨论。UBER北京负责人告诉我他们对联合品牌选择的谨慎性。事实上，当“一键叫X”的模式火了后，曾经有不少调性并不符合UBER选择原则的品牌主动找到他们，但都被他们婉拒了。第四，UBER的中国运营团队分为UBER中国运营中心与地区运营团队。每一个地区运营团队（如北京）都被极大授权，并且人员极精简，一般为一人负责品牌运营，一人负责业务BD。当我听到UBER地区运营团队如此精炼时，我相当惊讶。直到最近，Uber完成新一轮10亿美金募资，公司估值接近510亿美金，这使得其成为有史以来最快达到规模500亿美金的公司。回头去看UBER从2013年入华到2015年短短两年期间在中国的发展路径，我们可以获得如下启示：启示一：他们遵循了一个在新区域的品牌启动应该是飞机滑行式启动，而非火箭爆炸式启动。启示二：他们在品牌组合上更为重视公关事件创造话题，赢得巨大的媒体声量，而非简单地做大量广告投放。启示三：他们对联合品牌的选择非常谨慎，需符合UBER品牌调性，小心翼翼的保护品牌基调，不容非相关品牌混合稀释。启示四：他们在运营组织机构上遵循按战略配称的原则。套用美国流程管理大师钱德勒的一句话讲，战略是头脑，而组织是身体。脑袋要转向，而身体不动，肯定出问题。扭曲品牌现实力场独特的、强有力的品牌信息会形成具有磁场效应般的“品牌场”，从而吸引用户，转化用户既有认知，扭曲用户认知现实——这被我称为“扭曲品牌现实力场”。“现实扭曲场”，这个词来自于《星际迷航》电影中，特指外星人通过精神力量建造了新世界。在《乔布斯传》中，给我印象非常深刻的一段是苹果的工程师谈到乔布斯所具有的“扭曲现实场”——他结合口若悬河的表述、过人的意志力、扭曲事实以达到目标的迫切愿望，从而形成视听混淆的现实扭曲力场。AFAS模型告诉我们，对于一个互联网基因初创品牌而言：用户往往先从品牌接触开始，在认知教育积累到一定阶段后，形成认知偏好；从而会更主动的检索关注该品牌，通过微信服务号或者APP等产品介质，形成品牌的用户落脚点，成为品牌闭环；在此之后，通过进一步营销运营工作，实现用户转化，购买或使用该产品服务；并在用户高满意度的情况下，激励用户形成分享行动。可以说，具有“扭曲品牌现实力场”，形成高识别的认知是初创品牌启动的第一步，也是至关重要的关键一步。那么，如何通过策略性的认知设计来完成这一工作呢？我们建议遵循以下一些基本步骤：第一步，定义用户，设定场景这个问题貌似简单，但往往在品牌执行中，并非能够很好的执行。比如对于红牛品牌而言，它的受众是疲劳人士，或者是奔波的驾驶者，或者是加班累了的公司白领。那么，较好红牛露出的场景应该是在驾驶者高频出现的区域（如在我小区停车场出口处的红牛赠饮活动），或针对下班后疲倦白领的办公楼区域。当年以“怕上火”精准定位的王老吉把自己的核心用户设定为嗜辣口味的人群，于是将川菜馆、湘菜馆等等以口味辣著称的餐厅作为营销主场景，做渠道下沉地面促销。再比如，“肿瘤界”这个面向癌症患者的移动APP将自己的核心用户设定为来京治病的癌症患者及家属群体。他们通过调研发现在北京著名的癌症治疗医院北医三院旁边形成了一个中国最大的癌症城中住院村，那里云集了来自全国各地到京治病的癌症患者和家属，肿瘤界重点在这个区域调研、修正自己产品定位与需求，这个用户的场景选的也很精准。第二步，分析用户现有认知（尤其是对竞争对手的）每一个人都有认知能力，而我们每一个人的认知能力受历史、文化、地域、教育、所处的商业环境等众多复杂因素影响。尤瓦尔·赫拉利在他所著的《人类简史》中谈到，智人大约在公元7万年前开启了认知革命，他们获得了一种虚拟故事的能力，通过语言去描述事物。这极大的激发了人类之间的协同，因为虚拟故事可以让不同的人相信共同的事物，比如宗教……等等，从而形成不同族群的共同认同。正是基于认知革命的开启，人类得以一步步走向关照未来的现代文明。相对而言，当人类没有获得这种虚拟故事的认知革命能力之前，彼此仅仅是动物本性的族群关系，这无法驱动人类大协同。从品牌世界的角度观察，用户认知的逻辑往往是先品类，后品牌。比如用户的思考逻辑是，我要买一辆动力强劲的汽车，这是品类；其次才会说，我要买宝马品牌（宝马成功的建立了动力强劲的终极驾驶机器的品牌识别）。用户心智遵循“先品类，后品牌”的选择逻辑品类是品牌之源，这也是领导品牌往往会从品类角度入手去分化品类，从而建立新的强势品牌，并主导该品类的原因。分析用户的认知有两个很重要的角度：一个是分析你的受众对所在的品类的已有认知；另一个是分析他们对品类中已经存在的那些品牌的认知（你的竞争对手）。从对品类的市场空间分析、哪些品类属性已经被强势品牌占领，用户对他们今天的认知情况是什么样的……等等信息，从而进一步推演和发现：还有什么样的品类空间，或者有什么样的机会去分化新品类出来，进而占据用户认知。比如，商用的平板电脑早在1989年就被 GRiD公司发明了，并且在2002年微软推出了Tablet PC后进一步得以流行。但直到苹果在2010年推出ipad之前，用户对平板电脑这一品类的认知都是虚弱的。当这个领域内并未形成强有力的领导品牌时，乔布斯深刻的洞察了这一认知现状，用它的极致苹果工艺美学，重新定义了平板电脑，并赢得了市场。第三步，设计影响用户认知的高差别信息特劳特与里斯将“定位”表达成一个在用户心智中独特的字眼，比如沃尔沃的“安全”，宝马的“终极驾驶”，奔驰的“尊贵”。其实，定位就是一种影响用户心智的信息表达，它简洁有力，并差异化。在懒惰的大脑的认知中，人们需要极简单、鲜明而独特的信息去识别你的品牌是什么，从而记忆，继而达成品牌偏好。用户需求、竞争品牌、你自己的优势——这三个维度的交集，往往是寻找品牌认知信息基点（或者定位）的有用方法。这个信息基点既需要有用户认知基础、也需要与竞争对手已经给用户的认知形成区隔，同时品牌自身的资源或优势足以支撑。设计影响用户认知的信息有很多种方法。比如“对标法”——找到你所在品类中最强势的品牌，和它对标设计。例如，营销史上很经典的案例是，强调“正宗货”传承的经典系列可口可乐与强调“年轻”的百事可乐的对标区隔定位。还有比如“VIP俱乐部法”，找到你最想比附的强势品牌，和他们进行品牌信息的连接。例如东阿阿胶很好的执行了这个策略，它在很多药店中往往要求把自己和灵芝、鹿茸摆放在一起，从而引导用户形成了“健康补身大三宝”的用户认知。再比如快时尚品牌ZARA以款多价廉著称，他们的店址往往会选择在路易威登、阿玛尼等一流大牌的店铺旁边，从而引导消费者形成以低廉价格就可紧追一流大牌流行趋势的品牌比附效应。大朴是国内做的不错的一个生活用品集合品牌，他们将自己的品牌核心认知信息设计为“大道至朴”，提倡一种摒弃过度包装，回归自然纯真生活的理念，在床上用品等棉质产品上彻底贯彻这一信息，强调无甲醛、无荧光剂漂白剂、无致癌芳香胺等三无信息，花色上以素色为主，包装为可再生的牛皮纸袋，其会员卡的文案上写道：“每一根棉线，都接待过蜜蜂，欢送过蝴蝶和瓢虫”，将产品要素人格化，激发同样热爱“大道至朴”的生活家共鸣。第四步，用公关像飞机滑行一样启动你的品牌一个新生的分化品类领导品牌，往往是原生的高价值的差异性话题的秉承者，它应该先声夺人地首先用公关事件的发动机来启动品牌战役，讲述品牌故事，赢得声量。比如，国内的小米、锤子、黄太吉、雕爷牛腩等，借助社交化媒体传播链路，当年以颠覆者出现时，就赢了巨大的公关话题性。以事件公关来启动品牌就像飞机的滑行式启动，先是在跑道上滑行，然后慢慢的加速，最后凌空飞起。与飞机滑行式启动相对应的是火箭爆炸式启动。火箭爆炸式启动往往是通过大量的广告投放行为来实现的。在用户无品牌认知基础的情况下，广告投放其实很低效。最佳的广告启动时间适合在品牌的话题性消减时使用，目的在于提醒用户对该品牌关注。独特而强有力的认知信息设计成为初创品牌启动的关键一步，我们应该像乔布斯学习——设计基于强有力的信息，改造用户认知，达到扭曲品牌现实力场的目的，在这个意义上，大家都是用户的“造梦者”。关于作者：杨嘉伟，Forrester数字营销奖获得者，在行热门行家（http://www.zaih.com/mentor/84748791/），有近20年高科技品牌营销经验。早年在亚信、chinaquest、Primeton等公司任管理职务，策划《SOA中国路线图》、《软件商竞争力成长路线图》、《CIO：失控与可控》、《微应用，大平台》等研究项目，合作著有畅销书《平台征战》，代笔《软件中国的机会》等。联系：私人微信：yangjiawei1210</content></doc>
<doc>     <docid>210<docid>     <title>阿里研究院潘永花：从全球市值BIG5公司看未来科技发展趋势</title>     <link>http://36kr.com/p/5055215.html?ktm_source=feed</link>     <content>文 | 阿里数据经济研究中心秘书长 潘永花2016年8月1日，对于互联网科技领域来说是个标志性的日子，全球市值最高的五家公司第一次全部花落科技公司，并且都来自美国西海岸：旧金山湾地区的Apple、Alphabet（Google母公司）和Facebook，以及西雅图附近的Microsoft和Amazon。这的节点向世人展示出：全球的经济转型正在悄然发生，今天的科技巨头在个人生活和企业运营中占据更加中心的位置。10年前在PC如日中天的时代，微软是唯一一家市值挤进全球前20的科技公司。5年前，按市值排名的五大公司中有五家从事石油行业：埃克森、中国石油和荷兰皇家壳牌，这依然是工业经济时代的代表，能源企业占据优势。随着能源行业没落，五家最大的科技公司创造的数字平台渗透到人们生活工作的方方面面——从智能手机到云计算平台，再到手机聊天应用。互联网科技公司已然成为世界经济中的新领导者。从美国五大互联网科技公司的产品技术发展路径和方向看，主要呈现以下7个趋势：趋势一：云计算服务成为业务新方向。Gartner研究报告显示，截至2015年，全球云计算市场规模已达1750亿美元，预计2016年达2030亿美元，2019年达到3120亿美元。与全球云计算市场相比，中国云计算市场规模尚小，占比不足5%。在云计算投入方面，亚马逊、微软和Google投入力度最大。其中，亚马逊在公共云服务市场排名全球第一，占据超过30%的市场份额，AWS(Amazon Web Services)除了提供基础存储和计算服务之类的IaaS(基础设施云服务)以外，还提供数据分析、电子邮件、搜索和工作流等成百上千种其他的服务和功能，而提供这些附加服务的边际成本几乎为0。微软作为传统的IT巨头，在向云计算服务转身的过程中速度迅猛，凭借其Office365和Azure的云服务双引擎获得了市场第二的位置。Google的云计算平台GAE是从PaaS(平台即服务)起家，聚焦开发者人群，未来Google的方向会是聚焦大数据和人工智能相关的云服务方面，同时Google在云数据中心和硬件方面也拥有独特的技术，比如Google将DeepMind的机器学习系统用在了控制部分数据中心上，不仅可以节约能源，还能提高能源效率。Facebook与苹果则主要聚焦在给消费者提供服务方面，目前并未为企业提供云服务。趋势二：高度重视人工智能和深度学习领域。以计算机视觉处理、自然语言处理、语音识别、神经网络训练与深度学习技术为代表的人工智能技术逐渐应用到大量的场景中。AlphaGo与人之间的人机大战，引爆了世界对人工智能的关注度。2010年以来，苹果已悄无声息收购了15家人工智能公司，并将其人工智能技术融入到各种产品之中，以机器智能和平衡个人用户的隐私为主，具体在Siri和无人驾驶汽车领域布局，苹果还宣布与IBM共同开发人工智能健康数据平台。Google在人工智能领域布局很广，在云服务中开源第二代机器学习系TensorFlow，在人工智能硬件方面投入人工智能加速器芯片TPU，未来的应用领域会从无人驾驶汽车、智能家居到虚拟现实多个产品中。Facebook 的人工智能研究深深依托于社交网络的发展，从 Facebook 产品中获得数据，训练数据，得到的人工智能产品也发过来服务于社交网络的用户。微软则认为未来开启对话即平台Conversations as a Platform（CaaP）时代，将人工智能技术应用到智能助手、VR等领域。趋势三：虚拟现实有望成为下一代人机接口。很多人将2016年视为虚拟现实产业化元年。虚拟现实技术（Virtual Reality，VR）和增强现实技术（Augmented Reality，AR）将颠覆传统模式，通过提供良好的沉浸式体验而成为新一代人机交互平台。2016年全球的消费电子展(CES)和MWC(移动互联网大会) 上，虚拟现实都是当之无愧的主角。根据Digi-Capital的预测，到2020年，全球AR与VR市场规模将达到1500亿美元。其中AR市场规模为1200亿美元，VR市场规模为300亿美元。虽然虚拟现实(VR)技术相关概念早在上世纪60年代就被提出，但真正引起业界的关注当属2014年的一件事：那就是Facebook以20亿美元收购沉浸式虚拟现实技术公司Oculus VR，一下让沉默多年的VR成为了全球科技界的焦点。Google已经基于Android N系统的DayDream平台作为VR的技术平台，开始搭建VR生态。微软在全息眼镜HoloLens和深度传感器Kinect方面投入巨资，与其Windows 10平台进行结合。当前，三星、谷歌、索尼、微软、HTC等传统行业巨头们都将虚拟现实作为创新关注点，大量的创新企业在虚拟现实领域也大量涌现并崛起，虚拟现实硬件、软件和内容领域都受到前所未有的关注。虚拟现实技术将深刻影响媒体、游戏、娱乐等行业，VR甚至会成为互联网的另一个关键入口。趋势四：无人驾驶汽车成为下一步发展方向。据麦肯锡预测，无人驾驶汽车到2025年可以产生2000亿至1.9万亿美元的产值。波士顿咨询公司研究显示，首批无人驾驶汽车将于2025年正式上路，到2035年无人驾驶汽车的全球年销量预计可达1200万辆。可以想象，不久的将来，伴随着无人驾驶汽车技术和产品的成熟，司机可能真的会失业。所谓无人驾驶依靠人工智能、视觉计算、雷达、监控装置和全球定位系统协同合作，让电脑可以在没有任何人类主动的操作下，自动安全地操作机动车辆。目前看，无人驾驶汽车领域的主导者主要为汽车厂商与互联网巨头们，互联网巨头虽然在汽车以及相关零部件制造等领域缺乏经验，但它们在云计算、大数据处理、人工智能、高精度地图等领域有明显的优势。2015 年 6 月 26 日，Google 无人驾驶车正式开上美国加州的公路进行测试。Apple的无人驾驶汽车项目Project Titan正在进行之中，预计2021年上市。2016 年 1 月 15 日，美国联邦政府宣布，计划在未来 10 年拨款 40 亿美元，加速无人驾驶汽车的发展，希望减少交通事故死亡率和交通拥堵状况。趋势五：无人机应用落地指日可待。在不久的将来，让无人机与客机共享天空——这是美国白宫正在筹划实施的一项计划。美国政府宣布，它将实施数项旨在扩大无人机应用的计划。白宫提出设想将无人机应用于安全检查、救灾、农业监测、空中交通管制、空中包裹递送等用途。国际无人机系统协会提供的数据显示，到2025年，该行业预计将产生820亿美元的经济效益，并且将创造多达10万个工作岗位。Google X部门旗下的Project Wing计划于两年前秘密启动，目标是解决在商业性航班空域开展大规模无人机送货服务的问题。亚马逊的无人机项目为Prime Air，已经开始在英国进行测试，通过无人机送货可以让最后一公里物流成本下降80%。Facebook刚刚完成Aquila无人机的第一次全面试飞，Facebook希望向全球没法接触网络的16亿人提供网络，他们计划利用这个太阳能驱动的无人机以激光传输数据，覆盖60英里宽之内的地面区域，并且它能在空中停留长达90天。趋势六：机器人融入行业应用。机器人的底层技术要依赖于人工智能和深度学习技术的成熟，根据Gartner 公司预测，到2018年，20%的商业内容由机器自动产生，媒体工作者们要小心自己的工作被抢；到2018年，全球将有超过300万工人处于“机器人老板”的领导下。从工厂楼房到家庭居所，机器人未来会成为工人、伙伴、医疗助理、厨师、保安人员等等，应用需求一直在增加。不少初创公司聚焦在工业级机器人、消费级机器人、医疗服务机器人、安全机器人、通用机器人等细分领域。比如亚马逊目前已在13个配送中心部署了3万仓储机器人，亚马逊的机器人把装满各种商品的货架运送到采摘中心，然后再由员工完成商品的分拣工作，确保把商品递送给正确的用户。趋势七：下一代操作系统连接PC、手机和其他智能设备。目前物联网产业发展的重要问题就是缺乏统一的底层平台软件，智能设备无法实现互通。Google目前正在致力于开发一款新的开源操作系统——Fuchsia，使用不同的内核全新编写，支持PC、手机以及其他智能设备。Fuchsia的目的就是打通PC和手机，可能会是谷歌未来IoT的融合操作系统。</content></doc>
<doc>     <docid>211<docid>     <title>监管层叫停，阿里京东之后，互联网消费金融ABS“一律不批”</title>     <link>http://36kr.com/p/5055218.html?ktm_source=feed</link>     <content>近日，36氪获悉，因监管原因，在消费金融领域，除了阿里、京东这样的互联网巨头，非持牌金融机构的ABS发行下半年已陷入停滞，这与上半年互联网消费金融ABS的火热发行形成鲜明对比。一位券商资管人士对36氪表示，由于校园贷等互联网金融领域问题频发，监管层对于在交易所挂牌的消费金融ABS态度已经趋向谨慎，“目前基本不批，什么时候放开也没有时间表。”阿里和京东因为拥有互联网寡头光环，发行ABS产品对券商有品牌加成作用。另外，即使基础资产出现问题，阿里京东也不会坐视不管，对ABS产品有无形的增信作用。但普通互联网消费金融公司，其信贷资产的安全性、风控合规，很难让券商完全放心。因为，消费金融做ABS，进入资产池的个人贷款成千上万笔，券商作为资产管理人，很难识别每笔资产的真实性。&nbsp;交易所的ABS发行，名义上是备案制，实际上仍需证监会和交易所的审批。下半年以来，消费金融领域问题频发，尤其是一些互联网新兴公司，成为监管层重点盯防的对象。交易所目前给到券商的态度很明确：“跟互联网消费金融相关的项目不要往上报了，报了也不批。”虽然没有明确发文，但类似窗口指导的方式把意见传达下去。&nbsp;券商资管和基金子公司，在交易所ABS发行过程中充当管理人和主承销商的角色。券商从2015年开始加大对ABS业务的投入，比如从固收部门分设业务条线进行项目招揽。据中基协公布的数据，截至2015年底，券商资管的专项资产计划共有156只产品，规模达1793.75亿元，比2014年底大增389.45%，其中大部分是资产证券化产品。一位券商资管人士称：“我们接触过一些互联网金融类的项目，比如消费分期。在做资产支持计划的时候，首先要看他的股东背景，其次看他业务的信用逻辑，是不是可持续。尤其是风险收益的匹配度。”在阿里和京东、分期乐和宜人贷之外，沉寂许久的消费金融资产证券化近期重新开张。10月24日，“东方汇智-中腾信工薪贷1号资产支持专项计划”（简称“中腾信工薪贷ABS”）在中国证券投资基金业协会完成备案，即将挂牌深交所，发行规模近2.9亿元。其内部人士对36氪透露，这很可能是消费金融场内的“最后一单”，以后不再发新的ABS了。不过，据知情人士透露，即使是中腾信这一期，也是上半年完成，其早在今年4月份就拿到了交易所无异议函。这表明，下半年以来，监管层已经采取了一刀切的做法。中腾信的控股股东是中信产业基金，其他股东还包括中航信托和华联股份。用于放款的资金主要来自于信托和其他机构投资者。目前麻袋理财和中腾信的法人均为樊扬，二者作为关联公司，前者充当资金端，后者为资产端，而樊扬的另一个身份是中信产业基金的执行总经理。作为中信产业基金打造的消费金融公司，中腾信面对工薪人群提供小额消费信用借款。截至目前，已在全国范围建立了110余个营业部。据中腾信助理总经理魏昆介绍，中腾信和纯线上的互联网消费金融公司不同，过去两年主要集中在线下，核心管理层来自Capital One、平安银行、中信银行等机构。资产证券化（Securitization），就是将未来发生现金流的资产打包组合成资产池，经过结构化设计，将低流动性资产转化为高流动性的资产支持证券( Asset BackedSecurities, 即ABS )，这种安排可将企业的未来资产进行提前变现和转移分拆，从而满足融资和风险释放的需求。&nbsp;将基础资产打包出售可回笼资金进行再次放贷，发挥类似银行的“吸储－放贷－回收再放贷”的乘数效应，一定程度上变相突破了资本金和杠杆限制，有利于扩大规模。此次场内ABS发行叫停事件也表明，在很长一段时间内，场内ABS的门槛将不会降低，依然还只是巨头的游戏。</content></doc>
<doc>     <docid>212<docid>     <title>PPP+（O+O），中孝科技从基层医疗延伸电商、金融、数据业务</title>     <link>http://36kr.com/p/5055098.html?ktm_source=feed</link>     <content>随着分级诊疗和家庭医生政策的实施，基层医疗、社区医院、家庭医生等成为风口，让达安基因（上市公司）、平安好医生（独角兽公司）、丁香园、以及正广兴、悦健康、汇创宜、吾家健康、邻家好医等公司纷纷布局。在这之中，中孝科技还受到PPP政策鼓励并进行了落地。中孝科技创始人兼CEO马长山创业前的身份之一是中国老教授协会城乡医疗帮扶中心副主任，在得到了某国企的合作意向后，促成了国企、商会及企业三方参与的PPP模式，共同输出医护人员、医疗设备、信息化建设等医疗资源和资金。中孝科技的团队组建于2015年3月，经过多次商业模式的探讨后，于2016年8月注册了公司，并确定了基层医疗+互联网的商业模式，即以中孝基层医疗机构（医院、中医院、门诊）为基础服务平台，延伸出中孝医生、中孝良品、中孝金服等业务板块。采取线上线下结合（O+O）的方式，为半径1.5公里范围的社区居民提供在线问诊、远程会诊、上门康复护理、线下陪诊等日常诊疗、慢病管理、及健康管理服务，全方面提升基层社区医院服务能力和服务水平。第一个O：线下中孝科技收购的百济堂中医门诊马长山告诉36氪，中孝科技的基层医疗机构均采用收购模式，现已在北京收购了1家医院、3家中医医院和9家门诊；在青岛收购了5家医院；在石家庄收购了2家医院和7家门诊。到2017年底，中孝科技希望打造万家基层医疗机构联盟。有了医疗机构后，中孝科技又为它们引入了新的医疗设备，如进口的X光机、B超机、高频电火花、毫米波等。为进一步解决社区居民的信任问题，除了基层建设，中孝科技还引入了“自带IP”的医生。目前，中孝科技合作的医生分三个层次：老教授级别，讲述科研成果、理念等，中孝科技和中国老教授协会合作签约了3000余名会员，将为中孝科技的用户开启付费“侦听模式”（有人专门录音上传到中孝社区APP）。主任医师级别，解答疑难杂症等，中孝科技与包括北京同仁医院、阜外医院等在内的多家医院合作了700余名。0~5年的年轻医师，科普直播、上门服务等，这类的医护人员合作了将近600人，直播内容包括健身养生、瑜伽、中医等泛医疗健康常识等，上门服务则涉及诊疗、康复、护理等。这里值得一提的是，上门诊疗在2016年9月之前还属于法律禁区，但2016年6月便已在青岛进行上门诊疗的中孝科技却已得到当地卫计委的许可，因中孝科技在服务全程都开启了录像，为医患行为均进行了监督，也有效避免了医患纠纷。中孝科技还为社区居民设计了孝康卡。它将是中孝社区医院医疗健康服务证，从体检、问诊、取药、住院、康复以及基因采集等个人终生的健康大数据，都将存入孝康卡电子档案中，为持卡人未来疾病的预防、诊断和享受智慧医疗服务提供基础数据。第二个O：线上中孝社区APP截图从中孝科技的APP中孝社区可以看到，从挂号、候诊、处方查询到报告查询的一系列流程都可以在线上实现。除此之外，中孝社区APP还提供了中孝良品（即电商，主要在线销售健康主题的药品、保健品、医疗器械等，约有1000款左右）、中孝金服（即金融，涉及保险、积分系统）等服务。马长山表示，未来中孝科技还将上线众筹平台。不过，36氪体验了中孝社区APP后发现这些功能基本只是展示，不能实际操作。马长山解释，APP在本月28号才正式开通，届时会举办发布会。“我们是在社区医院的基础之上做增项，增加系列服务内容，也增加系列服务形式。”马长山坦诚，在这个模式中，难点也是非常多的，其中最难的就是运营和管理。人才少、意愿低、招人难。为了解决这个问题，中孝科技将会尝试医学教育和培训。他还透露，仅基于以上的工作，中孝科技已经投入7000多万人民币，且天使和种子融资均为自筹。在团队上，马长山还是天使投资人、企业教练技术专家，先后任黑龙江企业教练技术平台发起人、CCTV《直通新三板》评委、“新资本思维”的倡导者，提出了60余种新资本商业模式；高级副总裁李强毕业于南开大学哲学系，先后任五四家园联合创始人、雅酷时空高级副总裁、开桌APP联合创始人；CTO兼联合创始人马宏伟毕业于黑龙江商学院，创立过哈尔滨IBM顺时针电脑学校、哈尔滨增强科技公司，曾任职IBM大中华区PC软件系统集成高级架构师；首席融合官兼副总裁郑霄为医学博士，曾任北京亚健康防治协会秘书长、中国亚健康产业创新联盟副理事长、欧美同学会医师协会理事、中国国际经济投资合作公司资深顾问、香港华润医疗集团和用友网络集团行业总监。公司现有员工100余名。</content></doc>
<doc>     <docid>213<docid>     <title>51信用卡C+轮再融8400万美元，将发起数亿规模产业基金</title>     <link>http://36kr.com/p/5055213.html?ktm_source=feed</link>     <content>51信用卡今天宣布获得嘉实投资和银泰集团累计8400万美元C+轮融资，不久前51信用卡在四周年发布会上刚刚宣布了由天图投资和A股上市公司新湖中宝领投的3.1亿美元C轮融资，30天内51信用卡共获得了近4亿美元融资。51信用卡从一款信用卡账单管理APP起家，经过了数据积累、流量变现到金融生态衍生的商业化过程。经过4年运营，51信用卡管家积累了7000万量级的用户，进而以此为入口布局了小额信贷、理财、分期等金融业务，构建了信用卡金融生态体系。除继续完善信贷产品线、扩大消费金融市场占有率、推进 “51人品卡”计划之外，51信用卡还将发起设立产业基金，着眼于金融科技产业上下游企业的投资并购，在信用卡金融生态之外扩建一个范围更广、生命周期更长的体系。51信用卡CEO孙海涛透露，这一基金规模将达数亿元，主要聚焦资产类、数据类、信用类等三大类投资标的，预计将于年内完成。该产业基金的成立将补足51信用卡的资产、数据、场景等，作为发起人和出资方，51信用卡将持续对外输出流量、资产、技术等各项优质能力和产品，承担基础设施服务平台的角色。2016年初，51信用卡完成了对99分期的战略并购，并于6月份将品牌升级为“给你花”，迈出了向信用卡用户以外的客群探索的第一步。孙海涛介绍，目前51信用卡已实现盈利，目前单月营收突破1亿元，预计今年累计营收将超过10亿元。我是 36 氪专注报道互联网金融和教育行业的作者 Justin，欢迎大家与我联系，切磋讨论。我的微信是 ：196215239</content></doc>
<doc>     <docid>214<docid>     <title>美丽策发布家用美容仪智美光膜，想让医疗级光子嫩肤进入全民时代</title>     <link>http://36kr.com/p/5055188.html?ktm_source=feed</link>     <content>据智研咨询发布的《2016-2022年中国美容行业深度调研与投资战略咨询报告》，2015年我国美容行业市场容量已达到6150亿元。作为美容行业的细分市场，国内光学美容尚处于启蒙阶段，国外则已炙手可热。2000年，美国国家航空航天局(NASA)发现，不同波长的光波对人体有着不同的光疗效果。随后多家科研机构的持续研究表明，冷光源LED的光能够刺激纤维原细胞的活性，从而促进胶原细胞和弹性细胞的生成，减少干痒皮肤、消除痤疮、提高修复能力。因此，光子美容迅速打开了一个巨大的市场机会。目前在美国，光学美容领域市场年度复合增长率达到50%，并涌现出类似LightStim等一批独角兽企业。“中国美容激光之父”、皮肤专家周展超认为，光学美容存在一系列需要攻克的技术壁垒，诸如便携化、研发创新不足、价格昂贵、操作不便、产品功效单一等，难以激活更大的消费市场。在此背景下，10月25日晚，智能美容品牌美丽策发布了其首款产品——智美光膜。据了解，它面向18-40岁的女性，是一款家用美容仪器，集肌肤测试与护理于一体、结合手机APP使用的高科技光疗智能美容产品，可通过肌肤年龄、油份、白度、毛孔、纹理5大维度智能分析肌肤状况，进行护理和跟踪，有效解决肌肤的净痘、淡斑、消纹、亮肤4大需求。当数据积累到一定程度，经过机器学习的智美光膜将提供个性化护肤方案，实现不同功效护理。智美光膜利用了生物刺激原理（非生物破坏性），采用固定的二极体低能量光线（415nm蓝光、460nm蓝光、590nm黄光、630nm红光、660nm红光、850nm红外光及940nm红外光）取代镭射光源来达到改善细胞效果。在材质和工艺上，智美光膜外壳为全铝曲面，机身使用纳米喷涂，眼罩部分（眼部更敏感）使用了进口硅胶。智美光膜根据脸谱灵感设计，外型符合人体工学，佩戴时可按头部大小调节。此外，智美光膜据称首创了接近式感应与无按键触摸式开机功能， 并配备了多点超微距高清摄像头。在生产环节，美丽策使用了华为、苹果、松下等知名品牌的供应商，整个品质管控都是华为的体系。为了让质量和安全性进一步得到保障，美丽策得到了周展超等人的权威背书，并获得了中国光生物安全证书。美丽策还专门为用户提供了太平洋财产保险，每人每笔最高承保50万元。美丽策方面介绍，该款产品历时4年探索积累和18个月进行产品打造，用了近30副磨具钢和近8吨磨材，经过5次迭代、上百次样品测试实验和1500位女性亲身体验，前期光研发即已投入了上千万元。对于智美光膜的销售渠道，创始人兼CEO张延华告诉36氪，由于其生产成本已经很高，没有太大的利润空间，造成初期销售只能在电商平台而不是线下。第一波在京东进行销售，得到市场检验之后，美丽策陆续会去蘑菇街、聚美、唯品汇、天猫等其他平台。本次发布的智美光膜分绽放系列和魅力系列：其中绽放系列为2599元，已于25日晚间在京东、美丽策官网和官方微信启动0元预约。比起绽放系列，魅力系列的硬件还将带有硬件测肤功能，技术壁垒更高，价格也相对更高，为3499元，将于后续发售。发布会之前，美丽策于10月10日在京东进行了盲筹，截止到发布会尾声，支持人数达52112名，已筹金额超过343万元，众筹成功率为343%。张延华还透露，美丽策正在申请FDA和CFDA认证。CFDA申请去年就开始了，不过审批需要一年半。FDA则会快点，一旦下来，将代表美丽策进军美国市场和北美市场。11月20日，美丽策将去加拿大多伦多再办一次品牌活动，为销售预热。至于智美光膜的使用场景，智美光膜主打“先测再策”的理念，即先利用APP（绽放系列）或者硬件（魅力系列）检测肌肤情况，再使用硬件进行美肤。每天15分钟，28天生物周期可实现美丽改变。美丽策全称为深圳美丽策科技有限公司，注册于2016年1月，前身为深圳斯坦普光生物科技有限公司，是一家集软件、硬件、光生物美容、互联网和大数据于一体的源生态全产业链高科技型企业。在核心团队上，创始人兼CEO张延华自2009年至今一直从事光学领域的研发、制造，曾为世界500强企业美国某知名品牌公司代加工光疗护理产品；COO周敏峰此前在华为任职19年，负责创新类产品的孵化和开发、平板电脑类产品端到端的管理、OTT机顶盒端到端的管理以及华为家庭产品线战略规划和解决方案规则等；团队其他成员则分别来自硬件研发、互联网、医学美容、时尚圈等领域。作为一家以研发为驱动的创业企业，美丽策至今已累积了34项专利如外观专利、发明专利及实用新型专利等，其中还有10项国际PCT专利。2015年10月，美丽策获得了梅花天使创投的600万元的种子轮投资；2016年4月，美丽策再次获得来自梅花天使创投、影视明星章子怡等千万级Pre-A轮融资，估值已达2亿元。看起来两轮融资累计也就千万级，但美丽策称本次发布会耗资达千万级。张延华解释，开发布会前美丽策还缺钱，因此又紧急融了400万元。梅花天使创投创始合伙人吴世春补充，“这个发布会有品位、很值得。美丽策之前的研发是在不断的花钱，现在订单源源不断开始挣钱了，后面还会吸引越来越多资本、大V、用户的关注，会越来越好。”值得一提的是，美丽策的投资方还包括影视明星章子怡。在采访中，36氪得知这是基于吴世春的牵线——吴世春是歌手汪峰老友、且是Fill耳机的投资人。张延华也坦诚表示，吴世春并不只投了钱，更是在美丽策的战略规划和资源整合上给了非常大的帮助。</content></doc>
<doc>     <docid>215<docid>     <title>传统妖怪故事怎么在当代成为爆款？非人哉除了搞笑日常，还加了点“性冷淡”色彩</title>     <link>http://36kr.com/p/5055144.html?ktm_source=feed</link>     <content>在妖怪领域，九尾狐毫无疑问最大的公用IP之一，尤其在AGC领域，抛开《火影忍者》这样的大作不算，老司机们多少都看过相关的本子。今天的说的漫画《非人哉》也用到了九尾狐这样的经典形象，另外他们还中国传统神话中的各种妖怪形象添加在了其故事中，并将其人形化，分别对应能微博上能产生大量共鸣的性格以及日常，比如九尾狐可以看作一个标准的宅女老司机，白龙马则变成了一个喜闻乐见的暖男，粉丝让他跟面瘫的哪吒搞起了CP组合。在整体画风上，《非人哉》可以看到有传统的中国水墨元素，色彩也对传统鲜艳色调有借鉴，但把饱和度下调了一个级数，另外选取了大量的不规则不连续的线条元素，这些反差带来的感觉其实有些性冷淡风格在里面。主角九尾狐：九月目前非人哉自去年8月上线以来，以每周一、三、五更新，每次更新2个四格的方式在微博积累了100多万粉丝，话题阅读量超过6.7亿，这种泡面小四格在以长篇少年漫为主网漫平台上成绩也不错，有妖气超过1500万点击，网易漫画平台超过2500万的点击。跟我们之前报道的微博漫画工作室牛轰轰、丁小点类似，出品《非人哉》的分子互动也走在微博爆款IP继续放大的路上：对原有内容做升级以及IP的商业化衍生。分子互动目前已经组建了一个动画团队来将《非人哉》动画化，另外非人哉世界观也有了新作品《1031》，这个选取万圣节日期为名字的漫画讲的是狼人、吸血鬼等西方妖怪在中国的故事，有点纽约人在北京的味道。妖怪版的纽约人在北京关于漫画的商业化拓展，分子互动已经做了相关的图书和衍生品，与磨铁合作的首部单行本首印10万册，在摩点网进行的图书众筹活动，上线3小时达成众筹目标，最终筹集金额突破30万元；《非人哉》还与阿里巴巴、角川、Animate、艾漫、ACTOYS等国内外多家企业围绕周边开发、海外发行等项目进行合作。另外值得注意的是，跟大部分个人出身的微博漫画作者不一样，分子互动在涉及原创IP孵化业务前其实是一家社交媒体营销公司，其出品的漫画在谨慎的展开品牌授权相关的变现，营销方面的营收每年都在成倍增长，去年整年的收入近千万。《非人哉》系列的影视化，其创始人徐博表示已经有一些影视公司找过来，“但我们非常的谨慎”另外徐博认为过去他们在社交媒体营销方面的经验其实对现在的原创起到了很大的作用。“过去其实也是在做内容， 服务的是腾讯、完美世界这样的客户，但由于传播的主阵地在微博这样的社交平台上，客户的需求点在于用户的反馈，而转过来做内容后，这种用户为先的思路其实是一脉相承的，过去在传播领域的经验也在扩大内容影响力方面起到了作用。”对于我提出微博漫画在故事方面的欠缺可能在长故事的影视衍生产生障碍时，徐博表示他们擅长的是通过单元化的故事将人物性格立起来，在长故事衍生方面会采用跟专业编剧联合设计故事的方式。“故事的核心是人，要由人物的性格推进。”徐博说道。团队方面，徐博和另一位合伙人徐丁分别是传播及美术领域从业背景，两部漫画的主笔和相关助手人员都是美术学院出身，分子互动已经拥有一个40余人的团队。此前分子互动获得了EMC1000万元的天使融资，估值1亿。</content></doc>
<doc>     <docid>216<docid>     <title>美国哪些地区的初创公司存活率更高？这个调查结果也可以类比中国的创业环境</title>     <link>http://36kr.com/p/5055127.html?ktm_source=feed</link>     <content>编者按：本文作者 Jason D. Rowley 是芝加哥的一名记者和独立研究员，也是 Mattermark 网站的撰稿人。在本文中，他对美国六大都市区初创企业生存率与全国初创企业平均生存率以及其它小规模创业中心的生存率进行了对比，便于读者了解哪些地区的初创企业生存率较高，并尝试找出背后的原因所在。几个星期前，我们曾问过这样一个问题：“如果有 100 个初创企业成功地获得了种子轮融资，那在这 100 个公司当中，有多少能够继续发展到 A 轮融资？获得 A 轮融资的企业中，又有多少能够继续到 B 轮？（以此类推）（备注：这与初创企业成功获得种子轮融资的比例是两个不同的问题）答案是“这个数量惊人的少”。本周，我们还是想围绕这个问题，稍作改变，来探讨一下。美国哪一个创业中心的初创企业生存几率最高，能够获得一轮又一轮的融资？换言之，如果通常来说，初创企业的处境（至少在融资方面）都是捉襟见肘、令人犯难、粗野并且短暂，那在哪些地方初创企业的处境不至于这么惨呢？在这里，我们将从原来的 2011 家公司（在 2009 年 1 月 1 日至 2012 年 12 月 31 日期间获得种子轮融资的 2011 家企业，这个数量已经有足够说服力，包括了 2009 年获得种子轮的 Uber 和 Airbnb 以及 2012 年获得种子轮的 Snapchat。我们认为，从那时起到现在的时间足够来观察其中一些企业后期的融资和发展情况）中选择最具代表性的六大都市区，并将这些区域的初创企业生存率与平均值进行比较。这六大都市地区为：旧金山湾区、纽约市、波士顿、洛杉矶、西雅图和芝加哥。我们将对这六大都市的初创企业表现状况做一个观察，然后结合我们之前在 Mattermark 上所做的&nbsp;城市调查信息,&nbsp;尝试找出这些汇总信息对于企业家、投资人和公民领袖背后的价值。六大都市区初创企业生存状况在之前 Mattermark 文章中，我们已经明确了是旧金山、纽约市和波士顿这些地方主导着美国的初创企业生态系统。在融资频率、融资金额、并购举措或者其他方面，这三个地区都是处于遥遥领先的位置。那在初创企业生存方面是否也是这样呢？下面让我们来探讨一下。下面左右两侧图表显示的是相同的数据，但是纵轴比例不同（横轴代表融资轮次 A-F，纵轴代表获得该轮融资的企业比例）。红线显示的是我们这 2011 家企业数据库中初创企业的生存率，蓝线表示的是该特定城市的初创企业生存率。当蓝线低于红线时，就意味着这个城市的初创企业生存率低于全国平均水平。&nbsp;旧金山湾区初创企业生存率与美国平均水平对比图纽约初创企业生存率与全国平均水平对比图波士顿初创企业生存率与全国平均水平对比图由上图可以看出，纽约和旧金山的初创企业生存率都高于全国平均水平，而波士顿的初创企业在早期融资的表现落后于全国平均水平，但是到 C 轮融资之后开始呈现赶超趋势。那么，剩下的三个相对小一些的都市创业中心呢？&nbsp;洛杉矶初创企业生存率与全国平均水平对比图西雅图初创企业生存率与全国平均水平对比图芝加哥初创企业生存率与全国平均水平对比图&nbsp;由上图数据可知，洛杉矶和芝加哥在所有融资轮中都接近或者说与全国平均水平保持相同的数据，在某些融资轮的数据甚至略高于全国平均水平。西雅图的数据让人有些惊讶，其初创企业生存率低于全国平均水平，并且成陡然下降趋势。此外，在我们的数据库中，这六大都市区创业中心，只有芝加哥和西雅图在 2009&nbsp;至 2012 年期间获得种子轮的初创企业没有获得 C 轮之后的融资。这六大都市区以外的其他地方情况怎样呢？其他地区也有很多规模较小但充满活力的创业中心，例如奥斯汀、科罗拉多州博尔德（Boulder）、华盛顿特区和奥尔良等，但是这些地区在 2009 至 2012 年期间只有少数几个获得种子轮的初创企业，所以没有足够的数据来获取这些地区的总体信息。其他地区初创企业生存率与全国平均水平对比图&nbsp;所以，剩下的这些 34 个大都市区（加上我们数据库中的其它城市）在 2009 至 2012 年期间获得种子轮融资的初创企业大约占到了全部初创企业 25% 的份额。显而易见，小规模的城市初创企业生存率远远低于大型都市区创业中心以及全国平均水平。可能性原因分析然后，让我们先假设一下，未能成功获得后续轮次融资可能是以下三个原因之一：1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 公司倒闭2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 公司实现了财政的可持续性3.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 公司被收购在较小规模的初创企业生态系统中（即在最后一张图表中汇总的城市），缺乏足够的风投资金、市场准入和一些类似因素可能是导致初创企业生存率低的主要原因。而在西雅图这样的城市，可能是由于并购活动所以初创企业没有获得 C 轮之后的融资。至于实现财政可持续性，应该适合用来解释芝加哥这样的城市初创企业的表现，因为那里的投资者都较为保守，更加看重底层商业基础。或者，从概率学角度来解释，小规模的创业中心初创企业数量不够多，还不足以产生一个发展到 C 轮融资之后的初创企业。以上这些因素都可以解释为什么某个初创企业未能获得下一轮融资，但令人沮丧的是，它们都说明不了为什么一些城市的初创企业整体表现优于全国平均水平。但是最重要的是，我们的分析证明了一个强大、成熟的初创企业社区所具有的价值所在。Brad Feld 是 Mattermark 的一名投资人，也是该公司的董事会成员，他在相关的书中阐述了一个强大的初创企业生态系统的支柱力量。他认为其中最重要的是，必须由那些有兴趣留下来的企业家来引领这个生态系统，起到带头作用。从这一点看来，湾区在过去这几十年以来一直是创业活动的主要枢纽地区。湾区已经产出了几代企业家，其中许多企业家都留在湾区，通过投资、组织社区或者为初创企业提供指导来回馈湾区。因此，或许这种企业家网络的广度和深度促使湾区初创企业在各个阶段的生存率都比其他地区要高。但是，波士顿和纽约的创业社区也已经有一定历史，然而这些地区的初创企业生存率并没有明显高于全国平均水平。所以，这样一来，最大的可能性便是有一些层层相扣的因素存在，有助于提高初创企业的生存率，但是现在我们还无法拨云见日、抽丝剥缕地解开这一难题。与此同时，由于每个创业中心具有独特性，所以格外又增加了难度。借用列夫托尔斯泰的一句名言，稍作修改似乎便可以形容这一问题：所有低于平均生存率的创业中心都是相似的，高于平均生存率的创业中心却各有各的千秋。（原文大意为：所有幸福的家庭都是相似的，不幸的家庭却各有各的不幸。出自《安娜卡列尼娜》开篇首句。）</content></doc>
<doc>     <docid>217<docid>     <title>要做服务和酒店行业的“领英” ，Industry 获得230万美元种子轮融资</title>     <link>http://36kr.com/p/5055147.html?ktm_source=feed</link>     <content>提到职业社交网站，大多数人会首先想到领英。不过，虽然领英拥有超过4亿名会员，但并不意味着它能满足所有类型的工作。比如说服务和酒店行业，需要的更多是视觉展现，像是厨师准备食物、调酒师准备饮品，单凭一张简历无法准确展示工作所需的必要技能，美国服务和酒店行业的招聘解决方案提供平台 Industry 找准这一切入点，成为集网络、市场和招聘行业顶尖人才解决方案于一体的专业平台。近日，Industry 获得230万美元种子轮融资，Sand Hill Road（沙山路）上的隐形风投基金领投。公司计划利用该笔资金招募人才，将团队规模从6人扩大到15人；公司还将扩大目前在西海岸的9大市场份额，包括圣地亚哥、洛杉矶、旧金山、波特兰、西雅图、丹佛、拉斯维加斯、斯科茨代尔和凤凰城。迄今为止，公司共筹集资金250万美元。Industry 成立于2014年，总部位于美国旧金山，作为服务和酒店行业的招聘解决方案专业提供商，从初次求职者、事业建设者到经验丰富的“老兵”，其平台能够满足行业内不同层次人群的需求，初次求职者可以这里介绍自己、展示优点以及发现自己的个性是否与公司文化相匹配；对于想要获得提升的事业建设者而言，这里可以展示他们的技能；而对于那些经验丰富的“老兵”来说，他们可以利用平台来讲述自己的故事，就像 Scatori 披萨店和意大利餐厅的资深厨师 Kevin Levine，就在网站上创建了一个视频，讲述他的整个职业生涯。&nbsp;尽管 Industry 并未透露有多少求职者或企业使用其平台，但公司战略的一部分是锁定所进驻市场的餐厅，让更多的企业参与进来。例如，在华盛顿，该公司与华盛顿酒店协会合作，该协会的注册餐厅有6000家，目前大部分均使用该平台找到新员工。平台上七成的餐馆都是家族拥有和经营的，公司主要针对的是有5到15家分店的餐厅，它们通常是潮流引领者，以最快的速度开设分店。所以帮助他们找到人才，也会赢得这些家族企业的信赖。目前公司的客户包括美高梅国际酒店集团、迪斯尼、Hell’s Kitchen 、Cohn Restaurant Group 、Fox Restaurant Concepts 和 Stone Brewing Co. 等。与此同时，Industry 也向求职者展示了自己的价值，因为在平台的帮助下，找工作的时间大大缩短了。一般来说，服务和酒店业找到工作需要28天，而 Industry 将时间缩减到一个星期，甚至更少。在某些情况下，像是服务生或调酒师这样的工作，不出24小时，餐馆就能找到50到100名申请者。而厨房工作，像是厨师，花费的时间要长一些，因为申请者相对较少，不过也不会超过一个星期。Industry 目前采用 pay-per-applicant（依申请人付费）付费模式，每个职位都有自己的底价起点，平均价格是3美元。但根据不用的需求价格会各有不同。比如说，招聘的职位需要的工作经验越丰富、越具体，企业支付的费用越多。所以说，如果你想雇用一个执行主厨,要求持有烹饪学校学位、至少有10年工作经验，价格就会很高，因为满足条件的申请人会很少，可能餐厅要为每名申请人支付25美元。但是至少能找到合适的人选，所以对餐厅来说还是非常划算的。Industry 允许客户设置费用上限。举例来说，如果餐馆想招酒保，找到一个应聘者的费用是3美元，然后餐馆表示最多会支付75美元，那么他能获得25名申请者；而大型酒店或企业，则不会有金额上限。&nbsp;目前平台对求职者免费。但公司计划在未来也会收费，像是使用会员制度。公司还会提供广告机会。&nbsp;&nbsp;目前，圣地亚哥是其最大、增长最快的市场，有着20%的员工和业务量，其次是洛杉矶、拉斯维加斯和西雅图。从美国市场来看，服务和酒店行业有着1700万从业者，而且这个数字还会迅速增长。加之餐厅、酒吧、夜总会、酒店的员工流动率为72%，所以放眼全球，Industry 很有可能成为这一利用的领英。</content></doc>
<doc>     <docid>218<docid>     <title>苹果不得不由硬变软，谷歌则开始由软变硬了</title>     <link>http://36kr.com/p/5055197.html?ktm_source=feed</link>     <content>苹果硬件产品线呈现逐日下滑，然而谷歌的硬件产品却有了顺风顺水的势头。根据苹果今日发布的2016财年第四财季报告显示，除了净利同比下降19%，贡献了苹果总营收63%的主力iPhone销量下滑5%，单项营收更是下降13%。除此之外，包括Mac、iPad以及其他硬件产品销量均出现了下滑，具体来看：苹果公司第四财季共售出4551.3万部iPhone，比去年年同期的4804.6万部下滑5%；共售出926.7万台iPad，比去年同期的988.3万台下滑6%；共售出488.6万台Mac，比去年同期的570.9万台下滑14%。这样的数据表现，致使苹果自2001年以来，出现了全年营收首次下滑的现象。然而，与苹果硬件产品销量整体下滑相比，谷歌一直以来的硬件梦似乎出现了曙光。（由于iPhone是苹果最大的营收来源，所以相对的我们也只拿出谷歌的手机产品来对比）。一个鲜明的表现是，谷歌Pixel手机自10月20日美国上市之后，预定数量大幅超乎预期。如果你没有在Pixel发布的时候预订，那么你很有可能会等一段时间了。数据显示，好几个版本的Pixel/Pixel XL已经售罄，如今黑色和银色的Pixel还有货，而Pixel XL只有银色32GB。通常来说，谷歌的发货周期大约是3-4周，也就是说如果你现在成功预定，那至少也要到12月前后能拿到手机了。如我们所知，谷歌的主要营收来自于搜索和广告，但他始终有着一颗做手机的心。从2010年Nexus One开始，谷歌Nexus手机系列已经走过了5个年头。不过，Nexus设备虽然也很出色，但是并没有在手机市场掀起大的波浪，甚至被归为小众产品一类，而最新发布的Pixel/Pixel XL则好评、销量双丰收。Pixel/Pixel XL的推出不仅意味着Nexus系列正式落幕，某种程度上也体验了谷歌的愿景，它甚至被称为能与iPhone 7对战的杀手锏。事实上，就在Pixel/Pixel XL发布之后，谷歌母公司Alphabet股价一度涨幅逾2.5%，至每股828.81美元，创下谷歌在2004年8月上市以来的最高纪录，一部分原因就是来自于Pixel系列的带动。一直以来，苹果依赖于自主的硬件设备构建了一个可谓完整的生态体系，使得各项增值服务都有了一个落脚点，然而随着硬件产品的大幅下滑，库克不得不拿出软件服务的增长来给予资本市场一个交代。从苹果2016财年第四财季财报中，很明显可以看到来自于服务的营收为63.25亿美元，比去年同期的50.86亿美元增长24%，成为财报中唯一亮眼的增长业务。库克自己也表示，公司旗下服务业务展现了惊人的动能，营收增长24%再度创下历史纪录。这项业务上一季度同比实现了19%的增幅。苹果硬件滞缓带来的结果是，苹果唯有把软件服务的表现提升到显眼的位置去宣传，事实上它也不得不这样，因为除了整体手机销量的放缓，苹果的地盘也已经被OPPO、Vivo、华为抢去，这或许可以理解为何苹果在大中华区的营收同比下滑了30%。对于谷歌来说，软件服务本身就处于持续增长的态势，如今把软件服务通过手机来体现，已经开始逐步变硬，大有后来者居上的势头，而且Pixel系列手机的问世也恰逢其时。尤其是在智能手机同质化如此严重的情况，加上三星Note 7爆炸事件给予了谷歌在高端手机市场一定的时间和用户空间，都给了Pixel系列极好的机会。我们甚至可以说，Pixel系列手机已经远远胜于市场上其他安卓系统的智能手机。比如，Pixel、Pixel XL两款手机不仅配备最新的Android系统版本和最好的摄像头，可以让iPhone用户轻松将数据转换到谷歌手机的安卓系统中。（库克估计要心塞塞了，明摆着是来抢用户的...）同时，它还是唯一内置Google Assistant助手的智能手机，这意味着它将与谷歌全新的声控生态系统实现无缝结合，甚至有望成为观看虚拟世界的窗口。苹果自乔布斯时代就凭借掌控软硬件两端，让iPhone成为了有史以来最成功的手机产品之一。“Pixel不仅仅看起来像是iPhone，它还渴望复制iPhone的成功”，《连线》杂志甚至如此评价谷歌对于Pixel的期待。就连谷歌硬件部门主管Rick&nbsp;Osterloh都说，Pixel&nbsp;这个词意味着谷歌软件和硬件的完美结合。事实上，与其他手机产品（包括iPhone）最大的不同是，谷歌要在Pixel系列身上大肆展现人工智能的特色。在今年5月的Google I/O，无论是Google Home、聊天应用Allo，还是Google Assistant，谷歌多年来在机器学习和人工智能领域积累的技术，都有机会通过Pixel系列手机向用户提供简单、智能且快速的体验。除此之外，谷歌还推出了全新的 VR 平台Daydream。Daydream 包含三个部分，分别是强化手机反应速度的 VR 模式、针对第三方厂商的 VR 参考设计以及 VR 内容平台。而智能手机作为移动 VR 的核心，Google 专门对智能手机的移动 VR 体验进行了改进和提升。嗯，谷歌就是要把一颗“机器之心”植入到你生活的各个场景，这或许才是谷歌做机的最大动能。如今，Pixel系列口碑、销量两边开花直接证明，谷歌的手机梦终于有盼头了。</content></doc>
<doc>     <docid>219<docid>     <title>智能车载公司Navdy 的抬头显示器正式发售，让你在现实道路上看到“漂浮信息”</title>     <link>http://36kr.com/p/5055195.html?ktm_source=feed</link>     <content>10 月 25 日，Navdy 宣布开始正式发售抬头显示器产品，售价为 799 美元。Navdy&nbsp;抬头显示器最早是在 2014 年开始进入大众视线，当时公司采用众筹方式获得了大约 250 万美元融资。而截至到现在，Navdy 获得融资总额已达到 2600 万美元。Navdy 是一款智能车载 HUD 产品，设计想法很简单，就是要将手机屏幕上的显示内容（或汽车仪表板信息系统）投射到前挡风玻璃位置，便于驾驶员直接查看相关信息而不会影响到正常驾车动作。将这一简单的想法付诸实践最终出来的产品却是趣味十足，有种《第五元素》与《黑镜》第三季第一集里的情景即视感。Navdy 抬头显示器能够将 GPS 路线、短消息和其它内容显示在一个完全透明的玻璃之上，位于驾驶员自然行车线的下方。驾驶员使用 Navdy 抬头显示器设备驾车，看上去就像是 GPS 地图（或是短信息、音乐专辑封面等）在前方的道路上漂移。此外，该设备在汽车方向盘上方空间配备有传感器，能够捕捉驾驶员手势操作，例如在有来电的情况下，驾驶员只需向左滑动手即可接听来电。Navdy 在 2014 年的预订价格已经有点小贵，最早一批用户算是先下手为强，只需支付 299 美元，公司预计的零售价格在 499 美元左右。但是现在 Navdy 的最终价格直接飙升至 799 美元，这对于一款智能手机已经能够实现其主要功能，只是更方便一些，分心少一些的升级设备装置来说价格实在太高。与此同时，由前谷歌工程师创建的电子品牌 Anker 在近期表示即将发布一款车载 HUD，名为 Roav，在设计和运行上都与 Navdy 类似，很难不把它看作是 Navdy 的克隆版产品。根据产品网站信息，Roav 将在 11 月开始配送。</content></doc>
<doc>     <docid>220<docid>     <title>慧科集团宣布完成 C 轮融资，首期成立 5 亿人民币慧科资本</title>     <link>http://36kr.com/p/5055198.html?ktm_source=feed</link>     <content>在中国高等教育创新大会上，慧科集团宣布完成 C 轮融资，具体金额暂未透露，投后估值 50 亿人民币，同时宣布成立的还有教育生态创投平台“慧科资本”，首期管理基金规模 5 亿元人民币。慧科资本由慧科和华软金宏等教育投资机构共同出资成立，将通过股权投资等方式，投资高等教育和职业教育领域具的初创公司，为高校、大学生及在职从业人员持续提供全方位、多维度、分层次的综合教育服务。除了已经公布的并购公司无线互联、莱茵教育、美好学院，战略投资的轻课、面包求职、极客帮、馒头商学院，慧科还首次公布了天麦文化，其创始人是江苏卫视主持人李响，另外还完成了对教育行业视频直播服务商“布卡互动”的投资以及基于 PPT 录制工具的知识分享平台“自由坊”的并购。慧科投资布局另外，慧科集团同时宣布和 HTC、学堂在线一同成立了VR 教育公司威爱教育（Viveedu），专注于为中国高校提供 VR 教育解决方案，由北京航空航天大学软件学院创始院长孙伟担任威爱教育 CEO。具体来说，VIVE-威爱教育提供的解决方案包括虚拟现实云教室/实训室、云平台和内容库三部分，其中：虚拟现实云教室/实训室：包括计算机工作站、HTC VIVE 或 Google 适配虚拟现实显示设备、LIGHTHOUSE 激光定位器、智能交互一体机、近视眼镜套装等硬件配件等。这套方案旨在系统性地为高校提供包括医疗解剖、工业及建筑设计、电焊钣金等课程内容，根据场地要求、服务内容的不同，云教室将分为标准版、基础版和基础版 PLUS 三种类型。虚拟现实云平台：支持教师管理 VR 教学内容和教学进程，绷住学生学习理解知识点。云平台可以向教师实时反馈学生的学习状况，包括使用情况、互动结果、注意力焦点变化等数据，通过大数据分析为教师提供智能化、定制化、个性化教学建议。虚拟现实内容库：这个内容库其实是一个开放系统，通过支持第三方开发和自主开发，打造 VR 内容聚集地。目前威爱教育已经与 HTC VIVE（VIVE&nbsp; X 加速器计划）、EPIC（拥有 UNREAL 虚拟现实引擎）、慧科集团达成了战略合作，首批推出的内容包括计算机、艺术设计、土建、财会、机械、医疗 6 大领域。此外，一同公布的还有慧科首发的“人工智能”综合教育解决方案，旨在培养人工智能相关领域的研发和应用型人才，以及面向智能制造等领域的高级技能人才。慧科研究院的院长陈滢博士介绍，这个方案将覆盖硕士、本科、专科三个阶段：其中，面向硕士和本科阶段的学生推出“人工智能与认知计算”课程体系，培养数字经济下各行业紧缺的人才；面向专科推出“机器人技术与智能机器”课程体系，培养智能制造 2025 和工业 4.0 目标趋势下的机器人应用开发人才。除了人才供给方，人工智能专业还希望帮助企业实现商业价值。比如智能产品推荐、智能医疗、自然语言理解、绿色能源、自动驾驶汽车等细分领域。在上一篇《宣布并购莱茵教育、产品壹佰和美好学院，成立六年的慧科教育交出了怎样的成绩单？》中，36 氪详细介绍了慧科教育集团目前的生态布局，在经历了 2010-2013 年的校企合作、开课吧在 O2O 领域的探索以及 2014 年 A 轮融资后探索出的 IT 教育（如找座儿）和针对高校的 MOOC+SaaS 的开课吧，慧科的内容已实现全国 1500 所高校的覆盖。慧科表示，他们将依靠旗下的慧科教育、高校邦、开课吧、课工厂等主体业务，通过“慧科资本”的资本杠杆运作，实现教育资源的线上线下共享。</content></doc>
<doc>     <docid>221<docid>     <title>马斯克的商业帝国岌岌可危，他将如何摆脱财务困境？</title>     <link>http://36kr.com/p/5055169.html?ktm_source=feed</link>     <content>编者按：研发电动车、发射火箭并安装太阳能电池板， 伊隆·马斯克俨然已经成为美国最著名的企业大亨之一，他涉足各个不同的领域，成功创建了一个庞大的商业帝国。“梦想家”的称号用在他身上最合适不过，他有着比其他任何人都更为宏大的梦想，计划殖民火星并推出超级高速列车 Hyperloop 计划，以实现美国西海岸沿线高速运行。但是最近，马斯克商业帝国的财政状况令人堪忧，《经济学人》撰文分析了马斯克商业帝国目前的财政状况并对马斯克未来可能采取的应对措施做了猜测。Jim Chanos 是全球最大的空头基金公司 Kynikos Associates 的创始人，他在 2001 年因为卖空安然而备受外界关注。Chanos 日前表示马斯克现在财政方面出现了麻烦。与此同时，特斯拉与 SolarCity 的合并计划也饱受业内人士争议。这些一并引发了公众的担忧，他们担心马斯克会像伊卡洛斯（希腊神话人物）那样，飞的太高，离太阳太近羽翼融化而最终跌落。马斯克的商业帝国能够忍受得了这种热量吗？马斯克的商业帝国比较复杂，其中包括特斯拉和 SolarCity 这两个上市公司以及一个私人持有的SpaceX。SpaceX 负责火箭发射，也是这个商业帝国体系唯一产生收入而非一直烧钱的企业。而特斯拉现在年产量大约为 85000 辆，目前正计划扩大其价位较实惠的 Model 3 生产量，目标是在 2018 年能够年产 50 万辆车（包括所有型号），而这显然需要大量的投资支持。与此同时，特斯拉帝国集团面临着 SolarCity 收入情况同样不佳的现状。所以，马斯克的整个商业帝国在2016 年烧钱总额就高达 23 亿美元，负债 60 亿美元。除此之外，马斯克还抵押了他在特斯拉的部分股份，获得了约 5 亿美元的个人保证金贷款。虽然马斯克喜欢将他的商业帝国看作是一个硅谷型技术企业，但是它缺乏硅谷成功企业的高利润率和低投资需求的特点。当然，马斯克的商业帝国还有 50 亿美元的现金，银行透支额也并未动用，所以资金不会立即耗尽。而且，马斯克历来一直擅长反败为胜，这似乎也让我们看到了更多的生机。但是，如果该商业帝国继续进行大笔投资，将会面临巨大的资金缺口。在这种情况下，如果进行更多的债务融资似乎太过鲁莽。因此，马斯克应该会选择股权融资，那他在上市公司的股份也会稀释到 20% 以下。再或者，马斯克也可以选择缩减集团投资计划，但这样将会冲击到特斯拉的泡沫股票价格。虽然在“筹集现金”、“保持控制权”以及“稳住股票价格”方面，马斯克哪一个都不想放手，但他显然不可能同时保住手中的这三件利器。在我看来，如果马斯克能够成功，将不仅仅是马斯克的胜利，马斯克商业帝国的胜利，也是关乎到整个行业的生存标准，挑战传统“普世准则”的成功。那将表明，美国的企业家能够解决诸如“现代交通隐患“这样重大的社会问题。同时，汽车制造这种传统的资金密集型企业可以被颠覆；而上市企业那些即使不能顺利产出季度收益的长期项目，也能够实施。只有马斯克实现自己那些雄心勃勃的目标，他的商业帝国才会同时实现财政上的大丰收。但马斯克商业帝国前方的路途可能也更为凶险，不堪一击的财政状况很有可能会勒住马斯克的野心，徒留伤痕累累的投资者兀自叹息。</content></doc>
<doc>     <docid>222<docid>     <title>软银欲对印度驾乘分享巨头 Ola 追加 3 亿美元投资，欲助其在本土对抗 Uber 竞争</title>     <link>http://36kr.com/p/5055160.html?ktm_source=feed</link>     <content>根据印度金融时报消息，日本电信及互联网巨头软银集团正计划对印度驾乘分享行业领导者 Ola 公司追加 3 亿美元投资。据悉，这家总部位于孟买的初创公司正在募集总计 5 亿美元的融资轮，不过根据两位熟悉本次融资交易的匿名消息人士透露，该公司的融资规模并没有局限在 5 亿美元这一数字上，如果有更多投资方感兴趣参与投资，这笔融资轮的最终规模预计可达 7 亿美元。这笔交易很可能会在几天之后完成，软银集团很可能会注入更多资金，但 Ola 公司高层似乎并不希望他们投资太多，因为这意味着自己将付出更多股权。现阶段， Ola 公司的估值并没有太多起伏，依然保持在 50 亿美元左右。虽然受到了 Uber 的强势竞争，但目前&nbsp;Ola 公司依然是印度驾乘分享行业领域里的“老大”，随着这笔最新资金的注入，也让他们获得足够的底气与 Uber 公司对抗，后者当前的公司估值高达 150 亿美元。Uber 公司是在 2014 年进入印度市场的，有数据显示，该公司在印度市场的投入已经达到了惊人的 87 亿美元，而他们所对抗的最大竞争对手就是 Ola。现阶段，Uber 公司已经获得了一定比例的市场份额，但两家公司之间的竞争依然愈演愈烈。今年初，双方曾一度对薄公塘，Uber 公司起诉 Ola 涉嫌订单造假，导致旗下司机纷纷退出 Uber。成立于 2011 年的 Ola 公司是目前印度在线出租车预订及驾乘分享市场的领导者，目前业务覆盖该国 100 多座城市，旗下签约车辆数量超过 10 万部。Ola 移动应用支持 Windows、iOS 及安卓操作系统。一年前，Ola 获得了 5 亿美元 F 轮融资，领投方是英国知名投资公司 Baillie Gifford，参投方包括之前曾投资过该公司的 Falcon Edge Capital、老虎全球基金、软银集团、以及 DST Global，此外中国驾乘分享巨头滴滴出行。去年十二月，为了对抗全球驾乘分享巨头 Uber，滴滴出行、Ola、Lyft、以及 GrabTaxi 结成联盟，在这种合作关系下，利用相似的应用程序，这四家业内领先的出租驾乘分享服务提供商为国际旅行者提供了高效便捷的服务，同时也各自本土市场也取得了成功。其中最典型的就要算滴滴出行，他们已经成功收购了 Uber 中国业务，并且计划扩展东南亚、印度、以及美国市场。Ola 公司是否也会像滴滴出行那样，打一场完美的本土战吗？还是让我们拭目以待吧。</content></doc>
<doc>     <docid>223<docid>     <title> 知名创业孵化器告诉你，聚焦种子轮的投资人应如何评估初创公司</title>     <link>http://36kr.com/p/5055178.html?ktm_source=feed</link>     <content>编者按：本文作者是知名创业孵化器 500 Startups 合伙人 Elizabeth Yin，之前曾联合创立了 邮件广告网络公司 LaunchBit，该公司之后成功转型为“软件即服务”公司，并被谷歌收购。投资人如何评估不同类型的初创公司，这个问题的确让不少创业者感到迷惑、难以理解。当我自己创业的时候，也同样无法找到上面问题的答案。而对于那些提供开发者工具服务的初创公司而言，如何才能像 Snapchat 那样得到投资人的垂青？毕竟不同公司的里程碑和关键绩效指标是完全不同的。在本文中，我准备介绍一些非常“简单的”方法，告诉你专注于早期阶段投资的投资人主要关注些什么。笼统点说，我个人把初创公司分成了四种类型，注意！我的分类绝不是行业标准，纯粹是我个人观点。不过，相信绝大多数早期阶段投资人应该会认同我的看法：1、超高科技公司2、高基础设施公司3、免费消费者应用4、其他类型——比如某些能够立刻盈利的公司当然，每个类型的初创公司都有很多话题可谈，但在这篇文章中就不一一赘述了。此外，我还要先做个免责声明，笔者在此所说的全部观点都仅适用于软件行业投资人。超高科技公司我想，也许很多软件公司都觉得自己应该属于这个类别，但现实情况却是——绝大多数软件产品是很容易开发的。即便是过去我们所认为的那些高科技，比如人工智能、大数据、以及机器学习，如今的开发难度也有所下降。类似 TensorFlow 这样的很多开源技术让很多初创公司受益，一些开发水平不高的程序员和一些自学成才的程序员都能轻松使用这些开源工具。所以，过去那些所谓“超高科技”的创业想法，其实并没有那么高科技。那么问题来了，哪些初创公司才算是超高科技公司呢？基本上，我对这一类别的公司定义是——他们的技术很难被研发出来，而是全世界只有很少一部分人能够开发出类似的技术。因此很明显，所谓超高科技公司，基本上是一个不断前进的概念，因为高科技是没有尽头的。我假设自己是个投资人，然后按照自己的想法去评估所谓的超高科技初创公司（十分坦率地说），扪心自问，如果一款产品，我自己能够构思出来，而且依靠一个自学成才的程序员就能开发出来，那还算是个超高科技吗？当然不是！所以说，外面那么多人吹嘘的所谓“创业想法”，其实根本不算是高科技（只要你会用 YouTube 或是谷歌，就能学会不少“高科技”呢）！事实上，评估超高科技类型初创公司最重要的一个指标，就是团队。如果说的再具体些，就是团队成员的背景（注意：团队在任何类型的初创公司里都非常重要，但如果你有了一个超高科技的创业想法，就必须依靠强大的团队力量来执行）。在这一类别里，团队成员必须要在某一特定行业领域里有丰富的经验和知识储备。举个例子，如果你要开发自动驾驶汽车，会发现绝大多数成功初创公司的成员要么都有相关专业博士学位，要么参与过美国国防部先进研究项目局的“ DARPA Grand Challenge”无人驾驶汽车挑战赛，要么在像谷歌这样的大公司里参与过无人驾驶汽车研发项目。所以，如果你想要在这些行业领域里与其他公司竞争，那么团队成员的职业背景和素质是非常重要的——比其他任何要素都重要。如果你有机会造访一下那些成功的超高科技初创公司，会发现他们的员工很少有“自学成才”的。高基础设施公司一般来说，软件行业投资人喜欢专注于投资软件初创公司，因为一方面投资这些公司的资金成本并不高，另一方面软件产品的市场投放速度更快。但问题是，现如今很多软件投资人所投资的所谓“软件公司”并不具备上述两个特征。事实上，投资人把钱砸给的是医疗健康公司，是金融科技公司，等等，而这些公司本身就有不少问题亟待解决，比如如何拿到行业特许执照、FDA认证等。但是如果从另一个角度来看，这些行业障碍似乎也成了他们的优势，毕竟不是所有公司都能拿到相关行业资质，也提高了进入这些行业的门槛。事实上，对于这种类型的初创公司，投资人通常不会期待他们立刻能赚到大笔收入，因为如果他们短期内收入大幅增多，很可能是采取了某些不合法的的手段。不过，和超高科技公司一样，投资人也非常看重团队成员的行业背景，因为了解行业内的准入门槛也是件十分重要的事情。公司的创始团队是否拥有行业内的从业经验？公司是否曾克服过监管障碍？创业团队是否清楚了解该如何开展业务？这些问题对于能否获得种子轮融资都非常重要。免费消费者应用公司相比于上面提及的两种类型的初创公司，在免费消费者应用领域里获得成功的创业者通常具有不同的行业背景。这一类型的初创公司有很多例子，比如 Twitter、Facebook、Instagram、Pinterest、Snapchat, 等等。当然，所以这些公司都有共同点——需要大量用户、保持极佳的用户保留率和参与度、确保用户量不断增长，这样才能获得大量广告收入，维持公司盈利。如果你的初创公司属于这种类型，那么需要注意以下几点：超速发展如何实现有机超速发展？你的产品有没有病毒式传播力？如果你不砸钱在广告上，新用户该如何发现你的产品？诸如此类……高参与度——用户在你的平台/App/网站上花费大量时间；当 Facebook 获得首笔种子轮融资时，投资人对其平台最感兴趣的一个指标就是，用户每天会在 Facebook 上花多长时间。高用户保留率事实上，商业模式其实并不是那么重要……在早期阶段，绝大多数投资免费消费者应用的投资人并不在乎他们是否盈利。但是，他们更愿意让这些初创公司快速发展，以非常快的速度发展。另一方面，投资人除了希望创业者能够快速扩大用户规模之外，还希望他们能够尽可能地保留用户，并提升用户参与度。（至少，你应该围绕未来的盈利状况告诉投资人一个高水平的用户增长规划。）所以，你需要告诉投资人自己是如何优化免费用户获取方法，以及如何随着时间提升用户粘度。实际上，免费消费者应用初创公司发展非常困难，我的意思是真的非常困难。发展业务本身就不容易，除此之外你还需要考虑以下几件事：1、因为你还没有盈利，如果你无法获得融资，那么就很难继续维持运营。&nbsp;一开始，这可能不是个问题——你可以自筹资金，不过一旦你达到了 A 轮或 B 轮这个级别，通常无法靠自筹资金来满足融资需要。2、随着你的业务发展，融资规模也会变得更具竞争力一般而言，几乎所有的公司从种子轮融资、到 A 轮、再到 B 轮融资都是一条异常艰难的道路。B 轮融资的投资人数量要比种子轮少的多，而对于免费消费者公司而言，获得融资的难度更大，因为这一领域的投资人数量本来就屈指可数。在这个类别里，你需要和纯消费者应用竞争，他们可能会做一些与众不同的事情以引起消费者的注意力。当涉及到提升融资竞争力这个问题，你可能需要特别关注一些指标，比如用户群增长、用户群参与度、等等。“其他类型”公司&nbsp;最后，我还要再说说“其他类型”公司。我在路演中所见到的绝大多数初创公司都属于这个范畴。这些初创公司会涉足 B2B 或消费者行业领域，而且可以迅速产生收入。显然，这个范畴里的初创公司会涉及到许多不同的垂直行业，比如电子商务、B2B“软件即服务”、平台应用，等等。投资人会特别关注一些特殊垂直行业和商业模式。但是，在这个范畴里的，所有的初创公司都有一个共性，如果你想要获得投资人的青睐，就必须要有迅速实现盈利的能力。团队成员的背景同样非常重要，因为这个范畴里的初创公司门槛很低，因此团队执行力和竞争力才是是否能够获得成功及和投资人青睐的关键。我之所以要罗列这么多内容出来，是希望能给那些迷茫的创业者们指明一些方向，知道该从什么地方努力，才能获得投资。一方面，你可以找一些金融科技领域里的朋友，看看他们是如何在毫无竞争力的情况下获得投资的；另一方面，如果你在电子商务领域，可能需要达到 100 万美元的交易额才能引起投资人的兴趣。总之，希望本文对创业者有所帮助。</content></doc>
<doc>     <docid>224<docid>     <title>三季度，Vivo和OPPO在中国赶超华为，在印度紧追小米</title>     <link>http://36kr.com/p/5055187.html?ktm_source=feed</link>     <content>看来要捉急的不仅仅是小米了，华为在中国市场的手机出货量居然被Vivo和OPPO挤到第三名了。10月25日，调研公司Counterpoint Research发布报告称，今年第三季度，Vivo和OPPO同时超越华为，成为中国市场前两大智能手机厂商，两个品牌都属于步步高集团旗下，共计占有接近三分之一的市场份额。具体来说，今年第三季度OPPO中国市场份额为16.6%，高居榜首，而去年同期为9.9%。vivo排名第二，市场份额为16.2%，而去年同期为8.8%。公司研究员闫占孟表示，过去两年来，中国手机市场排行榜的前三名的市场份额一直很接近，同时竞争激烈，三季度是榜单首次出现了新的冠亚军。闫占孟表示，OPPO当季的手机出货量同比增长82%，而Vivo则增长了114%。后者录得其在中国市场的最大在增速，这主要得益于其旗舰机R9的强劲销售量，R9是当季中国销售量最高的机型，甚至超过了原来长期占据榜首的&nbsp;iPhone；X7系列需求也有稳健增长。OPPO的低端机&nbsp;A59 和 A37在中国三四线城市的销量也十分强劲，带动了整体出货量增长。&nbsp;这两家手机厂商的制胜之道依然是传统的线下零售和广泛的分销网络，占OPPO和Vivo 3/4的出货量，报告认为户外广告、赞助广告、明星代言人和社交媒体营销拉动的销量。三季度排名的华为，本来在今年一、二季度名列榜首，二季度市场份额为16.9%，如今降为15%。分析师认为华为有可能会通过即将发布的新旗舰手机Mate 9来收复失地。曾经的霸主小米排名已滑落至第四，第三季度市场份额为10.6%，远低于去年同期的14.6%，出货量暴跌114%。小米智能手机出货量同比仅增长1%。Vivo与OPPO的优势恰恰是小米的短板，小米原来的线上模式已经触及天花板，线下渠道的拖累了小米的表现。因此，小米需要一款高端旗舰产品来力挽狂澜。昨日，雷军终于放出“大招”，双曲面小米Note2以及全面屏概念手机小米MIX，发布会还请来了代言人梁朝伟。只是不知道伟仔能不能救得了小米。至于刚刚开完发布会的苹果，三季度的出货量仅能勉强出现在前五。也许只能等到四季度的榜单出来，靠iPhone 7的爆发（当然少不了三星Note 7的助攻）来扳回一城了。中国手机排行榜的变化之疾，让国外媒体感到十分惊讶，因为他们的前两名永远是三星和苹果：“看来中国不仅是全球最大的手机市场，还是全球最飘忽的手机市场。”总体而言，中国手机出货量增长平稳，同比增长8%，环比增长7%。然而从前五大厂商而言，仅有Vivo和OPPO实现环比和同比正增长，也这有这两个品牌的增速超过全国市场的增速。而且，Vivo和OPPO不仅在中国那么逆天，在印度也已经挤进前十了。据印度经济时报报道，今年三季度，Vivo和OPPO两家厂商首次进入印度智能手机市场份额前十。第一、二季度，OPPO和Vivo还在印度智能手机市场的前十之外，但增长势头惊人。据媒体报道，其在印度市场推出的OPPO F1s售价接近2000元人民币，这款机型相当于R9的海外版，在印度市场上市后获得热销。OPPO印度代言人其实不仅OPPO和Vivo，其他中国厂商在印度也是所向披靡。在中国颇为失意的小米，因为红米note3在在印度大受欢迎，其市场份额也从第七回升到第六。联想的市场份额依然位居在印中国厂商榜首，名列全印度第三，占比从8.3%升至8.9%。据Counterpoint Research报告显示，中国手机厂商在印度的市场份额已经达32%，二季度数字为27%。面对中国手机品牌如此在印度攻城掠地，印度本土厂商不免受到伤害。印度最大的本土品牌Micromax的市场份额在第三季度继续下滑，与二季度相比跌了4个百分点。自从OPPO和vivo进入印度市场，就一直在以稳步速度增长。它们将在中国市场的成功经验复制到印度，同样大获成功。有消息表示，按照这个增速推算，预计到今年四季度OPPO和vivo将在印度市场超越小米，甚至有望跻身印度智能手机市场前五名。Vivo在印度的线下门店</content></doc>
<doc>     <docid>225<docid>     <title>飞利浦照明领投 PointGrab 700 万美元融资，开发智能建筑传感器</title>     <link>http://36kr.com/p/5055157.html?ktm_source=feed</link>     <content>在建筑自动化系统中，收集数据的机会很丰富，但是缺乏高效、实时的分析。结合深度学习技术，&nbsp;PointGrab 公司的解决方案或许可以克服这一弊端。昨天（10月25日），以色列的初创公司 PointGrab 为其智能建筑传感器筹集到 700 万美元，投资者包括飞利浦照明、日本最大的金融集团下的风险投资公司 Mitsubishi UFJ Capital Co.（MUCAP）以及现有投资者 ABB Technology Ventures (ATV)。PointGrab 成立于 2008 年，总部位于美国得克萨斯州奥斯汀，是一家机器学习和计算机视觉公司，为楼宇自动化行业提供智能传感解决方案。他们的目标是实现有效的大楼管理，通过提升能源效率节省资金。PointGrab 提出了命名为&nbsp;CogniPoint 的智能感应解决方案，可以检测建筑物中是否有人存在，若没有人需要照明，就把灯关掉。CogniPoint&nbsp;智能传感器CogniPoint 微型传感设备在低成本嵌入式的ARM处理器上运行深度学习算法，适用于室内占用分析和商业建筑节能，提供关于室内人员的位置、人数和行动方面的检测分析，并对节能照明系统和运动传感进行精确读取。依据边缘计算方法，CogniPoint 传感器可以作为独立设备工作，也可以并入其他设备，如恒温器或照明灯具。它是一个智能建筑传感器，在内部执行所有分析，所以图像不会存储下来，也不会通过网络传输，完全保护住户的隐私。CogniPoint 支持 PoE、ZigBee 和 WiFi 连接，由 PoE、AC 或 DC 电源供电。基于其处理能力和架构，CogniPoin 还可以用作传感器中枢，控制其他测量温度、湿度的传感器。PointGrab的管理软件包汇集来自各个智能照明传感器的数据，监控并维护传感器操作，同时将信息提供给各楼宇管理系统，包括照明、HVAC（供热通风与空气调节）、安全和设施管理的信息。PointGrab的 首席业务官 Itamar Roth 表示，CogniPoint 的超智能边缘分析传感器技术将成为捕获运营优化、节能改进和商业智能关键数据的核心。&nbsp;飞利浦照明高管 Jacques Letzelter 在一份声明中讲道，PointGrab 的传感器技术处于行业领先地位，在客户追求空间优化方面有较大竞争优势。把 PointGrab 的技术纳入飞利浦的照明系统将创造更大的市场，飞利浦作为物联网照明公司的优势能得到更好的发挥。作为合作的一部分，PointGrab 目前在多家客户站点安装了 CogniPoint 智能传感器。而 CogniPoint 解决方案将于 2017 年初正式推出。</content></doc>
<doc>     <docid>226<docid>     <title>慧择网推出高风险户外运动产品，从渠道价值向产品价值延伸</title>     <link>http://36kr.com/p/5055193.html?ktm_source=feed</link>     <content>慧择网今天宣布携手现代财险推出专业户外运动保障产品“勇者部落”系列，包含攀岩、滑翔、潜水等各种高风险项目，极限运动爱好者不仅可以通过平台购买产品，还可以通过慧择获得理赔、救援等后续服务。慧择网是国内最大的第三方保险平台之一，几个月前慧择网获得了万融时代资本、创东方、达晨创投和考拉基金数亿元B轮融资。户外活动保障领域是慧择的传统优势领域，慧择2006年成立之初起就推出了首款户外骑行险，并且在此后一直不断摸索和积累户外运动救援与赔付的专业能力。这款产品对慧择的意义在于实现了保险公司对渠道的C2B定制，慧择以此实现了从渠道向产品的延伸，勇者部落在产品端由慧择主导，联合保险公司、再保公司共同开发，在服务端慧择整合了救援、气象等各种服务资源，同时慧择也是唯一的销售渠道和服务提供方。这款产品允许用户自由选择不同的项目组合，每个项目又根据不同的体验人群可以进行个性化的选择，比如潜水项目包含浮潜和水肺体验计划、考证计划和业余计划等，保费可根据天数灵活变动，最低5元可以获得60万的意外赔偿和80万的个人责任保障。从传统视角来看，互联网只是保险销售的渠道之一，不过慧择网创始人马存军认为，服务是保险业的核心，平台如果没有很强的服务能力，很难让产品的理念落地，也很难满足用户体验不断提升的要求，互联网保险也许从渠道开始，但是一定会向产业链上游延伸。“消费者的习惯在改变，原来我们买家电会先想到海尔、格力这些品牌，买机票会想到航空公司，但是现在大家首先想到的是京东和携程，”马存军说，“这是第三方机构的机会，产品提供方很难成为行业的入口，第三方机构更可能成为平台级的公司。”我是 36 氪专注报道互联网金融和教育行业的作者 Justin，欢迎大家与我联系，切磋讨论。我的微信是 ：196215239</content></doc>
<doc>     <docid>227<docid>     <title>新赛季大戏揭幕，从这五个趋势读懂80亿美元的NBA商业新世界</title>     <link>http://36kr.com/p/5055166.html?ktm_source=feed</link>     <content>NBA 新赛季即将开打，在湖人队裁掉易建联之后，无数曾为之一振的球迷难免被失望情绪笼罩，在周琦王哲林此前就错失 NBA 船票后，NBA 再一次迎来了一个没有中国人的赛季。不过，没有坐在板凳末席的中国球员，可能反而能让我们心平气和的欣赏这项最高水平的篮球赛事，看精彩刺激的球赛，感受其世界顶级的商业开发能力。在体育 IP 概念还未叫响的时候，NBA 已经被大家视作全球商业开发层面最成功的体育赛事之一。不光 CBA，连乒超和排球联赛也都曾叫响过以 NBA 为目标的口号。咱们今天借着新赛季 NBA 来看看，商业开发中 NBA 究竟是怎样一种存在？80亿美元！NBA史上最吸金赛季首先，咱们看看新赛季的 NBA 能赚多少钱。在本土市场长期遭到 NFL、MLB 甚至是 NCAA 压制的 NBA，在商业开发和收益方面可以说是迎来了一次爆发式的增长。根据联盟的保守估计，新赛季 NBA 的收入将达到 80 亿美元，这比上个赛季 65 亿的收入暴涨了 23%。而在前年，这个数字才刚刚超过 50 亿美元的大关。出现这样的情况，与 NBA 进入新一轮的转播合同周期有着很大的关系。从本赛季开始，联盟与 ESPN/ABC、Turner 签订的 9 年 240 亿美元的超级转播合同将生效。在今后的每个赛季，NBA 将从 ESPN 得到 14 亿美元，从 Turner 得到 12 亿美元，这合计 26 亿美元的赛季转播收入比此前的 9.3 亿翻了接近三倍。除了转播收入外，NBA 比赛的球市似乎也在持续走高。根据目前 30 支球队季票销售的情况，以及对上座率的预估，新赛季 NBA 在球票方面的收入能够达到 15 亿美元。在上座率与去年基本持平的情况下，大部分球队都对球票的价格进行了微微的提升调整。数据via SportsBusiness Research另一方面，无论是联盟还是各支球队，NBA 的赞助收入也达到了 11 亿美元的历史新高。这其中联盟赞助收益为 5 亿美元，30 支球队的收益为 6 亿美元。再加上各支球队从本地媒体中获得的 6.5 亿美金的分销收益，整个 NBA 的收入就已经达到了 58.5 亿美元。除此之外，像与腾讯等转播分销合同，各个国家、地区的区域赞助合作的签订，以及 League Pass 在全球范围内的销售，NBA 还有可能获得超过 20 亿美元的收益。数据via SportsBusiness Research因此，新赛季联盟的收入达到创纪录的 80 亿美元，也是水到渠成的结果。而经过这一轮商业开发的升级，NBA 也拉近了与 NFL（130 亿美元/年）和 MLB（100 亿美元/年）的收入差距。亿元合同频现，下赛季工资帽过亿说完了吸金的 NBA 联盟和球队，咱们再看看球员们的日子过得好不好。不算今年，在 NBA 历史上的 70 多年里，只出现过不到 20 份亿元合同，然而，今年夏天，亿元合同却飞入了寻常百姓家。▼NBA工资帽近年来疯狂上涨数据via SportsBusiness ResearchNBA联盟那份 9 年 240 亿美元的电视转播合同，将在今年夏天生效。随着收入提升，新赛季工资帽也水涨床高至 9400 万美元，而穷人线也涨到了 8460 万，在这种情况下，多数球员都有望拿到一份颇为可观的合同。超级球星会因为工资帽的上涨越赚越多，但毕竟他们的薪水占据工资帽的比例是恒定的，随着工资帽的上涨，几名超级球星汇聚到一支球队去，形成“N巨头”，或许会成为更常见的事情。那些超级球星“一人一队”的场景或许将会绝迹，艾弗森、科比等孤胆英雄的故事，最终可能会成为江湖上难以复制的传说……▼NBA 2016-17 赛季收入前十的球员而且，天价合同还不止于此。目前NBA的各支球队已经被告知，17-18赛季球队的工资帽将会继续上涨至 1.03 亿美元，颤抖吧，年薪 12 万就算高收入的凡人们！劳资协议谈判顺利，新赛季不会停摆据雅虎知名记者 Woj 的消息，NBA 和球员工会接近达成一份新的劳资协议，这份新的劳资协议将会从今年起直到 2023-24 赛季，这意味着 2017 年将不会出现NBA停摆的情况。此前有人担心，基于高涨的转播费用，联盟收入分配可能会让双方无法达成共识。不过目前看来这种担心是多余的，在联盟天价合同满天飞的今天，球员工会对现状表示满意。数据via SportsBusiness Research据消息人士表示，目前双方已经就主要争议问题达成一致，例如签订5年顶薪的年龄提高到了 38 岁，“篮球相关收入”将维持不变，NBA 还将会提高新秀合同、底薪、自由球员特例的金额。而 NBA 和发展联盟之间将能和球员签订两份不一样的合同，这让球队的阵容能从现有的 15 人扩充到 16 人甚至 17 人。NBA 球队老板和球员相信，在未来的几周里，双方就将正式签订一份新的协议。禁令解除，球衣广告却只卖出2家2016 年 4 月，一直坚持品牌纯净化的NBA终于松口，官方宣布将开始试行为期三年的NBA球衣广告赞助开发计划，从 2017-18 赛季开始，NBA球队球衣前大约 2.5 英寸×2.5英寸的区域将会出现赞助商的标志。当时 NBA 联盟估计，每支球队在球衣广告方面的年收入会在 400 万到 600 万美元。然而，在 2016-17 赛季马上就要开打之时，NBA 球衣广告却只有 76人和国王两家球队有所斩获，分别签下了二手票务平台 StubHub 和坚果品牌 Blue Diamond。76人的广告价格为 3 年 1500 万，国王队的价格并未披露。在球衣广告禁令解除之后，这桩体育营销的生意却没有想象中开展的好，这其中的原因有多方面，球队实力参差不齐，赞助缺乏参考标准；带广告的球衣销量得不到保证，且可能会影响品牌形象，是其中反响最强烈的两个原因。由此也可以看到 NBA 球队在商业开发方面的谨慎，球衣广告这个新兴市场究竟该如何开采，或许还需要进一步的观察和探索。当然，距离球员广告正式上架还有一个赛季的时间。对于 76 人和国王之外的 28 支 NBA 球队而言，如何在本赛季提升球场上的表现，增加曝光度和影响力，也将决定他们是否能够在球衣广告谈判中获得一个更加理想的赞助金额和权益。拥抱最新科技，携手VR与大数据最后，咱们再来说说 NBA 新引进的黑科技们。新赛季中，将会有至少25场比赛通过 VR 来直播。此前，NBA 已经和 NextVR 达成了一份多年协议，这也意味着未来 VR 将会在未来扮演越来越重要的角色。10月27日国王对阵马刺的比赛，将会是 VR 在本赛季的首演，据说这场比赛可以通过 NBA League Pass 获得免费的观看机会。此后，NBA 也会陆续就 VR 转播展开付费的尝试，甚至会考虑出售“VR 球票”，而 VR 广告也会是一种增收的手段——目前 NextVR 的产品都是没有广告的。不过，如果 VR 真的能得到广泛应用，那NBA 可能同样会因此面临收视率下降的难题。奥运会收视率走低之后，MLB 本赛季收视率明显下滑，而 NFL 新赛季开打之后收视率也不乐观。移动化是造成这一现象的原因，随着 VR 投入使用，传统电视的使用人数可能会进一步下滑。▼Business Insider 预测的 AR/VR 设备的全球保有量趋势当然，最终会有怎样的表现，也要基于 VR 技术本身的推广程度了，目前的 VR 设备持有量还不足以让它成为主要的播放手段。但对于受众群体愈发年轻化的 NBA 而言，进入 VR 转播的确赚足了用户的眼球。此外，NBA 还签约了 Sportradar 与 Second Spectrum 两家专业数据公司。从 2017-18 赛季开始，这两家公司将会为 NBA 提供专门的数据跟踪统计信息，据福布斯报道，6 年合同总价超 2.5 亿美元，其中，Sportradar 将会在每个球馆里安装多镜头追踪系统摄像头，提供球员跑动范围、触球点以及防守挡拆能力等更加详细的数据，为超过 80 个国家提供 NBA、WNBA 以及发展联盟的技术统计。而 Second Spectrum 将接替 SportVu，提供数据分析系统。据 ESPN 专家分析，这些大数据除了能帮助球迷提升观赛体验之外，也会是博彩领域的一次试水，Sportradar 将会提供数据给博彩运营商，这无疑是 NBA 尝试拥抱 3800 亿美金的美国体育博彩市场的重要举措。NBA 新赛季开战在即，终于等来精彩比赛的同时，咱们也不要忘了去观察和学习其联盟在商业开发、品牌推广和文化培养方面的各种方法。对于致力于打造金牌赛事 IP 的国内体育产业人而言，我们能向 NBA 学习的东西太多太多。作为一个高度商业化的联盟，NBA 早已建立起了一套成熟的推广与盈利模式，并且懂得如何去维护和培养自己的市场。在面对 NFL、MLB 以及 NCAA 的夹击中，NBA 倒是稳稳地走在了自己的发展节奏上。目前，NLF、MLB 都在经历收视率下降，商业开发遭遇瓶颈等困境，而早早布局海外市场，在全球各地的战略都打得风生水起的 NBA，似乎进入到了一个收获的季节。</content></doc>
<doc>     <docid>228<docid>     <title>利用CRISPR基因编辑技术敲除乙肝病毒基因，新创康达基因希望能根治乙肝</title>     <link>http://36kr.com/p/5055146.html?ktm_source=feed</link>     <content>CRISPR基因组编辑技术，被业内称为能改造基因的“基因剪刀”，是当下最具革命突破性的生物技术之一。借助该技术，许多科学家正试图探究如镰状细胞性贫血、糖尿病、囊性纤维化、艾滋病和抑郁症等各种疾病的基因根源，以图找出新的标靶药物。该项技术也应用于改造酵母来生产生物燃料和改造小麦以抵抗害虫和干旱天气。CRISPR技术于2012年问世，三位CRISPR技术先驱Jennifer Doudna、Emmanuelle Charpentier、麻省理工的张锋已分别创立了公司，正拓展CRISPR技术的基因编辑疗法在视网膜疾病、囊肿性纤维化、失明、血液病及先天性心脏病等方面的商业化应用。CRISPR技术被发明出来后，拥有30多年分子生物学及癌症研究经验的郭延德非常兴奋，他用两个月的实验时间，就成功利用该技术敲掉了一些癌细胞的突变基因。之后，郭延德将CRISPR基因编辑疗法瞄准了乙型肝炎病毒，他希望利用被称为“基因剪刀”的CRISPR技术来敲除掉患者体细胞内的乙肝病毒基因，研发出相应的CRISPR药物，来达到根治乙肝的效果。“中国的乙型肝炎病毒（HBV）感染人数庞大，据卫计委2013年统计，中国有近1亿人是慢性HBV携带者，每年HBV的新发感染者达10万之多。”新创康达基因的创始人郭延德称，“目前，还没有根治乙型肝炎的方法，临床上主要是用干扰素类的药物来抑制乙型肝炎病毒，但却不能完全清除它。一旦停止药物治疗，患者肝脏中的HBV会重新活化。此外，患者长期用药易产生对治疗药物的耐受，以及药物会产生较大毒副作用，并能破坏患者的心脑血管系统甚至产生肝脏衰竭现象。”药物控制治疗的诸多局限性，使得近几年兴起的基因治疗技术正逐渐被推广。目前，乙型肝炎的基因治疗手段主要包括基于RNAi、基因产物(蛋白质)及造血干细胞的基因治疗等。不过，这些基因治疗的临床效果虽已被证实，但在技术和应用上仍然存在一些亟待解决的问题，包括治疗专一性及高效问题、以及基因治疗费高昂等。CRISPR技术具有彻底破坏病毒复制、预防病毒感染、对机体毒副作用小、费用低廉等优点，因此这种新型治疗手段已成为医疗科研工作者的研究热点。36氪此前报道过，四川大学华西医院的肿瘤学家卢铀领导的团队计划于今年8月在肺癌患者身上使用此项基因编辑技术，来治疗肺癌。据悉，这是世界首个在人体上的CRISPR–Cas9基因编辑试验。目前，国际上还没有相关的CRISPR药物被研发出来。“我们认为基因编辑技术可以用来彻底根除乙型肝炎。为此，我们在细胞水平和分子水平做了一系列实验，研制了分子镖，它能摧毁各种病毒的基因复制酶而保全正常细胞，结果表明基因编辑技术可以彻底清除细胞内的乙肝病毒。此外，我们对CRISPR-CAS9系统进行了革新，发明了多目标攻击法，这大大地提高了攻击靶标病毒基因的精确性和效率。当前国内相关专利正在申请中。”郭延德称。“现在，我们计划在人类肝嵌合小鼠模型中测试这一方法，以评估和优化传递方法和给药方法，预计在一年内完成动物实验；此后可以开展临床试验，完成I-4期的临床实验之后，会进行CRISPR相关的药品申报。”目前，新创康达基因公司还在注册中，并且已和北京生命科学园的公司及有关单位在洽谈实验室合作事宜。公司的核心技术团队有4人。创始人郭延德毕业于美国南卡大学生物化学系，获分子生物学博士学位。自1985年以来, 一直从事分子生物药研究。其是美国济生医药研究所创办人，自2006年该研究所成立以来，一直出任董事长，主持研制基因工程产品；张文亮毕业于中国农业大学，获生物化学博士学位。自2007年以来，一直在美国从事基因敲除研究工作，于2014年12月加入GEOSON医药研究所。雷耀辉博士毕业于加拿大蒙特利尔大学，获博士学位。自2008年以来, 一直从事药物研发和生产。新创康达基因正在寻求天使轮融资，融资金额将用于组建实验室，购买实验室设备、试剂耗材、及招募人才等。</content></doc>
<doc>     <docid>229<docid>     <title>乐视宣告与国安正式分手：赞助费已付，国安寻找新买家</title>     <link>http://36kr.com/p/5055186.html?ktm_source=feed</link>     <content>距离2016赛季中超联赛还剩两轮，北京国安乐视队排名第五的成绩已经提前宣布告别下赛季的亚冠。除了失去亚冠赛的名额外，国安还同时放弃了来自乐视体育方的股权合作协议。根据北京时间的报道，乐视体育日前表示：由于双方在核心条款上未达成一致，最终在股权上没有进一步合作。此前，北京国安俱乐部荣誉董事长罗宁接受采访时表示，乐视方面没有按双方股权协议付款，合作作罢。而乐视体育CEO雷振剑则在回应媒体求证时表示，赞助费方面乐视体育已经按照合同付款，只是在合作条款上没有达成一致。事情起源于乐视体育在2016年1月与国安俱乐部签订了战略合作协议，承诺2年内以20亿元获得国安50％股权。按照此前媒体公布的信息，乐视投入的资金大致包含：5000万赞助金、5000万保证金，10亿股权收购“诚意金”，10亿尾款，这些加在一起大约是21亿元人民币。对比苏宁并购国米68.55%的股份花费2.63亿欧元（约19.48亿元）和万达收购马竞20%的股权花费4500万欧元（约3.33亿人民币）的交易，乐视可谓是付出了不小的成本。乐视方面享受到的权益包括拿到国安的胸前广告以及冠名，球队名称更名为“北京国安乐视队”；另外，国安控股股东中信集团以20亿的价格出让50%的股份给乐视，分两次付清。此后有传闻流出，称国安目前只收到了5000万胸广和冠名费，双方之前协议股权转让中的20亿，国安没有收到。《足球报》曾发文称，“在双方签订协议之后，乐视曾分两次给国安打过款，分别打了2000万、3000万，共五千万，也就是‘冠名费’的一半。”没有收到余额让国安有情绪。但据财新报道称，“其实双方约定的冠名费用其实是5000万，当时对外宣称1亿，其中另外5000万是在双方达成入股合约后计入股权款的费用。”也就是说，如果乐视不能入股国安，这5000万也不需要打到国安账上。关于股权转让一事，据说乐视从一开始就谋求以51%的股权控股国安，但中信却表现冷淡。按照协议乐视方面需要在今年先出资10亿元共建球队，第二年度再付剩下的10亿元。其中，第一笔10亿元的款项，应该在赛季开始前，也就是3月份前到位。只不过，到目前为止，国安除了那5000万元外，再没有任何进账。国安俱乐部名誉董事长罗宁表示，按照足协的相关规定，谈股权转让至少也要等到赛季结束之后。而关于“先付10亿”的传言，据财新网报道，实际上是国安希望乐视能够先付10亿元股权款作为“诚意金”，再探讨股权合作具体方案。然而乐视对此没有同意。双方的矛盾似乎愈演愈烈，今年7月国安老总沈力在个人社交平台上发表图配文称：自力更生，艰苦奋斗；抛弃幻想，准备打仗。这似乎意味着国安与乐视的合作宣告流产，将再次回到中信一家独大的局面。在赛季还没有完全结束时，国安开始顶着乐视的冠名寻找下家。曾有传闻称阿联酋阿布扎比集团旗下的城市足球集团与北京国安接触，交涉入股的可能性。对比此前入主北京国安的尝试，城市足球集团此时已经拥有中资股东——华人文化产业基金和中信资本拥有该集团13%股权，后者更是与北京国安同属中信集团。国安俱乐部名誉董事长罗宁日前表示：国安新股东将在近期公布。关于双方分手的原因可能来自于北京国安的国企身份和乐视想要谋求控股权之间的矛盾。具体来说，国安是1994年中国职业足球联赛诞生以来唯一一家未曾变更过运营主体的俱乐部，中信持续性的经营让国安俱乐部在中国球市起伏中得以保持稳定。根据北京时间的报道，乐视体育管理层的知情人士透露，乐视方面选择离场，更多是因为国安方面不愿放权。据悉，国安和乐视组建了一个战略发展委员会，委员会一共六人，国安与乐视高层各占半席，其中，罗宁与雷振剑共同担任战略发展委员会联席主席。但上述知情人士称：“乐视在这个联席会议上没有话语权，一切还是国安方面说了算。”至此，北京国安足球俱乐部第一次股份制改革的尝试以失败告终，目前它们第二次增资扩股的方案大致如下：引入2家或2家以上的境内非国营资本，成立新俱乐部，现有国安俱乐部以不低于20亿元的估价并入新俱乐部，股权比例3:3:4，中信方面仍占主动。作为央企下属企业，国安的增资扩股相关情况需要进行不少于三个月的公示；另按照中国足协规定，所有参加中超联赛的队伍，都需要在1月中下旬进行名称、股权结构、球员阵容等资料注册。按此推算，国安新股东将在10月底公开。</content></doc>
<doc>     <docid>230<docid>     <title>先买断后销售，从童车入手的“益生活”也瞄准了母婴二手闲置市场</title>     <link>http://36kr.com/p/5054972.html?ktm_source=feed</link>     <content>从怀孕开始，大多数父母就开始为孩子购置各种衣物、童车、书籍等物品，而随着孩子的成长，许多物品也会逐渐被闲置，如何处理它们便成了家长们的一大烦恼。根据罗兰贝格发布的《中国母婴童市场研究报告》，2015&nbsp;年孕婴童行业规模为&nbsp;1.8 万亿，年增长高达&nbsp;15%。其中服装、婴儿床&nbsp;/&nbsp;车、座椅、玩具等品类有巨大的二手交易需求，可供二手交易的零售市场规模约为&nbsp;2,300&nbsp;亿元。这个领域里，36氪此前相继报道了由孙俪背书的“花粉儿”、走寄售路线的“宝咚”，以及上线了母婴频道的“空空狐”等初创公司，今天介绍的“益生活”主打特色是从儿童出行工具这个品类切入，以先买断后销售的“重”模式来探索母婴二手闲置市场新机会。创始人傅迎鑫告诉36氪，无论是大玩家像闲鱼、转转、还是起量很快的花粉儿，由于走C2C平台模式，在童车品类交易上都存在一个共同的问题。对于卖家而言，一辆童车通常几十斤重，如果要邮寄出去物流成本很高，交易的时候都喜欢别人来自己家拿。对于买家而言，TA希望看到的是实物而非图片，因为童车细节多，如果卖家拍照手法不专业会导致买家在收到实物后心理落差很大。而童车本身对于家长来说又属于刚需品类，且价格不费。国产的通常在600元以上，进口的高达1-2万元左右。此外，童车的使用周期通常在6-9个月，损耗一般较少，大部分是9成新，等孩子长大了放在家里很占地方。因此，买卖双方对于二手闲置交易的诉求都不小。这让团队看到了机会：既然痛点明显、大平台又解决不了，是不是可以从这个点切入做出差异化呢？今年9月他们上线了“益生活”，卖家在微信服务号提交预约申请后，平台会对这辆二手童车进行估价，然后给出一个买断的价格（通常是原价的1.2折-2折之间）。如果双方达成一致后，“益生活”的团队会上门取回童车，先进行检测、拍照、简单的清洗消毒，之后放到平台上售卖。除了线上外，“益生活”团队也会在上海本地定期举办线下的交易集市，进行营销推广和童车的回收。目前一个月下来，累计交易了267量，毛利空间在20-30%之间。不过同样是先买断后销售，和售卖服饰的“只二”相比，二手童车的库存、物流和资金周转压力都会更大一些。这个问题如何解决呢？傅迎鑫表示，团队此前也有相同的顾虑，后来想到的解决方案是推出童车的租赁业务，来解决库存压力。对于预算有限新生妈妈来说，可以每天花几元钱向“益生活”租辆童车，这样一来能省下不少钱。未来，团队希望围绕儿童出行类工具，包括婴儿床、推车、安全座椅等，开展二手闲置交易的业务。“益生活”团队30人规模，位于上海，创始人傅迎鑫曾创办家福传媒，成为华东最大的擦鞋机广告媒体公司，后整体出售。联合创始人胡一功曾任职内衣品牌Wacoal华歌尔，华黎控股等企业，管理操盘过众多大型购物广场招商。目前项目正在寻求天使轮融资。</content></doc>
<doc>     <docid>231<docid>     <title>凭借把照片打印成书，时光印记能不能成为下一代图片社交App？</title>     <link>http://36kr.com/p/5055171.html?ktm_source=feed</link>     <content>随着智能手机的普及，人人都有了相机，人人都能拍照。与此同时，人们也已经习惯了照片的电子化储存，相册这种东西在生活中也不再容易看到了。但是，在时光印记创始人李家明看来，电子化储存相比实体照片还是有着三大劣势：一、储存形式不稳。尽管硬盘和云储存服务已经很方便了，但是他们还不够稳定。实体照片虽然老旧，但是只要不遭遇水灾或火灾，就能长期保存几十年。二、检索不易。电子照片存储在硬盘或云端，想要翻看比较麻烦，不如实体照片快速。三、缺乏形式感。对于这一点，李家明说：“我们都记得曾经全家围坐在一起看相册的情景。精美的相册能装点的我们的回忆，但是现在都是电子照片，就没有那么美好了。”正是这些的优势催生了实体照片的回潮。当然我们不是指传统的照相馆洗印。我们说的是在淘宝上非常流行的照片书业务。李家明介绍说：“这些淘宝上的照片书商店，大多数来自于印刷厂，是他们开发闲置资源的手段，并非主营业务。”不过，照片书在网上卖得还挺好。而李家明说：“市场证明了照片书是可行的。但是大多数印刷厂只懂印刷，不懂互联网技术。而这一点所造成的后果就是，用户想要获得一本照片书，就得要花将近一天的时间自己排版。”这成为了李家明开发时光印记App 的初衷。李家明如此对我氪介绍这款还在公测中的App：“我们的App其实就是一套照片排版的SaaS。用户可以上传自己的照片，然后选择合适的模板进行排版，最后形成自己喜欢的相册。使用我们的模板，一个用户最快半个小时就可以排完一本相册。”而在完成相册之后，用户也可以即刻下单，然后在十天内拿到产品。目前，时光印记推出了三种模板：旅游模板，宠物模板，和亲子模板。李家明说：“这三类也是我们在朋友圈刷屏的主要内容。”与此同时，李家明也联系到了北京著名的印刷企业盛通印刷企业和渤海生印刷，并且亲自跑到欧洲去挑选纸张。他说：“印刷这种定制相册，对于印刷厂来说其实成本挺高的。我们希望能够尽量批量化，降低成本。而优良而且选择众多的纸张，也能很好提升品质。这些都是我们希望能够在细节方面尽量提升的地方。”而细节，则是李家明希望能够在未来能够形成壁垒的凭借。在我看来，时光印记的业务与我之前所报道过的心书有点像。只不过，心书主要是把用户社交媒体上的已有内容转化成书，其主要客户则是互联网上的大 V 和粉丝，并在此基础上创立了自己的内容社区心书网。时光印记则把品类集中在了照片上，其客户主要是散户，在未来，他们希望能够通过“照片书”建设一个新的的社区。李家明说：“首先用户为了出书，肯定会主动把照片上传到我们这里。然后，当他讲照片有效地组织成相册之后，他也肯定会有分享相册的需求。我们觉得这样的内容肯定是有社交价值的。”目前，时光印记团队有八个人，技术人员为主。他们的App已经完成了前期的开发，正在公测，其业务也开始部分运营。他们正在寻找 Pre-A 轮融资，预计规模在300万~500万之间。</content></doc>
<doc>     <docid>232<docid>     <title>供不应求的无人机植保服务仍处红利期，是否有交易平台机会？</title>     <link>http://36kr.com/p/5055126.html?ktm_source=feed</link>     <content>消费级市场被大疆统治之后，无人机厂商又开始探索垂直市场，比如农业植保。大疆、零度智控、极飞等上百家厂商的进入，快速使得植保无人机在硬件层面上进入同质化竞争，但2015年全国的出货量不过数千台，还包括了政府补贴因素。中国18亿亩耕地中，应用航空植保的只有2%，而美、日则已经超过50%。无人机厂商涌入依然没能快速普及，主要在服务供给和标准化不足。以水稻举例，无人机服务普遍在10元/亩，而人力每天需要支付120-150元，可喷洒十余亩，两者成本已经接近。但现阶段手动操作还有门槛且会直接影响作业效果，如果耽误了庄稼打药无异于断了农民的收成，因此必须有专业的飞手执行任务，但市场上的职业飞手不过数千人尔。意识到这点以后，无人机厂商为了培育市场也做起了服务。截止今年 10 月，极飞的500人服务团队已经完成超过 200 万亩的农田喷洒，还接入了支付宝。同时大疆和极飞也都在执行开设培训学校的计划，以解决服务人员供给不足问题。目前供给飞手的玩家共有三类：硬件厂商（目的是卖硬件）、合作社和民间飞手队（难成规模）、农资厂商（目的是卖农药，想法相对传统）。而在市场供不应求的红利期，农田管家则想做一个交易平台，不做硬件、培训学校，只做资源的匹配。这仍遵从O2O的逻辑，核心是供需体量、服务质量和网络效应。为什么一定会存在交易平台呢？农田管家CEO余洋认为，经过拖拉机市场的教育，农民应该意识到租赁服务比购买机器效率更高，且农民即使购买了无人机也不会用。此外，由于每个地区的农忙期不同且只有短短两三月，职业飞手需要跨越地区才能接到更多订单，否则将面临“单日收益高，但大部分时间赋闲”的问题，因此解决信息匹配的交易平台具备价值。据余洋观察，平台上的飞手“跨省作业是常态”。不过植保飞行仍是非标性服务，在针对不同作物细化飞行高度、速度、每亩药量、颗粒度标准后，飞手必须经过考核才能上岗。服务过后平台方还要检查是否有漏喷、重喷等情况，并派人去抽检。负责服务把控的人也负责地推。与扫码一条街不同，农村用户密度低的多，地推人员一天拜访5家用户就不容易了，因此农田管家会按城市覆盖的区域做地推，每个人负责一个县。余洋称其飞行演示后的转化率较高（具体数据不清），市场仍在获客的红利期。从襄阳开始，农田管家业务主要在湖北省，共完成10万亩农田喷洒，复购率达到80%。平台规定一架飞机可每天喷洒300-400亩田地，价格平均10-15元/亩，平台会抽成15%左右，考虑到成单率，根据不同订单也会补贴或提高。如何盈利、如何面对同质化竞争，是O2O平台必然要面临的问题，但无论如何，农业市场都需要有人来提供无人机植保服务，目前拼的则是飞手服务规模化、标准化的能力。对于这一市场，真格基金合伙人兼CEO方爱之认为，中国的植保航空作业渗透率只有美国的三十五分之一，日本的二十五分之一，市场潜力巨大。顺为资本创始合伙人许达来认为，更重要的是，无人机服务在效率方面也超出人力数十倍；互联网的撮合可以拓展飞手的服务半径和效率。GGV Capital 管理合伙人李宏玮（Jenny Lee）则“看重团队对无人机和打药服务的理解”。团队方面，农田管家创始人&amp;CEO余洋为国防科大硕士、出身农业世家，曾担任Linker&nbsp;Networks&nbsp;Inc.的CTO，有无人机研发及市场背景；负责内控的联合创始人孟凡琦曾在华为工作7年、有2年无人机行业背景；负责战略的联合创始人候笑笑曾在高盛资产管理部工作2年。该公司曾在2016年3月获得顺为资本的100万美元天使投资，同年7月获得GGV领投，真格、顺为跟投的300万美元Pre-A轮融资。</content></doc>
<doc>     <docid>233<docid>     <title>资产百分百获近千万人民币融资，委案金额达到15亿元</title>     <link>http://36kr.com/p/5055185.html?ktm_source=feed</link>     <content>资产百分百宣布于近日获得可可资本近千万人民币Pre A轮融资，据悉资金将用于继续对产品和技术进行投入，以及在运营方面拓展合作方的对接。资产百分百是一家基于大数据技术的不良资产处置平台公司，专注于消费金融、现金贷等线上、小额的信用贷款领域，通过对债务人画像和对催收机构的历史记录分析，将债务委案分配给对应领域效率最高的机构，以众包的方式完成催收，具体可以参考我们以前对资产百分百的报道。资产百分百创始人李丹表示，目前平台上获取的委案金额已经达到15亿，半年内增长了近10倍，平台上游对接包括苏宁消费金融、平安银行、优信二手车等在内的150多家资产方，下游对接的处置机构超过了400家。资产百分百一直在推进对资产包定价的工作，通过对资产包属性和催收机构效率等数据的分析，对资产包的回款率进行预测，以便未来对其进行资产证券化。同时，资产百分百也在通过催收结果、催收行为、合规性等方面的分析，评价催收员的效率，并计划未来推出面向催收员的开放平台。通过帮助资产方监控贷后管理的变化趋势，资产百分百希望为用户提供综合的贷后管理解决方案。不同的金融机构由于不同的风控流程，会导致贷后不良资产的催收效率的很大不同，资产百分百通过对多家机构的分析，还可以为用户提供贷前的风控指导。此外，资产百分百还开发了一套催收SaaS管理系统，一方面实现海量委案的自动导入、智能委案，让上下游从业务对接升级到数据对接，另一方面帮助资产方实时动态进行催收督导、进度监控、还款对账等，同时系统还具有催收预警、催收统计报表、短信/邮件通知等功能。“我们始终致力于通过数据和技术提高行业的效率，目前我们在万元以下贷款的催回率是行业平均水平的1.5倍以上。”李丹说。目前资产百分百已经开始下一轮的融资。我是 36 氪专注报道互联网金融和教育行业的作者 Justin，欢迎大家与我联系，切磋讨论。我的微信是 ：196215239</content></doc>
<doc>     <docid>234<docid>     <title>消费级航拍无人机热潮继续，星图智控获得7200万元B轮融资</title>     <link>http://36kr.com/p/5055168.html?ktm_source=feed</link>     <content>随着无人机技术的不断发展，消费者都可以体验到无人机带来的“天空视角”。然而高价格、难操作、安全性低等问题让无人机在消费市场普及的道路异常艰难。初创无人机企业星图智控针对这些问题推出了平价智能易携的“蜻蜓”无人机，希望让更多普通消费者可以体验到无人机带来的拍摄乐趣。星图智控今日宣布完成7200万B轮融资，此轮融资由之前A轮投资方人人集团、多牛传媒以及康大集团旗下科技基金蓝海方舟共同领投，汉景家族办公室跟投。不久前星图还完成了天善资本的A轮跟投。此轮融资将主要用于BESTBUY、TOYSRUS、MEDIA&nbsp;MARKET等销售渠道的生产备货。星图智控CEO张庆旗介绍需要提供的备货量大概是8000台左右，产品会在明年3月份在销售渠道上架。星图智控创立于2014年，星图智控在2015年8月推出了第一代便携式消费级无人机产品——“蜻蜓”无人机，并在2016年初推出了迭代产品“蜻蜓pro”。“蜻蜓”无人机重1.2kg，折叠后可以放进随身书包携带。操作简单，用户可以利用星图推出的智能腕表来控制“蜻蜓”无人机一键起飞，自动降落。智能腕表上的按键可以实现四种控制模式——悬停拍摄、跟随拍摄、环绕360度拍摄和全景拍摄，航时可以达到30分钟左右。并且星图智控也开发了搭配无人机使用的移动端APP，用户可以实时监控和捕捉无人机拍摄到的影像，并且随时随地分享到社交平台或是星图的“智拍”平台。“蜻蜓”无人机售价大概在2000-3000元。张庆旗透露第二代无人机将于年底发布，相比第一代尺寸会缩小大概一半，航时会缩短至15-18分钟，售价也会进一步降低。张庆旗介绍其无人机的核心组件比如飞控、电桥、云台以及云台控制部分、相机控制部分和遥控器都是完全自研的，只是在后期交给代工厂进行组装。因此相较于购买模块再进行组装的无人机生产商是具有比较高的成本优势的。现阶段星图主攻海外市场，国内销售渠道只有天猫和京东。张庆旗介绍“蜻蜓”无人机从去年12月开始量产出货，截止目前出货近2万台，单台净利润为30%左右，今年预计公司盈利可以达到百万级。在第二代产品发布后，星图也会逐渐增加国内销售渠道，进一步进入国内市场，预期明年盈利可以达到将近2000万。张庆旗认为低价小型无人机的市场才刚刚打开，虽然现阶段消费者依然对消费级无人机存在多种顾虑，比如价格、安全性、操作性、便携性、航时等，但当符合用户需求的高性价比产品出现时，依然会有更多消费者愿意买单。星图就是针对消费者的这种心理推出操作简单、携带方便、性价比高的无人机。小米、腾讯、华为等智能硬件和互联网企业纷纷想进入无人机市场分一杯羹，张庆旗认为相比这些企业星图是有先发优势的。星图在推出整机前的三年之中一直在进行飞控模块的研发和海外销售，在技术不断改进成熟的同时也为产品铺设了销售渠道，这些都为后来整机产品的研发、生产和销售打好了基础。</content></doc>
<doc>     <docid>235<docid>     <title>在手机端驱动虚拟形象，FaceUnity并不满足动画应用未来想发展VR应用</title>     <link>http://36kr.com/p/5055167.html?ktm_source=feed</link>     <content>前段时间火爆社交网络的Faceu可以利用手机摄像头对人脸进行进行追踪和识别，叠加动态贴纸或是美颜滤镜。而初创公司FaceUnity已经不满足单单在人脸上叠加道具或是滤镜，它们旨在用简单的摄像头来实时追踪和识别人脸，然后驱动虚拟形象。之前36氪报道过被苹果收购的面部追踪和动画公司Faceshift就是通过捕捉面部表情并实时映射到角色中来驱动虚拟形象。但是Faceshift需要用到深度摄像头，并且无法应用于移动端。FaceUnity&nbsp;则解决了这些问题。Faceunity是一家以3D人脸运动捕捉和动画驱动为核心技术的初创公司。目前已经推出&nbsp;2&nbsp;款产品，一款是用于移动端平台表情捕捉的SDK开发包，可以集成到app里，实现虚拟形象的驱动。另一款则是为&nbsp;MAYA/3DMAX&nbsp;等&nbsp;3D&nbsp;制作工具开发的人脸表情动作制作插件。市场经理刘世军向36氪介绍到FaceUnity可以使用普通摄像头进行人脸的面部捕捉，并且精度可以达到和深度摄像头一样。比如像电影《阿凡达》里虚拟形象的制作都是非常耗时耗力的，如果使用了FaceUnity的方案就可以利用很简单的设备去高效率的完成电影拍摄。此外，FaceUnity打破了只能使用在PC端的束缚，可以应用于移动端。也就是说搭载了FaceUnity模块的手机使用手机摄像头就可以实时进行人脸追踪和虚拟形象的驱动。而且Faceshift在一个画面只能驱动一个人脸，而FaceUnity可以同时驱动多个人脸，这也为其应用提供了更多可能性。刘世军给36氪介绍了FaceUnity方案的基本原理，通过单个视频实时获取人脸动画数据，这些数据会帮助建立一系列基本表情，用户的每一个实时表情都用这些基本表情进行合成，从而就可以实现虚拟化身的驱动。此外，刘世军也说道国内也有几家公司在做人脸技术，比如Face++，但是它们专注于识别人脸，而人脸识别的精度则需要靠大数据的积累。而FaceUnity与它们的区别在于FaceUnity专注于人脸跟踪、驱动和动画，即识别人脸后去驱动一个虚拟的形象。现阶段FaceUnity的主要客户是来自游戏和直播行业，因为很多游戏里涉及到了人脸表情部分，传统方式对表情做渲染比较费时费力。而直播行业的客户一直想把虚拟形象用在直播中，比如说人脸贴纸和道具，最早使用了表情捕捉技术的有花椒直播，之后映客直播也推出了类似功能。但是这项技术对于做直播的门槛很高，即使做出来效果也不一定好。而据刘世军的介绍使用FaceUnity的技术方案，直播平台客户可以在3-5天时间就完成类似花椒的人脸道具功能。此外FaceUnity也积极进行了其他场景的应用尝试，未来希望可以在VR领域有更多应用。在VR领域比如虚拟社交中，可以实时感受到对方的表情是非常关键的。之前Facebook发布的VR产品演进的方向是在设备里放置传感器和摄像头来捕捉人脸，FaceUnity现在也在和国内一些做VR的硬件厂商进行合作，通过搭载在头显设备上进行面部表情实时追踪。刘世军表示产品现在正在调试阶段，比如如何放置设备，怎样的精度是可以接受的，可以进行面部表情实时追踪的VR设备应该很快就能做出来。刘世军表示FaceUnity的业务重点在SDK，因为SDK的可扩展性更强，行业应用更多。现阶段公司盈利主要靠SDK技术授权。刘世军表示短期内动画会成为公司的盈利的主要领域，而在长远上公司更希望VR领域可以成为盈利重点。刘世军介绍到FaceUnity面部追踪和识别的演示应用FU&nbsp;Live已经在Apple&nbsp;Store上线，36氪也在第一时间进行了体验。FU&nbsp;Live有两大功能——人脸的实时追踪和识别、实时画面的滤镜美颜。人脸的实时追踪和识别功能中除了传统的在人脸上叠加动态3D道具功能，还可以选择实时驱动一个虚拟形象。驱动的虚拟形象的面部表情基本可以和用户的面部表情同步，只是表情变化幅度会小一些。并且当镜头检测到面部有遮挡或只检测到人脸的侧面，则无法进行面部识别和表情追踪。FaceUnity&nbsp;成立于今年&nbsp;3&nbsp;月份，刚完成一轮pre-A的融资。现阶段公司重点放在了核心技术研发方面。FaceUnity团队成员大多毕业于清华大学和浙江大学，核心成员曾任职于微软公司，具有多年从事VR技术和应用研发的工作经验。</content></doc>
<doc>     <docid>236<docid>     <title>Apple ID被盗事件增多，小广告还钻进了 iPhone 相册</title>     <link>http://36kr.com/p/5055177.html?ktm_source=feed</link>     <content>今年8月，媒体曾爆料黑产人员大规模通过 iOS 日历发送赌博推广信息及钓鱼信息。今日（10月25日），据雷锋网报道，iPhone的分享机制再次被利用， iCloud相册被黑产人员用于广告营销。图片来源：雷锋网据悉，iPhone有iCloud相册分享邀请功能，用户只需打开照片，点击共享按钮，输入标题内容和接收方的苹果ID，对方就能收到信息提醒，而且未来可以在分享相册中持续收到照片。这是苹果为方便家人、朋友间共享图片记忆推出的。但如今，这个“小方便”反而成为了黑产人员的“小助手”。由于接收方无需和推送方是好友关系，再加上苹果手机该功能选项都是默认开启的，所以黑产人员只要知道对方 ID ，大多数iPhone用户都只能“被推广”。而具有中国特色的是，雷锋网引述白帽汇的安全从业人员观点称，这次被发广告的 ID 账号大多是 QQ 邮箱。因为中国有很多人用 &nbsp;QQ 邮箱作为 Apple 产品的 ID，因此黑产人员可通过撞库等行为，按以上述方式就可进行精准营销和推广。报道指出，目前出现的广告大部分是电商推广信息，基本只靠文字推送，不能发图片，即使附上钓鱼网址的诈骗信息也打不开。现在市面上也暂未出现与iCloud相册推广相关的软件。不过，这也已经不是QQ 邮箱第一次做苹果 ID 出问题了。今年10月，媒体报道称，大量苹果手机被锁且遭黑客勒索。10月7日到10月16日，网易记者就此展开了为期十天的调查，共统计了86名苹果账号被盗的微博用户，有33人回复，其中27人使用的是QQ邮箱，占比高达82%。报道援引苹果客服表述称，最近Apple ID被盗事件数量增多，“每10个接进来的电话里就有1个是Apple ID被盗”，而且近期被盗的用户多数使用的是QQ邮箱。那为啥是QQ邮箱躺枪了？此前有报道曾经分析，一方面，很多人用QQ邮箱同时注册多个网站，如果其中任何一个网站泄露，那么很高概率这个邮箱就是Apple ID；另一方面，因为QQ邮箱都是数字，机器模拟时更容易生成有效的邮箱，而如果生成字母邮箱，很多都是无效的。所以，珍爱手机，还是尽量不要使用QQ邮箱注册Apple ID吧。</content></doc>
<doc>     <docid>237<docid>     <title>在锤子内部孵化两年，VR项目团队或要解散了</title>     <link>http://36kr.com/p/5055176.html?ktm_source=feed</link>     <content>36氪今日中午收到锤子VR部门员工爆料，爆料人称“项目将要被解散，下午电脑就可能会被没收了”。垂直媒体辛饭堂从锤子内部获得的消息也证实了这一爆料。根据36氪过去获知的消息，锤子科技在2014年末开始筹建VR项目组，由设计总监罗子雄负责，人数在30-50人左右，研发了VR硬件头显、PC VR Launcher 和一些实现基础功能的 VR 应用。从今年上半年开始，团队就已准备单独融资。近期，业内已经开始流传锤子VR项目负责人罗子雄离职的消息。根据工商注册信息，2016年8月，负责人罗子雄成立了一家新公司，名为北京所思信息科技有限责任公司。这家公司的企业法人是罗子雄，注册地址位于北京市朝阳区来春园27号楼等2幢28号楼1层101内34号。已经在锤子内部孵化了两年的VR项目解散，很可能意味着锤子在VR行业方向策略上的改变。根据工商信息，北京所思科技有限公司主要从事技术推广服务、软件开发服务，并未涉及到硬件。很可能是锤子内部保留了硬件部分的业务，这家新成立的公司很可能会从事软件、内容层面相关的研发和服务。而在近期，锤子官方也证实了这一消息，称锤子VR已于发布会前完成分拆，主要目的是方便对外独立融资，锤子科技VR团队负责人罗子雄与锤子科技员工官酩杰、弭宁康新注册成立北京所思信息科技有限责任公司，该公司目前已经完成天使轮融资，锤子科技亦是主要股东。根据36氪从爆料人处获得的信息，有一部分员工将会加入这家新公司，而另一部分从事硬件相关工作的员工，可能会在锤子科技内部转岗。一名参与其中的知情人士向36氪透露，在锤子内部转岗的员工有可能会加入到锤子关联企业。而根据辛饭堂的消息，在本次裁员之前，原锤子科技公关总监窦淼磊和原锤子科技运营总监王韵均已加入微鲸 VR，后者已经更新了 LinkedIn 信息。这次“裁员”很可能与锤子近期的并购传言有关。今年9月，锤子科技投资方成都尼毕鲁科技股份有限公司的一份招股书显示，今年上半年锤子科技亏损1.92亿元，2015年全年亏损4.62亿元，资产负债率高达99%。近期乐视、小米收购或者投资锤子的传言不断。而在本周，锤子新品发布会后的第三天，锤子科技就赎回了质押给阿里巴巴的股权。据说，在&nbsp;VR 部门之外，锤子内部的其他部门也有可能会进行裁员，优化公司结构。截至发稿时，关于锤子VR团队解散的消息，罗子雄并未给出回应。36氪推测，很可能是因为目前处于静默期，不太适合回应。不过考虑到北京所思接受了不少锤子VR的老员工，很可能已经获得了一定的融资。锤子方面回应表示，裁员是正常的业务拆分出去以后的重新调整。</content></doc>
<doc>     <docid>238<docid>     <title>美国东海岸断网事件后，物联网前景堪忧，越来越多的人呼吁政府加强监管</title>     <link>http://36kr.com/p/5055161.html?ktm_source=feed</link>     <content>据外媒报道，互联网正面临着来自“肉鸡”的前所未有的威胁，越来越多的人呼吁政府介入，来解决问题。上周五，大面积网络被黑客攻击导致断网，包括PayPal、Twitter、 Spotify等多家网站无法访问。在这个事件中，大规模分布式拒绝服务(DDoS)攻击是罪魁祸首。DDoS的攻击原理是一大群被黑的电脑（僵尸网络）通过恶意流量淹没目标，合法用户将不能访问，受害人也无可奈何，被迫离线。最近这次攻击不同寻常之处在于，有针对性地攻击互联网服务商Dyn的是僵尸网络。这不同于传统的家用电脑被黑，而是网络连接设备（网络摄像头），智能电视，智能冰箱、烤箱等等。而且之所以能实现，也得益于制造商糟糕的安保措施。这不是第一次此类攻击，也不会是最后一次。结果是，越来越多的人呼吁政府介入，要么加强监管，要么把黑客召回来（脑洞也真大有木有）。不管你愿不愿意，都将成为物联网的一部分上周四，我（Business Insider记者）与F-Secure的研究总监Mikko Hypponen坐下来谈论了互联网和物联网的安全。他回答很简短：“非常糟糕”。Mikko Hypponen我们的谈话是在Dyn被黑之前。在我们的谈话之前，安全记者Brian Krebs已经遭受了始料不及的DDoS物联网攻击。我们当时谈论的内容也适用于当下的更多攻击。Hypponen的判断是：消费者和安保欠缺的制造商将会一如既往，不要指望他们改变对待这件事的态度。这位芬兰高管说道：“人们说这是物联网安全的警钟，不，这什么也不是。他们不在乎自己的电视是不是在发起拒绝服务攻击。他们不在乎，即使你告诉他们：‘嘿，你的电视让地球另一边的网络宕机了。‘他们说‘这很酷，我不在乎。我可以看电视，它还好好地工作呢。’”安全不仅仅是人们在使用家电时的注意事项，也意味着，如果安全无法保证，游戏制造商升级游戏的经济刺激将会失效。“问题核心在于，当你去买一个设备时，安全并不是卖点。排在第一位的显然是价格，第二位是颜色。安全根本没有纳入讨论当中，这样一来，供应商只会在安全上投入最少的资金。”随着成本下降和物联网的普及，这个问题将会越来越严峻。Hypponen说：五年之后，无论如何你都将成为物联网的一部分，不管你愿不愿意。你去买一台烤箱，即便你的烤箱没有物联网功能，它仍将是物联网烤箱。因为往烤箱里放个芯片实在太便宜了。那么，Hypponen是不是也认为应该引入政府监管呢？“在这个问题上，我是矛盾的。但是我们会在某些方面需要监管，可能是······调节电器上。但是他们不应该有能力给你一个电击，给你放一把火，或者泄露你的WiFi密码。”另一个选项，把黑客召回来？黑客兼安全研究员Rob Graham呼吁一个更加果断的决定：让美国安全局罢工，（这样黑客就可以肆意攻击，）从而让物联网直接宕机。当然，不是每个人都赞同这个选项。他指出，即使一些国家针对不安全的物联网设备立法，也不能控制其他辖区内的物联网设备，这些设备就可能用来攻击。他在Twitter上写到：“白痴认为应该通过一个软件责任法，这样多少会影响一下中国卖到乌克兰的设备。”他给出的解决办法是“让美国安全局让所有的物联网设备变成砖。”当然，其他人是更赞同Hypponen的想法的。Vice’s Motherboard的记者Joseph Cox在Twitter上写到：“屎一样的物联网需要监管。”《华尔街日报》科技专栏作家Christopher Mims说：“我们需要给那些出售不安全系统的公司给予民事或刑事处罚。”与此同时，一个以Taylor Swift为主题的知名Twitter账号SwiftOnSecurity，号召零售企业采取更多行动打击流氓产品和供应商。“呼吁亚马逊拒绝出售带有安全问题的设备，这些可能成为犯罪分子攻击美国基础设施的目标。既然亚马逊拒绝出售连接智能手机的USB数据线，那么也没有理由出售可以‘打倒’美国的物联网设备。”Mikko Hypponen对推文言简意赅：“物联网是明摆着的危险。”据路透社报道,美国国土安全部正致力于一组“战略原则”安全物联网设备。但没有解决。中国雄迈科技公司的网络摄像头在袭击中被利用，也宣布召回。这次攻击中最可怕的部分也许在于它并不是很复杂。它利用设备的常用默认密码，使用一款叫做Mirai的开源软件，这款软件任何人都可以免费下载。因此，除非美国政府迅速采取强有力的措施（不管是监管还是进攻），否则将后患无穷。</content></doc>
<doc>     <docid>239<docid>     <title>【大公司晚报】亚马逊微型无人机专利曝光；微博自媒体年入超百亿</title>     <link>http://36kr.com/p/5055172.html?ktm_source=feed</link>     <content>今天大公司晚报的主角是：微博、亚马逊。微博自媒体年入超百亿；亚马逊微型无人机专利曝光。微软宣布对英国企业客户以及政府部门涨价22%据CNN报道，微软宣布从2017年1月1日起，对英国企业客户以及政府部门涨价22%。涨价对象未涉及个人客户。脱欧公投以来，英镑对美元汇率下跌超过18%，使得业务在英国而用其他货币发布业绩的公司遭受损失。微软表示，新的定价策略将对所有企业客户适用，包括政府公共部门。选择微软作战略供应商的英国政府部门，将为此付出高昂的代价。耐克版苹果手表将于10月28日首次推出今年9月7日，苹果和耐克曾宣布将会推出一款名为Apple Watch Nike+的耐克版苹果智能手表。这款智能手表将会在今年10月28日首次推出。第二代苹果智能手表已于今年9月16日推出。Apple Watch Nike+具有一个个性化的表盘和四个不同的腕带。微博自媒体年入超百亿在今日北京举办2016年V影响力峰会，微博宣布，已有45个垂直领域的月阅读量超过10亿，自媒体作者通过微博获得收入117亿，成为国内生态最活跃的新媒体平台。AT&amp;T首度回应：与时代华纳强强联合后意欲打造媒体巨头AT&amp;T发言人在接受媒体专访时表示，在美国的传媒和通讯行业上，这次收购会为用户、内容生产者、分销商和广告商带来全新体验。合并完成后将会形成新的集成模式——优质内容、大规模的视频订阅量、大规模的电视节目用户。亚马逊微型无人机专利曝光亚马逊一项关于“微型个人助理无人机”的专利近日被曝光。据专利显示，这款微型无人机只有“口袋大小”，甚至可以停在警察叔叔的肩章上。而且性能也十分强大。它搭载了生物识别和声控技术，不仅能够认识人脸，还能识别主人的声音。作为一款警方的随身助理，警察叔叔通过语音控制命令就可以指挥这款无人机在特定的区域徘徊，提供稳定可靠的视频录制。加多宝缩减裁员蔓延至总部继底层工厂的大幅裁员后，加多宝集团开始从中层的职能部门“开刀”。即使是跟随加多宝从广州建厂到北京总部成立的十多年老员工也未能幸免。 另外，为加多宝集团做了4年代加工的汇源集团已经停掉了下属六家工厂的全部生产线。手机骚扰升级：iPhone相册沦陷，小广告满天飞iPhone的分享机制再次被利用，iCloud相册被黑产人员用于广告营销，目前，出现的推广信息大部分是电商推广信息。Google获得眼球追踪技术专利提升其VR体验据外媒报道，Google确认收购 Eyefluence，获得其眼球追踪技术专利并将此项技术用于研发VR技术，大幅度提升交互体验。小米发布Note2、概念机MIX10月25日下午小米新品发布会在京举行，会上发布Note2、概念机MIX等产品。小米Note 2采用双侧曲面设计，选用LG出产的AMOLED屏幕，配有5.7寸屏幕 采用骁龙821处理器。概念手机小米MIX 采用全面屏的极简设计：除了底部有边框外，其余三个部分都是无边框屏，其屏占比达到91.3%。传Twitter本周将再度裁员数百人彭博社援引消息人士的说法称，Twitter正计划展开进一步裁员。此次裁员最早将于本周内宣布。消息人士表示，Twitter有可能裁员8%，总数为300人。在去年杰克·多西出任Twitter CEO时，Twitter也进行了同样比例的裁员。不过，裁员计划尚未最终确定，这一数字仍有可能改变。乐视网第三季度营收67.32亿元，净利同比增长70.6%报告期内，乐视网营收约67.32亿元，同比增长71.99%；归属于上市公司股东的净利润约2.09亿元，同比增长70.55%。前三季度，乐视网营收约167.95亿元，较去年同期增长100.54%；实现归母利润约4.93亿元，较去年同期增长30.75%。关于收入增长的主要原因，乐视网表示在于超级电视热销、会员付费及广告业务快速增长。魅族官方确认PRO 6s发布会将于11月3日举行继日前魅族CEO黄章和魅族副总裁李楠相继冒泡曝光了魅族PRO 6s后。10月25日，魅族官方也确定了魅族PRO 6s将于11月3日在秦皇岛·三联海边公益图书馆举行魅族PRO 6s新品沟通会。此次魅族PRO 6s的升级并非是在配置上而是更倾向于产品的细节调整。阿里体育进军高尔夫顶级赛事今日，阿里体育挥杆进军高尔夫顶级赛事LPGA（美国女子职业高尔夫巡回赛），获得LPGA在中国一站比赛未来10年的独家商务开发运营权以及中国大陆地区独家媒体权益。阿里京东等8家企业签定反“炒信”信息共享协议国家发改委今日在发改委中配楼三层大会议室召开新闻发布会，介绍“双11”电子商务信用建设有关情况和去产能工作进展情况。会上，阿里巴巴、腾讯、京东、58同城、滴滴快滴、百度、奇虎360、顺丰速运等国内主要企业代表共同签订了反“炒信”信息共享协议。百度鹰眼上线一周年终端总数量超1000万百度地图日前宣布成立百度鹰眼硬件联盟。目前，鹰眼已有超过100万的注册开发者，每天为超过60万个App及网站提供各种基于位置、导航、轨迹等LBS能力的服务。接入百度地图鹰眼服务的终端总数量超过了1000万，这些设备轨迹每日覆盖的里程超过4700万公里。小米发布正式版VR眼镜，配体感手柄售价199元雷军表示，这款产品的延迟可以达到16ms。与之前发布的“玩具”相比，这款设备最大的不同是内置独立运动传感器（九轴陀螺仪），配有一个单独的体感手柄。这款头显售价199元，可以支持小米多个系列的手机。国美电器前三季纯利至少减少70%国美电器25日发布盈利预警公告称，由于上半年公司主要致力于改造部分门店，令同店销售收入减少约10%，加上电子商务高速增长及门店转型，拖低期内毛利率，因此预计今年前九个月的纯利将按年大幅减少70%-80%，但第三季度的盈利情况有望较第二季度有明显增长。新东方2017Q1财报：净收入5.34亿美元新东方10月25日公布了截至2016年8月31日的2017Q1财季未经审核的财务业绩。财报显示：净收入5.34亿美元，同比增长16.5%；运营利润为1526万美元，同比增长17.5%；归属于新东方的净利润为1411万美元，同比增长9.7％；截至2016年8月31日，学员总数达到132.63万人次，同比增长31.2%；截至2016年8月31日，学校和学习中心总数为771，其中学校数量为67所。</content></doc>
<doc>     <docid>240<docid>     <title>网友在美国“贴吧”就火星殖民计划“发难”马斯克，看他如何应战？</title>     <link>http://36kr.com/p/5055164.html?ktm_source=feed</link>     <content>关于SpaceX，流传着一个你想笑却笑不出来的规矩：在那里工作的员工最不敢做的事不是向马斯克吹胡子瞪眼，而是告诉他：“你的要求根本无法实现”。据说下一秒就会被踹出去。现在，马斯克说自己要让人类10年后花20万美元搭赤龙号飞船奔赴火星。如果你告诉他“这是在做梦”（大多数人都是这么做的），他肯定不会谴责你是“老古董，不关心人类大事”（因为你不是他员工，而是潜在客户）……而是掰着指头为你细数“殖民火星”的种种准备细节，其计划缜密到可以让你真的以为明天就能登上飞船奔向太空。事实上，昨天马斯克在美国“贴吧”Reddit的问答论坛上就是这么干的。面对网友一连串稀奇古怪，甚至略带挑衅的问题，他表现出的姿态不太像是一位只负责公司战略层面的最高统帅，更像是一位浸淫行业数十年的火箭与谈判专家。缜密的实施方案，详实的操作细节。这是马斯克说服大众的另一种方式：你瞧，我连步骤都给你列好了。有技术支撑，这其实一点都不夸张。马斯克与网友在技术问题上的“暗中较劲”在论坛上，网友抛出的大多是技术问题。如果你不是技术专家或是火箭发烧友，估计会陷入长时间的懵逼状态，或者干脆昏睡过去。（以下涉及专业知识，小心中弹）而作为一位半路出家的领袖，在SpaceX成立早期，马斯克其实只认识几个发射器的名字，对于制造火箭的机器装备根本一窍不通。但现在，即便是一颗螺母，从成本、机器架构再到如何使用，马斯克都能解释的一清二楚。这也是为何他能够完全应对网友各类涉及到技术层面问题的前提之一。因此，对于大家最为关注的几个技术问题，马斯克都给予了详细的回复：网友：在上个月的国际宇航大会（IAC）上您展示了关于火箭碳纤维燃料罐的设计、结构和作用。能否再说一下具体细节？马斯克：好的，看来我又要透露一些重磅消息了，不过这只是给那些懂行的人听的。燃料罐实际上会比现在开发的稍长一些，但直径相同。它会采用最新、最先进的碳纤维预浸料。从理论上来看，这样做应该能承载低温推进剂而且不会发生泄漏，也不需要密封连接器。在早期测试中这很有希望能完成。而我们也将在未来几周内，在远洋驳船上将测试提高到2/3的爆炸压力。网友：要想使研发中的星际运输系统（ITS，由火箭与飞船组成，但马斯克不喜欢这种称呼）最终获得成功，SpaceX公司还欠缺什么技术或材料？马斯克：之前我们一直在开发一种新的金属合金。这种物质需要非常耐氧化，而且要适用于热氧涡轮泵，必须在主舱室承受300个大气压。但目前对于“任何可以燃烧的东西都会烧起来”的场景，我们似乎已能够加以控制，因为猛禽涡轮泵在试射中未出现腐蚀现象，但仍有优化空间。而眼下最大的问题却是低温推进剂受热加压后对碳纤维燃料罐密封性的影响。温度较高的纯氧加压后，氧化剂罐也存在氧化风险，因此需要用到一层可以喷洒的惰性物体。如果需要，我们会在内部采用较薄的焊接层（镍铁合金）。网友：如果在火星上给飞船加油需要什么样的设备和程序？马斯克：我们还不能从细节上解决这一问题，但目前的计划有4点；1.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 发射“龙飞船”的侦察任务，最初只是为了确保我们清楚如何在不添加陨石坑的前提下顺利着陆，同时也要找到“萨巴蒂尔反应”（甲烷化反应）制造甲烷、氧气所需的水的最好方法。这种化学反应能将火星上的水和二氧化碳转化为甲烷燃料和氧气（公式如下）。2.&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 可能名为“黄金之心”的飞船将只带必要设备飞往火星，建立推进剂工厂。（马斯克有一个很著名的执念，就是将SpaceX的第一艘宇宙飞船命名为“黄金之心”，以纪念道格拉斯·亚当斯在科幻小说《银河系漫游指南》中提到的超光速引擎Heart of Gold。）3. 第一次载人任务所承载的设备有哪些暂时未定，但它们将用于建设早期基地和完整的推进剂工厂。4. 尝试利用每一次地球火星轨道交会的机会（即每26个月/次）将航班数量增加一倍，直到火星城市系统可以自行运转。网友：与完整编制的百人飞行团相比，为少量人员建造的飞船（比如第一艘飞船）在内部结构上有什么不同？马斯克：可能只是承载货物的压力空间稍有不同。早期的任务将侧重于运货（这在上个月大会已经提到，在2018年主要完成运用货物的工作）。第一次载人任务将搭乘十几个人，目的是要建立和解决推进剂工厂还有火星上“阿尔法基地”的电源系统问题。网友：载人飞船和助推器可以承载多少倍重力？马斯克：名义上，宇宙飞船的限制大约是5倍重力，但实际的承载量在这个值的2-3倍（不会爆裂的情况下）。助推器名义上可负荷20倍重力，但达到30-40倍或许没问题。网友：与“猎鹰9号”火箭相比，星际运输系统助推器的着陆方式有什么不同？你计划对升级的“最终版”“猎鹰9号”作何改进？马斯克：星际运输系统会使用大型助推器。这个助推器上的许多设备都比“猎鹰9号”先进。譬如在总体质量上将更轻，密度也更低。而这样的结果是，它不会像“猎鹰9号”那样热，但速度也有所下降。因此，“猎鹰9号”将成为大型助推器的辅助装置。但实际上，只要定期维护，并做仔细检查，“猎鹰9号”助推器基本可以继续使用下去。在火星上建造圆顶建筑，种植绿色植被……力争做一名多行星物种总之，马斯克又再次强调，龙飞船将使用的火箭将是迄今为止人类建造的规模最大的助推器。据他预计，每一艘火星旅行宇宙飞船的设计载客量为100人。而在未来几十年内，SpaceX将建造大约1000艘宇宙飞船，以实现每26个月建立一座大型火星移民定居点的“小目标”。当然，除了高深晦涩的工程学难题，马斯克也顺便帮网友畅想了未来绝对不会无聊的火星疆域开拓计划——比如说当人类到达火星时，他们会做什么。“登上火星初始，我们将采用碳纤维框架建起类似于圆顶房屋的建筑，并将玻璃门窗安装在房屋圆顶表面，利用大量采矿机器人打造出数量庞大的空间。同时，这些空间都有一定的气压来维持，以便进行工业生产。而之所以把房屋设计成玻璃圆顶，主要是为绿色植物提供生存空间。”以上似乎证明了，当我们还在思考人生，思考房价时，马斯克已经开始在为火星设计城市规划图了。不过，其脑洞的形成史还是应该追溯到2001年。那时连互联网都未被人类完全接受的情况下（泡沫），马斯克坐在飞往莫斯科的经济舱里，就已经对着朋友大谈特谈自己的火星计划：去俄罗斯买一颗经过改装的导弹，然后通过导弹将植物与老鼠送到火星上……自那时起，“老鼠与火星”的故事贯穿了马斯克之后的15年。这么看来，其实特斯拉与SolarCity更像是马斯克殖民火星的一段插曲，两个“跳板”。换句话说，这个项目才是他毕生的追求。而在这次论坛中，马斯克又提到了自己执迷于“火星老鼠”故事的根本原因——为抵御全球性气候灾害与其他不可预知的灾难，人类必须成为一种多行星物种。不过这段著名的“跨星球”言论又让人想到了马斯克在2011年美国航空大会（AIAA）发表的著名演讲：“纵观历史，从根本上来说，我们应该领悟到的一个重点问题是‘人类是否要进行多行星种类的研究？’可以明确的是，如果不进行该研究，我们就不会拥有美好的未来，一些灾难将很容易把我们排挤出地球。”而网友们表示，比起“诺亚方舟”，马斯克为人类找到的“后路”其实还算靠谱：“无非就是这条路上堆满了屎，清扫起来太麻烦。”</content></doc>
<doc>     <docid>241<docid>     <title>在专家学者眼里，该如何"鼓励和规范"私人小客车合乘?</title>     <link>http://36kr.com/p/5055174.html?ktm_source=feed</link>     <content>编者按：本文来源于微信公众号“蔚为大观”，36氪经授权发布。7月28日，国务院办公厅在《国务院办公厅关于深化改革推进出租汽车行业健康发展的指导意见》（国办发〔2016〕58号）中已经指出：“私人小客车合乘有利于缓解交通拥堵和减少空气污染，城市人民政府应鼓励并规范其发展”。但是随着十月来各大城市对私人小汽车合乘实施意见的公布内容来看，除了杭州、深圳等极少数城市以外，各地方政府的举措大都是属于“口惠而实不至”。我们不妨以上海为例进行分析。10月8日，上海市交通委员会在网站上公布了《关于规范本市私人小客车合乘出行的实施意见（征求意见稿）》（以下简称“《征求意见稿》”），向公众征求意见。到目前为止，上海方案是所有城市中对私人合乘规定最为详细的，也可能是纰漏最多的。为什么说错误最多？我们不妨从私人合乘的基本逻辑谈起。在私家车保有量日益增加的今天，经验告诉我们，要想减缓道路拥堵，除了发展大容量的公共交通以外，还应该让私家车加入到合乘的队伍中来，而要想让私家车加入，价格杠杆必不可少：让合乘提供者和合乘者都能从这个定价机制中受益，同时又不因此成为营运性行为。因此，合乘价格必须满足：1）要能吸引私家车主参与合乘；2）同时还要将非法运营车辆排除在外。从目前市场的合乘体验来看，合乘服务提供者由于其本来就有出行需求，其驾驶成本和时间成本等属于沉没成本，其附加的拼车顺风车出行边际成本极低，因此，较低的可能收入就可以刺激其作出合乘行为；而对非法营运者，由于其本来没有出行需求，其出行完全是基于乘客要求实施的，其驾驶成本和时间成本等均是可变成本，边际成本较高，因此，较低的可能收入并不足以刺激其作出合乘行为。目前，业界已经建立起来的定价水平，仅能抵消出行基本成本（包括油价与过路费、部分停车费用），若计入驾驶员的人工成本，合乘行为绝无盈利可能。这样的定价机制，对于非法运营车辆来说是不可能挣到钱，同时也会让真正的合乘车主有一定的动力提供合乘服务。由此可见，鼓励私人小汽车合乘的发展并且将非法运营车辆排除在外最核心的手段就是价格杠杆，而不是类似于拼车次数等其他标准。通观《征求意见稿》全文，主要定位于区分非法营运，而不是鼓励私人小汽车合乘。试举一例。《征求意见稿》要求第二条“合乘行为规范”中对驾驶员提出五项要求，要求驾驶员必须符合下列要求：“一是应取得相应准驾车型机动车驾驶证并具有1年以上驾驶经历；二是无交通肇事犯罪、危险驾驶犯罪记录，无吸毒记录，无饮酒后驾驶记录；三是自注册之日前1年内无驾驶机动车发生5次以上道路交通安全违法行为；四是应在经市交通行政管理部门备案的平台进行注册提供合乘出行；五是提供合乘出行的驾驶员应为车辆所有人。”这样的规定如果出现在正式的文件中，那么如何判定驾驶员的资质都会成为问题。第一，何为“一年以上驾驶经历”？可以理解该规定的初衷是为了保护合乘者的利益，但事实上“一年以上驾驶经历”很难证明，社会中存在着很多有驾照而无驾驶经验的“本本族”，于是就会出现这样一个现象：很多领证半年但是其驾驶经验却远超拥有5年驾驶证的人。事实上，这样的规定没有必要，因为在同样一辆车上，合乘提供者和合乘者是激励相容，合乘者有激励提供安全的驾驶行为。第二，对合乘提供者的行为无法执行而流于形式或者最终让合乘提供者望而却步。第二项要求合乘提供者“无交通肇事犯罪、危险驾驶犯罪记录，无吸毒记录，无饮酒后驾驶记录”。尽管这些规定不乏道理，但是最终都会落入无法执行或者执行成本极高。考虑到实际运作过程，这些证明的取得会非常麻烦，因此很少有合乘服务提供者会为此奔波提供这些证明。第三，不恰当的把“合乘出行的驾驶员”界定为“车辆所有人”。合乘既然是一项民事行为，那么由谁来提供“驾驶服务”就不是规范性文件所能规定。根据《中华人民共和国道路交通安全法》，只要是合格驾驶证照的持有者，都可以在中国境内驾驶与其证照相匹配的机动车。《征求意见稿》这样的规定既与法律相悖，同时也流于文件而止于执行：因为它无法对这种行为进行执法。这样的规定还体现在对合乘信息、合乘平台、合乘线路、合乘次数和合乘价格等设定的标准上，都这并不是在鼓励私人小汽车合乘，而是在限制。近几年来，随着移动互联网的发展，私人合乘受到了越来越多市民的欢迎。它们不仅在平时上下班高峰期间减缓了交通拥堵，同时还在节日出行时发挥了重大作用。据悉，在今年春运期间，嘀嗒拼车自1月24日至2月7日，全国范围内回家过年的订单总数达141万，合计共有225万名乘客通过嘀嗒拼车返乡过年，相当于增开了4.5万辆51座的大巴车。滴滴顺风车在2016 年春运期间，也有累计 190 万人的合乘出行。而这些通过合乘出行的人群，不仅享受了更加便利的交通工具，还减少了火车和其他交通工具的压力，用“利国利民”来说是毫不为过。不过很遗憾，《征求意见稿》并不支持这种行为。如果《征求意见稿》的规定得以实施，像2016年各大平台助力春运的情景将很难再现：因为绝大多数的外地车牌已经被排斥出这个市场。据此，《征求意见稿》并不是落实根据国务院办公厅文件中提到的“鼓励”和“规范”原则，而是在“限制”私人合乘，这不仅是限制了政府和市场的边界，同时也会给市民出行带来诸多不便，无助于城市交通拥堵问题的解决。那么，到底需要什么样的小汽车合乘？在我们看来，只需要管住价格就足够了。其他行为，皆可以由市场主体来完成。为了体现我们的诚意，表明我们不是“坐而论道”，我们这群长期关注城市出行的小伙伴还特意对上海《征求意见稿》提出修改意见，供大家参考。附件：关于规范本市私人小客车合乘出行的实施意见（征求意见稿）按照《国务院办公厅关于深化改革推进出租汽车行业健康发展的指导意见》（国办发〔2016〕58号）的有关要求，以及交通运输部和本市的有关法规规定，对规范本市私人小客车合乘（以下简称“合乘”）出行行为，提出如下意见。一、合乘定义及车辆要求1、合乘定义。合乘出行也称拼车、顺风车，是由提供合乘出行驾驶员（以下简称“驾驶员”）通过合乘服务信息平台（以下简称“平台”）预先发布合乘出行信息，出行线路相同的合乘者选择驾驶员的车辆合乘出行、合乘者分摊部分合乘出行成本或免费互助的共享出行方式。建议修改：1、合乘定义。合乘出行也称拼车、顺风车，是由提供合乘出行驾驶员（以下简称“驾驶员”）或者合乘者通过合乘服务信息平台（以下简称“平台”）预先发布合乘出行信息，出行线路相同的合乘者选择驾驶员或者驾驶员选择乘客的车辆合乘出行、合乘者分摊部分合乘出行成本或免费互助的共享出行方式。理由：业界的经验表明，由驾驶员发起的合乘出行信息的成功订单数远远少于由合乘者发起的合乘出行信息。为了鼓励合乘，应当不限合乘出行信息由谁预先发布。2、车辆要求。一是车辆应在本市注册登记；二是七座以下非营业性小客车；三是车辆所有人为个人，车辆所有人为本市机关、企事业单位的非营业性小客车不得提供合乘出行；四是车辆通过本市环保检测和公安部门的车辆安全检测；五是合乘车辆应当投保车上人员责任险。建议修改：2、车辆要求。合乘提供者的车辆应当投保车上人员责任险。修改理由：由于车牌限制等原因，本市有大量的外牌车辆。如果能将这些外牌车用于私人合乘，将极大缓解本市拥堵状况。如果将合乘车辆只限定于本市车牌，这与国务院鼓励合乘的原则相悖。投保车上人员责任险可以很大程度上分散合乘过程中发生的交通事故风险。二、合乘行为要求1、驾驶员要求。驾驶员必须符合下列要求：一是应取得相应准驾车型机动车驾驶证并具有1年以上驾驶经历；二是无交通肇事犯罪、危险驾驶犯罪记录，无吸毒记录，无饮酒后驾驶记录；三是自注册之日前1年内无驾驶机动车发生5次以上道路交通安全违法行为；四是应在经市交通行政管理部门备案的平台进行注册提供合乘出行；五是提供合乘出行的驾驶员应为车辆所有人。建议修改：1、驾驶员要求。驾驶员应当按照驾驶证载明的准驾车型驾驶机动车。平台对驾驶员有其他要求的，遵从其要求。修改理由：这里的很多要求既无法核查，同时也并不具有影响合乘安全的因素。既然合乘是民事行为，因此合乘驾驶员只需要遵守《道路交通安全法》的规定即可，其他要求可由平台自行规定。2、合乘成本分摊。合乘出行可分摊总成本仅限于当次合乘出行车辆所消耗的燃料等成本和所发生的高速公路、桥隧通行费，除此之外驾驶员不得收取时间计费及其他任何费用。燃料等成本应按照合乘车辆车型工信部登记的综合工况百公里油耗、燃油等实时价格以平均公里成本计费。建议修改：2、合乘成本分摊。合乘出行可分摊成本包括但不限于当次合乘出行车辆所消耗的燃料等成本和所发生的高速公路、桥隧通行费，具体标准由平台制定。但市内合乘价格最高不得超过本地巡游出租车价格的60%。修改理由：只有给合乘提供者适当的经济激励，才能让更多的私家车主提供合乘。但为了防止合乘演变为营利性行为，可以设定最高限价。3、合乘行为规范。一是每辆车每天不得超过两次合乘出行，同一合乘线路可以多人共同合乘；二是合乘者的上车地点应在合乘出行车辆出发地周边半径1公里的范围内，或者合乘者的起讫点在驾驶员经过的路线附近；三是提供合乘出行的驾驶员应与合乘者按照人数平均分摊相关成本；四是应保持合乘车辆性能及技术状况良好，遵守交通规则，确保合乘者的出行安全。建议修改：3、合乘行为规范。应保持合乘车辆性能及技术状况良好，遵守交通规则，确保合乘者的出行安全。修改理由：合乘作为一项民事行为，行政机关不应当对其行为做过多限制，只需要引导其遵守交通规则即可。4、合乘出行责任。合乘出行作为驾驶员和合乘者各方自愿的民事行为，不属于经营性客运活动，相关责任、义务按照有关法律、法规的规定由合乘各方自行承担。驾驶员合乘出行的过程中，如遇交通执法机构市场执法检查的，应积极予以配合，执法人员应检查其是否符合合乘出行的相关规定。三、平台行为规范1、机构备案制度。在本市从事提供合乘服务信息的平台机构应在提供信息服务二十日前向市交通行政管理部门备案，备案应提供以下相关材料：一是平台注册地在本市的实体机构营业执照及法人、经营地址等相关信息；二是国务院信息产业主管部门或者省、自治区、直辖市电信管理机构颁发的《互联网信息服务增值电信业务经营许可证》；三是拟开展合乘信息服务的合乘运营模式、驾驶员和合乘者客户端发布及操作方式说明；四是车辆、驾驶员管理，合乘投诉和有关纠纷处置等制度文本；五是合乘服务平台数据接入市交通行政管理部门行业监管平台。建议修改：1、机构备案制度。在本市从事提供合乘服务信息的平台机构应在提供信息服务二十日前向市交通行政管理部门备案，备案应提供以下相关材料：一是平台注册地在本市的实体机构营业执照及法人、经营地址等相关信息；二是国务院信息产业主管部门或者省、自治区、直辖市电信管理机构颁发的《互联网信息服务增值电信业务经营许可证》；三是拟开展合乘信息服务的合乘运营模式、驾驶员和合乘者客户端发布及操作方式说明；四是车辆、驾驶员管理，合乘投诉和有关纠纷处置等制度文本。修改理由：合乘服务平台数据既属于平台的商业秘密，同时这些数据也是属于民事主体的隐私，因此将其数据接入市交通行政管理部门行业监管平台并不妥当，也无法律依据。交通行政管理部门只需要在必要时依照相关法律法规能调取相关数据即可。2、加强注册管理。合乘车辆、驾驶员、合乘者必须在平台注册后，方能进行合乘出行。注册内容应包括：一是合乘车辆行驶证及保险状况等车辆信息；二是驾驶员身份证、驾驶证；三是合乘者相关信息。平台机构应对申请注册的驾驶员和车辆按照本意见中有关车辆和驾驶员的要求予以审核，不符合条件的，不得予以注册提供合乘信息服务，注册驾驶员及车辆信息报送市交通行政管理部门备案。注册驾驶员和车辆如发生有关违法行为或不符合相关条件的，平台机构应及时注销其注册信息停止提供合乘信息服务。建议修改：2、加强注册管理。合乘车辆、驾驶员、合乘者必须在平台注册后，方能进行合乘出行。注册内容应包括：一是合乘车辆行驶证及保险状况等车辆信息；二是驾驶员身份证、驾驶证；三是合乘者相关信息。平台机构应对申请注册的驾驶员和车辆按照本意见中有关车辆和驾驶员的要求予以审核，不符合条件的，不得予以注册提供合乘信息服务。注册驾驶员和车辆如发生有关违法行为或不符合相关条件的，平台机构应及时注销其注册信息停止提供合乘信息服务。修改理由：合乘作为非营利性的民事行为，并不需要在交通行政管理部门备案。3、软件功能设置。平台所提供下载的合乘软件应独立设置，不应与巡游出租汽车打车软件、网络预约出租汽车软件合并，合乘软件除具备合乘信息发布功能以外，所设置的相关功能应符合以下要求：一是提供在线合乘出行协议，明确提供合乘出行驾驶员、合乘者各方权利、义务及责任，具备线上签订协议后方可提供当次合乘出行的功能；二是提供合乘出行驾驶员客户端预先发布的合乘出行信息，应包括驾驶员身份、车辆型号及号牌、起讫点具体地址、出发时间和合乘线路等相关信息，并提供合乘者客户端查询；三是不得设置驾驶员客户端在未签订合乘协议、达成合乘出行意向前，预先查询合乘者出行需求信息的功能；四是合乘者客户端仅能查询出发地半径1公里以内的驾驶员合乘出行信息；五是合乘软件应具备按照单次合乘线路测算燃料等成本费用并预先告知合乘者的功能，燃料等成本费用可根据驾驶员注册的车辆型号，按照工信部登记的综合工况百公里油耗、燃油等实时价格和合乘线路里程等参数予以自动测算；六是具备当次合乘成本分摊第三方支付功能；七是具备符合上述驾驶员行为规范中合乘次数、成本费用分摊等限定功能，并可实时提供交通执法机构查询。建议修改：3、软件功能设置。平台所提供的合乘软件除具备合乘信息发布功能以外，所设置的相关功能应符合以下要求：一是提供在线合乘出行协议，明确提供合乘出行驾驶员、合乘者各方权利、义务及责任，具备线上签订协议后方可提供当次合乘出行的功能；二是提供合乘出行驾驶员的相关信息，应包括驾驶员身份、车辆型号及号牌、起讫点具体地址、出发时间和合乘线路等相关信息，并提供合乘者客户端查询；三是具备当次合乘成本分摊第三方支付功能；四是应当确保数据安全，不得泄露合乘者信息给第三方机构或者个人。修改理由：去年交通运输部在《网络预约出租汽车管理办法征求意见稿》第17条就有关于“不得接入其他营运车辆或非营运车辆”规定，其理由就是该规定不便于网约平台在接入有资质的网约车同时接入合规的顺风车，不利于推动“互联网+便捷交通”行动的实现。后来正式出台的网络预约出租汽车管理办法删除了该规定，就体现了交通运输部鼓励网约顺风车的本义。同时，软件如何设置是企业的经营自由，政府不应对此种行为进行干涉。由于合乘者的很多信息属于个人隐私，平台应当确保数据安全，不泄露合乘者信息。4、报送信息数据。平台机构应将注册驾驶员和车辆等信息报送市交通行政管理部门，相关信息及合乘数据应接入市交通行政管理部门的行业监管平台，合乘数据包括但不限于：驾驶员及车辆信息，单次合乘行为出发、到达时间及地点，合乘行驶线路行程、合乘者已支付的分摊成本费用金额等。建议修改：4、报送信息数据。平台机构应在每季度向市交通行政管理部门报告经身份脱敏后的合乘数据，供交通行政管理部门作为优化交通的决策依据。修改理由：由于平台积累了大量的城市出行数据，它有责任向交通行政主管部门递交城市出行数据，建议以季度为周期向交通行政主管部门提交报告。但合乘属于民事行为，单个的合乘信息属于个人隐私，并不需要向交通行政管理部门备案。四、合乘出行日常监管1、日常管理。上海市城市交通运输管理处（以下简称“市运管处”）受市交通行政管理部门委托负责制订平台和驾驶员、车辆备案的具体流程事项，负责对已备案平台机构的日常监管，督促已备案平台按照规范要求提供合乘信息服务。市运管处负责对平台机构报备的驾驶员及车辆信息按照上述要求予以校核，对不符合条件的驾驶员、车辆，责成平台机构依据相关管理制度，在平台系统中予以注销。市运管处监督平台机构按照有关要求受理市民热线的有关合乘投诉，对存在不符合管理要求的问题应责成平台机构予以整改，涉嫌违法行为的移交交通执法机构立案查处。建议修改：1、日常管理。上海市城市交通运输管理处（以下简称“市运管处”）受市交通行政管理部门委托负责制订平台备案的具体流程事项，负责对已备案平台机构的日常监管。市运管处监督平台机构按照有关要求受理市民热线的有关合乘投诉，对存在不符合管理要求的问题应责成平台机构予以整改，涉嫌违法行为的移交交通执法机构立案查处。修改理由：包括驾驶员、乘客和合乘线路在内的合乘信息属于个人隐私，并不需要在市运管处备案。市运管处只需要对涉嫌“非法营运”的合乘行为具备执法权即可，而不需要由其掌握所有的合乘信息。2、市场执法。本市交通执法机构在市场执法检查中应按有关规定认定合乘出行行为，对不符合或无法提供相关证明，从事经营性客运活动的非营业性车辆，应当按照《上海市查处车辆非法客运若干规定》和《上海市查处车辆非法客运办法》的有关规定，对驾驶员及相关平台机构依法予以查处，并将其违法违规行为向社会公开。3、信用管理。本市有关部门应当按照职责建立合乘平台机构和驾驶员信用记录，并纳入本市公共信用信息服务平台。本建议修改意见的参与人（按姓氏拼音序排列）：傅蔚冈&nbsp;&nbsp;上海金融与法律研究院研究员顾大松&nbsp;&nbsp;东南大学交通法治研究中心执行主任、副教授金自宁&nbsp;&nbsp;北京大学深圳研究生院副教授刘远举&nbsp;&nbsp;自由撰稿人聂日明&nbsp; 上海金融与法律研究院研究员王&nbsp; 军&nbsp; 中国政法大学公司法与投资保护研究所 副教授钟鸿钧&nbsp; 上海财经大学商学院二〇一六年十月二十一日</content></doc>
<doc>     <docid>242<docid>     <title>细数社交巨无霸Facebook与美国媒体的“爱恨情仇”</title>     <link>http://36kr.com/p/5055165.html?ktm_source=feed</link>     <content>作者：猎豹全球智库 龙周园前言&nbsp;“你可以远眺窗外，凝视丹佛的落基山脉。它巍峨壮观的山峰似乎亘古不变，但在风雨的打磨与地壳的碰撞中，实际上山体时时刻刻都在发生变化。新闻行业也一样，商业模式和读者的阅读习惯也在潜移默化重塑行业版图，几年前的模式已被侵蚀，新形态层出不穷。”这是写在ONA大会手册扉页上的第一段话。美国丹佛的落基山脉今年9月下旬，我和同事代表猎豹全球智库，赴美国丹佛参加ONA（Online News Association）数字新闻大会，它是美国知名的媒体行业会议，聚焦全球数字新闻的发展动态与最新技术。今年的会议共有2300多位来自新闻机构、研究所、数据分析公司等媒体生态圈的从业者参会，Facebook、Google、Twitter等巨无霸、CNN、纽约时报、NBC等新老媒体悉数到场。在所有的变化中，新闻机构与社交媒体的融合最抢眼。Facebook、Twitter、Snapchat、Instagram、LinkedIn成为美国及其他国际媒体的重要分发渠道。在过去的一年里，几大社交巨头纷纷发力，推出新闻频道与功能：Facebook祭出Instant Articles（即时文汇）、Facebook Live（直播功能）及Facebook 360 Video（全景视频）组合拳，以笼络和留住媒体；以娱乐为主、风头正劲的Snapchat上线Discover频道，精选高质量、有特色的社交媒体、杂志和电视，将其精华内容重新设计，呈现在读者面前；Twitter虽然增长乏力，但也顺应潮流推出了为媒体打造的Moments频道。&nbsp;新闻机构倚重社交媒体顺理成章，因为他们的读者都在上面，进驻也给他们带来了瀑布般的流量；社交媒体自然也有动力推出各种新功能来吸引、迎合、留住新闻机构，谁不想将媒体的优质流量变现呢。&nbsp;2015年，几大社交媒体在新闻分发功能上的布局社交媒体平台中，业界一哥Facebook的影响力最大，它已经成为全球最大的媒体分发平台。Facebook极力打造生态圈，近一年来陆续推出能提高文章加载速度的Instant Articles、直播和全景视频，目的是增加媒体对Facebook的黏性。媒体们纷纷配备专门的团队运营其在Facebook的主页内容，华盛顿邮报、CNN、Buzzfeed、NowThis等美国新老媒体也不同程度的拥抱Facebook各项新功能。&nbsp;不过，再甜蜜的关系也会有摩擦，美国媒体和Facebook的“爱恨情仇”在不断上演新戏码。在ONA大会上，媒体人普遍的抱怨是Facebook频繁调整算法，文章推荐规则不透明，导致流量忽高忽低，让媒体无所适从；Facebook算法出现失误，导致热门文章频频出现推送假新闻的情况；后台能提供给媒体分析的精细化数据不足，不利于媒体制定内容策略等等。有些问题由来已久，Facebook的产品经理在会上也做出回应，表示今后会增加政策变动的透明度，加大力度解决假新闻的问题。&nbsp;虽然Facebook在国内因为不可抗力，不为大多数人熟知，但从媒体技术变迁、产品开发等角度，它所构建的生态系统对所有媒体从业者都有宝贵的启示与借鉴。巨无霸Facebook手握媒体流量命脉为期3天的ONA大会，以一场Facebook产品总监费基·西莫（Fidji Simo）的主旨对话开场，足见Facebook在媒体行业中的分量。&nbsp;Facebook将世界上大部分媒体掌握在手中，却不认为自己是一家媒体公司。费基·西莫在演讲中说道，“Facebook不生产任何新闻，它的使命是为用户呈现出他们感兴趣的内容。”像Facebook这样的技术公司，通过算法来设置新闻推荐内容。如果你重新定义媒体，其媒体属性已显而易见。&nbsp;社交媒体与新闻机构的界限日渐模糊，人们的阅读习惯逐渐向移动端和社交媒体迁移。根据皮尤研究中心2016年的研究，美国大约有44%的成年人习惯在Facebook上阅读新闻。数字出版分析公司Parse.ly的数据显示，2015年5月-6月，新闻网站的外部流量（referral traffic）40%都来源于Facebook，已经超过谷歌的搜索。截至2016年6月，Google和Facebook在Parse.ly数据中的推荐流量（referral traffic）对比来看一个案例。猎豹全球智库在ONA期间上采访了新兴媒体NowThis的执行主编Versha Sharma。她告诉我，他们70%的流量都来自于Facebook。&nbsp;NowThis成立于2012，是Facebook第一大社交视频新闻出版商，主要受众是美国年轻人、千禧一代。它的传播渠道比较特立独行。2015年，NowThis关闭了自己的主网站，将所有内容通过社交渠道分发，包括Facebook、Snapchat、Twitter、Instagram、tumblr、Vine和Youtube。NowThis的网页并无内容，而是将读者引导到各社交媒体平台NowThis所有内容频道在全网加起来，共有1700万粉丝，在Facebook上就有700万粉丝；每个月有23亿的视频观看量，每天有100万小时的观看时长，其中70%的视频流量来自Facebook。&nbsp;Versha对猎豹全球智库说，“编辑部之所以将流量完全押宝社交媒体，是因为美国媒体竞争激烈，作为一家新媒体，没有历史用户的积累，从零做起实在太难。加上短视频的受众本来就聚集在社交媒体上，我们放弃主网站，转而在社交媒体分发也是顺应潮流。”&nbsp;Facebook构建媒体生态系统之一：Instant Articles（即时文汇）为了提升文章加载速度与阅读体验，Facebook于2015年5月推出Facebook Instant Articles功能，一个移动端文章发布系统。过去，媒体在Facebook新闻流中发布文章，都是转发自己的原网站链接，用户需要跳转，会有一定延时。有研究显示，如果一篇文章加载速度超过3秒，用户极有可能放弃阅读。&nbsp;如果以Instant Articles（之后简称IA）的形式发出，则无需跳转，加载文章速度更快。当用户在手机上浏览Facebook新闻流时，封面图右上角出现闪电标示的文章就是通过IA发布的。华盛顿邮报在Facebook账号上用Instant Articles发布的文章Facebook产品总监费基·西莫在ONA大会上，用一串数据总结IA的战绩，“在美国，使用IA的文章在移动端的阅读率会增加25%，全球范围这一数字为48%，在一些网速较慢的国家和地区，IA能带来更大幅度的提升，例如东南亚地区的阅读率提升了68%。”她说，很多媒体在Facebook上的流量和营收已经与自己主网站的成绩旗鼓相当。&nbsp;在ONA期间，The Diplomat的一位编辑告诉猎豹全球智库，“编辑部每周会在IA上发布几篇报道。目前看阅读效果不错，可以弥补由网站付费墙造成的流量损失。”&nbsp;根据Business Insider Intelligence的报道，目前全球有超过1000家出版商与IA合作，每天会产生上万条多种语言的IA文章。&nbsp;目前，Facebook给IA提出的商业化方案也比较诱人：如果媒体选择自有销售团队售卖和投放广告，收入100%归媒体，Facebook不参与分成。如果媒体规模小，广告填充率不足，可以把多余的广告库存通过Facebook Audience Network来投放，广告收入则三七分，媒体拿70%，Facebook拿30%。&nbsp;有得必有失，使用IA后，媒体需要让渡对部分内容、形式及商业化的权限与控制。例如，很多工具条等网站设计将被阉割，推荐算法和广告政策的不断微调也会让广告收入充满不确定性。&nbsp;媒体们对IA的态度已产生分化。2013年因亏损严重被亚马逊收购的《华盛顿邮报》、新媒体Buzzfeed、英国的卫报选择全面拥抱IA，其在Facebook账号上的大部分文章都通过IA发布。一些媒体还处在观望阶段，如《纽约时报》、NBC、BBC News、《国家地理》、《大西洋月刊》会选择性地使用IA，挑选部分文章上传，其余文章仍然跳转到主网站。&nbsp;Facebook算法的痛点：媒体不知何时被捧在手心，何时被打入冷宫媒体在Facebook分发新闻的流量主要来源于新闻流（News Feed），但Facebook的算法掌握着生杀大权，能决定哪些内容能被推荐。今年6月，Facebook宣布新闻流将更多推送朋友和家人发布的内容，降低新闻推荐的优先级，这意味着无数依赖Facebook的媒体流量大幅减少，对小媒体的冲击首当其冲。&nbsp;上述The Diplomat编辑也有同样的苦恼，“FB的算法调整频繁，我们不清楚在Facebook发布的哪篇文章会被推荐，哪篇会被打入冷宫，推荐文章的原则很不清晰，希望Facebook能做到更透明。”&nbsp;笔者在Facebook上订阅了诸多主流媒体的频道，但发现很难在新闻流中看到来自媒体账号的文章，偶尔会有零星的几篇；Facebook侧重将好友转发的新闻，推送到新闻流中。&nbsp;Chartbeat的首席数据科学家Josh Schwartz在接受Digiday采访时表示，普通的媒体在Facebook上的流量表现极不稳定，2015年最好的某个月和最差的某个月流量相差74%，“如此大涨大跌，会让媒体会产生极大的焦虑感。”&nbsp;Facebook算法的痛点：假新闻不断Facebook的算法还存在另一个漏洞。一直以来，Facebook热门话题版块（Facebook Trending）因推荐假新闻而备受诟病。此前，除了机器推荐，Facebook还拥有一个十多人的编辑团队来筛选、推荐新闻。但10月中旬，Facebook突然裁掉了该部门的人工编辑，完全依赖算法推荐新闻。裁员事件不到三天，Facebook热门话题推送再次出现假新闻。Facebook推送了一篇关于福克斯新闻主播Megyn Kelly因支持希拉里而被辞退的消息，但Megyn Kelly仍在福克斯任职，并且从未发表过支持希拉里的言论。Facebook Trending出现在主页面的右上角，只在某些国家和地区的英文版有此功能Facebook Trending转发的假消息：“福克斯新闻主播Megyn Kelly因支持希拉里而被辞退”华盛顿邮报对假新闻事件盯得很紧，穷追猛打。邮报记者发现这并非孤例，Trending推送了多篇假新闻及内容不当的新闻，而且Trending中经常混杂着公司新闻稿、音乐等非新闻内容。&nbsp;Facebook构建媒体生态系统之二——Facebook Live海外市场的直播兴起早于国内。Facebook嵌入Live功能、Google的YouTube Live、Snapchat推出Live Stories 、Twitter收购Periscope，直播已成为必备技能。Facebook Live于2016年4月份上线，是直接嵌入应用中的功能。直播成为加强用户互动的利器，Facebook产品总监费基·西莫在ONA大会上说，“直播视频的评论量是普通视频的10倍，用户喜欢直播，是因为可以向世界发出自己的声音。”直播打破了传统电视形态的限制，消解了专业化门槛。无需摄像机，用户和媒体用智能手机也可以随时随地直播一次突发新闻，或是一场演唱会的现场。为了推广直播，Facebook也是拼了。在B端，已经花费5000万美元跟140家新闻机构、公司和明星、网红合作，邀请他们在Facebook Live上直播。在C端，Facebook最近在美国和英国的电视、网络，线下的广告牌、巴士、行李提取处投放Live的广告，吸引普通人在Live上展示身边有趣的事儿、表现才艺、表达观点。Facebook Live最近在美国和英国的巴士上张贴广告，吸引普通人加入直播大潮自今年5月以来，Facebook Live每分钟直播用户数已经增长了4倍，用户覆盖全球，直播的观看时长比普通视频高3倍，越来越的直播来自于普通人。如果说YouTube直播将人群定位为网红，Periscope将重点放在专家访谈和公民记者，现在Facebook Live则是将自己打造为普通人的直播平台。&nbsp;一、当媒体爱上直播回到媒体的话题上，新闻机构也非常喜欢直播。CNN负责社交媒体的总监Ashley Codianni在ONA大会期间分享道，“CNN利用其全球的报道资源和优势，里约奥运会期间一口气在Facebook上做了34场直播”。她说，社交媒体的直播跟传统电视的直播不同，能触及不一样的人群，是很好的互补。 &nbsp;专注视频的美国新兴媒体NowThis在Facebook上一个月会做大约90场直播，比如尝试以Q&amp;A的形式做演播室对话，讨论美国大选等严肃话题，也很受用户欢迎。&nbsp;美国媒体在大选期间做的直播评论节目虽然Facebook在新闻流的算法中偏向于朋友和家人的推文，减少了对新闻报道的推荐，但给予Facebook Live的支持力度很大，认证过的媒体账号可以将直播预告直接推送给订阅用户，甚至可以提前一个星期发送提醒，引导用户订阅推送通知。&nbsp;二、直播技术迭代更新Facebook Live会不断加入各种新功能，其中很多直接利好新闻机构。今年6月提出将加入多人互动直播，也就是连麦，不久的将来媒体就能邀请其他人加入直播。增加直播相关数据，如点赞数据，分享数，互动数据等，便于媒体分析和制定直播策略。通过API接入，媒体可将网页端的视频直播信号导入Facebook，而不是局限于手机直播。&nbsp;查看直播地图：给视频打标签后可显示地理位置，自己的直播也会显示在地图上。发布“评论钉”功能，直播者可以在视频播放的过程中将某条评论置顶，方便观众看到关于该视频的最火或是最中肯的评论。三、直播如何变现？在美国ONA大会期间，直播是一个非常热门的话题，关于直播的讨论不下5场，有关于直播平台的分享，也有技术和技巧的探讨，场场爆满。猎豹全球智库分析师参加了一场专门讨论Facebook Live的论坛，来自媒体的嘉宾们提出了一个非常重要的议题——直播的商业化。Huffington Post负责直播的编辑说到，“我们花费人力物力做直播，互动效果也很好，有些直播还是爆款，可是怎么赚钱呢？”ONA16大会第二日的Facebook Live分会场，异常火爆Facebook正在研究这个问题，未来考虑将广告直接嵌入到视频直播中，有点类似传统电视台的“广告时段”，直播发布者需要暂停直播，插播广告，结束后重新开始直播。&nbsp;这一新功能刚刚开始测试，处于早期发展阶段。Facebook产品总监费基·西莫说，“我们计划扩大广告时段在视频直播中的覆盖面，在未来几个月将这一功能扩展到Facebook所有的视频直播中。明年，Facebook还会考虑如何将这种获利方式融入普通视频。”&nbsp;Facebook 的虚拟世界——360度视频欢迎来到虚拟现实的世界，VR已经成为业界绕不开的形式。《纽约时报》、NBC、USA Today等媒体，甚至美国国家航空航天局（NASA）都已经在360度视频做了诸多尝试。&nbsp;作为平台，Facebook去年推出360度视频功能，今年6月上线360度图片。由于制作难度和移动网络下的观看限制，目前Facebook新闻流里360度视频并不算多。不过Facebook认为，未来360度视频无疑是一大趋势。&nbsp;Facebook产品总监西莫在ONA大会上说，VR技术为用户带来的身临其境之感，能引发观众的同情心，“目前Facebook上最受欢迎的360度全景视频是ABC制作并发布的纽约时代广场的暴风雪视频，已经获得了1800万次的点击量；美国PBS电视台谈话栏目NewsHour制作的关于南苏丹粮食危机的新闻纪录片也获得了1600万次的点击量。”&nbsp;产品技术层面，此前提到的Facebook文章发布功能Instant Articles，从10月20日开始正式支持360度照片及视频。也就是说，媒体能直接在IA上传相关内容，移动端用户也可以通过转动手机、轻触或拖拽来体验360度的图片视频素材，加载速度更快，互动性更强，拉近了用户和VR内容之间的距离。&nbsp;与此同时，Facebook也在通过开源软件，跟业内合作伙伴联合开发拍摄VR的简易设备和软件平台，降低门槛。Facebook产品总监西莫说，“对于广大媒体来说，VR视频略有门槛，没有技术条件的团队可以从360度图片拍摄开始尝试，用手机就能完成。”&nbsp;结语Facebook为可能成为媒体帝国？从Instant Articles到Facebook Live，再到360 Video，在Facebook身上可以看到产品的快速迭代更新，它一直在尝试推出各种各样的新功能，希望将全球的媒体牢牢地黏在Facebook生态圈里。&nbsp;过程中难免会出现假新闻等掉链子的事情，媒体对Facebook的抱怨多集中在不够透明，很多数据都未提供给媒体，有点像一个黑箱，外人难以参透。或许，这些都属于一个产品成长的烦恼。一个硬币总是有两面，只要能提供一个健康良性的生态系统，平台、媒体、用户都能成为赢家，相信Facebook一直能在争议与掌声中前行。&nbsp;把镜头再拉远一些。虽然Facebook已经领先，但竞争对手紧追不舍。Google推出AMP（Accelerated Mobile Pages Project）技术吸引媒体加入，力图加速文章在Google搜索的加载速度，Apple也推出了Apple News，巨头们使出浑身解数，争夺媒体的流量资源……作为最多元缤纷的新闻市场，美国新闻分发平台竞争版图的变化会很有看头。</content></doc>
<doc>     <docid>243<docid>     <title>餐饮业已有对手3000，“来客”举着“高可配置”的大旗进场厮杀</title>     <link>http://36kr.com/p/5055128.html?ktm_source=feed</link>     <content>“中国有3000家餐饮收银软件，做得最好得市场份额也不超过1%。”这是来客CEO姚海平在接受36氪采访时反复说的一句话，“看上去这是一个红海，但我认为一个成熟的市场不会有这么多玩家。”来客，也是杀入这一“红海”的玩家之一，其推出的iPOS收银管理系统集成了预订、等位、点餐、后厨制作、外卖、收银、会员管理以及进销存供应链管理等功能。餐饮行业不够标准化是造成收银软件市场诞生巨头的主要原因。单根据就餐形式就可将餐饮区分为正餐、轻餐、快餐、自助餐、火锅等，不同类型的餐饮所提供的服务、所面对的人群、所具备的功能都是有所区别的，而由此还会造成流程、管理方式中的差异，因此在餐饮软件上的需求也并不相同，在软件使用上也有所区分。一个软件是很难满足所有不同业态的餐饮企业需求的。此外，软件的实施和维护比较复杂。餐饮行业的人知识水平相对较低，对于一些复杂的IT设备，不知道怎么操作和维护，所以就需要餐饮软件企业提供本地的团队去进行日常的维护。这也是单一软件很难占领很大市场份额的原因之一。针对这些问题，来客的解决办法是将系统功能模块化。他们根据不同业态的餐饮企业的需求，设计了120多个功能模块，给不同企业提供不同功能模块的组合而成的iPOS收银管理系统。整个iPOS系统是基于安卓系统研发的，每一个功能模块都拥有单独的APK，可以单独安装、升级，就像手机上不同的APP一样。“餐厅在告诉我们需求后，我们可以事先选定一些模块，组合成系统。到店时，通电、联网就能用，加上交餐厅业务人员如何使用的时间不会超过半小时。这120个功能模块，相互组合基本都能满足所有餐饮企业的需求。”姚海平告诉36氪，“同时，我们在对单一的功能模块升级时，未选用该模块的商户的iPOS收银管理系统造成影响。”此外，来客在结合BS架构和CS架构后，自己研发了一种BSC架构。这种架构的优势在于，既可以让餐厅业务人员在iPOS终端上根据餐厅实际情况实时修改SKU，例如该套餐是否售罄，又能在业务人员无法操作时，由来客的客服人员或者连锁机构的总部在Web端进行远程修改。iPOS收银终端的另一个特点在于对后厨的改造。餐厅在接到顾客的订单后，往往要面临着按照不同顾客先来后到炒菜，每桌不同菜品的上菜次序，以及对相同的菜品进行合理并菜三者之间的矛盾。来客的解决办法是对包括三者赋予不同的权重，用深度学习、人工智能的技术来给厨师自动派单。同时，以往顾客下单之后，后厨会收到不同桌号的菜单，但如果遇上了顾客换桌的情况，后厨往往还要手工修改菜单上的桌号，以避免菜品上错。对于这个问题，来客的做法是先不出带有桌号的菜单，而是在厨师把菜品做完时，再打出带有现在顾客所在的桌号的菜单。目前，国内主要的餐饮软件有天子星、天财商龙、辰森、思讯、科脉、餐行健、二维火、客如云等。其中二维火2016年7月获得支付宝数亿元战略投资，客如云也在2016年8月获得2.2 亿人民币B轮融资，百度占股了21%。阿里、百度等巨头投资这些餐饮收银系统背后的意图在于，为自家的口碑、百度糯米等O2O平台寻找到一个线上数据与线下业务数据连接入口，当线上线下数据打通之后，这些O2O平台未来的玩法则会有更多的可能。例如，根据收银系统上每家餐厅的数据，O2O平台则能更准确地知道这家餐厅在本地的火热程度，其餐厅的哪道菜又最受消费者欢迎，该餐厅的日常运营情况。拿到这些数据后，O2O平台一方面可以给顾客更精准的推荐，另一方面则可以联合餐厅进行更多样化的营销。目前，来客也已经在和微信、新美大在卡圈营销方面进行合作。商业模式上，来客采用的是一次性收取硬件费用加以年费形式的软件服务费。据介绍，自2015年3月产品上市以来，来客一共卖出了5000多台iPOS收银终端，平均售价在3000元左右。近期，来客也会推出另一款体积更大的双屏收银终端。目前，来客团队共有131 人，其中研发 70人，市场40人左右。总部上海，在深圳设有销售和工厂团队，在北京、南京、合肥设立销售分公司。CEO 姚海作为一名连续创业者，曾在2008年把第一家CAD软件公司以1亿元的价格卖给了一家英国上市公司，现在其另一家公司——酷芯也是大疆的图传芯片供应商。公司天使轮为团队自投2400万元，在2015年8月曾在京东众筹完成1400万元（北京厚持投资500万元+个人投资者900万元）Pre-A轮，此后团队又投入了1000万元。目前来客正在启动新一轮融资，预计融资5000万元左右。</content></doc>
<doc>     <docid>244<docid>     <title>医学科技与资本融合，精准医学的临床转化还有多远？</title>     <link>http://36kr.com/p/5055077.html?ktm_source=feed</link>     <content>近年来，精准医疗的火热有目共睹，无疑也成为了投资的风口，但同时精准医疗也面临着临床、支付以及市场监管等诸多问题亟待解决。日前，在普华医疗CEO年会上，中国工程院院士、北京大学医学部主任詹启敏教授分享了他对精准医疗的观点。詹院士表示，目前的临床诊断医疗模式有很大的局限，随着人类基因组测序、生物芯片技术、大数据分析工具和技术的推动，精准医疗将成为大势所趋。此前也有分析指出，目前精准医疗正处于绝佳的资本布局良机。精准医疗需要三大平台支撑精准医学的概念不是美国总统奥巴马首次提出的，但是却因为去年初奥巴马在在美国国会作国情咨文报告时提出精准医学一词，使其成为世界各国关注的热点。我国也在去年成立了19人的国家精准医疗战略专家委员会，并计划在2030年前投入600亿元。所谓精准医疗，是根据患者临床信息和人群队列信息，应用现代遗传技术、分子影像技术、生物信息技术结合患者的生活环境和方式，实现精准疾病分类和诊断，制订具有个性化的预防和治疗方案。精准医疗是增加疗效，降低副作用，降低治疗费用的重要手段。詹启敏院士表示，目前的医疗技术很多都已经达到了“天花板”，临床治疗方案的效果已经达到极限。比如，同样的肿瘤类型和同样的疾病分期病人，采用相同的治疗方案情况下，只有不到50%的病人产生理想疗效，50%~70%的病人效果不明显或者没有疗效。治疗过程中有很大的被动和盲目性。治疗效果与患者个体的差异密切相关。但是目前对疾病的了解与疾病的表现仍然只是冰山一角，而水面下的冰山却复杂得多。詹启敏称：“我们只有通过科学研究搞清楚，结合临床的表现分析可以掌握它的分子标志物和分子靶点，在目前临床分析、分子分析、病理分析的情况下，实施分子分型和表型分析，才能够实现精准治疗。”詹启敏院士表示，精准医学的发展离不开生物样本库、多组学分析平台及大数据三大平台的支撑。“谁拥有生物样本资源谁就掌握了医学科技的主动权，谁就能占据医学竞争的制高点。”而多组学分析平台是大数据的重要来源，包括测序技术、芯片技术以及培养培养组学、大数据、医学复合型人才团队等。第三，大数据平台本身包括数据的搜集、储存、分析、利用、共享和安全。这些数据包括了社区数据、队列数据、临床数据、组学数据还有结构生物学、药物分子信息等等，大数据在药物研发里面可以帮助确立新靶点、新结构，研发新药物，帮助制订新的诊疗方案以及确定在诊疗过程当中新的标准、新的规范和指南。资本加紧布局，精准医学的临床转化有多远近年来，资本在精准医学领域的布局呈现出日趋火热的态势。有相关统计显示，截止目前，国内精准医疗投资标的共计171家，领域分布于基因测序、PCR、基因芯片、液体活检、细胞免疫治疗、抗体药物以及肿瘤大数据、抗体相关、精准诊断等。此前曾有分析指出，目前精准医疗正处于绝佳布局良机。一方面精准医疗行业正在蓬勃兴起，未来将涌现出非常多的投资标的；另一方面，精准医疗目前正处于想象到现实的爆发临界点，如基因测序成本已经降到1000 美元以下，未来还仍将继续呈下降趋势，这让精准医疗的大规模应用指日可待，而大数据技术的发展，也使基金测序数据的处理能力快速显著提升。不过，处在投资风口上的精准医疗也面临着诸多挑战，比如，其临床转化究竟还有多远？詹启敏院士指出，精准医学是转化医学研究的重要内涵和目标。今天的精准医疗已经有了实现的基础。人类基因组测序、生物芯片、技术革新还有生物医学分析工具和技术的进步，大数据分析工具和技术的出现，以及微生物分析技术、分子影像、手术导航、内窥镜和微创技术，都让今天谈及的精准医疗成为了可能。但是，目前国内现有临床医生普遍对精准医疗缺乏足够了解。遗传学知识与基因诊断知识严重不足。如何将精准医学的基础研究成果转化，服务于临床实践，将是精准医学相关人员需要思考的转化医学问题。尽管现在的精准医疗还处在初期阶段，但是整个行业有着巨大的成长空间。有分析称，精准医学要实现从科研到商业的转化，在科研服务、药物研发与医疗服务等方面都存在不少创业机会。</content></doc>
<doc>     <docid>245<docid>     <title>帐篷营地＋高端生态旅游，康藤获3000万元人民币A轮融资</title>     <link>http://36kr.com/p/5055057.html?ktm_source=feed</link>     <content>高端旅游切中的是稀缺资源，比如游轮、海外别墅和稀有景点。对比美国来说，类似的高端旅游资源的开发也正在国内慢慢发酵，精品帐篷营地是一个。景区是稀缺的资源，尤其是较为偏远的生态景区，具有不可复制性。而由于地处偏远，除了酒店外的出行、餐饮和旅游，帐篷酒店和游轮一样，游客的大部分消费需求都要在景区内一站式完成。购买游轮需要斥巨资，但帐篷酒店总体来说还是轻资产的项目，因此，帐篷酒店的高端旅游模式正在国内兴起。比如驴妈妈旗下的帐篷客酒店和星空下帐篷酒店，对标国外较为成熟的旅游市场，国内的市场规模正在慢慢打开。康藤是36氪最近接触的做帐篷酒店的一家，这家位于云南的公司，最近获得3000万人民币的A轮融资，由元钛长青基金、戈壁创投共同投资。 据公司介绍，投资将主要用于康藤的高黎贡和红河谷帐篷营地两个新项目的建设。作为一家主打生态旅游概念的公司，生态资源是公司的基本。康藤切的旅游资源是云南，在云南的高山和草原上，搭建自己的帐篷营地。公司向36氪介绍，目前康藤有四个项目，格拉丹帐篷营地、高黎贡项目、红河项目和怒江项目。其中，格拉丹帐篷营地开业于2013年5月，时间最早。地址位于云南丽江老君山国家公园内海拔3600米的格拉丹草原上。高黎贡项目位于高黎贡山国家级自然保护区南部界线以外约5公里的地方，项目由帐篷营地和周边配套线路组成。除此之外，红河项目位于红河“石头寨”的哈尼古村落废墟中，主打考古探险主题，项目也由帐篷营地和苏红哈尼梯田古村落组成。康藤怒江项目也已经完成选址和规划，预计明年进入实际建设阶段。相对来说，这些项目选择的景区都是稀有的自然资源，因此，生态帐篷营地的选址将变得十分重要。据公司介绍， 营地的拿地成本并不低，拿地周期较长的也有3到5年选址过程中，自然景观、地形地貌、人文历史和社区状况都考验康藤的经验和运营能力。选址之后的设计规划，是帐篷酒店的核心问题。除了考虑景观和可行性外，还需根据生态环境的情况，根据景区容量，平衡帐篷酒店的规模。并根据不同营地的具体情况，开发不同的旅游服务内容。以康藤格拉丹项目为例，目前这一项目的帐篷营地有7间帐篷，供最多16名客人同时入住，采取方式是一价全包策略。从开业以来，除冬季闭营期间，帐篷营地已售客房的平均房价为6800元左右，其中费用中包括每间房间2人的景区门票、约35公里的越野车乘坐，还包括餐饮、高尔夫、向导等服务。相对来说，6800的客单价并不低，并且游客往往需要住上3到5天，整体的消费仍然是非常高的。但由于云南生态景区本身营地的客户容量有限，在拿地成本、人力成本和设计规划成本之外，康藤的大规模盈利可能会是一个问题。在获客上，由于高端旅游的用户细分性，目前的获客推广依然主要依靠精准的推广和口碑营销。相对其它旅游产品，帐篷酒店的获客成本并不高。团队上，公司规模在40人左右，创始人董事长周云，毕业于南京大学地理系，有土地规划、房产开发20年从业经历。CEO唐素君，毕业于英国伯明翰大学法学硕士，此前曾任职于多家国际律师事务所，有7年法律工作从业经验。也有来自香格里拉、喜达屋等前酒店管理人加入。</content></doc>
<doc>     <docid>246<docid>     <title>去哪儿网的私有化之路，下一步去哪儿？</title>     <link>http://36kr.com/p/5055158.html?ktm_source=feed</link>     <content>本文作者：新元@&nbsp;股书 Kapbook&nbsp;(微信ID：Kapbook)。股书（Kapbook.com）是国内第一个股权激励在线管理工具，从建立计划、发放期权直至后续管理，为近千家中小创新企业提供完整的股权激励的互联网解决方案。TechWeb于10月19日报道， 去哪儿网称，该公司已接受了远洋管理有限公司(Ocean Management Holdings)提出的全面要约收购， 从而加入了美股上市中资企业的退市浪潮。事实上，自2015年起已有20多家中概股从美股退市。大众熟知的暴风科技，奇虎360，陌陌均是如此。&nbsp;私有化的原因为什么上市公司要主动私有化退市？一般有以下原因：&nbsp;1.公司战略调整与架构重构2.美国市场估值不高，公司重回内地上市3.中概股在美股受到巨大的外部压力，如舆论压力做空压力&nbsp;以去哪儿网为例，让我们详细了解一下中概股进行私有化，并从美股退市的过程。&nbsp;美国股市目前有两大交易所，纽约证券交易所（NYSE），纳斯达克（Nasdaq）。这两个交易所都位于纽约。纽交所上市的公司以传统行业的大公司居多，如标普500指数公司；纳斯达克偏爱一些高科技公司。中概股的互联网公司绝大部分在纳斯达克上市。&nbsp;所谓私有化（going private），是指由上市公司大股东作为收购建议者所发动的收购活动，目的是要全数买回小股东手上的股份，买回后撤销这间公司的上市资格，变为大股东本身的私人公司。&nbsp;私有化是资本市场一类特殊的并购操作；与其他并购操作的最大区别，就是它的目标是令被收购上市公司除牌，由公众公司变为私人公司。如果一家公司登记的权益证券持有人不足300人，或者从纳斯达克等市场退市，美国证券交易委员会（SEC）即认定该公司实现了私有化。&nbsp;私有化的优点在于：公司可以不再做信息披露，法律咨询费用、审计费用都可以适当减少，而公司管理层和大股东运作公司也少了阻碍。上市公司会遇到市值走低的情况，而私有化可以让公司不再以股价为中心，依据现金流等因素来做出合理决策，公司治理会更加灵活。公司可以致力于长期目标，而不必为短期内符合市场的预期而烦恼。&nbsp;去哪网的私有化过程，据信是由携程幕后推动的。最初的要约方Ocean Management Limited的关联方，是私募股权基金OceanImagination LP，这家私募专注中国旅游领域的投资，而携程就是该基金的出资人之一。&nbsp;要约收购则分为全面要约和部分要约。无论是全面要约还是部分要约，发出要约的对象都是目标公司的所有股东。全面和部分分别是指：收购的对象是目标公司的全部股份还是部分股份。要约收购，一般有两个步骤：收购者（可以是公司、其管理层或第三方）向股东寄送一份书面要约文件（其中阐明了包含SEC披露要求的要约条款）和一封传达指示信；在收购者取得了公司90%的股份的情况下可实施简易合并，与此同时余下的10%的股份将会被转变为主张评估权的权利或获得合并对价的权利。&nbsp;要约收购适合股本较大且股东人数较多的上市公司，而中概股公司的特色都是如此。&nbsp;美股私有化的难度与公司注册地相关注册地为美国本土的美股上市公司，遵循“少数股东中的多数同意（Majority of the Minority）”原则，即少数股东中50%以上接受要约即可。（控股股东或具有实际经营决策权的股东不具有投票权）。&nbsp;注册地为开曼的美股上市公司，只需要66%的投票权通过即可，而且私有化买方无需回避，同时允许控股股东获得超级投票权，即同股不同权。&nbsp;显然，控股股东发起了私有化，获得超过66%的投票权是很容易的；但私有化可能损害散户股东的利益，让小股东中超过50%的人投票同意，相对困难一些。注册在开曼群岛，私有化比较容易，在美国本土注册的中概股公司，私有化规则繁琐。去哪儿的注册地在开曼群岛。&nbsp;私有化的流程那么，美股上市公司私有化要约收购，一般流程是什么呢？在美股市场，通过要约收购完成公司的私有化，时间有长有短，有的公司一个多月即可完成整个流程，如百姓网，有的公司需要花费一年以上。整个收购花费的时间较为不确定。美股要约私有化时间，取决于提交文件的进度，以及要约收购的进度。&nbsp;要约收购时，一般要求溢价在10%以上。去哪网公布的私有化方案中，每股收购价是30.39美元，溢价为15%。&nbsp;私有化的风险1.退市费用高昂。费用主要是两块：法务顾问和财务顾问。还有一些独立董事的费用，尽职调查的费用。少则200万美元，多则上千万美元。2.流通股要约收购过程中，很可能会存在一部分股票收购不到。3.退市会遭受股东诉讼。当私有化的股价赶不上投资者的预期，即招致投资者的非议乃至诉讼。一旦涉及诉讼，公司私有化的计划就有可能流产。即使私有化成功，因为存在悬而未决的诉讼，对再次登陆其他资本市场也会产生影响。4.退市会受到做空者猛烈的攻击。如：第三方独立调查机构阻击泰富电气私有化。5.私有化公司再次上市的不确定性。对中国公司而言，从美国市场退市再登陆其他市场的成功案例较少。即便能在其他市场上市，受之前公司表现影响，能否获得投资者的认可是个问题。面对A股的发行审批制，登陆A股市场更是难上加难。企业的财务状况、股权结构和公司治理未必能符合A股上市标准。互联网公司一般都轻资产，无足够的固定资产和盈利，不得不到海外上市。此外，海外上市的中资企业大多是红筹架构（主营业务在国内，母公司在境外注册的公司），这些红筹架构很复杂，多是VIE架构，且会面临税收统计问题。国内上市的时间成本也很高。一般公司要上市，券商辅导至少需要半年，随后证监会审核差不多半年，最顺利也需要一年多。&nbsp;去哪儿网的私有化交易预计在2017年上半年完成。业内人士猜测私有化完成后，去哪儿网将登陆新三板。&nbsp;Reference：一文看懂美股私有化，360、陌陌私有化到底有多难.雪球.港股和美股私有化对比分析，为啥有的难有的容易.并购汪.去哪儿同意Ocean Management 收购要约携程为幕后大BOSS.&nbsp; i时代网.</content></doc>
<doc>     <docid>247<docid>     <title>趣分期财务数据曝光：2015年亏5.4亿，2016年7个月赚1.57亿</title>     <link>http://36kr.com/p/5055155.html?ktm_source=feed</link>     <content>7月宣布融资兼改名后，趣分期的财务数据今天遭曝光。今日（10月25日）晚间，因构成关联交易，A股上市公司国盛金控发布公告表示，其旗下全资子公司深圳华声前海投资有限公司拟购买北京凤凰祥瑞互联投资基金（有限合伙）持有的北京快乐时代科技发展有限公司（即趣店）5%股权。据公告，本次交易价格为3.75亿元，趣店估值82.91亿。今年3月，趣分期还自称估值超百亿，但自媒体爱分析给其估值为68亿元。然而，近日校园贷政策收紧，深圳禁止校园贷用于消费的文件颁布后，9月上旬，原名趣分期宣布退出校园分期市场，转而专注做非信用卡人群的消费金融业务。但爱分析认为，趣分期虽然全面放弃校园市场，但是切入全新领域并不是件容易的事情，还需周期验证，因此基于校园市场难以盈利，和转型前景尚不明确的因素，爱分析将趣分期估值下调20%，从68亿元下降到约54亿元。宣布转型之时，趣分期表示数百名线下的推广人员将全部转型加入新成立的校园生态公司，但随后却被媒体曝出大规模裁员，包括2000多名全职BD人员，以及过万名兼职校园代理地推人员。同时，公告还披露的趣分期的近一年半的财务状况和股东情况。据公告显示，趣分期去年营业收入2.33亿元，净亏损5.42亿元；今年1-7月营业收入4.78亿元，净利润1.57亿元。股东情况方面，截至今日，趣分期创始人罗敏仍然是第一大股东，持股21%；凤凰祥瑞和昆仑万维各自持股19%，分别为第二、三大股东；蚂蚁金服旗下上海云鑫投资管理有限公司持12.5%，为第五大股东；趣分期的员工持股平台持股5.24%。据36氪报道，2014年3月，趣店获得李想、吴世春、陈华、李树斌、鲍岳桥数百万人民币天使轮融资；同年4月获蓝驰创投数百万美金A轮融资；8月获千万美金B轮融资，由源码资本和蓝驰等风投联合注资；12月完成数千万美金C轮融资。2015年，趣店4月份宣布完成约1亿美金D轮融资，由昆仑万维领投，蓝驰、源码等老股东跟投；同年8月获得约2亿美金E轮融资，蚂蚁金服领投，老股东昆仑万维，蓝驰，源码等全部跟投。2016年7月，获得凤凰祥瑞，联络互动等联合领投，老股东跟投约30亿人民币首期PRE-IPO系列融资。</content></doc>
<doc>     <docid>248<docid>     <title>押宝“神契”IP做全产业链孵化，出身米粒影业的米玩科技专攻二次元市场</title>     <link>http://36kr.com/p/5055153.html?ktm_source=feed</link>     <content>从动画到游戏已经成为一部漫画IP变现的主要模式，Fate Grand order、海贼王、火影忍者等等都是比较成功的案例。而近几年随着国漫的爆发，画江湖、秦时明月、阴阳师也成了这条IP孵化路线的范本。最近刚刚从米粒影业拆分出来的“米玩科技”是一家二次元动漫公司，已完成天使轮融资，它们希望打通从漫画到动画到游戏的二次元内容变现模式。目前，米玩科技已经拿下国漫“神契幻奇谭”的IP全版权运营。目前，国内优秀3D番剧并不多见，画江湖和秦时明月让若森和玄机在行业里拿到了一定的话语权。而米玩科技押宝在神契这一款IP全产业链开发上，仅仅是第一季番剧制作投入投入就高达千万元，不论是从二次元受众还是市场上来看，都像是一次冒险。那么第一个问题来了，为什么是神契？米玩科技COO林琳告诉36Kr三点原因：市场验证：神契IP已经连载9年，发布了13本单行本，其中《麒麟儿》在日本三大出版社之一的小学馆刊载，在国内单行本非盗版购买量达到70-100W册，2014年开始在布卡漫画刊载，具备S级评级；IP故事内核：神契是一个开放式的类漫威的大体系漫画，（目前已出场人物就有100+），各类初子（具有觉醒潜力的人类）、神将、神器、技能。每个体系或人物篇章都可拆分并独立进行内容开发。神契的IP架构很符合目前流行的众创模式，类似于九州，神契在后续IP孵化中，可以带动粉丝、CP等多方资源进行双向互动；“超千万元做番剧跟市场均价相比是高很多，但是我们在后续成本的控制上会控制的比较好，因为首先我们是自研虚幻4番剧产线，在保证量产的同时，成片效果也会比目前市面上3D渲染效果更好;其次，这套IP孵化的模式是可以复制的，神契是我们打通这个模式的敲门砖”，林琳所说的IP复制模式是指，从番剧、众创APP社区、游戏、手办、网剧同时发力——对于其它没有行业资源背景的CP或制作公司来说，只能打通其中的某一环，而米玩科技基于米粒所提供的行业资源及专业的团队背景，提早做全产业链运营并非难事。“神契”番剧目前正在前期筹备中，内部技术测试样片已经出炉，计划第一季推出24集，每集15分钟，目前番剧团队共有60人左右，团队之前参与过《龙之谷》和《精灵王座》的制作，而为了周更做准备，会和米粒影业有人员上的复用，节省人员成本；其次，在IP影视化方面，神契将会偏重于真人剧或网剧，而关于电影是否会立项，林琳表示还会进一步观察市场，“即使是‘十万冷’也不过1.2亿的票房，现在的动画电影市场还不太成熟”；衍生品方面，米粒影业的衍生品部门将会提供资源对接，产品正处在DEMO打磨阶段。米玩科技提出的“众创APP社区”是比较独特的一环。观察其它众创漫画平台，作者个人及作品之间是相互独立、没有关联的，而且至少要等上一两年才会有一定的累积量，还未必能见到头部作品的产生，此外，之后的变现也就只能做IP授权和衍生，投入和产出比非常悬殊。相比之下，米玩科技的APP会针对一个IP进行众创，类似于游戏大社区的形式，用户进入APP后的角色会是神契世界中的某一分子，强调身份代入感，并且众创模式包括漫画，动画，文学等载体，集合内容制作、自创番外、cosplay、同人等板块，除了会有内容的产出，也可以培育粉丝。不过话说回来，相比单线IP孵化，米玩科技的风险也是加倍的。林琳说，之所以选择在开始就捡起这么重的担子，有一部分原因是团队对内容孵化的洁癖，“你现在看市面上的游戏也好，衍生品也好，对于IP来说都只是变现收割的工具，米玩希望IP联运可以为IP发展提供一个拔高的助攻，内容、粉丝等等都是一起成长的”。按照米玩科技的逻辑，这条全产业链开发的模式一旦走通，他们会和一些漫画平台及播放平台建立合作，联运一些精品IP，“精品漫画绝对走的是这个模式，一是我有好的IP，第二是有众创的模式，第三是要有变现和流通的手段，打通整个泛娱乐产业链”。团队方面，米玩科技CEO江磊具有12年互联网行业经验，是一名游戏制作人，曾任职搜狐畅游、盛大网络；COO林琳具有10年互联网行业经验，曾任职盛大网络运营管理、 Bilibili运营和项目管理。目前米玩科技正在寻找下一轮融资。</content></doc>
<doc>     <docid>249<docid>     <title>冬天的海龟，回头是岸</title>     <link>http://36kr.com/p/5055148.html?ktm_source=feed</link>     <content>编者按：本文来自阿尔法公社，作者许四清，天使投资人、阿尔法公社创始合伙人。每次到美国，都会遇到准备创业的朋友，大多有很好的技术积累，但总是面对一个问题：怎么才能在异国创业起步？对此，我的回答通常是：回头是岸！中国是除了美国以外唯一一个市场大、投资供给充分的国家。此外，工业界人才的积累又远远赶不上美国，供不应求，中国是海归创业者最容易施展拳脚的乐园。回头是岸，但是，这个岸上也像诺曼底一样留下了不少先烈，怎么才能成功登陆呢我们瞄准的创业者大多年龄集中在30岁上下3岁左右，读完了Ph.D又工作了几年，成家立业，绿卡在手，有一部分“高能粒子”始终禁不起内心的召唤，准备大干一场。在硅谷，最多做个公司卖掉。回来，有可能成为下一个张朝阳、李彦宏、王兴！对，我们瞄的，就是这样的人！回头是岸，说的容易，怎么上？首先，找好本土小伙伴儿创业是团体赛，没伙伴不行，没本土的小伙伴更不行。出来10年上下，远离了日新月异的中国市场，做2C，中国已经引领美国3年；做2B，中国企业的购买行为如同月球人，完全不一样。本土的小伙伴一定要找在商业上有了积累的，把强大的技术包装成用户最需要的东西，用最有效的方法卖出去，少走的弯路不是一点点。创业是人生的一次all in，创业伙伴，不管是本土的还是一起回来的，针对核心团队（3-5个人创始成员），我们有个“三老原则”，屡试不爽，即老同学、老同事、老朋友。创业的核心团队讲究blind trust，互相默契。如果你找的伙伴什么都很好，只是上月刚认识的，我建议就算了。融资，就是融资源想占你15%以上股权的天使都是耍流氓：这个环节至关重要，即快速融到钱，又要避免过多出让股权。初始融资如果不当，就会给公司留下硬伤，让后面的投资人无法进入，很难恢复。我自己创过三次业，总结起来，有几点血淋淋的教训：第一，“小步快跑”式的融资，避免一次出让过多，第一笔融资应控制在15%以内，最好10%。初创公司估值低，第一笔钱的作用，是帮助团队做到proof of concept，做个产品原型，为下一轮融资做好准备。这个阶段，切忌花钱推广产品，现金是用公司的股权换来的，推广的钱等下一轮进来再说吧。如果这一步迈得太大，就会导致股权出让过多。附图是一个例子，如果种子/天使轮出让15%，A轮出让25%，B轮出让12.5%，C轮出让7.5%，每一轮有一个Option Pool，假设你的公司成功做到C轮，这个管理团队控制的股权就是有30% -35%之间，你变成为投资人打工了。在我看来，团队没有了对公司的控制权，也没有了做好的动力，给投资人打工，公司很难做好。阿尔法公社有个原则，就是天使轮占比不超过10%。第二，融资源。我的导师、亚信创始人田溯宁曾经语重心长地跟我说过一句话：钱有价值之分。每一笔融资，都要最大化地融到钱之外的价值和资源来帮助团队，尤其是在牺牲率最高的天使阶段。一个有资源的投资人，可能帮你渡过过这一关，跨一个台阶。最大的帮助，就是通过行业资源，帮助你获取第一批用户，渡过“生死关”。第三，融天使，就是找有天使情怀的投资人，躲开“商人”。国内资本泛滥，泥沙俱下，投资只出钱不出力是个普遍现象，但是如果你能找到出钱又出力的“天使”，晋级机会倍增。大多数创业者出身的投资人更愿意帮助创业者，因为他们执行力超强，他们的心离创业者更近，他们或者愿意帮助，或者因为“忘了”算账而出于创业者的本能，出手帮助你。硅谷的天使投资以企业家出身的居多，就是这个原因。回国融资，有很多人会跟你说我们投过谁谁谁，记住，那是他的事儿，跟你没一毛钱关系！对投资人来说，把越多的时间花在寻找新项目上，对他的财务回报越有利，所以你要观察你的投资人的Mindset离你有多近，对行业和资源多了解，愿意花多少时间来帮助创业者，而不是说多少。我们有一份资源图谱，哪个行业、哪家公司的哪个部门在谋求什么。要知道，大公司也焦虑，千方百计地开动雷达搜寻新机会，或投资、或合作，创业公司可以创造双赢，而不是去攀炎附势。产品出来后，就开始去对接合作。如果你的投资人懂这个，不要错过！这，就是钱的质量判据。找VC投天使对吗？我们经常开玩笑，初恋时我们不懂爱情，创业时我们不懂融资。初次创业的人容易有一种错误观念，就会找个大的投资机构投天使。这是一个非常严重的误区，耽误过很多创业公司！大机构影响力大，有很多优势，但VC和天使本质不同。如果投A、B轮的VC在天使轮看上了你，你一定要有十足的把握下一轮他跟投，否则，你的公司就被打上了不具投资价值的标签——重金压投A轮的原有股东不跟投，怎么让对此心知肚明的新投资人接棒？躲过那些融资的“坑”拿到Termsheet了？恭喜你！但是，你可能一脚踏进了雷区。中国不缺资本，但天使投资行业比美国落后了10年！融资过程中，在创业者和投资人之间知识完全不对等，硅谷有个SAFE模式，国内没有，创业者吃亏的现象比比皆是。Termsheet是一个创业者和投资人的关键条款约定，包括估值、出让比例、董事会席位以及一些对投资人的合理保护条款，不是约束性合约，目的是让后面正式融资协议的签署少些讨价还价的过程。从Termsheet到SPA（Share Purchase Agreement）往往有一个多月的漫长的路要走，我们来数数“雷”有哪些，免得在炸出的坑里看见自己。第一，No Shop排他期。这是一个常见条款，就是一旦达成Term sheet约定的条款，团队就在约定的时间内暂时不再出去融资了，给双方留出合理的时间完成尽职调查，签署SPA打款。通常这个时间是30天。如果太长，就不应该有No Shop，承诺应该是相互的，投资人如果“霸占”项目一直不动手，就不应让团队放弃别的机会。我们每周都要帮团队看Term Sheet，最严重的No Shop约定180天，还自动延长。遇到这样的投资人，创业者要很小心。第二，董事会席位和观察员。通常创业团队愿意让天使投资人占一个董事会席位。记得YC的SamAltman说过一句话，投资人和创业团队的关系从天使到A轮呈指数递减。因为参与早，对团队理解更多，天使投资人往往在日后的董事会层面更多支持团队。但是如果天使投资人多于一个席位，就不应该接受。有时投资人会要求加一个观察员席位，过去的创业经历告诉我，观察员在董事会上的发言权一点不比董事小，很多事情的酝酿和促成都少不了观察员，唯一的差别是没有最后那一票。到了投票的时候，很多事情大局已定。创业者要观察你的天使投资人出于什么动机多要席位，某些投资人的控制欲很强，多占席位往往是个征兆，要格外小心。虽然投资人利用董事会赶走创始人如同自宫，但这种事儿并不鲜见，创业者伤不起。第三，额外要求。一份好的Termsheet应该是“干净的Termsheet”，除了前面提到的，还会包括优先认购、反稀释和对投资人合理的保护性条款（比如防止团队作为大股东利用股权优势侵害投资人的小股东利益）。除此以外，更多的条款就要小心了。举例，有些投资人利用团队渴望融资的心态，要求担保和回购，约定若干年以后公司不上市，团队就要回购投资人的股权，甚至加上复利回购。更有甚者，有奇葩投资人要求创业者用自己的私人财产做担保（各种Low基金非常常见！回国融资，一定要从侧面了解一下投资人的口碑）。对赌性条款也是天使轮的毒药，有些投资人会设定一个业务目标，如果达不到团队就要退股。投资人如果坚持这样的条款，不要浪费时间，找别人。融资的律师费不能省，找个优秀的律师可以帮助团队躲过很多雷。我们委托的律师事务所，理念相同，创业项目由30 Under 30’s获奖律师主导，我们出的Termsheet对创业者很友好，商讨时投资方和律师还经常帮团队出主意，公社投资的团队后面融资，无一例外地请了他们。做投资，口碑很重要，心态更重要。顺便提一句，阿尔法公社有个投资原则，就是天使项目不跟投，这样就避免了给团队打标签，把团队下一轮的融资通道向所有投资人打开。万事开头难，我3次创业，因为经历过，所以对创业和创业者者充满敬畏。阿尔法公社面对海归设立了一个AlphaGateway 项目，拿过Ph.D工作过几年的，团队可以到我们这里软着陆3个月。&nbsp;登陆之后还有很多事要做，应公社小伙伴要求，我会逐一总结出来，供大家参考。欢迎上岸！关于作者：天使投资机构阿尔法公社创始合伙人，曾3次创业，2000年作为COO带领ChinaCache在NASDAQ上市，曾任创新工场投资合伙人，奇虎360首席营销官，中经合集团董事总经理。投资了在行、白山云科技、薪人薪事、美洽、PMCAFF、Video Stitch等十余个优秀早期项目。</content></doc>
<doc>     <docid>250<docid>     <title>苹果财报可能不如预期？但你知道为何巴菲特老爷子一直很看好它吗？</title>     <link>http://36kr.com/p/5055141.html?ktm_source=feed</link>     <content>苹果的赚钱能力让很多科技公司羡慕不已，但这种神话是否还能继续？苹果即将发布Q4财报，但分析认为苹果的财报表现可能低于预期，十四年持续增长的年营收神话可能就此破灭。分析师预估，2016财年营收约为2156.7亿美元，低于2015财年的2337.2亿美元。在Q3财报的业绩展望中，苹果预测Q4的营收将在455亿美元到475亿美元之间。但在该季度中，苹果的营收为424亿美元，低于去年同期的496亿美元；净利润为78亿美元，比去年同期的107亿美元下滑27%。也就是说，营收和净利润都低于同期。关于苹果近几年的表现一直存在争议。有人认为苹果硬件的创新不足，硬件产品销售增长乏力。也有人认为苹果应该进行多方面的尝试，进行转型。但正是在这种不明朗的时候，巴菲特旗下的Berkshire Hathaway公司却花10亿美元大举买入苹果股票，成为了苹果的第56位股东。让人匪夷所思的是，巴菲特近十年都没有买过科技股，而其钟爱的是能源、运输、制造业等与经济密切相关的领域。甚至有人认为，这并非巴菲特亲为，而是被视为其接班人的投资经理所为。分析认为，唯一具有说服力的可能就是苹果的巨大现金流。在《巴菲特致股东的信》里，写到了他的投资逻辑，他选股的标准之一就是净资产收益率ROE，他说ROE能常年持续稳定在15%以上的公司都是好公司，可以考虑买入。ROE超过30%的，就算是凤毛麟角。但惊人的是，苹果的ROE常年保持在35%左右。除此，在巴菲特很看重的分红和回购方面，苹果近几年的表现都不俗。虽然这些硬条件都达到了巴菲特老爷子进行投资的标准，但Berkshire Hathaway公司的投资经理Ted Weschler解释了投资苹果的真正原因。据华尔街日报报道，在Manager Magazin的一份新闻稿，Ted Weschler解释说公司之所以投资苹果，是因为苹果的“订阅”模式使客户保持忠诚。“一旦完全投入苹果生态系统，将数千张照片存储在苹果云服务中，习惯于苹果设备的按键和功能以及设置，就会成为一个忠实的消费者。”这些话表明，Berkshire Hathaway公司投资苹果所看重的并不是能带来九成收入的硬件，而是苹果生态系统所提供的软件和服务。这似乎又可以重新提出那个旧问题：苹果到底是一家硬件公司还是一家软件公司？早在2007年时，乔布斯就曾和比尔·盖茨谈到苹果是一家软件公司。但对于九成收入来自硬件的苹果来说，大家确实看不懂。但他解释说，苹果要提供的，是装在漂亮盒子里的软件。在苹果硬件的最初设计中，乔布斯就希望它是一个封闭的系统。或许只能在这些硬件的基础上，软件才能有最佳的使用效果。正如现在所有果粉所体验到的，也正如Ted Weschler所说的苹果生态系统使果粉产生的忠诚度。虽然iPhone的全球销售量高达10亿台，但从前三季度的数据来看，iPhone销售量出现持续的下滑，一定程度上对苹果的总营收造成影响。相比而言，软件及服务营收却成为了增长亮点。据Q3数据，苹果服务业务营收（Apple Music订阅、Apple Pay费用、iCloud储存和AppStore收益等）为59.76亿美元，占总收入的14%，同比增长19%。整体较2015年全年增加了40亿美元，至231亿美元。根据App Annie 的统计，App Store收入增加37%，是有史以来增幅最大的一次。同时，App Store 在全球市场录得的总营收相比Google Play多出近90%，这个数字在2015年为75%。在苹果投资者电话会议上，库克表示，单就苹果的服务业务规模来说，明年（2017年）都可以跻身财富100强。但为了让更多人继续喜欢iPhone，苹果还需要对iPhone进行持续的革新。如对人工智能的应用，库克认为，人工智能会让iPhone成为一款用户离不开的设备。“iPhone 越来越像你的助手之后，你就越来越离不开它。我认为这些都是非常积极的因素。”而这样的想法与发展方向，正与投资人不谋而合。</content></doc>
<doc>     <docid>251<docid>     <title>风投公司的焦虑：智能手机后近10年难寻风口</title>     <link>http://36kr.com/p/5055152.html?ktm_source=feed</link>     <content>风投，一直以来都“逐风口而居”。但据华尔街日报报道，风投公司在确定“下一个风口”方面遇到了困难。报道中称，智能手机风口之后将近10年，处于硅谷的投资者尚未找到下一个能催生大量科技公司和带来丰厚回报的产品形态。风投公司开始重金投资众多前景不甚明朗的技术上，比如自动驾驶汽车、无人机、人工智能、VR等，甚至在食品行业上也加强了关注。&nbsp;癌症检测软件创业公司Color&nbsp;Genomics创始人、高估值创业公司Airbnb和Pinterest投资者埃拉德·吉尔(Elad&nbsp;Gil)表示，当前正处于投资周期末尾的空档期，风投公司已经开始感觉到焦虑。它们想要尝试找到什么是‘下一个风口’，已经开始投资很多自己都不理解的行业。风投公司坐拥大量资金，它们感到自己需要去对外投资。但风投公司还是逐渐收缩了对外投资的力度。根据Dow&nbsp;Jones&nbsp;VentureSource的数据，截止到今年9月，风险投资公司对创业公司的投资金额同比减少30%。风投行业的周期性寻找下一个风口遇到困难，是风投行业的周期性使然。风险投资公司Accel&nbsp;Partners联合创始人亚瑟·帕特森(Arthur&nbsp;Patterson)提出了“帕特森周期”。帕特森认为，一个投资周期中通常是8年增长期，而后是6年紧缩期。在每次由增长期向紧缩期转型的时候，投资前景较为模糊，具有不确定性，风险投资公司也会开始搜寻“下一个风口”。智能手机销量曲线1960年代以来的硅谷投资历史可以给出很好的解释。1960年前后，赢利点主要集中在大型主机。但是随着产业的发展，盈利点开始转向PC及其催生的软件产品。1980年代的PC革命把硅谷从1970年代的低迷中拉了出来，并催生了英特尔、苹果和微软等公司。1990年，随着PC销售放缓，风险投资公司把资金投入风险更低、技术含量也更低的领域，例如零售。1995-2000年期间，互联网的发展开始带动下一波热潮，风险投资公司投资金额接近2000亿美元，有超过1000家公司上市，其中包括亚马逊和雅虎。2000年之后，Facebook领衔社交网络潮；2007年问世的苹果iPhone催生移动互联网热。智能手机时代，打车服务Uber和消息服务Snap成为估值最高的互联网公司。同时，Salesforce和Workday等云计算巨头得以崛起。当前，除了手游还有些亮点出现之外，智能手机也难以吸引用户注意力，大热的云计算领域也格局渐稳。下一个风口会是什么？2014年3月，Facebook花费20亿美元收购Oculus&nbsp;VR。其CEO马克·扎克伯格(Mark&nbsp;Zuckerberg)在一份公告中表示：移动是当前的平台。目前，我们也开始为属于明天的平台做准备。Oculus有机会开发有史以来最具社交性的平台，改变我们工作、游戏和通信的方式。虚拟现实也一跃成为热门投资领域，成了诸多风投公司追逐的“风口”。据市场研究公司IDC预测，2016年全球VR设备的出货量将超过900万台，到2020年，VR出货量预计将达到6480万台。与智能手机相比，虚拟现实头盔的销量要少得多。据全球市场研究机构TrendForce报告显示，仅2016年第三季度，全球智能手机市场生产数量就将达到3.5亿部左右。此外，VR的软件开发也才刚刚起步，诸多大牌游戏开发商才刚刚试水虚拟现实市场。但让投资者更纠结的是：大公司会投入高价来聘请新兴技术的专家，创业公司没有人才，也很难获得惊艳的发展。风险投资公司Andreessen&nbsp;Horowitz普通合伙人克里斯·迪克逊(Chris&nbsp;Dixon)列举了自动驾驶汽车的例子。近年来，苹果、谷歌和Uber就给出了创业公司给不了的高薪招聘了数百名机器人和汽车领域的专家，来积极布局自己在自动驾驶汽车领域的发展。不过，也有投资者对前景相当乐观。风投公司Foundation&nbsp;Capital合伙人史蒂夫·瓦萨罗(Steve&nbsp;Vassallo)表示：重要的技术仍然在酝酿中，希望它们能一鸣惊人，目前许多有前景的技术还需要一段时间才能成熟，它们不只是部署服务器和开发一款应用那么简单。那么，接下来会发生什么呢？我们且拭目以待。</content></doc>
<doc>     <docid>252<docid>     <title>共享住宿开始了冲刺赛，高速增长的住百家能应对自身的“经济危机”吗？</title>     <link>http://36kr.com/p/5055143.html?ktm_source=feed</link>     <content>近日传言称，住百家工作人员在职业社交网站上爆料，称该公司正在裁员，幅度达到50%。随后有报道称，7月8日开始，公司向银行和第三方累计贷款6500万元。（在这之前的7月5日，住百家正进行登陆新三板以来的首次融资，拟融资5亿元，估值20亿元。）对此36氪向住百家核实，官方回复称，住百家确实有人员调整，但规模没有达到50%之多，目前公司已经进入不同战略发展阶段，将逐渐从技术投入期转向业务开拓期。但之前技术研发岗位偏多，此次公司希望释放更多岗位给销售客服，拓展二三线市场。另外，贷款融资的说法也不属实，6500万是指银行给住百家的贷款额度，而非贷款总额。事实上，住百家自新三板上市以来就负面频发，官方不断站出来辟谣，每一次看似都“化险为夷”，但仔细研究住百家的商业模式、运营情况、盈利模式等，我们会发现，在险恶的竞争环境中，这艘航船自身也潜伏着危险。共享住宿开始冲刺赛，住百家却没钱了？流量入口收紧，共享住宿的下半场开始了。近日，途家吞下携程去哪儿的公寓民宿业务，成就非标住宿行业史上最大并购行动，也占领了流量的制高点。同时，共享经济鼻祖Airbnb 在中国区高调招人，准备建立研发中心，设立专门的产品和开发团队，似要在中国大展拳脚。而这个时候，住百家却遇到了“经济危机”。据住百家2016年8月发布的半年报，该公司营收增长快，净亏损收窄，用户增长迅速。上半年营收4926.86 万元，同比增长870.74%；毛利有微幅提升，由同期5.64%上涨到6.94%；净亏损4973.51 万元，占营业收入的比重为-100.95%，比2015年同期（-265.22%）收窄较大；截止今年6月底，累计注册用户达到 242 万，上半年新增注册用户数同比增长 874.25%，线上用户消费转化率提升近 3 倍。虽然高速增长下，住百家活得还不错，但另一方面我们也注意到，住百家已经没钱了。截止6月30日，住百家财报显示，其现金流345万元，按半年支出2812万元管理费来看（每月支出469万元），这笔费用连它一个月的管理开销都支撑不了，还不提其高额的销售费用，不太低的财务费用、税收等支出。不过即便裁员50%。据其半年报（约支出191万职工薪酬），每个月也只能节省100万左右，对于其巨大的现金缺口，只是杯水车薪——要知道12个月前，它刚以5.4亿元的估值融资4000万元，也就是说，仅半年，钱就被烧光了。对此，官方表示，节流只是改善现金流的一环，公司更关注开源服务带来的收入，例如收购内蒙古旅行社、开拓二三线市场，同时打包医疗、体育等主题旅行，更有针对性满足不同客群服务。此外，该公司应收账款周转率从去年同期的10.10一下涨到190.65，同时经营活动产生的现金流缺口几乎扩大了2.5倍。公司财报称，“目前尚处于投入期，业务发展尚待消费者行为习惯和接受度的培养过程，公司短期内尚不具备盈利能力。如果公司后续业务不能顺利开展或未能完成后续融资，公司将面临持续经营的风险。”对此官方表示，营业收入增长其实是周转率提升的主要原因，且财报数据截止6月30日，公司近月回款在逐步改善。而后7月5日，公司发布公告，拟定增5亿元补充流动资金。目前，股东大会已审核通过，并公布了详细的股票发行方案。这也是住百家登陆新三板以来的首次融资，融资后估值达20亿元。36氪向住百家确认，官方称融资活动还在进行。商业模式受质疑，住百家的困境之源？虽然号称中国 Airbnb，但住百家的发展模式“有所不同”。有业内人士质疑，住百家本质的是C2B2C 模式，即平台自身不掌控房源，通过代订的方式，帮用户在 Airbnb 等平台上订房，而且加重了人工服务和运营成本。对此，住百家CEO 张亨德回应称，以上说法不太正确，住百家的C2B2C 模式，是通过差价转租的模式，帮用户预定住百家签约的海外非标住宿。他认为，住百家的核心竞争力在于：第一，通过 C2B2C 模式对房源的品控，可以标准化让用户买到可预期的产品，提高服务质量和用户体验。纯粹C2C的商业模式需要用户和房东自助洽谈对接，提高了匹配成本，极端条件下用户甚至会遇到照片修饰失真的房屋。而住百家可解决中国用户的语言问题，保证供给侧质量，节省双方的沟通时间。第二，以众包形式提供住宿为核心的周边服务，例如住百家如今已推出接送机、租车、管家、海外保镖等服务。不过，住百家认为其周边服务发展尚未达到预期，据其财报：公司2015年上半年及 2016 年上半年内海外短租服务收入占公司总收入的比例分别为 61.75% 及 56.54%。依托于海外短租所产生的周边产品服务收入占公司的总收入的比例较小，如果公司的周边产品服务收入无法高速增长，将会对公司的业务爆发性增长产生不确定性。竞争激烈，住百家护城河在何处？共享民宿从来不是一个好抢的地盘。36氪曾分析，共享民宿的C2C模式更倚仗流量来搭建房东和用户之间的生态。在供给端，房东是逐利的，他们更倾向于流量更大的平台，而相对市场上其他竞争对手来说，住百家没有特别的流量优势。而且相对Airbnb来说，后者的房东和用户都积累了一定的信用和评价，房东离开 Airbnb 另择平台就存在一定成本，这种壁垒是住百家不具有的。而且，出境游仍属低频，共享住宿也不是一个靠资本和营销，就能短时间内拉动的消费。此外，住百家的竞争对手都在飞速发展：2014年，使用Airbnb的中国出境游用户增长超过700% ，2015年数据未公布，但Airbnb正式宣布进入中国，目标瞄准中国海量的出境游市场。上月起，Airbnb 高调招人，摩拳擦掌意欲大干一场。中国在线短租领头羊途家完成3亿美元的D轮融资，估值超10亿美元。本月，途家拿下携程去哪儿民宿业务，占领流量高地，称将正式发力海外。几面夹击下，住百家的护城河又在何处？住百家 COO 邹鑫表示， 住百家核心目标用户与 Airbnb 存在差异。Airbnb受众更年轻，以欧美用户为主，语言沟通能力更强，有社交需求，希望能与当地居民深入交流，Airbnb提供的房源也以共享房间为主。但住百家的产品是专为国人定制，满足25-40岁中产家庭及结伴出行用户的需求，这群用户更关注高质量的住宿体验，不想将时间精力花费在沟通上。所以住百家的房源以整租为主，解决用户的语言沟通问题，提供的旅游周边服务更接地气，房源也更符合中国用户的审美。同时，他表示，住百家目前在采用大数据平台、房东端后台等技术创新提高用户体验感，今年推出的3D实景看房等技术实现了较大的订单转化。但总的来说，住百家主营业务的盈利模式前景尚未明朗，其毛利 5-6% 比行业平均的 10-15% 要低，延伸业务也不尽如人意。新三板上市之时，住百家表示海航会逐步给到 5 亿的融资数额，但据现有公开资料来看，这些资金似乎还未到位，定增仍在进行。不过，住百家净亏损缺口在收窄，也在开源节流，前路漫漫，就看它如何挨过这个“多事之秋”了。</content></doc>
<doc>     <docid>253<docid>     <title>雷军拿出“双曲面玻璃”、“全面屏概念手机”，又一次冲刺高端市场</title>     <link>http://36kr.com/p/5055150.html?ktm_source=feed</link>     <content>雷军终于抖出了他憋的“大招”，双曲面小米Note2以及全面屏概念手机小米MIX。中规中矩的小米Note2这款手机是一款双曲面玻璃手机，正面屏幕使用5.7寸OLED柔性屏，也是国内手机厂商首次采用双曲面玻璃作为旗舰机型。售价为2799元（4GB+64GB）、 3299元（6GB+128GB）和3499元(6GB+128GB全球版)。&nbsp;双曲面玻璃手机具有三大难点，产能不足，良率很低，工艺极为复杂。雷军在发布会上解释，此外正面使用的OLED柔性屏成本极高，一部手机的屏幕成本就在700-800元左右。在前不久的锤子M1发布会上，罗永浩曾在接受36氪采访时解释，M1也曾考虑过使用双曲面玻璃的方案，但由于双曲面玻璃目前还难实现规模化量产，担心良品率问题，最终放弃使用。小米此次有勇气和决心推出双曲面玻璃手机，可以见得小米对小米Note2的销量有着极大地信心。&nbsp;但OLED柔性屏的好处也不少，不仅在外观上给予消费者极有差异化的视觉感受，另一方面曲面玻璃帮助屏幕展示更多内容。三星在2015年将OLED柔性屏应用到了Galaxy S6 Edge上，成功地帮助三星结束了连续多个季度的财报亏损，也帮助其手机在全球市场扳回一局。&nbsp;但很不幸的是，三星在今年推出首款自己的双曲面柔性屏三星Galaxy Note 7后，这款手机由于电池易爆问题导致全球召回。这给予中国手机产商以巨大的机会，能够填补三星缺位后的市场空缺。然而，小米作为首位推出双曲面屏幕的安卓手机厂商，以及此次外观极为类似Galaxy Note 7的银灰色小米Note2，还是相当有竞争力。双曲面玻璃对于小米Note产品线的重要性也不言而喻。小米Note是小米在2015年1月发布的中高端产品线，也是被小米寄希望于冲击高端市场，提升品牌溢价的一款标志性产品。这款产品在刚上线时候分为2299元标配版以及3299元顶配版两个价位，是小米首款进军2000元，试水3000元市场的产品。&nbsp;然而，这款产品在问市后的反应不佳，较高的价位还是增加了消费者购买的门槛。在发布这款产品的四个月后，小米索性将两款产品都进行了数百元的降价，顶配版直接从3299元降价到2999元，回到了2000元的段位。但36氪记者从国内一家手机零售商的高层处得知，这款产品的销量反应平淡，同期市场上还有华为Mate7和魅族MX5等中高端旗舰机的推出，也对小米这款手机带来了一定的影响。初步试水一定程度上，探出了小米品牌溢价方面的天花板，但是小米还是没有放弃中高端市场。为了帮助这次Note2能一举成功，结束外界对小米做高端手机的质疑，重金请来了梁朝伟做代言人、采用产能不足成本较高的OLED屏，都体现了小米在这款手机上所能拿出的所有“诚意”。&nbsp;此外小米Note2在配置方面也相当不俗。这款手机配备了骁龙821，6GB+128GB，支持全功能NFC，支持银行卡支付和公交卡适配，192kHz/24bit的HD高清音质，内置SAP辅助定位，可以帮助在隧道、地下停车场等信号不良地区定位，续航方面为4070毫安，支持快充Quick Charge 3.0。由于小米Note2的部分外观和配置已经在网络上被曝光，这场发布会真正让人惊喜的是小米MIX手机的发布。外观惊艳的小米MIX小米MIX从外观非常惊艳，整部手机正面，除了屏幕，还是屏幕。屏幕尺寸6.4寸，屏占比高达91.3%，与iPhone 7 plus机身尺寸相近，屏幕却大了23%。这样可以保证在现有尺寸下，屏幕能够显示的内容更多。全面屏幕上没有听筒、距离感应器、前置相机，雷军解释，小米MIX以陶瓷声学系统替代传统听筒，通过压电陶瓷将电信号转化为机械能，通过机身导声，无听筒也能接听电话。此外，以超声波替代传统红外距离感应器，无需正面开孔，依然防误触。这款手机由曾经给乔布斯设计游艇、设计过路易斯幽灵椅或外星人榨汁机的知名设计师----菲利普·斯塔克设计。他的作品随处可见：从纽约别致的旅馆到FF4900邮购商行，从法国总统的私人住宅到欧洲最大的废物处理中心，从全球各地的咖啡馆及家庭中数十万的座椅和灯具到浴室中的牙刷。全陶瓷机身、6.4寸全面屏、陶瓷声学系统与超声波距离感应器、骁龙821芯片相机、指纹装饰环采用18K镀金材质，这一切都意味着成本的提升。雷军谈到设计的时候极度哽咽，说这是一款完全不计较成本的手机。以至于当最后公布价格3499元标配和3999元尊享版时，也让人更易于接受了，毕竟在外观上给出这么多惊喜以后，这款手机的价格还没有超过三星Galaxy系列和苹果手机。由于三星在10月紧急召回Note7，缺位了今年的中国智能手机市场，这也给予中国其他国产手机厂商巨大的机会来填补这块市场。目前，锤子、小米、OPPO都接连发布了自己的中高端旗舰机型，魅族也很快将在11月3日发布自己的PRO系列高端机型，可见2000-3000元段位的手机市场将在今年下半年迎来一次小高峰。</content></doc>
<doc>     <docid>254<docid>     <title>三好网宣布完成 A 轮融资，Q3 起单月营收超过 3500 万元</title>     <link>http://36kr.com/p/5055151.html?ktm_source=feed</link>     <content>36 氪曾经介绍过的 K12 在线辅导平台三好网今天宣布，公司已经获得 A 轮融资，具体金额暂时不做透露，此轮融资由清科资本领投、此前投资人跟投。投资完成后，清科集团的创始人、董事长倪正东将出任三好网董事，三好网表示这笔资金也将用于产品研发和市场运营。今年 3 月，三好网宣布完成由由亦庄互联基金领头，沃衍资本、金百朋和磐谷资本跟投的 7500 万人民币的 Pre-A 轮融资，当时的客单价在 9600 元，毛利率 20%，总营收约 3000 万。此轮投资方清科资本向 36 氪表示，三好网的客单价有所增加，达到 15000 元，从今年第三季度起，每月营收都突破了 3500 万，续费率超过 90%。在教师运营方面，三好网曾成立了“教师帮”，用社群互动的形式不定期组织老师开展活动，维护老师和平台的关系。截至完成 Pre-A 轮融资时，有通过审查的人数 4000，其中有 30%-40% 为退休教师、20% 的公立学校离职老师，还有一部分职业培训教师。线上教学对系统有很高的要求，在这方面三好网曾经战投了一家硬件公司，通过只能硬件“好学宝”和客户端，实现视频、音频、共享、PPT播放和电子白板等多功能组合的互动，还原线下教学场景。何强表示，三好将在近期推出第二代硬件产品“超极好学宝”，把产品打造成“链接一切屏幕”的硬件。另外，在技术方面三好网在持续进行 PGOT（第一感知测评系统）自适应学习引擎的研发，根据学生做题产生的数据对其水平进行测评，再结合人工干预给出教学计划。直播课程几乎成为今年以来 K12 的必备，不论是传统的线下一对一，还是猿题库这样的产品型公司，都纷纷转向直播教学，包括今年纷纷宣布完成 C 轮融资的疯狂老师和掌门一对一，都是利用了师资带来的信息差，但是三好网们需要考虑的一个问题是，如何避免成为线上版的学大，通过降低营销费用来改善成本，成为“有现金收入、也有真实利润”的公司。</content></doc>
<doc>     <docid>255<docid>     <title>人工智能明年或将监管股市欺诈，还能给交易员的诚信度打分</title>     <link>http://36kr.com/p/5055139.html?ktm_source=feed</link>     <content>人工技能击败了国际象棋大师，又击败了电视智力竞赛冠军。可是人工智能还在不断地开疆拓土，它的下一个目标是：打败股市欺诈。两个交易所已经公布了相关计划：用人工智能工具对未来几个月的市场进行监督。华尔街监管机构的官员表示他们也紧随其后。高管们希望具有人类智慧的电脑可以帮助更快地发现不当行为。举个例子，这个软件可以通过梳理聊天室里的信息记录，来发现可疑的夸大，或大宗交易前后的内幕交易。它可以更快地解决一些复杂的问题，比如“操纵股价”，先挂单进行交易和然后取消来认为拉低股价。美国金融业监管局（FINRA）的市场监管官员Tom Gira说：人工智能甚至可以发现新型欺诈。“我们最担心的是有人操纵市场而我们却难以察觉。看起来人工智能有可能为解决这些问题打开一个新的窗口。”FINRA打算明年测试内部开发的用于市场监管的人工智能软件。纳斯达克交易所和伦敦证券交易所有望在明年年底之前用上这款软件。这两家交易所运营商还计划把这款软件卖给银行和基金经理，以便他们监视自己的交易员。尽管金融企业已经将人工智能软件应用到方方面面，从履约到选股。但是只有在市场监管领域见到了成效。“我们并没有彻底地放开手脚，让机器自行监管，”纳斯达克负责人工智能的市场发展经理Bill Nosal说道。500亿市场行为的监管难题市场监管通常依赖算法来检测交易数据中的异常情况。但是一些急剧变化的数据也可能到导致警报，因此在警报当中大多数都是假警报。FINRA每天监控大概500亿个市场行为，股票挂单、修改、取消和交易。它会搜寻大约270中疑似违规的行为模式。很难说有多少行为被标记，以及有多少不当收益行为被发现。“正在开发中的机器学习软件会突破那些设定好的模式限制，保证那些情况真正应该警报。”Gira说道。机器学习是人工智能的一个分支。机器可以自行发现新的任务而无需认为指令。对于市场监督来说，这些电脑要学习哪些交易模式是违规的，从而可以正确标记违规事件。FINRA打算明年测试这个新工具，并与现有的系统进行对比。监管机构已经将自己的监管系统转移到了亚马逊的云端，来给电脑更多的计算能力来快速分析海量数据。纳斯达克正在与认知型计算机公司Digital Reasoning合作。这家公司今年早些时候刚刚获得了投资。LSE集团的首席运营官&nbsp;Chris Corrado表示，伦敦证券交易所（LSE）正在与IBM的Watson项目和网络安全公司SparkCognition合监管作，来加强它的人工智能监管。Watson计算机已经成为家喻户晓的明星，它在2011年的游戏节目&quot;Jeopardy&quot;中打败了其他参赛选手。如何保证交易员的诚信技术不一定会保证2010年那样的“闪电崩盘”事件不再发生，道琼斯工业平均指数短时间内暂时性下跌了1000点。但是它可以更快地捕捉操纵市场的行为，为市场监管机构节省事件和财力。FINRA、纳斯达克和LSE没有透露人工智能监管软件的开发成本，以及他们希望这些软件可以节省多少钱。举个例子，一家全球性银行的交易员在操纵外汇市场，为了查清这个案子，调查人员不得不花了数年时间用陈旧的电子通讯设备核对交易数据。纳斯达克表示，正在和Digital Reasoning联合测试这款软件，其他金融公司也可以几乎实时进行测试。周三，人工智能创业公司Neurensic发布了一个测试交易员“诚信分数”的工具。“诚信分数”将根据交易员的交易模式是否与与监管机构的规定匹配来确定。该公司的首席执行官David Widerhorn说：“获得这一信息对于提高业务效率、前置性避免那些监管问题是很有帮助的。”Neurensic也曾与监管机构配合调查操纵市场的事件，并且正在跟两个交易所就提供人工智能监管软件事宜进行谈判。</content></doc>
<doc>     <docid>256<docid>     <title>全球零售银行业大幅裁员撤店，科技金融有何机会？</title>     <link>http://36kr.com/p/5055138.html?ktm_source=feed</link>     <content>江湖上曾经流传一个段子：邮局不努力，成就了顺丰；商场不努力，成就了淘宝；银行不努力，成就了支付宝；运营商不努力，成就了微信。每一个成熟的传统行业与客户需求之间的差距，都存在见缝插针的创业机会，当相应的技术因子兴起，触动痛点、变革行业之后，传统企业将自食故步自封的苦果。大而不倒的银行业亦不例外。银行零售业务裁员撤店农行行长周慕冰表示，银行经营规模快速扩张、盈利高速增长、竞争压力宽松的黄金时期已经结束。今年9月，36氪就报道，四大银行上半年总共裁员超过2.5万人。图片来源：人民网财经如今不仅是移动支付普及率全球领先的中国，连美国的银行业开始断臂求生。据Business Insider报道，自去年第三季度以来，美国银行、花旗集团和摩根大通关闭了389家分行。在金融危机之前，美国银行拥有6000家分行，现在已缩减到4629家，该银行从去年开始削减了112个金融中心。美国银行不是唯一重组支行业务的银行。当花旗集团在10月14日公布的第三季度财报中，透露其北美分行数量比去年第三季度减少了7%，并且全球支行数量也下降了116家，达到2679家。减少的不仅仅是银行支行，还有员工数。美国银行6月表示，它计划从个人银行业务部门裁减8000个工作岗位。据彭博2015年年底报道，花旗集团计划从2016年1月开始裁减至少2000个职位。当时，花旗集团全球员工超过20万。据新京报报道，花旗银行在今年年初相继关闭了三家中国分行，包括深圳前海支行、北京望京支行和大连星海湾支行。此外，2013年9月起，苏格兰皇家银行、德意志银行先后关闭了在华的零售业务。互联网金融让银行的个人信用消费贷款业务减少，也是一些外资银行在华裁员的原因之一。受互金行业冲击，断臂求生对于外资零售银行密集关店，除了经济下行因素外，业内分析认为跟互联网金融崛起也有关，新生代消费者更习惯电子化交易，甚至有可能推出远程开户，这都对传统银行的实体网点有威胁。花旗银行曾发布报告《金融科技如何银行业逼向引爆点？》，预计2015—2025年间，银行雇员将减少30%，且裁员速度会由近些年的每年2%上升到3%。银行将大幅裁员这样的现象，在电子支付和电子商务领先全球的中国，金融科技对银行业的颠覆应该是有过之而无不及。中国互联网金融和电子商务的发展体量领先世界花旗银行认为，中国第三方支付就像另一个银行系统，银行业务正受到支付宝等第三方支付业务的侵蚀。同时，支付只是这些互联网公司接触用户的一个入口，这些公司日后可能扩展到更多金融服务，受到最紧迫威胁的银行业务有：个人贷款（Personal Loans），中小企业贷款（SMB loans），移动支付（Digital pmts.）和财富管理（Wealth Mgmt.）。大量的互联网消费金融业务威胁到了传统银行的信用卡业务，阿里和京东分别推出了蚂蚁花呗和京东白条，这些产品的便利与低息，有明显的优势，其更大的用意在于刺激消费而非赚取利差，而且同时还获得了客户的信用信息；理财通、余额宝等各种宝宝类服务的推出，使人们把大量钱从银行里转出，影响银行的流动性，同时抢占个人财富管理市场；支付方面，花旗银行的报告显示，支付宝的支付量已超过了工商银行和招商银行信用卡交易量的总和。类似的情况不仅出现在中国，国外的互联网金融行业也在不断发展。积极布局数字化转型然而，穷则思变，对于撤销分行与大幅裁员，银行方面则另有一番说辞。花旗表示，在中国关闭网点是“积极进行数字化转型和布局”。 美国银行第三季度财报也表示，自助服务要向数字渠道、手机、在线和ATM转移，美国银行首席财务官Paul Donofrio表示，分行的关闭就是这种转型的一部分。零售银行富国银行表示，信用卡申请、消费者忠诚度，以及客户与银行的互动已经大幅下降，计划重新转向移动业务。美国银行拥有2100万手机银行活跃用户，18 %的存款交易是通过移动设备完成的。高盛也开设了线上的美国储蓄账户。摩根大通新卡账户的发起量在本季度上升了35%，超过3/4的新账户通过数字渠道开通，活跃的移动用户在第三季度上升了17%。因此，摩根大通将营销工作重点面向“千禧年客户”，他们在新支票账户客户中占了57%的份额，而且更有可能使用手机银行。随着网络技术的普及，消费者越来越倾向于选择网上交易服务，银行业无疑要根据消费者行为的变化调整自身业务，逐渐将业务重点转向移动端。在美国，银行支行现在强调更多的是增值服务，增加更多的抵押贷款和投资专家咨询服务。它们正在成为一个根据生活事件提供咨询的地方，包括抵押贷款、投资、大学储蓄等。这样的趋势也符合花旗银行判断，上述报告也认为，未来银行机构可能会更多专注在咨询和顾问业务，而非交易业务。因为，银行实体网点的投资回报率本身就在逐渐降低，银行分支及其人力成本占银行零售业务成本的65%，而数字化转型也有利于银行降低成本。美国银行的Donofrio说，网上交易的成本仅有支行的1/10。“这对客户更好，对我们的股东也更好”。变革中科技金融有何机会？银行业的变革与重组意味着资源重新分配，网络成为银行与客户互动的主要渠道，这意味着对银行支行和工作人员的需求将会减少，不少银行选择聚焦高端业务。在银行精简自身业务的同时，也给新进入的创业公司面临则不少的机会。与发达国家不同，花旗的报告认为，中国银行业的变革主要由新进玩家在引领，而非传统的银行自行变革，比如深圳前海微众银行、浙江网商银行两家纯互联网银行，完全没有物理网点，都是由互联网公司创立。除了上述提到的个人贷款和中小企业贷款、移动支付和财富管理等方面，金融科技公司也许还能从以下方面切入：中小客户征信业务：在如今中国银行业中，商业银行的客户信息数据库中最为缺少的便是小微企业的信息资料，而支付宝和微信等第三方支付工具，不仅接触到用户的收入情况，还掌握了用户的大量消费数据。他们对中小客户的了解显然比银行多得多。基于大数据技术，科技公司可以对所有用户进行征信，蚂蚁金服的芝麻信用就根据掌握用户信息的多寡与具体情况给用户打分，同时给用户计算借款额度。个性化理财业务：由于掌握大量的用户信息，科技公司根据用户的能根据用户的风险偏好和流动性偏好，运用人工智能和大数据业务给用户提供理财建议，有利于提高客户收入，同时数字技术简化了购买理财产品的流程，客户购买意愿更高。同时上述征信业务的存在，应用在向客户推荐服务的同时就可以审核客户资质。优化业务流程与风控、监管：正如毕马威的报告指出，科技金融将重构零售银行业，未来银行业分成三层：平台层、产品层和处理层。处理层存在大量的机会，其主要功能是优化业务流程，包括支付、清算、核心平台、了解客户（KYC）和反洗钱（AML）。创业公司可以为银行提供服务，使得上述流程变得更加便捷和安全，其中区块链技术可能会发挥很大的作用。</content></doc>
<doc>     <docid>257<docid>     <title>百度鹰眼上线一周年终端总数量超1000万，台湾联发科技加入百度鹰眼硬件联盟</title>     <link>http://36kr.com/p/5055145.html?ktm_source=feed</link>     <content>昨天，百度地图对外展示了鹰眼轨迹服务上线一周年来取得的成绩，同时宣布成立百度鹰眼硬件联盟，联合开发者、硬件制造商，为其提供百度地图的鹰眼轨迹管理服务。百度地图开放平台共向开发者和行业用户开放六大服务，包含定位服务、地图服务、数据服务、出行服务、分析服务、以及鹰眼轨迹服务。据百度地图表示，其中鹰眼目前已经有超过100万的注册开发者，每天为超过60万个App及网站提供各种基于位置、导航、轨迹等LBS能力的服务。具体来说，百度地图鹰眼轨迹服务的轨迹管理方案包括轨迹追踪、轨迹存储、轨迹处理与查询等。通过覆盖多平台的SDK、API以及云端服务，它可以帮助开发者进行车辆轨迹追踪，能应用于车辆管理、人员管理、车联网、智能穿戴等领域。百度地图表示，鹰眼上线一年来，已经陆续与物流、校车、外勤管理、专车、可穿戴设备等多个领域展开合作，如圆通、哈尔滨快橙校车、海尔、易到、361°智能童鞋等。截至目前，百度地图鹰眼已为超过3万名开发者提供了轨迹服务，接入百度地图鹰眼服务的终端总数量超过了1000万，这些设备轨迹每日覆盖的里程超过了4700万公里。下面具体说下百度地图鹰眼的五个主要功能：轨迹追踪：提供Android/iOS SDK、Web服务API和车载GPS设备，帮助开发者通过多种终端持续追踪轨迹。轨迹回传：SDK与鹰眼云端采用TCP长连接，将数据打包压缩后加密回传等，保障数据安全，实现低流量损耗。轨迹纠偏：实时进行轨迹纠偏，解决定位漂移问题，还原真实轨迹。轨迹查询：可实时查询被追踪者轨迹、查询被追踪者的实时位置、查询被追踪者某时间段的历史轨迹、实时里程计算。地理围栏报警：地理围栏是指一定范围的虚拟地理区域。当被追踪者进入、离开该区域时，监控者可以接收到自动报警通知。应用场景方面，百度地图鹰眼可以应用于车辆管理、配送人员追踪、外勤管理、车联网、专车代驾计费、智能穿戴等领域。1)	车辆管理：物流、租车公司、企事业单位通过司机手机监控车辆位置。2)	配送人员追踪：快递、O2O即时配送人员的实时追踪，帮助用户随时了解配送进度。3)	外勤管理：帮助企业追踪并管理在外销售、巡逻、上门服务人员。4)	车联网：可联网的车机、车载GPS、OBD、行车记录仪、后视镜产品使用鹰眼轨迹服务上传行车轨迹、车况、图片和视频等数据。5)	专车代驾计费：利用鹰眼的轨迹纠正和离线缓存功能，纠正轨迹漂移，校正计费。6)	智能穿戴：在智能穿戴设备中集成MTK2502芯片以及配套鹰眼SDK，即可实时追踪终端轨迹。而之所以要成立一个硬件联盟，是因为上游硬件厂商需要鹰眼的轨迹云服务以及其B端用户市场，通过平台来拓展终端市场。百度鹰眼对此也设定了相应的准入门槛，硬件联盟要求硬件厂商具备超过10万的在网产品数量、其产品需要通过ISO、3C等多种认证，并要求其可提供7×24小时的售后服务支持、超过13个月的免费保修以及完善的产品使用手册。百度地图表示，首批加入的鹰眼硬件联盟的企业包括台湾联发科技（MTK）、北京聚利科技、深圳微科通讯、深圳博实结及深圳成为科技智能交通系统有限公司等。我是 36 氪汽车记者，欢迎与我切磋讨论。微信 KatherineLWong</content></doc>
<doc>     <docid>258<docid>     <title>张嘉佳的“时间海”A轮融资过亿，做青年作家的摆渡人？| 首发</title>     <link>http://36kr.com/p/5054807.html?ktm_source=feed</link>     <content>为了拍电影，张嘉佳已经忙的很久没能好好打几把王者荣耀了。三年前，张嘉佳把三十几个自己写的睡前故事集结成册出版，这就是后来卖出近千万本的《从你的全世界路过》。今年国庆，《全世界》同名电影在各大院线上映，张嘉佳自己当编剧，导演则是拍过《匆匆那年》的张一白，截至目前票房接近 8 亿。很多人都以为张嘉佳这是作家跨界影视圈，或者是网红跨界影视圈，但其实不然。早在 2012 年，那时候还没有《全世界》，编剧张嘉佳就已经凭着一部《刀剑笑》拿过台湾金马奖的最佳改编剧本的提名。他甚至还拥有着一家影视公司“时间海”。据悉，这家公司已经完成了来自景林资本和辰海资本的 A 轮融资，金额过亿。此前，该公司还曾获得过来自华策的天使轮融资。36氪近期采访到了张嘉佳和他的合伙人、“时间海”的 CEO 王海云，一起聊了聊电影、小说、以及“时间海”的排兵布阵。1.虽然票房不错，但《全世界》在网上还是受到了不少负面评价。剧情简单、鸡汤生硬，是电影被诟病最多的地方。不过张嘉佳对这些倒显得没什么所谓。“有什么太大的所谓呢？老百姓喜欢就好了，你说有一千多万、两千万人喜欢还不叫老百姓喜欢吗？”对面的张嘉佳在桌面上胡乱捣鼓一阵，烟又点了一根新的。以书和微博为主要载体，《全世界》这款 IP 积累了 2000 万粉丝、40 亿阅读，这是张嘉佳“无所谓”的底气。甚至，他觉得这就是一部拍给粉丝看的电影。“说白了，两千万读者票房加起来就差不多七、八亿吧？《全世界》的口碑是好的。我和张一白都不是非常在意这些负面反馈，我们想的就是让喜欢这部书的人都去看这部电影。”所以《全世界》的操作是轻盈的。对张嘉佳和张一白而言，要守住这七、八亿，最重要的是保住原著气质。当书里那些最能撩动情绪的字句，从陈末、从茅十八、从猪头嘴里说出来，粉丝并不会觉得有丝毫尴尬。为了讲明白他们想把《全世界》拍出什么感觉，张嘉佳打了个比方：“你在观看上不会有任何障碍。就顺着唰的一下，就像飞行一样就过去了。你跟着电影哭，跟着电影笑，里面很多的东西其实不需要你去琢磨的，因为我已经讲完了。”《从你的全世界路过》 电影剧照2.可《全世界》讲完了，张嘉佳说自己再也不想拍爱情片了。“因为每个人的爱情观和价值观都不一样，但爱情片永远都是有价值观跟人生观在的，所以一定有部分人赞同你，一部分人反对你。比方说我拍一个战争片、拍个武侠片，很简单邪不胜正就结束了，没有人会来反对你，但爱情片不一样的。”《全世界》还没下映，但张嘉佳已经把更多精力放在了年底要上映的《摆渡人》上。为了这部片子，张嘉佳和剧组已经前后磨合了三年。《摆渡人》其实是《全世界》里的一个故事，后来被王家卫挑中。当张嘉佳把 70 万字的改编剧本交到王家卫手里，王家卫说了这么句话：“嘉佳你自己的小说，你自己写的剧本，也只有你自己能拍了。”就这样新手导演张嘉佳走马上任，王家卫做监制，主演则是《重庆森林》的原配，梁朝伟和金城武。而电影之外，在写书这方面张嘉佳也有新的想法。但他可能准备放弃赖以成名并被持续模仿的“张嘉佳体”了。“现在我看同类型的书，我突然理解为啥有人反感了。我看了我也挺反感的，动不动就‘我有一个朋友’。其实《全世界》是本半自传，里面很多人干的事实际上都是我干的。”本来他计划年底出一本文风完全不同的长篇小说，但今年实在被拍电影折腾得够呛。“我反悔了。太累了今年，明年先要去玩儿，回来再说吧。”比起笔下敏感又优柔的文字，张嘉佳本人却是出乎意料的潇洒果断：卖的好的言情片，说不拍就不拍了；看到公司哪个项目觉得不行，说砍就砍了；现在连最拿手的鸡汤都不准备再写了。“我就是迅速开垦一片田野，然后迅速把它消耗完毕。人家要是跟你风，你不就得做不同的事情嘛。”话到这里，瘫在椅子里的张嘉佳露出了些野气。《摆渡人》启动仪式 左二为张嘉佳3.张嘉佳更大的野心，藏在“时间海”这家公司里。毕竟单兵作战，张嘉佳个人的吞吐量是有限的，对自创 IP 过度开发也会造成品牌损耗。不过既然在行业里已经混了那么久，又混的不错，现在的张嘉佳天然可以当一个组局人。就像他自己说的那样：“因为有张嘉佳在，无论是资本或者是合作方他们会给很多便利，会给信任度。”这些都是“时间海”生长的先天条件。从模式上看，去年底成立的“时间海”相当于一个孵化器，他们将有潜力的年轻作者纳入体系，通过包装与出版将他们本人、或作品打造成 IP 后，再输送到产业链内其它环节转制成不同形态的内容，比如院线电影或网剧，以谋求更大的商业价值。不签老江湖，转而选择名气没那么大的年轻作者作为签约主体，这其实是一门低买高卖的生意。年轻作家往往缺乏市场经验和人脉资源，而“时间海”提供的就是一套有大 IP 张嘉佳做支撑的培养机制，年轻作者在这里能够更容易对接上出版资源，甚至还能接触到业内一流的编剧、导演。这对他们构成了非常强的吸引力。截至目前，“时间海”签约的作者总共十几位，其中包括 90 后里唯一的百万级作家卢思浩，台湾红人穆熙妍，以及一些通过写网文已经小有名气的写手，这些作者贡献的内容版权会和公司共同拥有。“时间海” CEO 王海云表示，未来作者成熟后公司也会考虑支持他们成立独立工作室，并入股参与。因此，对于“时间海”而言，把控着内容产业链的最前端，不断运作公司签约作者构成的网络效应，最终不管是出版还是影视收益，都能成为公司的变现方式。2015年12月 &nbsp;“时间海”宣布成立4.张嘉佳办公桌对面的毛玻璃墙上，林林总总列着不少影视项目计划。除了他自己的《末等生》、《老情书》，你能从中找到不少他们旗下年轻作家的作品。比如卢思浩卖的最好的那本《愿有人陪你一起颠沛流离》，“时间海”决定和优酷方面联合出品，将其改编成网剧，之前孵化《万万没想到》的制片袁玉梅会亲自操刀这个项目，明年春天上线。而另一名签约作者李淳的热血运动系短篇小说《很多年前，我是一个拳王》也已与华策达成协议，之后会登陆院线。至于选择拍哪些本子、拍成电影还是网剧，“时间海”内部并没有一套严格的流程体系。事实上，由于内容本身极其非标，王海云认为这是一件非常 case by case 的事情。为此，公司还设有独立的经纪部门，基本以一对一的方式为签约作者对接出版、活动事宜，以及粉丝和公号的定期维护。“对每个人（作者）我们都会根据他们的不同情况来分析、做定位。”王海云告诉36氪，“并不一定是说谁的书卖的好我们就帮他拍东西，不完全是按照销量来决策的。因为现在的影视是个非常类型化的东西，像悬疑、探案、科幻类的，天然就容易做影视化，但他书的量不一定大。”为了让内容转制的过程更加通畅，“时间海”甚至会对部分作品题材容易被开发的作者做前置引导。“比如这个作者的东西、题材适合做电视剧、做影视化，那我们可能在她写书的时候就会有策划。公司的策划部会给作者一些建议，因为书有的时候是很平淡的，文字的魅力也不完全来源于情节，所以我们会在情节上给他意见。”同时，考虑到行文与电影视听语言间存在的差异，“时间海”不会要求每个作者都成为自己的编剧。在公司内部，权责被尽量细的切分开来。除了签有自己的作者，公司还签下了几个编剧、导演，当然也不排除从外部引进业内知名人士，比如《愿有人陪你一起颠沛流离》的编剧一个是写台剧《放羊的星星》的杜欣怡，一个是操刀《最好的我们》的吴桐。至于由谁来把控项目进程，也需要具体分析。“每个项目里头肯定有一个灵魂人物来左右项目发展。那你跟大制片人合作，你肯定听他的，他经验丰富、做的多。你跟大导演合作，大导演对创作更有想法，那我们就听导演的。作者可以给剧本提供更丰富的细节和人设，但具体视听语言的逻辑，还是会让专业的人来做专业的事情。”“时间海”旗下作家 穆熙妍×卢思浩5.影视行业开始出现良性的新陈代谢。虽然从票房来看，今年的电影行业让不少人都感到担忧。艺恩网显示，截至10月18日，2016年票房总额 378.39 亿元，大半年过去距离年初 500 亿的目标还差不少。不过辰海资本合伙创始人陈尘向36氪表示，大趋势上国人文化消费意愿和欣赏水平都在上升，未被开发的购买力需要通过好内容来释放。“之前大家对电影质量的判断普遍比较粗浅，但现在电影票房和豆瓣电影指数越来越线性相关，优质内容的需求被放大。华谊、光线这样的巨头却逐渐淡出内容生产环节，新的电影制作方机会变多。”陈尘说，“另外我们发现今年卖的好的电影，基本都是有 IP 原型的。因此选择‘时间海’其中很大一个原因是看重团队的 IP 储备和开发能力。同时短期内公司的收益和片单也都是非常可控的。”事实上，这两年进入文学内容影视化这条赛道的选手不少，其中不乏一些明星公司。张嘉佳和“时间海”之外，韩寒手上两家公司 —— ONE 和亭东（即将合并）早已布局，除了韩寒自己的招牌作品《三重门》，ONE 相关人士告诉36氪，公司旗下其他作者的影视改编项目也即将露面。另外大公司也蠢蠢欲动。豆瓣大张旗鼓成立“飞船影业”，集结豆瓣阅读上多年沉淀的可塑内容，以半自制、半平台的方式邀请编剧和导演入局。甚至还有一些看似和这个圈子距离较远的玩家，比如阅读写作平台“简书”，都向36氪表示自己有卖影视 IP 的计划。行业越热闹，压在每个创业者身上的担子就越沉。聊到这里，张嘉佳收起了之前说电影、说写书时那副满脸无所谓的样子。“我们这个公司要做的，就是利用各方给的便利和信任度去保护这些年轻人，保护年轻人里很重要的一块就是，对他们的作品你要负责。”浪子张嘉佳，现在也成了一个认真的摆渡人。</content></doc>
<doc>     <docid>259<docid>     <title>春晓资本何文：B2B的春天源自一场流通分销体系的变革</title>     <link>http://36kr.com/p/5055142.html?ktm_source=feed</link>     <content>本文来自春晓资本，内容为春晓资本合伙人何文在“2016中国B2B高峰论坛”的分享。36氪经授权首发。许多投资机构在投资产业互联B2B领域以来，中间曾一度迷茫过，虽然看过非常多的模式，有做撮合的、做自营的、压缩环节的，非压缩环节的，但没有完全搞清B2B平台到底意味着什么。但是相信到了今天，创业者和投资人对于B2B交易平台模式都有了更为深入的思考，所以我们把这两年来的观察和思索做了一些总结分享给大家。以下内容为何文在大会演讲环节精选：中国经销商或贸易商体量小，发展速度慢的两大原因这张图是中国商品流通的一个典型结构。从一开始的厂商出来，到省或者是市经销商（现在大部分都是市经销商，很少有省的存在），再到下面二级分销商，三级再到终端，到最终用户。这个最终用户很多行业不太一样，快销品是最终的C，但有一些B2B领域还是B端用户。&nbsp;为什么有这样的结构，我觉得主要的原因一个是，中国无论是消费者领域，还是经销商和贸易商，他们的体量相对偏小，发展速度较慢。经销商和贸易商一般承担的职能就是资金和物流，或者是物流配送的功能，就是因为这两点上的局限性使得他们很难快速发展。1、传统交易方式限制了渠道上的覆盖能力传统的交易方式需要业务员上门、电话沟通、铺广告、下单，整个的交易方式都是非常的落后，是低效率的。所以无论是地级经销商还是省经销商，很多的快销领域地市级经销商只能把市区内终端业务解决掉，但是再往下，到县和镇里，必须通过二级分销商、三级分销商覆盖。他的管理能力，业务人员的覆盖能力都很难达到这个终端，所以从物理上限制了他的覆盖能力。如果扩大地域到别的地市，他没有这样的客户资源，他的交易成本、沟通的方式成本也会大幅度的提升，所以更难扩张到其他区域。2、对中小企业金融服务的缺乏限制了其扩张在中国，中小企业的金融服务相对缺乏。对金融机构来说中小企业第一没有数据，第二获客成本比较高。因为这个原因使得大量的贸易商、分销商都无法获得银行等金融机构的资源，而对于一个靠给厂商提供垫资服务的贸易商，没有金融资源的支持，运营商更加周转不当。所以金融资源的原因使得一级经销商只能覆盖到他的一亩三分地，通过一级、二级分销商再分销到终端，这是为什么形成这种渠道结构的重要原因。成熟的市场分销商成熟的市场分销商用了几十年的时间完成资本积累，并借助成熟的金融环境，来获得规模性扩张。上图是国外的结构，化工或者是工业电器等很多领域，厂商一般会找全国性的大分销商，这些分销商跟中国的地市分销商完全不可同日而语。举个例子，rexel是工业电气领域的大型分销商，在全球有两万五千名员工，他从1979年成立到现在已经近四十年了，通过自身的积累经历了无数的并购、重组，2000年进入中国后，通过合资收购的方式收购了十一家地方经销商。所以我想说的是，在国外发达市场，通过金融体系的发展，他能够进入的资本手段更多。他用时间换空间，比中国的商品化时代更加长，所以他可以形成大量的全国性大分销商，这在各个领域都是，无论是药品、电气还是IT领域。厂商通过大型分销商，再推到下面的市营端，有些地市也会通过一级分销商到用户。其实对他们来说，跟大的经销商坐在一起开个会，分一分，明年基本上销售渠道就OK了，这就是国外的销售渠道推广。产业互联网带来的两点变化1、借助SAAS工具，优化传统交易方式，分销商可以成本更低的覆盖更多终端那么中国怎么过渡到这个阶段呢？这两年为什么B2B兴起，就是因为互联网，互联网给我们带来了一些可能从中缩短我们这个进程的可能性。比如借助SAAS工具、借助技术的方式，可以帮助我们这些分销商覆盖到更多的终端。业务人员可以拿着掌上的PAD工具，拿着SAAS工具给我们终端服务人员做推广，完成线上下单，后续实际完成可以自动化的进行。整个过程对一级贸易商、经销商来讲，他可以覆盖的终端比原来多得多，成本也比原来低。区域上也可以突破限制，跨越一个省对我来说覆盖的是一样的，业务人员并不需要出太多的产品。但我讲的是，一旦你的客户加入你的平台之后的情况，具体表现的有两点，单位业务客户更多；另外就是服务，边远、跨区域的交通成本更低了。2、信息化形成的数据，可完善传统金融机构的风控体系，帮助分销商快速做大有了这些信息化的交易数据，可以帮助传统金融机构完善他的风险。传统金融机构之所以不愿意给中小企业融资，并不是他们不想挣这个钱，而是有两点原因。第一是获客成本很高，他的人员成本很高，要把他们吸收过来需要太高的成本；第二是他没有数据，那么有了互联网，有了数据沉淀，就可能帮助他获得一些金融支持，帮助他们快速做大，甚至可以进行跨区域的并购。因为这一点，所以说互联网给这些分销体系、渠道的压缩，还有单个的分销商的扩大提供了可能性。B2B交易平台是利用互联网带来机会的最佳载体那么互联网带来的机会是不是传统的分销商都能抓得住呢？我们觉得对于这些分销商来说，他的信息化很难做到彻底，因为他仅仅是对于某一个区域的经销商，仅仅是用信息化的手段让他自身的客户往外进行延展，但是他很难做到跨区域，他的信息化还是很难彻底，单个的分销商的体量也很难与金融机构对接。我们认为B2B交易平台，它是利用互联网带来这一波机会的最佳载体，主要的原因有两点。第一个是规模化，只有定位于做一个全国性的，或者是非常大的区域性的交易平台，才能够让基础化信息的成本最低。第二，多客户的数据可以帮助对接金融机构，金融机构需要大量的数据，而不是一个经销商客户的数据。所以，我们觉得今天的B2B交易平台，这一两年来，他其实是应用互联网的工具巩固自己的贸易商和经销商，这是我们认为它的本质。基于这个我们再去梳理投资要点，到底如何产生价值等，我们也别把B2B交易平台说的多么的神、多么的神秘，其实它就是一个贸易商，只不过是一个新的贸易模式。我们的创业和投资机会1、机会和存活率远高于2C对传统行业从业者来说，过去的2C互联网距离传统行业陌生而邀远。但是今天，正好是大家发挥各自所长，借助互联网工具为你耕耘多年产业贡献价值的绝佳机会，不仅机会远多于TO C时代，而且存在于产业链的各个环节，马太效应没有那么明显，存活率较高。我们观察到在一些垂直行业的交易平台一般来说也不会超过10家。在10家里面，到目前这个阶段会发现还有两三家在非常健康的运转，这个存活量相对于2C互联网来说还是高很多，主要原因也是因为他的壁垒相对较高。如果对于这个产业没有深入认知的创业者，是很难做好这个行业的。&nbsp;2、产业互联网是当下不可多得的投资良机对于投资人来说，投资机会也是一样。第一，我们虽然可以看很多的产业，但是捕捉这些好的项目需要更加深度的研究产业。&nbsp;第二，对于产业互联网来说，它的项目不像2C互联网（如嘀嘀打车）一旦成了，就是成千倍成万倍的回报，但是我觉得在这个领域的回报是相对合理的。但是只要度过这一两年之后的项目，他完成的过程，在目前来说是不大可能。&nbsp;第三，在这些产业互联网领域能够容纳较大的资金。因为机会太多了，这是国家大背景，也是供给侧的改革，各个领域、各个行业都需要对存量的一些资源和产业进行优化。那么便能容纳足够多的资金投入进去，而且它是一个值得长期深耕的领域，所以我认为它是当下不可多得的投资良机。</content></doc>
<doc>     <docid>260<docid>     <title>火秀娱乐：TFBOYS 可遇不可求，互联网造星的机会在“腰部艺人”</title>     <link>http://36kr.com/p/5055119.html?ktm_source=feed</link>     <content>这个时代已经很难再出一个张学友或者周杰伦了。不过，发达的媒介和多元的价值观却催生了一类新人群：职业偶像。36氪介绍过不少互联网造星平台，比如在帮同道大叔打造女团的“万好万家”，力捧古风少女的“萌萌哒天团”，从电视造星转型的“女神TV”等。大家的造星手法各不相同，有人觉得互联网造星和传统艺人经纪核心区别并不大，明星一定是重操作孕育出来的。也有人认为借助互联网的流量红利，能挖掘出有商业价值的长尾效应。我最近接触到的“火秀娱乐”大抵属于后一种。创始人王潇是互联网背景出身，投身造星事业前做过一款叫“快手看片”的App，下载量 1000 多万。和王潇一样，“火秀”核心团队的其他成员也多是互联网背景。因此很自然地，他们的思路是把互联网优势应用到偶像扶植中。在王潇看来，互联网模式一面胜在边界成本低，与此同时，互联网上养成的偶像所有发展数据，都是可被量化分析的，从而帮助背后团队对偶像的发展路径做出预判。在之前，这多是靠经纪人、制作人的经验和名望来达成的。基于这个大逻辑，火秀正在搭建自己一套标准化的造星体系。目前看来，一个素人被养成大致会经历三个阶段：海选-素人演唱会-亚洲偶像榜，每名选手是否能通关成功全看网络人气。海选即是初筛，挑出苗子后火秀会为他们提供一系列培训课程，使之拥有基本的专业素质。素人演唱会则是为选手积累人气的中间环节，想参加素人演唱会并不用出道（签经纪约），只要拥有不错的粉丝基础，再加上会唱会跳就能来寻求曝光。而亚洲偶像榜的准入门槛会相对较高，能在这里打榜的艺人都需要有经纪团队和自己的作品。由于整个过程都会被搬上互联网，选手的人气起伏都能做到可追溯。王潇认为，这种“流水线造星”像是在做职业培训。“以前只有金字塔尖的明星会被当做艺人，这和行业发展不成熟有关。在韩国，艺校毕业出来的学生即便当下没被公司签掉，也可以留在练习生体系内等待机会。而中国大多数人这时候就选择转行了。”相比之下，火秀在做的是大量生产金字塔中端的“腰部艺人”。王潇相信，随着市场容量的递增，未来腰部艺人的数量会大幅上升。相应地，他们背后的公司，也就是孵化腰部艺人的商人数量也会变多。这些就是“火秀”们的机会所在 —— 不靠一个大明星吃三年，靠走量赚钱，这和绝大多数网红孵化公司的想法是一致的。回到火秀的模式，其实不管是海选还是演唱会、亚洲偶像榜，这实际上都是在做渠道，流经的艺人不一定都归火秀所有，平台所赚取的是 toB 的冠名费以及 toC 的打赏、应援费用。不过王潇透露，火秀已经投资了一些艺人经纪公司，他们会通过这些公司去签少量艺人。那么从艺人的商演收入火秀也能够分到钱。截至目前，火秀已经培育出了两个出道团体 —— 女团O21和嘻哈组合 C-POP。我们观察到，今年出道的偶像团体实在不少，光女团可能就有 29 支。面对有些混乱的战局，王潇并不觉得太紧张。“还是看韩国，韩国每个月出道的团体可能就有上百个。虽然出的快换的快，但也证明市场是可以继续容纳的，更别说中国才刚刚开始。”资本层面，火秀娱乐正在申请挂牌新三板，之后计划进行一轮定增。</content></doc>
<doc>     <docid>261<docid>     <title>英雄互娱发布Q3财报，净盈利1.44亿，王思聪离职</title>     <link>http://36kr.com/p/5055136.html?ktm_source=feed</link>     <content>英雄互娱近期公布了Q3季度财报，财报显示，英雄互娱三季度共营收6.32亿元，同比增长2554.38%，归属于挂牌公司股东的净利润约3.69亿元，同比增长2151.76%，第三季度单季度营收为2.54亿元，净利润为1.44亿元。根据财报，英雄互娱主要有移动游戏研发、移动游戏发行，电子竞技赛事组织三块业务，Q3季度盈利则主要来自于游戏发行，并在游戏研发领域加大了投入，但对于当年让所有人知道英雄互娱这家公司的移动电竞业务，财报中并没有提到过多的信息。公布了Q3财报外，英雄互娱还公开了其人事相关的变动，监事王思聪先生因个人原因提出辞职，空缺的职位候选人为郑志刚，任职期限自选任之日起至第二届监事会届满为止。&nbsp;当年王思聪确定投资英雄互娱时的微博王思聪曾是英雄互娱早期投资人之一，还是当年英雄互娱牵头成立移动电竞联盟的主席，可以说在早期利用自己的影响力给英雄互娱在做背书，但在今年6月，普思投资以6.2元/股的价格卖出共计1130万股的英雄互娱资产，当时有消息称王思聪通过这笔交易净赚5000多万，确实“这波不亏”。不过英雄互娱并不缺王思聪级别的背书，徐小平、包凡等大佬仍旧是其监事，补上老公空缺的郑志刚来头也不小，他是周大福集团及新世界发展创办人郑裕彤长孙，新世界发展集团董事会主席、周大福珠宝集团主席郑家纯长子，目前担任周大福企业有限公司董事、新世界发展有限公司(00017.HK)执行副主席兼联席总经理等多个职务。</content></doc>
<doc>     <docid>262<docid>     <title>把混合式教育推广到南非，SPARK SCHOOLS 获得 900 万美元 B 轮融资</title>     <link>http://36kr.com/p/5055140.html?ktm_source=feed</link>     <content>据国外科技媒体 Edsurge 消息，专注混合式教育的 SPARK SCHOOLS 日前宣布获得 900 万美元 B 轮融资，此轮融资由 Omidyar Network 领投，SPARK SCHOOLS 此前还曾获得培生集团的投资。SPARKS 创立于 2012 年，SPARKS 的主要任务是把混合式教育推广到南非。从南非高敦商业科学学院毕业后，SPARKS SCHOOLS 的联合创始人 Stacey Brewer 和 Ryan Harrison 决心改变这一情况。创办 SPARKS 之前，Brewer 和 Harrison 针对 100 名 K12 阶段的学生做了调查，他们发现只有 7 个学生有阅读能力，但是只能达到幼儿园水平，即使是有机会上学的学生，期末考试的通过率也只有 30% 左右。想要改变这个局面，Brewer 和 Harrison 唯一想到的办法就是科技，而且参照的样本是整个非洲和印度。比如肯尼亚曾经推出的“Bridge 全球学术”计划，就想用 5 美金/月的价格实现教育目的。老师也只需要 5 周的培训就能熟悉 SPARKS SCHOOLS 的教学系统，每节课能容纳 50-70 名学生参与。除此之外，系统还包括一个在线打分系统，甚至能跟踪到师生课后的时间利用情况。所以 SPARKS SCHOOLS 的混合式教学其实是远程教育的一种，通过科技弱化老师的角色，老师在系统面前只充当监督者的指导者。但是这种方式也受到很多诟病，认为老师被“机器人化”了，尤其是很多家庭都想通过“老师”这个角色，给孩子点不一样的体验。但毋庸置疑的是，教育科技是解决资源分配不均的直接方式。Harrison 表示：“混合式学习能让学校的运转更加高效，这就意味着教育的覆盖面可以更广。那么混合式教育体系具体是如何建立起来的呢？面对家长的不同需求、甚至不同语种的学生，SPARKS 要做的第一件事就是建立一个标准化的实验室，所有学生都能熟练使用系统，目前一个实验室能够容纳 60 个学生同时使用，每人每天的使用时间在 90 分钟左右。SPARKS 在南开普敦一所学校的开放时间在课程方面，SPARKS 选择了四个产品：ST Math（基于神经科学，覆盖 K12 的所有数学内容）、Equatia、Reading Eggs（内容包括发音、单字语音学、音位学）和 Accelerated Reader 360（适合小学生使用的阅读教材），分别训练学生的数学能力和阅读能力，SPARKS 按照年级规划不同的开放时间。对学校来说，SPARKS 提供的学习系统的价格比较低，从其官网来看，每月只需要支付 17350 南非蓝特（约合 8480 元人民币），就能使用所有教学资源。从世界范围来看，南非的教育状况一直是排定垫底的，师资力量和硬件设备都离平均水平线很远。根据世界经济论坛给出的数据，南非的教育状况在 149 个国家中排名第 146。尤其是过去的 40 年中，因为有种族隔离制度的存在，白人学生可以获得免费教育，而黑人去只能接受 bantu 教育（Bantu 是南非当地的一种语言）。在这种状态下，种族隔离遗留下的后患导致成年人文盲率达到 24%，乡村地区的教师资源处于极度缺乏状态。所以 SPARKS SCHOOL 不仅是一个混合式教育图书馆、一个商业项目，也是一种慈善事业，对教育资源严重不均衡的南非有重要意义。目前 SPARKS SCHOOL 已经在全南非开设了 11 所学校，目标是在 2019 年前将合作学校的数量增加至 20 所，同时服务超过 2 万名学生。但是 SPARKS SCHOOLS 创立了一个值得借鉴的模式，即内容不但对学校和 C 端用户收费，对其它教育内容提供商来说，SPARKS 也是一个重要的入口和渠道。</content></doc>
<doc>     <docid>263<docid>     <title>朱啸虎：如何发掘千亿级市场机会？</title>     <link>http://36kr.com/p/5055137.html?ktm_source=feed</link>     <content>编者按：本文来自微信公众号“金沙江创投”，作者朱啸虎，授权 36Kr 发布，转载请联系原作者。金沙江的投资标准一直是3S理论，Significant，Scalable 和Sustainable。今天来重点讲一下什么是Significant。Significant是指市场要足够大（一般要每年的产值在1000亿人民币以上），风险投资最喜欢在足够大的池塘里孵化小鱼，一遇风云便化龙。那么如何来衡量市场大小，是否就是参考统计局的数据报告来寻找千亿级的垂直细分市场？这里有两个常见的误区：误区一：用静止的眼光来分析市场大小早期风险投资是需要一些浪漫主义精神的，需要能看到市场未来可能的演化延伸。4年前滴滴融A轮的时候很多基金没有投，就是因为觉得出租车市场太小，没有吸引力。如果单纯看出租车市场，确实不是很大：中国有100万出租车司机，假设平均每人每月赚5000元，那么1年就是600亿人民币，而且出租车司机需要每天工作十几个小时才能赚这些钱，要从他们身上赚钱是不容易的。市场如何延伸？1、业务线的延伸。例如滴滴从出租车延伸到专车、代驾、公交等，这些都是面向同一用户群并且逻辑上具有强关联性的不同服务。任何一个企业都会具有自己的边界，业务线的扩张不可能是无限的，具有强关联性的产品/服务才比较容易延伸。2、覆盖用户的延伸。例如饿了么成功地把外卖业务从校园市场延伸到白领市场。目前看来，单车业务也能比较自然地从校园市场延伸到校外。但其他一些模式，比如校园便利店，就不容易延伸到校外。误区二：把整个市场都看成是addressable market很多创业者会和我说：我做的市场很大啊，为什么你还觉得小？一般这种情况都是创业者没有仔细分析，过于乐观地把整个市场都当成是自己可以触达的市场（addressable market）。例如一个做停车市场的创业者和我说，停车市场非常大，仅仅上海，一天就有100多万次的停车。上海可能确实每天就有100多万次停车，可是其中有多少比例是停放在固定场所（家/办公室）和停车并不紧张的区域的？真正需要停车平台服务的比例可能都不到10%，那部分才是这位创业者真正可触达的市场！所以在分析市场大小的时候，既不能过于悲观用静止的眼光来看，也不能过于乐观把不是自己盘子里的菜也放进来。那到底什么时候需要乐观，什么时候需要谨慎呢？关键还在于对用户的影响力。主要体现在以下方面：1、基础用户群的大小。传统企业一般先建立高端品牌形象，形成品牌知名度，然后向低端延伸，从上往下打。互联网企业恰恰相反，需要先建立广泛的用户基数，然后从低端往上打，去哪儿、饿了么、滴滴都是典型案例。2、占有用户的时间/频次。也就是俗称的高频应用场景。互联网本质上还是流量的生意，用户使用时间长、频次高，自然容易搭载其他业务。3、占用户总收入的比例。如果平台为用户提供了50%以上的收入，那么平台对用户就有一定的控制力。例如，如果专车司机总收入里50%以上来自于打车平台，那么平台可能就可以要求司机把汽车后服务，二手车换车以及汽车消费贷款业务也都放在平台上来完成。One more thing…最后，特别强调一点，互联网并不是万能的，最适合高度标准化、高频、决策成本低的应用场景。所以不是每一个千亿级市场都适合互联网，比如房地产行业，标准化程度低、低频、决策成本高、高度重视线下服务，互联网企业相对链家这样的传统巨头就未必能有多少优势。我们也非常期待能和创业者来探讨各位实际addressable market的大小。BP通道：businessplan@gsrventures.cn金沙江创投专注互联网早期投资，愿意为优秀创业者提供行业资源、资金及管理等多方面支持，合力打造世界级高科技企业。</content></doc>
<doc>     <docid>264<docid>     <title>帮数据科学家干脏累活，大数据初创企业Paxata获3350万美元D轮融资</title>     <link>http://36kr.com/p/5055134.html?ktm_source=feed</link>     <content>经过前几年的炒作之后，大数据已经逐渐远离了媒体的焦点。这并不是说大数据已经失去势头，相反正是由于大数据应用之广泛已经到了几乎任何应用都离不开的地步，司空见惯了的东西所以就无人提及。但是大数据的应用普及仍然存在一些问题，主要的问题之一就是许多环节仍然离不开人工处理。比如最开始的数据抽取、处理与整合就需要大量人力——21世纪最性感的职业很大一部分精力都用在这些脏累活上面可一点都不吸引人。所以不少创业公司都把焦点放在解放数据科学家的事情上面，Paxata就是其中之一，在Intel Capital Global Summit上，这家大数据初创企业宣布获得了3350万美元的D轮融资。Paxata是一家提供大数据转换平台的初创企业，成立于2012年，总部位于加州Redwood City。其平台为大型企业提供了一个自服务、可视化的信息管理渠道。在数据服务领域，存储和提供数据来源的数据管理系统（如Hadoop）和利用数据的分析应用之间普遍存在的一道鸿沟，即分析应用在对数据分析之前需要抽取、处理和整合多个来源的数据才能进行分析。这个数据准备的过程以往大都需要人工处理，耗时费力，Paxata的目的就是要填补这道鸿沟。他们的数据准备服务可以实现数据的连接、发掘、转换、合并、发布、协作控制等功能，可以将多来源多格式的数据接入并自动进行解释，客户使用人员只需知道使用EXCEL表，无需进行编程、写脚本或者采样即可完成数据准备的任务，这使得使用门槛大为降低。尽管Paxata在最新的大数据版图（见下图）中被定为为数据转换板块，但Paxata自己也提供有数据分析服务，可以利用机器学习与语义分析技术对清洗、整合后的数据进行即时的预测性分析。2016大数据版图对于拥有庞大数据但是缺乏数据科学家的企业来说，Paxata为他们提供了一个易用的信息管理平台。Dannon、Box、UBS、Pabst Brewing Company等均为Paxata的客户。Paxata提供的服务与ClearStory有点类似，均能从不同的数据源抽取数据，但是Paxata还可以将多个数据源进一步整合为单一的数据集，从而更方便业务分析师和可视化工具的理解。此外，像Alteryx、Tamr以及Trifacta也提供了类似的自服务数据准备平台。鉴于人力是企业很大的一块成本支出，而数据科学家80%的工作都用在了数据清理上面，这个市场的前景还是非常可观的。当然，前提是在人工智能发展到足够程度之前，数据本身的质量还是要有一定保障。此轮融资由Intel Capital领投（Paxata是这家基金这次投资峰会投资的12家初创企业之一），Microsoft Ventures、Cisco Investments、Deutsche Telekom Capital Partners、AirTree Ventures等新投资者以及EDBI、In-Q- Tel、Accel等原有投资者跟投，此轮融资过后，其总融资为6150万美元。Paxata&nbsp;原来在纽约、华盛顿特区、俄亥俄州以及新加坡设有分支机构，此轮融资所得将用于公司在欧洲与亚洲的扩张。&nbsp;</content></doc>
<doc>     <docid>265<docid>     <title>自主研发 Firelfy 技术，安可济希望以产品和技术优势切入液体活检市场</title>     <link>http://36kr.com/p/5055092.html?ktm_source=feed</link>     <content>当下，基因检测在肿瘤早期诊断和精准治疗中发挥的作用越来越大。在肿瘤基因检测中，相比于传统的肿瘤组织活检，以无创抽血提取肿瘤基因（ctDNA）的液态活检技术以其快捷、方便、精准的优势成为肿瘤研究的热点，如36氪此前报道的吉因加、泛生子、优讯医学等都在积极拓展该技术的应用。谈到肿瘤液态活检市场，安可济CEO应康博士称，“此前无创产前诊断已发展到了100万人份检测量的水平，而肿瘤液态活检的市场前景将是其20倍以上。”安可济的创始人林盛榕和孙朝辉于2013年8月成立了安可济生物公司，专注于肿瘤液态活检高通量测序技术。“林盛榕博士曾在2009年进入国际知名测序公司Illumina工作，2013年8月，从Illumina辞职几个月后，林博士与生物信息专家孙朝辉一起创办了安可济公司，因为预测到液态活检市场有巨大的潜在发展前景，他们自主研发了Firefly™液体活检技术。”谈到安可济的创立，应康博士称。Firefly™技术能准确检出循环血中的痕量ctDNA，同时分析数百种肿瘤相关基因的体细胞突变，既可用于肿瘤病人的精准医疗，又可发展为肿瘤早期筛查、早期发现、早期诊断的医学辅助诊断新方法。谈到Firefly™技术的优势，应康博士表示，精确测序ctDNA目前存在两个巨大技术障碍：首先是血浆中的ctDNA含量极低，做不了几个检测反应。其次是二代测序背景噪声很高，用常规建库测序方法，肿瘤信号会完全淹没在背景噪声中。目前，全球这一领域的顶尖高手都在致力于攻克这两个难题。而Firefly™技术能很好地解决这两个难题。一般公司在测序时，会从双链DNA分子出发，这种信号转化率约在30%左右，而Firefly™技术将双链DNA分子拆开，变成两个单链DNA分子，从而提高DNA分子数量，使转化率高达90%以上，进而得到高灵敏度、及高特异性的检测结果。谈到ctDNA高通量测序，应康博士表示，“ctDNA测序技术准确度高非常关键。只有测序正确，才能得到正确的信息，生物学意义才能被阐述清楚，进而得到正确的临床转化产品；如果技术不能保证测序准确的结果，后续的分析都将白搭。”在有技术保证的基础上，基因检测公司的业务落脚点一般有两个：第三方医学检验所及体外诊断产品。2015年8月，安可济的上海允晟医学检验所正式运营。不过，应康博士表示，“与其他许多积极布局市场的公司不同，我们的医检所服务量不大。在安可济团队中，市场、销售人员比例非常小，科研人员是主力。我们并不急于抢占市场，而是专注于技术的研发和打磨。目前公司还处于产品向市场转化的早期，体外诊断产品也正在布局，并且已着手开展相关渠道和潜在合作伙伴的调研与规划。未来两到三年内，安可济应是厚积爆发的态势。”安可济目前的产品有四大系列。安可行™产品专门用于抗肿瘤靶向药物选择。安可惠™系列专门为肿瘤监测设计，临床应用包括复发监测、耐药监测等临床应用，针对目前临床上缺乏监测手段的癌种，如肺癌、乳腺癌、消化道肿瘤、结直肠癌等。在产品价格方面也考虑相对于以PCR为基础的产品提高性价比优势。除了安可行™和安可惠™，安可济的另两大产品安可思™与安可康™还在研发中。安可思™专门用于肿瘤筛查，主要针对首诊是晚期的几率较高、有临床筛查难点的癌种，例如消化道肿瘤、胰腺癌、实体肠癌等。而安可康™则是为安可济进军体外诊断方向设计的试剂盒产品。首款安可康™产品正在开展alpha test，2017年起将组织国内数家试点单位开展beta test。未来几年中，安可济计划开发系列试剂盒产品，形成中心实验室模式与去中心化产品分销模式齐头并进的格局。目前，安可济已与上海、北京、浙江、江苏等十多家大型三甲医院合作，开展了多项围绕肿瘤的临床研究和试点，还与浙江大学纳米研究院国际精准医疗中心签约成立示范实验室；在美国也与许多著名大学展开科研合作，从事精准医疗和癌症方面的相关研究。安可济目前的团队规模约80人,其中在美国的科研团队约20人，中国团队约60人。CEO应康博士在生物技术、基因科学和商业领域都具有雄厚的学术背景和丰富的实践经验，曾成功创办和经营了多家科技公司与贸易公司。CTO林盛榕从美国加州大学圣地亚哥分校分子病理学专业博士毕业，曾在斯坦福大学基因组技术中心从事博士后研究，在测序巨头Illumina公司拥有多年的工作经历。在融资方面，安可济曾于2014年1月获得50万美元天使投资，2015年1月获得690万美元A轮融资，2016年5月获得4000万美元 B轮融资。B轮投资由佳辰资本与德诚资本共同领投， 淡马锡、德同资本、斯坦福StartX基金、南丰基金等跟投。</content></doc>
<doc>     <docid>266<docid>     <title>微信成美社交媒体的学习对象，Facebook Messenger现在才推出支付功能</title>     <link>http://36kr.com/p/5055121.html?ktm_source=feed</link>     <content>作为社交聊天工具，微信所能提供的服务越来越完善，这使得Facebook Messenger多次向其“偷师学技”。据外媒报道，Facebook旗下的自研聊天应用Facebook Messenger将引入第三方支付服务PayPal。目前，用户可将自己的Messenger和PayPal账号进行捆绑，在Messenger上收到付款通知后，可通过借记卡进行支付。据悉，目前负责Messenger业务的高管David Marcus，在加盟Facebook之前曾经长期担任PayPal的总裁。很显然，David Marcus的加入将为双方的合作带来更多的帮助。虽然Facebook占据着美国社交巨头的位置，但是随着微信、line等移动应用的发展，这一定程度上给Facebook拓展海外市场造成了威胁。为了应对移动大潮将带来的巨大冲击，Facebook自己研发了Messenger这款移动聊天应用，后又花190亿美元豪置了WhatsApp应用。但相比微信的迅猛发展，Facebook旗下的聊天应用在功能布局方面还是稍显落后。比如我们常用的微信语音聊天、视频聊天等功能，Messenger在今年年初才实现。另外，Facebook也开始在Messenger上进行更多的商用尝试，而对WhatsApp应用的开发方面就显得谨慎一些。据新浪科技报道，Facebook2015年首次公布了尝试计划，准备将Messenger从一款短信聊天应用转变为一个平台。起初，Facebook打算亲自开发支付服务，如我们日常在微信上所使用的。不过，最终Facebook还是选择与第三方支付平台合作。今年9月，Messenger负责人曾表示，正在与PayPal、Stripe、维萨卡、万事达、Braintree、美国运通卡等公司洽谈合作，以推出支付功能。而用户可以自行决定绑定第三方支付公司。除了支付，Facebook还决定与更多第三方服务平台合作，如其公布的合作伙伴Everlane、Zulily和KLM等。通过这样的平台接入，既可以留住更多的用户，又可以实现一定的变现。此外，Facebook也希望Messenger有更多人工智能方面的尝试。上个月，Messenger业务的负责人David Marcus表示，Messenger机器人现在可以直接接受付款，并且还在与多家公司接洽，以扩大业务范围。目前，Facebook已经在社交应用上进行多种功能的尝试，但在为企业和用户提供参与商务和交易的能力方面，其仍属于发展的初期。而在这方面，微信的发展已经相当成熟。据此，音乐初创公司ReplyYes的CEO戴夫·科特（Dave Cotter）预测，未来Facebook还将模仿微信的功能和成功。</content></doc>
<doc>     <docid>267<docid>     <title>猎豹升级豹米空气净化器，三年不换芯能否撬动市场？</title>     <link>http://36kr.com/p/5055117.html?ktm_source=feed</link>     <content>每年秋冬季，以北京为代表的城市便雾霾多发，空气净化器市场都会迎来一波热销潮。10月24日，在雾霾爆表前，猎豹移动旗下智能硬件公司“豹米科技”再次发布“服雾大众”的新品——“豹米霾霸”空气净化器。其已在25日在京东开启为期一个月的众筹，价格1498元。作为豹米公司智能硬件产品的延续，新款空气净化“豹米霾霸”更新乏善可陈，仍然使用了上一代产品使用的OSRAM激光传感器和芝浦风机，本次更新的卖点可属豹米科技和3M合作开发的寿命长达3年的HEPA集尘滤网，算是解决了目前市售家用净化器滤网寿命一般为3-6个月的一个痛点，但仍属于在已有HEPA材料领域小打小闹。空气净化器的技术架构以及核心组件——外壳、过滤网、电机、探测器，主板都比较成熟，其成本价格大约在300元—2000元左右，野心不大的话，无需再费力投入新材料和技术的研发成本。而且目前带新风系统的新楼少，改造旧房成本高，空气净化器仍是可考的替代品。空气净化器不高的技术门槛、稳定的市场需求，对于初入净化器市场的猎豹来说是性价比很高的试水。因而，从最初￥998的净化大师，到现今￥1498的豹米霾霸，豹米科技的空气净化器产品线从伊始就没有战略性的地位，更多的是傅盛“最不济也可以造福社会的情怀、最差用户也可以下载我一个App的思路”，算是猎豹移动效仿小米生态布局无心插柳的一步。从猎豹移动2015年的财报来看，旗下空气净化器帮助其互联网服务部分收入增长11.6%，达到了4千5百万人民币。但是以猎豹移动2015年总营收36.8亿元的体量来说，也只能算杯水车薪。其实空气净化器市场留给豹米科技的蛋糕并不多。我国目前空气净化器市场份额可达117亿元，看似巨大但仍有不确定性。中国网购商品行情系统的数据显示，2013年雾霾在全国爆发，空气净化器市场呈现爆发式增长，销售量、销售额同比增幅高达130.6%和162.7%；2014年增幅回落，销售量、销售额的增幅分别为35.7%和31.7%。不过，因为市场前期高速扩张中乱象频生——价格虚高、虚假宣传、净化效果难以求证等都在消耗消费者的购买热情，2015年空气净化器销售量和销售额同比增长均不足0.9%，市场规模戏剧性的与2014年持平。诚然，2015年的 117亿的市场份额颇是诱人，但是其中78.2%的份额被以夏普、飞利浦、松下、大金为首的国外品牌抢去，剩下21.8%的被国内品牌分割，其中TOP5的公司是美的、TCL、净美仕、亚都和纽贝尔viii，共占据16.2%总市场份额。2016年3月，国内空气净化器新国标出台，虽然是非强制性标准，但洁净空气量(CARD)、累计净化量(CCM)、噪音、能效等级等各方面性能标准给予消费者参引，考验着厂商。因此在以性能、品牌及价格导向为主、鲜有考虑耗材成本的空气净化器市场中，豹米霾霸的前景如何仍不明朗。目前，分别于2014年和2015年上市的小蛋空气净化器、小米空气净化器（第二代）尚无产品线更新的消息。</content></doc>
<doc>     <docid>268<docid>     <title>优化旅游产业链布局，海南航空斥资 65 亿美元收购希尔顿 25% 股份</title>     <link>http://36kr.com/p/5055123.html?ktm_source=feed</link>     <content>本周一（10 月 24 日），中国航空及物流行业巨头海南航空集团（HNA Group）宣布从希尔顿全球控股有限公司最大股东黑石集团手上收购该公司 25% 的股份，总价达到 65 亿美元。此消息一出，希尔顿的股价立即上涨了 6.3%，截止周一收盘股价为每股 24.35 美元。目前，希尔顿集团的市值大约为 260 亿美元。有消息人士透露，海南航空集团是以每股 26.25 美元的价格向黑石集团提出的收购要约，这个价格比希尔顿集团在上周五的收盘价高出了近 14.6%。不过，这笔收购交易大约需要在明年一季度才能全部完成，届时黑石集团所持的希尔顿集团股份将会减少到 21%。现阶段，海南航空集团正在优化旅游产业链布局，并投资全球优质资产，旗下海航酒店集团已经是国内规模首屈一指的民营高端酒店集团，汇聚了高端酒店、商务酒店、度假酒店、产权酒店等多元化资产，酒店数量超过 2000 家，客房数量达到了 30 多万间。海航酒店集团董事长白海波曾对媒体表示：海航的飞机飞到哪，海航的酒店就要开到哪。而作为全球最大的酒店管理集团之一，希尔顿集团业务覆盖全球 104 个国家和地区，旗下拥有超过 4700 家星级酒店、度假村和酒店，客房数量有 77 万多间。不仅如此，希尔顿集团下属还包括多个酒店品牌，比如康莱德酒店及度假村（Conrad Hotels &amp; Resorts）、Curio、以及希尔顿逸林酒店（Double Tree）。事实上，如今中国已经成为全球最大的出境旅游市场，很多国内企业也在不断尝试“出海”。今年四月，安邦保险集团曾尝试收购希尔顿集团竞争对手喜达屋酒店&amp;度假村，但最终放弃，由万豪酒店集团在竞标中胜出，成功收购了喜达屋集团。本次海航集团收购交易的顾问是知名投行 JPMorgan。</content></doc>
<doc>     <docid>269<docid>     <title>可穿戴设备的数据怎么用？Cardiogram 通过机器学习实现对用户健康的监测</title>     <link>http://36kr.com/p/5055074.html?ktm_source=feed</link>     <content>医疗健康永远逃不出“合理饮食、积极运动、保证充足睡眠”三大口号，然后预防措施常常落进“说起来容易做起来难”的套路。健康数据源的井喷帮机器学习敲开了预防医学的大门，说到底，是数据催生了这个新时代，人们在医疗健康方面最大的惊喜莫过于手腕上的健康数据源和管理健康的 app。像 Apple Watch、Fitbit、Jawbone 等可穿戴设备可以生成用户健康的新型信息流。可穿戴设备能帮消费者更好地为自己的健康负责，目前这类设备用户量达到百万级，就是说，数据是有了，只待各种软件进行可行的观察分析，发现那些看似微不足道的重要身体变化。我们的生活不是由单一数据决定的。人在赶火车、运动或者为某个消息而兴奋时，每分钟的心脏工作状况都会发生变化。坐在心脏病专家的办公室，人们接受的临床检测只是捕捉到了某个特定状态。除此之外，医生难免做出有偏见的判断，这取决于测试者是放松状态还是焦虑状态。相比一年一次的体检，这些设备对用户的身体数据的监测是持续的。然而，可穿戴设备目前仍有重大局限，测量的数据通常达不到临床水平。既然可穿戴设备无法保证不遗漏重要时刻的数据，这种不够精确的设备还有什么意义？有没有办法使一个不太精确的设备在大量的额外的测量辅助下发挥作用？这就是现代机器学习的切入点。半监督学习属于机器学习的范畴，主要考虑利用少量的标注样本和大量的未标注样本进行训练和分类，结合了大而杂的和小而精的数据集，这就使简单的监测拥有完整测试的效果。例如在研究团队探索的项目中，可以得到某些患者准确测试的数据，从而对接可穿戴设备获得的资源。我们来看一个关于半监督机器学习的简单例子，首先，前提是我们有一些患者的高级临床测试数据，作为 “标记数据”，图 a 中的圆圈与三角形的分界告诉我们某人是否健康。然而，单凭几个数据无法在两组之间划定边界。通过添加额外的未标记数据（例如来自可穿戴设备的数据），我们可以更好地看到数据的自然聚类，可以更准确地预测边界，了解个人的健康状况。这就意味着，更多可穿戴设备的监测能加强结果的可预测性。对于健康初创公司 Cardiogram，这种半监督机器学习不再是一个发展目标，他们已经将其运用在产品中。Cardiogram 与 UC San Francisco 的世界级心脏病专家合作，获得了全面测量的数据集，再结合他们的 app 从 Apple Watch 获取数据来实现对用户健康的监测。目前，Cardiogram 已经从 10 多万名 Apple Watch 用户中收集了超过 100 亿个传感器测量值，C 统计量高于90%（C统计量可以估计用 logistic 回归模型进行诊断或预测的准确度）。一些早期的证据表明该方法的可行性。最近，用户使用了 Cardiogram 的 “救护车”功能，得到及时的救治，保住了生命。随着 Cardiogram 用户量的增长，他们将做出更准确的更有用的预测。上周四，Cardiogram 获得 200 万美元种子投资，由&nbsp;Andreessen Horowitz&nbsp;领投。他们的目标是使用算法准确地预测和识别心室颤动，并通过可穿戴设备和智能手机的数据来完善关于健康心脏的了解。Cardiogram 团队的 Brandon Ballinger 和 Johnson Hsie 拥有在计算机科学和生物领域专业知识，能够将 Google 和斯坦福的机器学习与医疗健康经验以及与 UCSF 的合作结合起来运用到工作中。计算机与生物学相结合的新世界充满未知，跨学科队员可以说是团队的高级配置了。</content></doc>
<doc>     <docid>270<docid>     <title>Hunting+：习惯了追逐与被追逐，我们想让寒冬中的资本对接变得“暖”一点</title>     <link>http://36kr.com/p/5055113.html?ktm_source=feed</link>     <content>创业从来不是件容易或轻松的事儿。你已打磨好一个足够打动人的故事，万事俱备只欠融资；你甚至拥有不少投资人人脉资源，却只差最合适、最懂你的那一人。你没少见过凌晨3点的北京，没少挨骂隐忍图强，没少旁观人情冷暖河东河西，半头白发，抑或一身病痛，都是成长的代价。而投资人们也面临同样困扰，除了精准的获取项目之外，还需要全方位考核初创团队处于何种领域、公司处于什么阶段、创始人背景等多个因素。如果互联网的存在是将原本低效的人力转换为工具，而提高效率围绕创业起航的早期融资对接，却依然处于过于依赖人力的低效阶段。为此，Hunting+应运而生，通过与一系列顶级投资机构合作，输送未曝光优质项目给相关领域投资人，只做精品限量版的活动。【什么是Hunting+活动】Hunting+是&nbsp;36氪创投助手&nbsp;与一系列知名大型投资机构的深度合作，第一期是与36氪、新片场、91金融等优质项目天使投资方——九合创投合作，为投资人与创业者提供精品项目私密深度对接，专场一站式“专属定制”服务，将传统的 Demo Day 进行全面升级，无缝链接36氪创投助手的特色功能。Hunting+为每场活动加入了一些专属定制环节，参与其中的创业者，均为各大顶级投资机构提供的未被曝光过的项目；其次将会以大数据筛选在全国范围“配对”，从被投公司所处阶段、领域、创始人性格、未来发展计划、偏好等多个维度匹配，确保创业者与垂直领域投资人匹配；最终，在“专属定制”专场上，创业公司和投资人将会得到1对1闭门深度交流的机会。36氪创投助手APP，将为首期Hunting+合作方——九合投资旗下的10大精品项目（其中2/3的项目从未曝光过）建立专题页面，优质项目直达顶级投资机构和优质投资人，仅对垂直领域的投资人优先挑选。让更多早期创业项目可以找到钱，找到人，找到梦想实现的可能性；同时，也增大了投资人投到未来可能成为独角兽公司的概率。【为什么要做Hunting+】我们为何要来做这件吃力而不讨好的事情？一直以来，36氪致力于成为创业者可以依赖的创业服务平台，在整个创业生态链中，投资人与创业者“低效对接，不精准匹配”，一直都是难点与痛点，让双方承受的压力可能会在速度和规模上放大到不可思议的高度。而我们不仅要让创业者轻松站在风口上，在赛道上获得融资，更让投资人一键触达优质项目。星空创联创始人对我们说：在我们创业早期，除了花费时间精力参加线下路演场，我们甚至花了一大笔钱购买所谓的被泄露投资人邮箱。而融资最关键的是速度，现在的创业者急需的就是快速的对接行业投资人，才能把握风向，越走越远。【我要报名】首期Hunting+活动，36氪创投助手携手九合创投！史上绝无仅有限量版精品私密对接会，我们确保，投资人与创业者将是最大的受益方，报名连接在此：dwz.cn/4pySpn&nbsp;，36氪创投助手的用户可优先获得入场权。</content></doc>
<doc>     <docid>271<docid>     <title>开发汽车深度感应解决方案，以色列公司 Oryx Vision 获1700万美元 A 轮融资</title>     <link>http://36kr.com/p/5055103.html?ktm_source=feed</link>     <content>想要准确、安全地行驶，自动驾驶汽车就需要提供非常详细的周边环境 3D 视野。而现有的深度传感器解决方案主要依赖 LiDAR（激光雷达传感器），该类设备旋转的同时发射短脉冲激光，反射回来后，光电传感器进行接收，然后逐像素生成周围环境的3D地图。然而，LiDAR 传感器的机械原理十分复杂，价格昂贵（几千到几万美元不等），而且在人眼安全问题方面还存在严重缺陷。以色列深度传感器解决方案开发商 Oryx Vision 的深度感知系统发送完全安全的长波红外光谱脉冲，无需机械旋转，一次即可照亮整个场景，并利用微型天线接收反射回来的光波，解决上述所有痛点。近日， Oryx Vision 获得1700万美元 A 轮融资，由 Bessemer Venture Partners （BVP）领投，Maniv Mobility 和 Trucks VC 参投。BVP 的 Adam Fisher 将加入 Oryx Vision 公司董事会。公司将利用本轮融资加速扩张，目前正在招聘物理学专家、电气工程师以及计算机专家。Oryx Vision 成立于2009年，总部位于以色列佩克提克瓦市。Oryx 将理论物理中光的独特性质转化为一种实用技术，在未来最具前景的市场中解决重大问题，其深度传感器将成为许多自动驾驶汽车的关键部件，或将首次以大众市场的价格，满足自动驾驶汽车深度感应的高要求。其深度传感器解决方案使用纳米天线接收无线电波等光波，这些纳米天线是 Oryx 的核心创新技术，直径只有5/1000毫米，安置在薄膜硅中，及大地削减了汽车深度传感器解决方案的成本。Oryx 已经对相关技术进行论证，目前正与世界顶级汽车制造商以及一级供应商就应用事宜进行洽谈。150米的测量范围加之百万像素分辨率，使得 Oryx 的深度传感器性能要优于 LiDAR 传感器50倍。因为能够提供更清晰的视图，自动驾驶汽车的计算机对算法的要求更为简单，做出正确驾驶判断所需要的处理能耗也更低。和 LiDAR 不同，Oryx 的深度传感器系统能够在阳光直射和恶劣天气下运行，设计中没有运动部件，因此可靠性和耐用性更强。</content></doc>
<doc>     <docid>272<docid>     <title>阿里研究院崔瀚文：当谈论生态型组织，应当关注什么</title>     <link>http://36kr.com/p/5055116.html?ktm_source=feed</link>     <content>文 | 阿里研究院 崔瀚文尽管自达尔文以降，就不断有人将自然选择观念引入了社会系统的分析中并受到争议。但是，近年来随着互联网普及，商业组织纷纷向“生态化”转型，成为了全球新的组织发展趋势。一方面，苹果、谷歌、阿里巴巴、亚马逊等科技型企业，率先的基于互联网，实现了组织向更加有机的生态化方向发展，创造了大量的新行业、新就业形态，同时也在一些领域解构了工业化时代常见的企业、产业形态；另一方面，海尔、万科为代表的一些优秀的传统理性系统组织，率先敏锐的捕捉到趋势，基于自身行业的客观特点开展大刀阔斧的组织转型改革，以求通过新的组织机制激活更大的生产力，避免中长期组织的系统性风险。这些生态型商业组织所取得的快速发展，进一步印证了在互联网“湿呼呼”的环境中，工业时代“干巴巴”的组织法则已不再“好用”。而面向“湿化”的组织战略，其重要性也将超越业务战略、产品战略，成为大型组织的新重心。一方面，有机化程度高的“生态型组织”能够更好的适应环境，能够通过不断从外界吸收能量，修复原有组织的僵化和损坏，改善组织结构与流程，维持整体扩张成长，从而能够较为有效的遏制工业时代的组织癌症——“大企业病”。另一方面，生态型组织持续的动态变化、吐故纳新，能够培育和激发出多种多样的“物种”，有的发展为“种群”，这些新型组织天生与生态型组织一起“繁殖和进化”，能够形成共生共荣的发展态势。此外，基于大型生态内丰富的服务和资源，每个“个体”的自由度和活动空间得到了极大提升，创建、加入、退出组织的壁垒也大幅降低，这大大的激发了个体的生命活力，“人”开始成为“自由连接体”。1、“复杂度”衡量一个生态型组织的第一步，应当要观察其“复杂度”。一般而言，生态系统越复杂、物种越丰富，调节机制就越多、越有利于生态和种群的稳定。相反，复杂度不够的商业组织，外界若能够很轻易的列举其构成情况，那么即使其自我冠名为“生态”，客观上也要观察其“生态之价值”有几何。因为，在简单结构中，其内在价值传递链极有可能因为少数物种的突然损失、结构板结而断裂；也极有可能在面对诸如经济危机、技术跃升、政策调整、竞争加剧等外部问题时迅速奔溃。其次，要观察其“复杂度”究竟是是“自身发展需要的复杂”，还是“故弄玄虚的复杂”。目前，已可看到一些“大跃进”的负面的问题，例如，现实中一些商业组织“热情”的跟进“生态”概念，借此展开大规模融资，一边规划搭建多个“平台”，一边希望吸引大量“资金流”，“计划”通过导入“流量”从而建立新“生态”。但是，需要注意的是，该类组织虽短期内看来布局日趋复杂，但根本问题仍然不能回避：如果不能及时的实现其生态参与者方的成长、盈利之目标，或其核心业务的自我造血功能不强，就很有可能在外部“断流、减流”后迅速面临腹背受敌、多头作战的全面不利局面，从而快速萎缩，给投资者和参与者带来巨大损失。在房地产领域已有很多类似例子，因少数人的好大喜功而建立起的“空城”、“鬼城”、“空楼”、“空壳产业园”等等，数不胜数；在互联网角度而言，客观地讲，中国已拥有了数量庞大的工程师人才，现在搭建起一个互联网平台，难度并不高。但如何让平台有持续的人气、流量，如何让其持续的繁荣，却关注度不够。事实上，由于客观商业世界主体繁多，往往无法具体清晰的界定某一个“复杂/简单”的边界何在。短期内，可量化的“复杂”评判标准也肯定不会出现。而这，也正是企业家、投资家、观察家的核心知识能力的优势体现。2、“种群结构”“生态环境”、“生态结构”等新型指标，“种群结构”、“种群密度”以及“生物”动态变化情况，将为衡量生态型企业的整体健康度的新指标。当生态型组织变的高度复杂，传统的观察企业的指标就不能满足新的需要，此时更需要引入生态维度的视角。例如，生态学中的“逻辑斯谛增长”认为，自然种群不可能长期地按指数增长，一般而言，会遵循“空间有限→密度上升→空间限制（食物等）→种内竞争增加→影响到出生率和死亡率→降低实际增长率→停止增长→下降”规律。种群的变化情况，有的具有周期性，有的无规律。同理，在一个复杂而庞大的商业生态型组织中，其内部的各类经营主体进行竞争、自我调节、迭代、进化、迁移、扩散、死亡可能都是正常现象。此时，如果没有从整个生态和种群规律的角度观察个体的生死，而只是瞎子摸象般的以个别案例情况，替代大生态的整体情况，则是浅薄和不科学的。新的大数据体系将为我们观察生态内在规律提供新的基础服务，虽然目前尚在探索阶段，但已有很多公司开始在这方面积极展开拓展和提供服务，这将能够为现实中很多企业的“战略选择”提供帮助。3、“流量转化率”水是生命发展的最基础要素之一。在一个自然生态中，水资源的充沛程度很大程度上决定了这个生态的发展情况。在当前的一般商业认知中，“流量”包括“资金流”、“网站访问量”、“现金流量”等含义。我认为，在互联网商业生态环境中，“三次流量转化效率及其总效率”才真正反应一个生态型商业组织真实的竞争力。在这里，三次流量的转化分别是：1）“资金量”到“访问量”的转化率2）“访问量”到“交易量”的转化率3）“交易量”到“盈利”的转化率一个商业生态的发展过程，也往往伴随着流量的经过，流量始终都是生态发展最核心的资源之一。互联网环境中，信息极大丰裕、鱼龙混杂、泥沙俱下，因此“注意力经济”开始崛起。在三个流量的转化过程中，“注意力”成为一个承上启下的第一个关键环节，具体表现就是“访问量／点击量”，而核心指标是“资金量”到“访问量”的转化率。在互联网发展的早期，大的生态版图尚未形成，大量线上流量几乎天然免费，整体市场都处洪荒时期；而每个具体的商业组织承载容量小、敏捷性强，往往能比较好的抢占到流量充沛的位置，或吸引巨大的流量，并形成惯性。这个时期获取注意力流量所需付出的资金成本代价小，相对于全球资本流量的大盘微不足道，且处在极速扩张期，更重要的是这个阶段流量的获取并未形成标准，因此，“好故事”、“好概念”的重要性更高，资本流量的转化率并未受到太大重视。随着天然流量的不断减少、参与竞争的主体的增多，此时如果再想培育一个完整生态或生存发展，光靠“讲故事、立概念”的手段已没有优势，流量的支持显得愈发重要。因此，自然而然的，“引流／买流量”成为常态。此时，资本转化的效率就自然而然的需要提上台面。营销是企业的基本职能。早期，企业通过电视、广播、报纸、杂志的方式购买广告展开营销工作以吸引流量，往往投入较大，精准不足、豪放有余，适合市场跑马圈地时期的概念普及；其后，以分众传媒为代表，广告更加精准，开始能够从1亿流量中定向出1万个精准的流量，让这1万个流量背后的消费者与广告主直接进行线上线下的互动，提升了转化率；互联网时代，基于大数据的新型引流（营销）体系，能够更好的帮助广告主和中小网站直接对接，实现面向个人的精准投放，转化率得到了进一步提升。第二个环节的转化率是面向交易的转化率。富有经验的电商企业都有这方面的经验，企业健康发展重要的不仅仅是解决如何引流的问题，而是解决面向交易的转化率的问题。转化率涉及的因素方方面面，包括企业的品牌印象、产品品质、价格、产品描述、用户口碑、页面体验等等；而好的商业生态系统中，因为流量基数大、服务工具多、交易氛围好，转化率会更高，但也因行业而异。如按传统商业的逻辑而言，第三个面向盈利的转化率本不需要讨论，因为赔本的买卖本不是企业的根本。然而，新的环境却诞生了一种现象，就是不断的通过前两种流量的引入，长时期内规避第三种转化得必要性。一般而言，在大流量的灌溉下，生态规模多少均可获得不错的成长。然而，终究是否能够转化为实际的利润，却是必须要面对、不能回避的。</content></doc>
<doc>     <docid>273<docid>     <title>售价199元的小米VR头显正式版，会是年轻人的另一款新玩具吗？</title>     <link>http://36kr.com/p/5055125.html?ktm_source=feed</link>     <content>手机厂商做VR已不是大新闻，但除了三星都还未能实际落地非VR眼镜盒类的产品。在今天小米Note2的发布会上，小米推出了一款适配小米手机的Gear VR类头显。这款头显类似三星Gear VR，适配Note 2 及此前的小米5、小米5s、小米5 Plus四款机型，由小米生态链企业摩象与小米探索实验室合作，适配Note 2 及此前的小米5等机型。相比此前的49元的小米VR眼镜玩具版，内置陀螺仪，号称16ms超低延迟，配置9轴体感手柄，售价199元。在符合Daydream Ready标准的手机问世之前，这款产品一直被业界质疑为“小米的无用功”，不在Daydream VR生态内，既无法起到吸引开发者，未来也无法将用户直接迁移到新平台中。摩象CEO 李树欣此前向36氪透露，这款产品主要面向Daydream Ready标准之前发布的旗舰手机用户，他们的手机性能以及可以支持VR体验，但又不会被纳入新生态中，未来一段时间可能也不会直接更换Daydream Ready手机，是一个被忽视的市场。进入2016年，缺少二次市场的刺激，全球VR行业发展趋缓。PC VR方面，Oculus Rift CV1和 HTC Vive的销量并不可观。移动VR方面，三星Gear VR高歌猛进因Note7 停售而遇挫；Google 推出Daydream VR标准，但目前Daydream VR &nbsp;Ready 的手机刚刚确定标准，今年很可能只有一款手机符合标准；华为、中兴虽然公布了VR头显，但并未正式发售。对小米VR来说，这应该是一个不错的时间点。不过，在VR内容稀缺的当下，如何吸引更多的VR开发者或许就是一个问题。Daydream 标准即将定型之际，开发者很可能并不会愿意为这样一款VR头显开发定制应用。官方表示，目前已经有500多全景视频，30多个VR应用，目前还有200多个开发者报名。另一个值得关注的点是，在小米Note2的主会场，小米VR头显匆匆打了一场酱油。这也很可能意味着，在小米目前的业务线中，这款产品还不会具有重要的战略意义。 目前VR市场还不成熟，全球用户依然有限，小米VR玩具版销量约为40万左右，三星Gear VR目前的销量在200万台左右，虽然增速可观，但相比于手机的体量仍然太小。而在Daydream VR手机和头显推出之前，大力推广这样一款产品并不经济。</content></doc>
<doc>     <docid>274<docid>     <title>英特尔资本领投的视觉传感器制造商 Chronocam 获1500 万美元融资</title>     <link>http://36kr.com/p/5055122.html?ktm_source=feed</link>     <content>10 月 24 日，视觉传感器制造商 Chronocam 宣布完成 1500 万美元融资，由英特尔资本领投，iBionext、Robert Bosch Venture Capital、GmbH 和 360 Capital等参投。公司计划利用本轮融资进一步推进技术研发，同时寻求合作伙伴将公司技术整合到他们的产品当中。Chronocam 创立于 2014 年，总部位于巴黎，致力于研发新型视觉传感器和系统，这些硬件被应用于机器视觉各个领域。其传感器技术的灵感来自于生物眼睛，能够高效获取并处理视觉信息。公司在法国的众多院校进行了多年的视觉研究，突破了传统的计算机视觉技术。Chronocam 认为更低能消耗、更高效的视觉处理系统对于开发无人驾驶车辆的企业应该非常具有吸引力，并且该技术可广泛应用于物联网设备、无人机以及机器人等。实质上，该技术是通过限制数据采集来发挥作用，系统会设法知道何时图片应该采集，何时不应该采集，然后就可以对传输的数据进行更快速的分析。&nbsp;&nbsp;&nbsp;&nbsp;Chronocam 联合创始人兼 CEO Luca Verre 指出：“传统的计算机视觉方法已经不太适合新一代视觉系统的需求，例如自动驾驶车辆需要更快的感知系统，以便在更广泛的环境条件下操作。物联网方面，功率预算、带宽需求以及传感器网络内集成使得现在的视觉技术不再适用和有效。”本次融资消息在英特尔投资全球峰会被公开。英特尔投资在这次大会上表示已经对 12 家技术初创企业进行了 3800 万美元的投资，其中包括 VR、AR 和物联网领域。英特尔目前正在计算机视觉领域采取一系列重大举措。上个月，英特尔宣布收购计算机视觉处理芯片制造商 Movidius，Movidius 主要以其低耗、高能的设备处理器而备受欢迎。英特尔的 RealSense 团队也在无人车、无人机和虚拟现实系统方面进行了大量的研发工作。英特尔高级副总裁 Wendell Brooks 表示：“世界正在变得越来越联网化和智能化，计算机视觉系统是推动这个趋势发展的关键因素，尤其是在无人车和物联网领域。联网机器可以快速、准确的可视化周围的环境，并根据实时数据采取相应动作，从而提高安全性。我们期待帮助 Chronocam 将下一代智能机器视觉系统推进市场。”去年 9 月份，Chronocam 曾获得 85 万美元种子轮融资，公司目前有 20 名员工，分为芯片设计和计算机视觉系统两个部分。未来，公司计划将计算机视觉技术打包成一个完整的端到端系统，并于明年起售。</content></doc>
<doc>     <docid>275<docid>     <title>将自行车健身变成在线多玩家游戏，Zwift 即将完成 2500 万美元 A 轮融资</title>     <link>http://36kr.com/p/5055097.html?ktm_source=feed</link>     <content>自行车健身能够明显改善人体心肺功能，但该项健身运动如果在户外进行受环境制约较大，室内单车则无法欣赏沿途风景，又有点无聊。初创企业 Zwift 针对这一矛盾，将室内单车变身在线虚拟竞技，赋予健身趣味与可玩性。Zwift 近日宣布将于 11 月初完成 2500 万美元 A 轮融资，未透露投资者信息，但领投方应该是伦敦的一家私募股权投资公司，参投者也来自视频游戏领域。公司计划利用该轮融资进一步推进产品研发工作，为未来业务增长奠定基础。Zwift 创立于 2014 年，总部位于加利福尼亚州，核心上是一款室内自行车健身软件，但同时结合了该公司在过去两年时间内运营的整个自行车健身社区，创建在游戏软件基础之上。Zwift 通过这种方式将健身、游戏和社交元素联系在一起。简单来说，Zwift 为用户提供一款软件，能够让用户在自己的家中或健身房等舒适区域进行自行车健身，并且能感觉是跟好朋友一起同行在最喜欢的骑行路线上。Zwift 并不是一款用户可以直接购买的硬件或设备，而是为用户提供每月 10 美元的订阅收费服务。用户可以使用自己的公路自行车，配置上测量车速以及节奏的无线传感器，与一台电脑相连。通过电脑显示器，用户就能观看到虚拟的骑行环境。与此同时，用户会得到一个数据统计的配置文件，可以自定义头像，选择队衣以及自行车品牌和型号等。Zwift 联合创始人 Jon Mayfield 指出：“Zwift 不仅仅是一款游戏，同时它还追踪了用户的活动和健身数据，包括能量输出、心率、节奏以及速率等。这些数据全部记录在一个真实的数据文件之中，并且能够上传到类似 Strava（测速应用，能够将自行车爱好者们的成绩和名将们的成绩加入到同一个排名中）这种标准服务 app 之上。”此外，Zwift 能够连接到兼容的硬件设备，来调整自行车的张力，并将虚拟环境里的路线模拟到现实体验中。例如，有些智能训练设备安装到自行车上，能够在用户上坡或下坡时智能调节自行车阻力，与虚拟环境保持一致。Zwift 目前面临的一大挑战是硬件设备无法实现同步发展，例如公司虽然朝着提供 VR 方面的体验方向发展，但是目前的头显设备仍然比较笨重，并不适合健身用途。并且，智能训练设备是 Zwift 服务的关键所在，但这些设备目前平均售价大约为 1000 美元，并且供应量有限。公司计划在 2017 年初能够与一些硬件生产商确立合作伙伴关系，来共同攻克这一短板。&nbsp;健身自行车项目 Peloton 是 Zwift 的竞争对手之一，Peloton 要求用户购买 2000 美元的智能健身脚踏车，同时课程服务为每月 39 美元，价格可以说远高于市面其他的健身脚踏车价格。去年 4 月份，Peloton 获得 3000 万美元 C 轮融资，老虎基金领投。Zwift 目前拥有 17000 多名 Twitter 粉丝、10 万名 Facebook 粉丝以及 50 万左右的 YouTube 观看次数。一个月前，扎克伯格发文表示对 Zwift 的支持，在他摔伤手臂之后，使用了 Zwift 进行康复训练。使用 Zwift 软件的还有其它许多技术高管，其中包括创业奇才 Max Levchin（PayPal、LinkedIn 以及 YouTube&nbsp;等联合创始人）、Instagram 联合创始人 Kevin Systrom 以及Uber 负责发展事务的副总裁 Ed Baker 等。在过去一年时间里，Zwift 业务稳步增长，目前用户账户数量达 17 万，并且达到了 250 万次骑行以及 4500 万英里骑行里程数据。接下来，Zwift 将推出语音交互功能，用户可以在平台上与其它人进行交谈。Zwift 的 iOS app目前也已推出测试版，预计将很快上市。</content></doc>
<doc>     <docid>276<docid>     <title>InContext获1520万美元B轮融资，继续深化VR在零售领域的应用 </title>     <link>http://36kr.com/p/5055100.html?ktm_source=feed</link>     <content>VR（虚拟现实）的出现，为过程缓慢且昂贵的传统零售带来了革新性改变，极大地减少了企业在构建、创造、测试和激活消费者店内消费体验所需的成本和时间。芝加哥虚拟现实初创公司InContext Solutions致力于借助虚拟现实技术改善传统的购物过程，提高消费者的购物体验，同时也帮助企业更多地盈利。&nbsp;&nbsp;InContext Solutions&nbsp;周一宣布完成1520万美元B轮融资，由&nbsp;Intel Capital和Beringea领投，Hyde Park Venture Partners、Plymouth Ventures等参投。截止到目前，公司已获得总融资5770万美元。公司计划利用新获资金开括新市场，增加VR产品种类，包括对头戴设备的继续研发，同时增加营销投入，提高销售。InContext Solutions由Bob Gillespie、&nbsp;Tracey Wiedmeyer和&nbsp;Rich Scamehorn联合创办于2009年，总部位于美国伊利诺斯州。InContext Solutions 借助VR技术，通过虚拟现实技术模拟零售环境，帮助零销售和制造商快速预测、测试和部署新的零售规划。该项服务可以在公司的旗舰店ShopperMX 虚拟现实平台上获得。ShopperMX是世界上首个基于云的虚拟店铺模拟和购物行为分析平台，客户可在平台上测试新的实体店创建想法，并通过购物者测试对想法进行评估和改进，然后将其推广到市场。公司主要针对购物者浏览货架商品的行为、实际购买行为和其背后的原因，为企业提供独到的深刻见解。 InContext 的目标是为客户在实施成功的实体店规划方面为其提供支持，帮助企业更好地决策。公司已经为美国众多大型零售商和制造商提供了决策支持，现有客户超过50家，其中包括 Nestle、Smucker’s、Kellogg’s、 Anheuser-Busch、 Dannon 和 Walmart。公司联合创办人兼首席技术官Tracey Wiedmeyer 表示，“我们已经涉足VR领域8年了，公司专注于为大品牌和零售商在台式设备上提供购物者消费模拟服务。公司希望继续向前发展，将台式设备上的平台和VR关联起来。”推动公司朝着VR发展的一个主要原因是近几年VR硬件的飞速发展，在过去的12到18个月里，市场上VR 头戴设备的相关产品已经从零星的几个发展到现在的30多款了。为了在VR领域带来更多创新，InContext计划按照公司之前的发展规划，不涉足硬件领域，而是继续专注于改进和完善公司的软件产品和内容服务。除了要扩展公司VR产品类别以外，InContext 还计划向其他领域扩展业务，比如食品服务、体育用品和家具等。值得一提的是，Intel Capital近日对 &nbsp;12 家公司&nbsp;提供了共计3800万美元的资金支持，InContext就是其中一家。Intel 公司软件服务部门总经理Doug Fisher表示，“Virtual reality（虚拟现实）的发展已经不再局限于游戏领域了，很多不同行业现在也都在利用VR技术寻求发展和突破。在零售和制造领域，InContext Solutions现已具备了一定的影响力，我们期望看到以Intel架构为基础的虚拟现实企业为相关领域带来更大的改变。”Intel 和 InContext Solutions上月宣布，双方已达成合作协议，共同为零售领域研发新的VR解决方案。</content></doc>
<doc>     <docid>277<docid>     <title>“易快报”拿到DCM的3000万元A轮融资，报销行业要火？</title>     <link>http://36kr.com/p/5055049.html?ktm_source=feed</link>     <content>企业报销SaaS产品“易快报”今天宣布获得3000万元A轮融资，由DCM投资。此前，他们获得过险峰华兴数百万种子天使投资，还在2015年6月获得1300万元Pre-A轮融资，投资机构为明势资本与极客帮。而本轮融资资金主要用于产品研发，以及销售团队的扩张上。易快报创始人马春荃认为，财务人员很大一部分时间的都在用于报销，尤其对于有异地分公司的企业。而报销的本质就是企业消费，传统模式的报销过程中，消费场景和报销场景之间是隔断的，报销场景和审批场景之间也是隔断的，这两个断层让报销成为了如今企业的一大痛点。而现如今企业消费的场景都可以在线上实现，所以为报销类产品打下了基础。易快报的大致流程是，员工（报销发起方）可以直接用手机录入报销，之后表格送达上级，审批通过后，进入票据提交和财务审票环节，都确认无误后，财务便可继续打款流程。这个过程中，员工还会收到打款通知，并且针对每笔报销自动生成报销单，一步打印。对于企业老板，则可以对员工整体报销支出有把控，知道谁长期以来把钱花在什么地方上。其实，企业的报销场景大多集中在出行、住、吃几个方面，所以，易快报还接入了一些供应商，例如，市内交通方面打通了滴滴，酒店方面打通了携程等OTA。这样一来，员工通过这些供应商的消费票据可以直接走线上过账。若企业已有合作供应商，则可以直接迁移到线上，而对于线上不能解决的部分，可以依旧手动线下报销。目前，企业处在传统纸质发票和电子发票双轨并行的阶段，所以贴票、验票等环节不可避免，使用报销产品更多节约的是审批流程上的时间，以及财务录入时间。至于定位，马春荃告知，易快报更多是面向中小企业，按照SaaS标准根据使用账号收费，每人每年在260元。销售推广方面，除了直、分销形式，易快报还会接入一些大的财务软件，例如用友、金蝶等。由于报销跟企业财务是分不开的，所以能否适配企业已有的财务软件也是一个难点，对此，马春荃强调，易快报的适配器是壁垒，灵活度上可以适配企业内部软件的数据结构和数据逻辑，并且是单独收费的。马春荃还透露，易快报自2015年4月份上线，起初是免费推广，今年6月份开启付费模式后，至今已经累积了5万家企业，用户超过220万。目前团队有60多人，大部分为研发，销售有10人。</content></doc>
<doc>     <docid>278<docid>     <title>粉丝经济新浪潮：谁在潮头？谁的粉丝最“壕”？</title>     <link>http://36kr.com/p/5055120.html?ktm_source=feed</link>     <content>编者按：本文内容来自粉丝网《中国粉丝报告》2016年9月第一期，36氪经授权发布。粉丝网凭借其多年来对粉丝群体的观察合作和数据积累，结合全网数据，对粉丝行为进行科学数据化深度分析，力求从数据角度解读粉丝圈的风向和最新动态。首期报告从粉丝规模及现状、粉丝热追影视榜、粉丝大事件和明星粉丝指数四个方面，对粉丝群体进行画像，对粉丝月度活动进行复盘和活跃情况进行分析，旨在为大众更清晰地展示粉丝世界的全貌。一、粉丝经济掀起新浪潮，人群规模接近5亿自2004年起，粉丝规模保持相对平稳的增速，平均每年约4000万新增粉丝，截止2016年中国粉丝规模已达4.7亿。十年前的第一波粉丝浪潮开启了从个体粉丝到群体性粉丝的转变，十年后这波浪潮带来了被动追星到主动造星的转变，粉丝对娱乐市场的参与能力和助推能力已经得到体现。从人群分析来看，当前的中国粉丝群体中，女性粉丝占相对多数，比例接近60%。年龄分布来看，粉丝群体仍然是个年轻化的群体，30岁以下占68%，40岁以下占88%，有半数以上的粉丝已经具备相当强的付费能力。就从事职业而言，教育和学生群体占比超半数，其次是服务类行业和互联网行业的从业人员。二、影视热播群雄逐鹿，粉丝号召力左右榜单对当下影视剧集的关注和热议，是粉丝群体的重要活动，而采用粉丝号召力强的艺人往往可以直接助推电视剧热度，同时由于电视剧播出周期较长，对于增强艺人的关注度和粉丝黏性也有很大帮助。粉丝网从粉丝热追电视剧、电影和网剧三类作品对粉丝热追影视剧进行展示和分析。同时，对三类影视作品均设热追总榜及粉丝关注、粉丝热议和粉丝推荐单榜，全面展示粉丝的喜好程度。9月粉丝热追电视剧总榜TOP10本次报告中，粉丝网第一次分享了“粉丝指数”的数据模型，用以对影视剧集和明星粉丝这些抽象复杂的概念进行有效的量化评价。对于影视剧集，粉丝网综合全网数据，从其粉丝关注度、粉丝热议度、粉丝推荐度三个维度进行综合计算，得出最终的粉丝指数，以此对于影视剧集进行全面有效的量化评价。粉丝关注度表示粉丝关注和收看该剧的情况，粉丝热议度代表粉丝就该剧展开的话题比较多，粉丝推荐度代表粉丝的好评和口碑。9月粉丝热追电视剧排名第一名《微微一笑很倾城》，杨洋和郑爽的组合给这部剧带来极高的粉丝关注度和热议度，两位主演也因该剧掀起新的一波粉丝热潮。第二名《诛仙青云志》，李易峰和赵丽颖的组合给该剧带来极高的原始粉丝关注，也因人设、商业植入、原著剧情等因素推起一波波话题，该剧相比同期上线的《幻城》等剧在画面效果等方面受到粉丝的肯定。第三名《麻雀》是李易峰的全新尝试，与仍然在档的《诛仙青云志》形成多元化风格的呈现，在粉丝群体中好评度极高。9月粉丝热追电视剧单项榜单9月份粉丝热议电视剧第一名是《老九门》，该剧集合了赵丽颖、陈伟霆、张艺兴等极具粉丝号召力的卡司阵容，加之南派三叔的IP粉和盗墓小说粉，以及该剧在剧情悬念、演员演技及造型突破、商业植入手法上的设定给该剧制造了一波波话题。9月份粉丝关注电视剧第一名是《幻城》，该剧虽然开播后在特效设计和造型道具上受到一些质疑，但小说的知名度和关注度和郭敬明及一众主演的粉丝影响力还是助推该剧成为当月粉丝关注度最高的热门电视剧。《小别离》可谓9月份粉丝关注剧的黑马，以其成熟的卡司阵容、醇熟的演技和对社会性话题的精准阐释掀起一波好评，带来强烈的观众共鸣，该剧成为9月粉丝好评度最高的热播剧。三、强势IP逐鹿大荧幕，电影榜单实力相当9月粉丝热追电影总榜TOP10从热追电影榜来看，与电视剧的热度电影方面受电影IP、制作水准、前期营销的影响较大，而受演员阵容的影响相对较小。9月粉丝热追电影排名第一名《星际迷航3》，第二名《大话西游3》，第三名《反贪风暴2》，均是有良好口碑的电影IP的后续之作。以上榜电影之中的典型分析来看：《星际迷航3：超越星辰》欧美强势IP，收获9月票房之首：《星际迷航3》于9月2日在中国上映，立刻引发粉丝热追，不仅收获了极高的票房，更是获得了87.75的粉丝推荐度，粉丝推荐度排名单榜第二。《大话西游3》本土超级IP，票房与争议共存：《大话西游3》于9月中旬上映，这部充满情怀的作品有着较高的粉丝潜力值，但最终粉丝推荐度并不高，上映后一直伴随较多的争议，不过这并未影响其9月票房收益，全月票房累计排名第二。《七月与安生》小清新黑马胜出，粉丝推荐度最佳：9月中旬上映的《七月与安生》，票房总收入排名全月第四。影片获得了一众粉丝的高度认可，粉丝推荐度高达89.35，位列本月粉丝热推电影单榜第一名。《从你的全世界路过》粉丝路线彰显，战力爆表：月末上映的新片《从你的全世界路过》战力爆表，当月上映2天，票房排名9月第五。影片在大热IP和当红主演的发酵下，收获了超高的粉丝潜力值和推荐度，其95.77的粉丝潜力值毫无疑问的成为当月最具粉丝潜力的电影。《爵迹》郭敬明强势IP，粉丝号召力跻身十强：9月最后一天，郭敬明执导的国内首部真人CG电影《爵迹》正式上映。《爵迹》拥有郭敬明导演自带书迷和一众当红主演的忠实粉丝，其市场运作手法和粉丝调动能力也是独树一帜，粉丝潜力值高达87.26。凭借上映当日的票房成绩，《爵迹》跻身9月粉丝热追电影榜前十。&nbsp;四、网剧市场大爆发，自带造星属性出新星：9月粉丝热追网剧总榜TOP10网络剧市场迎来井喷繁荣之势，自去年《太子妃升职记》等剧热播后，今年在剧集拍摄质量、类型多元化、演员水准上均迎来飞跃。9月粉丝热追网剧排名第一名《亲爱的，公主病》，第二名《识汝不识丁》，第三名《半妖倾城》。网剧的主演一般采用有一定演艺经验的生面孔，热播网剧的主角往往随着剧集的人设而走红。9月粉丝热追网剧No.1 《亲爱的，公主病》，粉丝指数：86.27《亲爱的，公主病》作为搜狐主推剧集，登上9月粉丝热追网剧榜之首。该剧自8月份开播以来获得大量推广资源，持续保持着极高的粉丝关注度和粉丝热议度，该月粉丝指数86.27，排名粉丝热追网剧总榜第一。9月粉丝热追网剧No.2 《识汝不识丁》，粉丝指数：81.50 《识汝不识丁》是90后新生代导演陈鹏的新作，优酷热推剧集，作为《类似爱情》系列网络大电影的总导演和出品人，他的团队对于网络剧的题材选择、营销节奏和角色的选择已经驾轻就熟，对粉丝的欣赏口味有比较精准的把握。剧集上线前后表现十分稳定，在粉丝关注度、热议度和推荐度三个维度中，全部位列前三。&nbsp;9月粉丝热追网剧No.3 《半妖倾城》，粉丝指数：63.62《半妖倾城》于6月正式开播，粉丝热议度居高不下，9月其粉丝热议度排名单榜第一，虽然关注度和推荐度成绩与其他大热的新剧有一定差距，但整体的粉丝指数仍达到63.62，跻身9月粉丝热追网剧总榜TOP3。&nbsp;9月粉丝热追网剧单榜TOP3网剧制作门槛较低，但相对电视剧的播出竞争更加激烈，因此在题材选择、角色设定、营销方式上更重视粉丝喜好，9月来看，《亲爱的，公主病》、《识汝不识丁》、《画江湖之不良人》综合表现较好。一般来说网剧的宣发期更早，前期通过同名小说、悬念、海报、花絮等积累粉丝关注，上线后主创通过多种渠道和粉丝保持互动。粉丝好感度（推荐度）最高的TOP3除上述提到的《识汝不识丁》之外，还有青春题材的《一起同过窗》，腾讯视频热播剧，粉丝推荐度87.00，粉丝推荐单榜第一名，以清新自然的风格和精良的制作取得不错的口碑，但演员选择并非强势吸粉的类型，整体粉丝指数不占优势；《画江湖之不良人》，爱奇艺热推剧，同名的国产武侠动画连续剧同期热播，IP多元化精品网剧代表作，粉丝推荐度82.90分。&nbsp;五、粉丝应援渐成气候，类型多样声势浩大9月粉丝大事件《中国粉丝报告》第一期重点关注了九月份阿里星球和粉丝网分别举办的两场粉丝活动，两场活动分别成为“最强粉丝应援战”和 “全国公益总动员”。报告中除了这两个第三方组织的竞争型项目外，9月娱乐粉丝的大事件被授予了王俊凯的生日应援。王俊凯的忠实粉丝们提早策划并执行了覆盖美国时代广场、日本银座地铁站、韩国首尔观光车身、国内直升机盘旋、地铁车厢、迪士尼贵宾厅包场、游轮终身VIP等方式的全球范围的“海陆空”联动生日应援，声势浩大创下饭圈应援新纪录。&nbsp;综述：粉丝能量四维分析，9月明星粉丝指数盘点明星粉丝指数从规模、活跃度、影响力和壕值四个维度上进行量化，对明星粉丝群体进行排名。规模代表粉丝群体覆盖的人群数量，活跃度代表粉丝群体的参与感和主动性，影响力代表粉丝人群的传播能力，壕值代表粉丝群体的直接消费能力。根据粉丝网的长期行业观察，这几个维度对于影视作品选角、品牌寻找代言人、主办方为明星举行落地演出等安排具有不同侧面的参考价值。粉丝网数据显示，9月粉丝规模最大的是鹿晗粉丝、TFBOYS粉丝和李易峰粉丝，这个排名短期波动不大；粉丝影响力最大的是王俊凯粉丝和TFBOYS粉丝，受艺人生日等节庆影响较大；粉丝活跃度最高的为“凡瑶CP”（李易峰/赵丽颖）粉丝和“大神微微CP”（杨洋/郑爽）粉丝，受同期影视作品影响较大；粉丝壕值最高为王俊凯粉丝、杨洋粉丝和李易峰粉丝，体现在对作品、行程和活动的消费支持度上。综合来看，9月明星粉丝指数排名榜首的是李易峰粉丝。李易峰在9月由于《诛仙青云志》、和《麻雀》的热播，让粉丝持续处于极高的热力状态，不管是粉丝活跃度、粉丝壕值和粉丝规模上，均在前十榜中位列前三，粉丝指数排名第一。排名第二的赵丽颖粉丝，同样热力惊人。随着《胭脂》、《青云志》和《老九门》三剧的同时热映，粉丝们则以所有明星最高的粉丝活跃度来支持偶像，本月赵丽颖粉丝指数排名第二。杨洋的粉丝指数排名本月第三。前有《微微一笑很倾城》领跑热播，再有《从你的全世界路过》实力上映，后有《三生三世十里桃花》蓄势待发，再加上杨洋的生日会，9月里杨洋粉丝的热度也是居高不下，粉丝壕值位列第二，当月粉丝指数总排名第三。鹿晗庞大的粉丝团在本月再次表现了强大的战斗力。如今多栖发展的鹿晗，在各方面的表现都持续圈粉。9月，前有电影《盗墓笔记》的热度未减，中有《我去上学啦第二季》综艺热播，后有《择天记》里为逆天改命的陈长生紧紧追随，粉丝规模持续扩大，本月粉丝规模排名第一，整体粉丝指数位列第四。9月特别值得点评的粉丝包括：9月影响力第一是乔任梁粉丝。对乔任梁的粉丝来说，9月是个异常悲伤的月份。偶像猝然离世，一时间影响整个娱乐圈，粉丝们发起各种活动怀念Kimi。他灿烂的笑容、招牌式的小虎牙、满满的青春和活力、骨子里的性情不羁、俏皮中不是小顽劣，等等，这些都深深印刻在粉丝们的心里。乔任梁的离世以一种极端残酷的方式体现了粉丝的影响力，在短时间内聚集了大众的关注度。而今斯人已逝，惟愿Kimi在天堂感受到粉丝的追思。TFBOYS粉丝实力卓然，粉丝的影响力依然冠绝前十，王俊凯个人的粉丝影响力和粉丝壕值也全部跻身前三，粉丝们对三小只的爱真是可昭日月了。如今，TFBOYS触电荧屏出演了大热电视剧，粉丝规模和影响力进一步扩大，全部跻身前三名。队长王俊凯在9月也迎来了自己的17岁生日，粉丝为其献上了一场声势浩大的庆生应援，粉丝影响力排名第三，而粉丝壕值则是位列第一。热力值增速超群粉丝，安吉丽娜·朱莉&amp;布拉德·皮特粉丝。9月明星大事件不少，相守十二年的“史密斯夫妇”突然宣布离婚，让不少粉丝错愕不止，热点话题引来二人粉丝的热议，粉丝四维均有大幅增长，整体增速位列第一。</content></doc>
<doc>     <docid>279<docid>     <title>为政府项目提供融资的同时，大拇哥还研发了支持业务的区块链 </title>     <link>http://36kr.com/p/5055106.html?ktm_source=feed</link>     <content>“虽然地方债问题曾经被热议，但是相对个人和企业类债权来说，政府融资平台的资产仍然更为优质，市场的体量也更大。”大拇哥财富的CEO孔令文说。大拇哥是一个通过地方政府的融资平台，为政府的基建、旅游、文化、城区改造等项目提供融资支持的互联网金融公司。孔令文认为，这类业务的主要风险还是来源于宏观经济导致的地方政府现金流紧张。因此大拇哥在从事业务的时候会首先考量当地经济的发展水平和财政收入情况，避免在一些经济下行地区开展业务，目前国家对西南地区的经济发展有政策扶植，平台上项目也主要来自这一地区。大拇哥也会对借款平台本身的资产负债情况和现金流情况进行考察，同时要求项目有明确的还款来源，或者是地方财政支持，或者是项目本身会产生现金流，可以充分保证还款能力。从还款意愿来看，大拇哥主要做当地政府常委会集体决策且有会议纪要的项目，这样不会因为个别领导的工作变动影响回款。“政府用款的需求是多样的，融资渠道也是多样的，通过发债和银行、信托等金融机构融资仍然是主要渠道，”孔令文说，“我们为政府提供金额、期限都更灵活的贷款，可以作为一个补充的融资渠道，应付项目日常开支或临时过桥的资金需求。”目前大拇哥的资金全部来自线上，在民生银行进行托管，为了增加对投资人和政府双方的透明度，采用了项目独立账户制度，政府可以监督每一笔投资入账的情况，并且平台会每日将资金结算给借款方。大拇哥还与北京航空航天大学合作，开发了应用于互联网金融业务的区块链技术。该技术基于北航研发的底层区块链，在性能上进行了优化，并针对金融业务进行了应用层的定制，可以实现从信息存证到资产发行的各个业务流程。目前大拇哥已经开始与原有系统并行使用该区块链系统。“我们研发这样一套系统，当然不会仅限于自己使用，而是希望在行业内进行推广。”孔令文说。大拇哥产品2015年2月上线，目前总成交金额超过6亿，主要服务县市级政府，以项目授信的形式进行，政府需要用款时可在授信额度以内向平台发起借款，平台单比融资金额平均200万，期限在1年以内。大拇哥也在与保险公司沟通合作，准备开发引入了信用保险的房贷和车贷产品。大拇哥董事长胡振飞是社科院金融学博士,曾先后在建设银行、 长江证券、中国人寿 (PICC Life)、保监会工作，具有15 年金融、投资的经验。 CEO孔令文是哈工大计算机硕士，曾供职某央企，完成多项国家级工程和科研项目。大拇哥曾获北青集团控股的北青龙腾投资管理(北京)有限公司、中国华贸投资有限公司等投资。我是36 氪专注报道互联网金融和教育行业的作者Justin，欢迎大家与我联系，切磋讨论。我的微信是 &nbsp;：196215239</content></doc>
<doc>     <docid>280<docid>     <title>致歉</title>     <link>http://36kr.com/p/5055118.html?ktm_source=feed</link>     <content>10月22日晚，36氪转载一篇题为《我是新闻传媒专业毕业生，这么多报纸停刊了，我该去哪儿找工作呢？》的自媒体文章，文中涉及新京报的描述，部分与事实不符。一经发现，36氪对文章进行了删除处理，该文虽非36氪原创，但确系运营编辑审核疏漏导致误转，特此向新京报社以及36氪、新京报的读者致歉。新京报一直是36氪敬重的一家媒体，自创刊以来，就以新闻专业主义和深度思考闻名行业，成为媒体行业标杆。在互联网时代，新京报也一直积极探索、发展新型业务并卓有成就。我们期待36氪能够和新京报一起努力，不断超越、不断完善，在新时代做出更有价值的新闻，共同为媒体行业的未来做出更大贡献。36氪2016年10月25日</content></doc>
<doc>     <docid>281<docid>     <title>苹果iOS10.1正式上线，不过这次的惊喜只给了购买iPhone7Plus的土豪们</title>     <link>http://36kr.com/p/5055115.html?ktm_source=feed</link>     <content>iOS10.1正式版在今天凌晨终于上线，但对于不是iPhone7 Plus的用户来说，其实这次更新并不是很值得期待。毕竟苹果已经将三年来最大规模的一次软件升级献给了1个月前发布的iOS10。但果粉们还是应该为手机升级这一最新版本，因为它能够修补一些在iOS10中出现的安全漏洞。正如预期的那样，7Plus的用户们可以举起双臂欢呼一下了。因为iOS10.1将这次升级的重点放在了摄像功能上——为iPhone7 Plus的拍照工具新增一款“肖像模式”，而这一模式最大的特点便是支持背景虚化（景深）。肖像模式：Portrait在“肖像模式”中，双摄像头的配置至关重要。与传统的单摄像头相比，智能手机配置双摄像头的最大优势便是“为照片虚化背景”，这是传统单反相机才具备的功能。只有通过双摄像头对景深的运用，用户在拍摄人像时才可以在保持面部清晰的同时，营造出模糊的背景效果。而背景虚化后的照片效果也十分出色——既能够强调拍摄主题，也可以提高画面的整体表现能力。所以说，iPhone7Plus改进后的新镜头、光圈（采用了一个1200万像素广角与1200万像素长焦摄像头，光圈分别达到了F1.8、F2.8，均支持光学防抖），再加上“肖像”模式，到底会出现什么样的神奇效果呢？我们来看一下Techcrunch摄影记者Yashad Kulkarni在iPhone 7Plus“肖像模式”下拍出的高清美图（看看是否是你期待的样子）：鲜艳欲滴的柿子椒，色彩饱和度很赞瓶瓶罐罐万圣节快乐，不过这张虚化的效果一般般杂粮食品无论怎样，以上都说明这个新模式只会在iPhone7 Plus上出现（因为只有7Plus有双镜头）。你有没有感受到来自差别对待的深深恶意？目前，苹果正在基于该硬件开发深度映射功能，可以对图像进行扫描，从而将图像主题从中识别出来并进行相关处理。譬如公司正在利用双镜头来检测9种不同的深度映射级别，然后为图片背景层添加一些设定好的虚化效果。但是，你现在还不能为“肖像模式”进行自定义设置，因此不能保证该模式下的照片最后能达到令你满意的效果。但是在多数情况下，“肖像模式”的表现还是相当不错的。譬如有时候，iPhone7 Plus用户分不清什么才是照片中的关键，什么又是次要的（可以被虚化的），因此，对照片虚化后的效果可能并不满意。这时候，你完全可以马上删除“肖像模式”，重新让照片回到原始状态。因为苹果新系统的拍照软件会默认留存两份照片（一张原始，一张处理过的）。当然，苹果仍然在努力完善这一功能，iPhone7Plus的用户们或许将在未来几个月收获更多的惊喜。也就是说，虽然Ios10.1已经脱离了测试版的范畴，但“肖像模式”仍然应该被当做是一个beta功能。换言之，就是不要抱有太高的期望。如果从整个智能手机市场的配置来看，苹果其实并不是启用双摄像头的第一家企业。今年早些时候，华为推出了双摄像头手机P9；而HTC则声称自己早在两年前就推出了搭载双镜头的手机HTC One M8。不过很多业内专家认为，双摄像头可能对于部分摄影爱好者或发烧友有一定的价值，但对于很多只求快速拍照的普通用户而言，价值其实极为有限。此外，双摄像头的最终成像效果或许并没有各大手机厂商描述的那么出色，比如一些虚化效果就非常不自然，像是用“傻瓜”P图软件生成的蹩脚相片。而且这个功能对用户的吸引力是否持久也有待考验——很多用户可能对类似功能玩上一两次后就没什么兴趣了。不管怎样，这次iOS10.1的上线似乎有些低调，我们完全可以把它当做是明天苹果财报与27号Mac新品发布会的“赛前预热”。“深度体验”就交给那些购买了iPhone7 Plus的土豪们吧。</content></doc>
<doc>     <docid>282<docid>     <title>乐视网前三季净利4.93亿元，同比增长30.75%</title>     <link>http://36kr.com/p/5055095.html?ktm_source=feed</link>     <content>乐视网日前发布了2016年第三季度财报。财报显示，乐视网第三季度营收约67.32亿元，同比增长71.99%；归属于上市公司股东的净利润约2.09亿元，同比增长70.55%。今年前三季度，乐视网营收约167.95亿元，较去年同期增长100.54%；报告期内公司实现净利润4.93亿元，较去年同期增长30.75%，基本每股收益0.26元。其收入增长的主要原因，乐视网表示在于超级电视热销、会员付费及广告业务快速增长。乐视第三财报主要数据此前乐视方面曾表示过手机和电视的热销是为乐视网吸引大量用户的一个主要渠道，乐视也在财报中披露了超级电视的销售数据。截至2016年9月30日，乐视超级电视上市三年累计销售达到约850万台。乐视电视2013年夏天正式上市，到2014年底共销售150万台，2015年则销售了300万台，2016年的目标销量为600万台，前三季度共销售了400万台。其他数据方面，前三季度，乐视营业成本为 14.2亿元，较去年同比增加 93.27%，主要系版权摊销、终端产品增长所致。销售费用为 16.3亿元，较去年同比增加 160.07%，主要是随着乐视业务发展，人员费用增加以及智能终端销售业务发展使得物流及售后费用及推广费用增加所致。截至2016年9月30日，乐视应收账款账面价值为50.6亿元，占资产总额的比重为17.53%，占比较去年有所下降。乐视负债余额为1,89.7亿元，其中，短期借款余额为29.8亿元，长期借款余额为22.4万元，一年内到期的非流动负债为0.6元亿元，资产负债率65.72%（合并报表口径），负债率较去年有所下降，但是乐视负债总额和资产负债率仍然相对较高，增加了资金管理难度，同时也增加了利息费用的支出，从而带来一定的偿债风险。另外随着视频行业内容仗打得越来越激烈，乐视的版权采购成本也水涨船高。在财报中，乐视的无形资产为61.3亿元，占总资产的比重为21.26%，主要是采购的版权增加所致。在前三季度，乐视陆续推出了《亲爱的翻译官》、《好先生》、《半妖倾城》、《遇见王沥川》、《蒙面歌王》等节目，全网的日均 UV约7040万，峰值达到1亿；日均VV约3.9亿，峰值达到4.8亿。在乐视“内容＋终端”整个模式中比较让人诟病的一点是硬件产品的负毛利，例如即每卖一台电视机，乐视都要赔上几百块。但这个问题随着乐视电视规模经济的提升正在逐渐改善。乐视超级电视的毛利率2015年上半年是负44%，2016年上半年是负28.7％，高华证券预计，2017年起，乐视超级电视业务将扭亏为盈实现净利，并推动乐视网的净利率从2016年的4%升高到2018年的7％。除此之外，乐视方面还宣称，目前乐视云视频平台目前全球范内已拥有680个CDN节点、20Tbps储备带宽，在全球有十余万企业客户，覆盖数十亿用户。</content></doc>
<doc>     <docid>283<docid>     <title>初创品牌获取用户的起点：从建立认知开始，像飞机滑行一样启动</title>     <link>http://36kr.com/p/5055069.html?ktm_source=feed</link>     <content>作者：杨嘉伟 Forrester数字营销奖获得者1.如果要回答“什么是初创品牌的核心目标”？管理大师德鲁克的箴言可做标准答案：“企业存在目的即在于“创造顾客”。为创造顾客，企业只有两种基本功能：行销与创新，其他工作都是成本”。一个品牌向用户使能，其核心目标是让用户实现从认知到购买的转化，这个路径在营销学里往往用“倒三角型”AA模型来表示。倒三角形的上方是营销所触达的目标人群，底部是实现了转化的有效用户，两者相比有一个转化率。转化率越高，则营销效率越高。AA模型2.举几个我最近遇到的几个品牌为获取用户的具体场景。场景一：在某办公楼下，一家做汽车内饰清洗的互联网初创品牌在做“获取用户”推广：用户需要扫描他们的微信服务号，填写自己的用户资料后，即可获赠一瓶价值70多元的汽车清洗剂。场景二：马路边，一家初创的提供代客泊车服务的互联网品牌，针对行人，用户扫描他们的微信服务号后，即可获赠一瓶九龙斋酸梅汤。场景三：小区停车场出口车辆拐弯减速处，用户开车出来，穿着红牛工作服的漂亮小妹会给每位开车用户派发一罐瓶身上印了增饮的红牛，用户无需扫描微信服务号。以上三个场景非常类似，但从对用户认知行为影响角度评估，场景一二和场景三间则有着很大区别。场景一：定位：汽车内饰清洗服务人群：办公楼内白领（部分吻合，但不完全精准）基准：新品牌，无认知基础；目标：获取新用户成本：每用户70多元赠品与服务有关联场景二：定位：代客泊车服务人群：行人（小概率吻合，不精准）基准：新品牌，无认知基础；目标：获取新用户成本：一瓶饮料赠品与服务无关联场景三：定位：针对疲劳人士、司机、加班等人员的提神功能饮料人群：精选过的小区中的开车人士（受众吻合目标人群）基准：消费者对红牛品牌已有认知。目标：不是为获取新用户，更多是品牌露出提醒，或强化产品体验。成本：原厂生产的一罐饮料。赠品即是产品本身。3.相比而言，场景一、二是初创品牌，在受众的精准选择、推广性价比等方面都差强人意；但更重要的差别是：场景一、二都是初创品牌，缺乏用户认知基准。场景三为成熟品牌，用户对其已有牢固的认知基础，其推广目标更多是提醒与强化体验。在认知基础脆弱的情况下，场景一、二通过“简单粗暴”的贴现机制来获取用户，这至少会带来三重隐患：1）难以形成品牌偏好。即使用户“关注”了，但对这是什么品牌，给我提供了什么有差别的价值服务或产品，几乎很难形成认知偏好。2）无法形成品牌忠诚。在无偏好的前提下，很多人单纯仅仅为获取赠品而提交信息，无法赢得用户忠诚，流失率高。3）获取用户成本倍增。第一次获取单位用户的成本沉没，不得不再次投入更大成本获取。事实上，只所以会出现这样的情况，是因为初创品牌忽略了认知-行为模型中的“品牌认知”教育部分。4.对B2C品牌而言，，一些消费心理学家提出了一个比AA用户认知-行动模型更完整的AIDA模型：他们认为消费者往往是从品牌引发注意力（Awareness）开始的，然后依次是兴趣(Interest)、刺激了欲望(Desire)，直到换发购买行动（Action）。AIDA模型AIDA模型的前三个步骤描述的都是消费者心理的认知转化，它可以帮助我们理解消费心理变化轨迹，但对指导营销行动的实际意义并不大。针对B2B品牌，由于产品复杂、购买决策链条长、客单价高，这个模型被进一步复杂为DLTBAA模型。DLTBAA模型B2C与B2B这两个用户认知-行为模型的区别在于：1．在B2B的营销中，从“发现”到“购买”，中间是“学习”与“试用”两个关键节点。这是由B2B的复杂产品属性所决定的。2．在购买之后，DLTBAA强调用户“使用”的真实体验，并认为“推荐”也是营销者要考虑的关键节点。这个方法被IBM广为推崇。但对于众多新生的具有互联网基因的初创品牌而言，DLTBAA模型并非最佳，完全可以进一步优化。5.我们认为移动互联营销时代，品牌需要新的认知-行为模型。这是因为，移动互联对用户与产品间关系的改变有着革命性的意义，它表现在因为移动+社交媒体的出现，用户第一次与产品（或品牌）可以通过“关注”按钮形成真正意义上的闭合。移动前时代的营销也可有“闭合”，基于数据库，通过广告、邮件、短信、活动等路径可以到达，但这种连接还是支离的。移动社交媒体的“关注”式连接则让“支离”的闭合变成“完整”的闭合。人与品牌的连接，基于移动互联社交平台，在“关注”式连接上，有了物理上的落脚点。因此，“关注”（或下载）这个行为变成互联网+品牌的关键营销节点。我们将互联网用户的认知-行为路线图优化为AFBS模型。如下图：AFBS模型在“关注”之前，一个关键的步骤是“认知”——对于消费者而言，通过品牌认知教育，达成了对该品牌的强烈而清晰的认知偏好；对于品牌工作者而言，则是通过设计什么样的品牌信息，转变或“扭曲用户认知”，达成用户认知偏好。6.事实上，按照品牌大师里斯的观点，如果是创新的品牌，它往往会重新定义既有的原品类，从而成为一种新品类，最佳的品牌启动方式并不是“火箭式”的爆炸式起飞，而应该像飞机启动一样，有一段滑行后，缓慢起飞。红牛的功能性饮料用4年让年销量提高了1000万，又用了5年做到了1亿，到了2012年，它的全球销量超过了20亿美元。微软用了10年的时间，让年销售额超过一亿；但从一亿到200多亿则仅仅用了15年。第一台真正意义上商用的平板电脑是1989年由一个叫 GRiD的公司制造的，过了13年，微软在2002年推出了较为流行的TabletPC。又过了8年，2010年，苹果重新定义了平板电脑iPad才开始全球大卖。而这是平板电脑被发明了21年后。结合AFBS模型，回头去看前文提到的场景一、二，我们发现，这两个初创品牌的工作者意图用火箭爆炸式启动的方式快速获取用户，但他们没有认识到——对用户认知的建立其实是一个飞机滑行启动的过程。“贴现”激励机制可以短期激励用户行动，但当这种品牌认知基础很脆弱时，即使用户获取了，流失率也将极高，从营销效率角度评估，反倒容易欲速不达。关于作者杨嘉伟，Forrester数字营销奖获得者，在行热门行家，有近20年高科技品牌营销经验。早年在亚信、chinaquest、Primeton等公司任管理职务，策划《SOA中国路线图》、《软件商竞争力成长路线图》、《CIO：失控与可控》、《微应用，大平台》等研究项目，合作著有畅销书《平台征战》，代笔《软件中国的机会》等。联系：私人微信：yangjiawei1210</content></doc>
<doc>     <docid>284<docid>     <title>在拉斯维加斯，我经历了一场智能化生活的洗礼</title>     <link>http://www.geekpark.net/topics/217084</link>     <content>作者：龟途慢慢</content></doc>
<doc>     <docid>285<docid>     <title>Quip 模式难以复制，因为中国市场缺的是 Google Docs</title>     <link>http://www.geekpark.net/topics/217080</link>     <content>作者：早优夫斯基</content></doc>
<doc>     <docid>286<docid>     <title>提醒你出门带伞这件小事，背后是价值百亿的蓝海</title>     <link>http://www.geekpark.net/topics/217083</link>     <content>作者：杨雪</content></doc>
<doc>     <docid>287<docid>     <title>细数社交巨无霸 Facebook 与美国媒体的「爱恨情仇」</title>     <link>http://www.geekpark.net/topics/217081</link>     <content>作者：黑板报值日生</content></doc>
<doc>     <docid>288<docid>     <title>OV 销量同时超越华为，苹果放出新 MacBook Pro 真机图 | 2016 年 10 月 26 日</title>     <link>http://www.geekpark.net/topics/217079</link>     <content>作者：colorvc</content></doc>
<doc>     <docid>289<docid>     <title>一个「无边框」，一个双曲面屏，小米的这两部新手机有些「炸裂」</title>     <link>http://www.geekpark.net/topics/217076</link>     <content>作者：colorvc</content></doc>
<doc>     <docid>290<docid>     <title>从 iPhone 到自动驾驶，我们所经历的智能化时代</title>     <link>http://www.geekpark.net/topics/217074</link>     <content>作者：拉风的极客</content></doc>
<doc>     <docid>291<docid>     <title>「阿拉丁」首届微信小程序创新论坛，在这里方向远比速度重要</title>     <link>http://www.geekpark.net/topics/217075</link>     <content>作者：早优夫斯基</content></doc>
<doc>     <docid>292<docid>     <title>年轻人的第一款电动牙刷：素士声波牙刷 X3 使用体验</title>     <link>http://www.geekpark.net/topics/217070</link>     <content>作者：谁是大英雄</content></doc>
<doc>     <docid>293<docid>     <title>锤子科技草威：从发布 T2 到现在，又是风雨交加的一年</title>     <link>http://www.geekpark.net/topics/217071</link>     <content>作者：黑板报值日生</content></doc>
<doc>     <docid>294<docid>     <title>[来自异次元] 炸裂半价！微软官网 Office 365 个人版双11促销，只要199！</title>     <link>http://www.iplaysoft.com/news/3256</link>     <content>临近双十一，除了淘宝，京东、苏宁、国美等商家都纷纷开始各种各样的促销了。而软件方面，微软中国官方商城同样推出了一个相当劲爆的优惠。从即日起至 2016-11-11 (双十一当天)，微软中国官方商城的 Office 365 个人版将进行特价促销！原价 399 元/年的授权现在只要 ¥199 ！只要 ¥199！妥妥的半价！…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>295<docid>     <title>[来自异次元] 向日葵远程控制软件 - 手机控制电脑 / 家里远程控制办公室电脑</title>     <link>http://www.iplaysoft.com/sunlogin.html</link>     <content>很多情况下，我们都需要用到远程控制软件，比如急事外出，在公交上用手机远程控制电脑继续工作；出差旅游远程收发电脑文件；窝在床上用手机远程开关电脑；甚至是手机远程玩电脑游戏等等。之前我们接触比较多的可能是 QQ 远程协助，但它仅限于在两台电脑之间，且两边都需要有人值守操作，并不能胜任很多场景下的远程控制需求。向日葵远程控制软件是一款做得比较专业的国产软件，可以轻松实现手机、电脑、平板之间的相互远程控制……[  马上前往围观....  ]异次元还有这些值得一看：AnyDesk 中文绿色版 - 号称速度最快最流畅的免费远程桌面连接控制工具Microsoft Remote Desktop - 微软官方免费远程桌面控制Windows的软件TeamViewer - 最好用强大的免费跨平台远程桌面控制软件 (支持电脑和手机)Teamviewer QuickSupport - 在电脑上远程连接控制手机/平板的软件异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>296<docid>     <title>[来自异次元] 天猫双 11 红包开抢！抢多少都能直接当现金用，别错过机会！</title>     <link>http://www.iplaysoft.com/news/3252</link>     <content>虽然离 2016 年双11大促的日子还有时间，不过一些双11预热会场已经上线了！而且跟往年一样，天猫已经开始每天派送双11红包了，无论抢到多少都能直接当钱用，这么好的羊毛必须得往死里薅！！而且，抢红包的活动是从2016年10月21日开始至2016年11月10，每天都可以领 3 次！对，每天都可以！！所以大…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>297<docid>     <title>[来自异次元] 我们终于知道那天所看见的花的名字了！智能植物花名识别软件 APP</title>     <link>http://www.iplaysoft.com/zhi-wu-shi-bie.html</link>     <content>我们逛街时常常会听到一些好听的音乐但不知歌名，之前推荐过 Shazam 和 SoundHound、iPhone 自带的 Siri、微信摇一摇等 APP 都能神奇地把歌名给识别出来，弥补了很多遗憾。而郊游看风景或跟女神约会时偶遇漂亮的花朵，却不知道那到底是什么花、有什么特质跟花语，也实在是件遗憾的事情！那么，有没有智能识别出花名跟植物信息的软件呢？想起来好像很科幻，不过还真有！比如微软识花、形色、Garden Answers 等都是非常有趣有创意的植物识别 APP……[  马上前往围观....  ]异次元还有这些值得一看：不可思议的欧洲之旅4K超高清风景演示视频！跨越30国家拍摄的震撼短片，每一帧都美腻了！游走彩云之南 - 云南大理/丽江/香格里拉游记+简单自助旅游行程攻略 (跨界文)Microsoft Pix - 效果超越原生的微软拍照 APP，利用 AI 技术帮你拍出好照片微软推出「上传照片测年龄性别」的神奇好玩网站，快来识别下你的脸异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>298<docid>     <title>[来自异次元] 又又又又关闭了！！360 云网盘正式宣布停止运营……</title>     <link>http://www.iplaysoft.com/news/3204</link>     <content>之前的网盘关停大潮已经让大家人心惶惶了，在继迅雷快传、金山快盘、新浪微盘、UC 网盘等网盘一窝蜂倒下之后，今天突然又出来一个劲爆的消息——360 云盘也要停止运营了！当然，停运的“借口”与之前几家公司类似，360云盘今日发布公告称：“因部分不法分子利用360云盘存储传播非法文件、侵…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>299<docid>     <title>[来自异次元] 我的世界：故事模式 - 知名沙盒游戏 RPG 剧情化新尝试</title>     <link>http://www.iplaysoft.com/p/minecraft-story-mode</link>     <content>《我的世界》是一款非常知名的自由创造的沙盒游戏，Telltale 公司联合 Mojang 制作的《我的世界：故事模式》(Minecraft: Story Mode) 现已在 iOS 及 Android 平台上架了，而 PC 版也上架了 Steam 以及 Windows 10 通用版。「2016-10-18： iOS 版限时免费中 ￥30→0 // 首章限免，后面关卡需内购」Minecraft: Story Mode 故事…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>300<docid>     <title>[来自异次元] Swift Playgrounds - 以游戏方式零基础入门学习 iOS 开发编程 (苹果官方出品)</title>     <link>http://www.iplaysoft.com/swift-playgrounds.html</link>     <content>我一直认为，「编程」就像现代的炼金术，程序员可以通过代码神奇地开发出各种实用有趣甚至让人激动无比的 APP，所以很多人都向往学习编程，然而最困难的往往是入门。苹果 iOS 是目前除 Android 之外最为流行的移动操作系统，iOS 移动开发也是如今最为热门的课程。想要学习，你可以选择报名一些天价的辅导班，或者买一堆 iOS 开发书籍自学，不过现在苹果提供了一个更轻松有趣的学习方法——Swift Playgrounds……[  马上前往围观....  ]异次元还有这些值得一看：苹果 iOS 移动应用开发新手入门指南教程中文版 (官方最佳编程入门学习资料)Android Studio - 谷歌官方安卓 APP 应用开发工具软件 IDE 与模拟器下载微软 Visual Studio 2015 官方中文正式版完整ISO镜像下载 - 免费社区版/专业版/企业版w3cschool 编程开发教程全套打包下载 - 适合入门学习的基础教程 PDF 资源异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>301<docid>     <title>[来自异次元] Ubuntu 16.10 Yakkety Yak 系统官方高清自带内置壁纸打包下载</title>     <link>http://www.iplaysoft.com/ubuntu-1610-wallpapers.html</link>     <content>每次 Ubuntu 系统发布新版本系统时都会推出一系列配套全新的高清桌面壁纸，而且它的壁纸素质都还算不错，而这次的 Ubuntu 16.10 Yakkety Yak 也不例外。这些系统内置的壁纸照片是由 Ubuntu Artwork Team 艺术团队从世界各地艺术家和摄影师征集的 200 多张作品中精心挑选出来的 12 张作为系统内置。这些壁纸当中包含灯火点点的小镇、壮观的山谷、秋天的林间小路、古典吉他等，颇具艺术美感，喜欢的朋友可以下载回去收藏……[  马上前往围观....  ]异次元还有这些值得一看：1200 多张来自微软 Windows7 官方主题的高清桌面壁纸精选大合集下载让桌面帅到炸裂！上千张精选好看 PS4 游戏主题高清壁纸收集下载 (多图杀流量)黄油相机 - 更完美支持中文的照片加字应用，让照片充满高逼格小清新文艺范泼辣修图 - 专业强大的在线网页版图片照片后期处理美化工具 (桌面/手机跨平台应用)异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>302<docid>     <title>[来自异次元] Ubuntu 16.10 中文桌面版/服务器正式版ISO镜像下载 - 华丽易入门的 Linux 操作系统</title>     <link>http://www.iplaysoft.com/ubuntu.html</link>     <content>一说到 Linux，就不得不提目前最红火的 Ubuntu 发行版了！它拥有绚丽的界面，甚至跟以时尚为卖点的 macOS 相比也有过之而无不及，相信当你试过这款操作系统之后，就会对 Linux 刻板枯燥的印象产生翻天覆地的改变！在 Ubuntu 的 Linux 世界里，已经不再只是简陋的界面+命令行，而是一款华丽时尚且无比实用的操作系统了。对于大多数没有接触过 Linux 而又想尝鲜或学习一下的话，那么 Ubuntu 绝对是你的不二之选。那么，它究竟有什么魅力让那么多非技术爱好者也为之疯狂？我们一起来看看吧……[  马上前往围观....  ]异次元还有这些值得一看：中国版 Ubuntu Kylin 16.10 优麒麟操作系统中文版ISO镜像下载 (官方中国定制版)CentOS 7.1 中文正式版下载 - 最流行的免费开源企业级 Linux 服务器操作系统Tiny Core Linux - 体积最小的精简 Linux 操作系统发行版之一 (仅10多MB)深度 Deepin 15 正式版 ISO 镜像下载 - 精美易用适合国人学习的国产 Linux 发行版操作系统异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>303<docid>     <title>[来自异次元] 中国版 Ubuntu Kylin 16.10 优麒麟操作系统中文版ISO镜像下载 (官方中国定制版)</title>     <link>http://www.iplaysoft.com/ubuntukylin.html</link>     <content>知名的 Linux 操作系统发行版 Ubuntu 发布了中国定制版的操作系统 —— UbuntuKylin (优麒麟操作系统)。这是 Canonical 公司与我国工信部软件与集成电路促进中心、国防科技大学组建的CCN开源创新联合实验室开发的。Ubuntu Kylin 在 Ubuntu 原版的基础上进行了大量的本地化工作 (如内置天气、农历日历、音乐搜索等) 而来的衍生版，也是 Ubuntu 社区官方认可的操作系统，CCN是完全按照开源的模式来打造的这款产品。日后 Ubuntu 麒麟将会加入更多的中国特色功能，如中文输入法、地图、集成WPS、网银支付等应用……[  马上前往围观....  ]异次元还有这些值得一看：Ubuntu 16.10 中文桌面版/服务器正式版ISO镜像下载 - 华丽易入门的 Linux 操作系统CentOS 7.1 中文正式版下载 - 最流行的免费开源企业级 Linux 服务器操作系统Tiny Core Linux - 体积最小的精简 Linux 操作系统发行版之一 (仅10多MB)深度 Deepin 15 正式版 ISO 镜像下载 - 精美易用适合国人学习的国产 Linux 发行版操作系统异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>304<docid>     <title>[限时免费正版] 超越善恶 (Beyond Good & Evil) - 超经典的动作冒险游戏</title>     <link>http://www.iplaysoft.com/free/beyond-good-and-evil</link>     <content>育碧为了庆祝公司成立 30 周年，最近开始每个月均限时免费送出一款正版游戏，其中大多数都是比较经典的作品，比如细胞分裂、波斯王子、雷曼：起源以及飙酷车神等等。而 10 月送出的将是经典游戏——超越善恶 (Beyond Good &amp; Evil) ，该游戏于 2003 年发售后便广受好评，现在已被誉为一代经典！…… [  马上前往围观....&nbsp;&nbsp;|&nbsp;&nbsp;更多限时免费  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>305<docid>     <title>[来自异次元] Cryptomator - 专为网盘文件加密而生！开源免费的云同步网盘加密工具</title>     <link>http://www.iplaysoft.com/cryptomator.html</link>     <content>互联网从来没有绝对的安全，只要文件放在网上，它们都有被泄露的风险。我们刚推荐了 Encrypto 这款「简单」的文件加密软件，可以很轻松地为文件/夹加密码，很适合轻量需求的用户。然而，如果你每天办公都要用 Dropbox、百度网盘、OneDrive、Google Drive 等云存储网盘来同步文件，那么 Encrypto 这种每次都要手工加密解密的工具就不太合适了。Cryptomator 是一款开源、免费、专门为保护网盘文件而设计的加密软件，可以全自动地帮你加密整个网盘以防资料被盗……[  马上前往围观....  ]异次元还有这些值得一看：Encrypto - 优雅地给文件加个密！精致的 PC / Mac 免费文件夹加密工具软件VeraCrypt - 最佳免费开源跨平台的文件加密工具 (支持U盘加密/硬盘分区加密)Cloudfogger 完美配合网盘同步的文件(夹)加密软件利器！让云端数据更安全不怕泄漏隐私GiliSoft File Lock Pro 中文版 - 强大的文件夹磁盘加密/隐藏/只读防删除保护软件异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>306<docid>     <title>[限时免费正版] 地下城守护者 - 经典塔防类战略游戏，来做一回大魔王！</title>     <link>http://www.iplaysoft.com/free/dungeon-keeper</link>     <content>EA 公司的 Origin 游戏平台会不定期提供一些「限时免费」的经典正版游戏供大家下载，比如之前的 Nox 救世传说、极品飞车 17、主题医院、红色警戒等等。而这次限免的，则是由「牛蛙」(Bullfrog)工作室出品的一款引爆当年游戏界的佳作——《地下城守护者》(Dungeon Keeper) ！牛蛙是一个充满着无限创意…… [  马上前往围观....&nbsp;&nbsp;|&nbsp;&nbsp;更多限时免费  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>307<docid>     <title>[来自异次元] Encrypto - 优雅地给文件加个密！精致的 PC / Mac 免费文件夹加密工具软件</title>     <link>http://www.iplaysoft.com/encrypto.html</link>     <content>数据和文件的安全在如今互联网上显得越来越重要了，无论个人、公司总会有一些重要敏感隐私的机密信息文件需要用网盘同步、U盘或邮件等传输方式共享，这使得文件很容易在某个环节被泄露。所以给重要文件加密码还是很有必要的！然而，很多人其实只需要最简单最基础的加密与解密功能即能满足需求。网上的文件加密工具实在太多，功能上也五花百门，而且大多靠谱点的都得付费 (比如这个)。做得简单、安全又足够精致的加密应用反而并不多见，直到我遇到了 Encrypto……[  马上前往围观....  ]异次元还有这些值得一看：Cryptomator - 专为网盘文件加密而生！开源免费的云同步网盘加密工具VeraCrypt - 最佳免费开源跨平台的文件加密工具 (支持U盘加密/硬盘分区加密)GiliSoft File Lock Pro 中文版 - 强大的文件夹磁盘加密/隐藏/只读防删除保护软件GiliSoft USB Encryption 官方中文版 - 专业实用的移动硬盘/U盘加密保护工具软件异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>308<docid>     <title>[来自异次元] Microsoft Pix - 效果超越原生的微软拍照 APP，利用 AI 技术帮你拍出好照片</title>     <link>http://www.iplaysoft.com/microsoft-pix.html</link>     <content>放假大家都出去浪，应该都会拍很多照片吧，但如果你是个拍照苦手，老被人家说拍得不够好，那么今天这款来自微软研究院的一款智能拍照 APP 就值得你一试了。Microsoft Pix 是微软出品的一款可以帮你瞬间提升拍照水平的神奇 iOS 相机应用软件。在你按下拍照快门键的一瞬间，软件会利用人工智能技术分析场景和识别人脸，并自动对照片进行复杂的优化和调整来获得最佳成像效果，让普通用户无需做任何额外设置即能拍摄出高素质的照片……[  马上前往围观....  ]异次元还有这些值得一看：轻松抠图专业版 - 不用学习变身PS高手！手机合成图P图利器ACDSee Pro (iOS) - 增强相机 / 修图后期 / 制作拼贴画黄油相机 - 更完美支持中文的照片加字应用，让照片充满高逼格小清新文艺范泼辣修图 - 专业强大的在线网页版图片照片后期处理美化工具 (桌面/手机跨平台应用)异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>309<docid>     <title>[限时免费正版] AcePlayer 万能格式视频播放器，支持局域网播放 (iOS)</title>     <link>http://www.iplaysoft.com/free/aceplayer</link>     <content>AcePlayer 是一款 iOS 平台上的万能格式影音播放器，支持 iPhone、iPad 以及 iPod Touch。用户可以通过 iTunes 或者 WiFi 无线传输视频、电影文件到移动设备里面进行播放，也可以通过 AcePlayer 内置的网络播放功能直接从 FTP /  Samba / UPnP 等 NAS 或服务器中播放局域网的视频，或者下载文件。而且软件还内置图片…… [  马上前往围观....&nbsp;&nbsp;|&nbsp;&nbsp;更多限时免费  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>310<docid>     <title>[来自异次元] 幕布 - 树形层级结构的笔记软件 (一键制作思维导图 / Outline 大纲总结工具)</title>     <link>http://www.iplaysoft.com/mubu.html</link>     <content>可能很多人在做一件大项目时可能都有这样一种体会：我们花了很多时间去记笔记、写总结，但零散的笔记到头来反而让思绪更凌乱，事情似乎越做越复杂。很多高效人士在用笔记应用时，他们都擅长用「层级缩进」的方式来记录，整理出一个树形的结构化内容，其实他们掌握的是一种思维方式。但事实上，很难让每个人靠自己来形成这样的思维。「幕布」是一款效仿 Workflowy 而来的 Outline (大纲) 形式的笔记软件，它将「思维概要整理」的方式标准化，弥补了传统笔记对整理和记录结构化内容的不足……[  马上前往围观....  ]异次元还有这些值得一看：MindNode 中文版 - 简单优雅易上手的思维导图制作软件 / 脑图制图 APP 应用XMind 7 中文版 - 免费好用的跨平台开源思维导图制作编辑软件iThoughts / iThoughtsX - iOS 和 Mac 上出色的思维导图制作编辑工具软件！Simplenote - 简约极致、轻量高效的云同步纯文本笔记软件 (支持 Markdown 写作)异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>311<docid>     <title>[来自异次元] 简单制作 macOS Sierra 正式版U盘USB启动安装盘方法教程 (全新安装 Mac 系统)</title>     <link>http://www.iplaysoft.com/macos-usb-install-drive.html</link>     <content>随着苹果 macOS Sierra 正式版发布，很多使用 Mac 电脑的同学都已升级到最新版系统了。但如果你对系统有洁癖或原本系统已凌乱不堪，那么可能还是希望能格式化「全新安装 macOS Sierra」的。不过由于苹果官方只提供了 macOS Sierra 的升级程序，而没提供完整的镜像，想要全新安装的话，只能自己制作一个 macOS Sierra 的U盘启动盘/安装盘了。今天异次元就给大家提供一个简单的制作教程，这样以后给 Mac 重装系统、在没网络的情况下给多台机器装机都方便许多……[  马上前往围观....  ]异次元还有这些值得一看：简单制作 OS X Yosemite 10.10 正式版U盘USB启动安装盘方法教程 (全新安装 Mac 系统)苹果 macOS Sierra 正式版操作系统安装程序官方原版 / DMG 镜像网盘下载苹果最新 Mac OS X El Capitan 正式版系统 dmg 镜像下载 / 升级安装程序简单几步制作 Windows 10 正式版U盘可启动安装盘图文教程 (全新安装Win10)异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>312<docid>     <title>[来自异次元] AG Drive 反重力赛车 - 酷炫科幻的未来赛车竞速游戏</title>     <link>http://www.iplaysoft.com/p/ag-drive</link>     <content>AG Drive (反重力赛车) 是一款以未来为题材的科幻赛车竞速类游戏，在游戏中，玩家需要驾驶类似飞船的反重力装置在轨道上与电脑进行竞赛。与狂野飙车、极品飞车全然不同的是，在「AG Drive」中，我们驾驶的是来自未来的超速反重力赛车，在未来的城市上空奔驰。里面可以看到许多酷炫的未来建筑。…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>313<docid>     <title>[来自异次元] 轻松抠图专业版 - 不用学习变身PS高手！手机合成图P图利器</title>     <link>http://www.iplaysoft.com/p/qing-song-kou-tu</link>     <content>我们常在网上见到一些很有趣的“PS合成图”，比如把某人 P 到另一个背景图中，看起来很神奇。其实，除了花时间学习 PS 的本领之外，咱们利用「轻松抠图」这种傻瓜式的手机 APP 也能做到了！「轻松抠图」是一款非常简单易用方便的抠图P图神器！你只需花费几十秒即可把人或物品从原本的照片里…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>314<docid>     <title>[来自异次元] ReNamer - 超级强大灵活的文件批量重命名工具，彻底告别手工改名的烦恼</title>     <link>http://www.iplaysoft.com/renamer.html</link>     <content>日常工作我们经常会遇到很多文件需要批量重命名，然而 Windows 本身自带的批量重命名功能实在非常有限，只会在文件名后面机械式地加 (1)、(2)、(3) 这样，很蠢很没用。如果你需要制定一些规则来给文件批量重命名的话，那么就需要一款更加强大好用的重命名软件了。ReNamer 是一款相当专业强大的批量文件改名工具软件，可以帮你轻松将文件夹里所有的文件一次全部改名成你想要的样子，规则非常灵活强大……[  马上前往围观....  ]异次元还有这些值得一看：ES 文件浏览器 - 强大好用的安卓手机文件管理器 (支持局域网/网盘文件管理与传输)WindowTabs - 给所有程序软件都加上高效好用的多标签页功能 (效率增强插件工具)Clover - 让你的Windows资源管理器拥有像谷歌浏览器一样好用的多标签页！三款免费实用的本地文件夹同步/备份软件推荐 (SyncToy/FreeFileSync/Compare Advance)异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>315<docid>     <title>[来自异次元] 苹果 macOS Sierra 正式版操作系统安装程序官方原版 / DMG 镜像网盘下载</title>     <link>http://www.iplaysoft.com/macos-sierra.html</link>     <content>苹果在发布了 iOS 10 Public Beta 公测版的同时，也终于提供最新的 macOS Sierra 10.12 公测版操作系统下载了！所有 Mac 电脑用户现在都可以马上升级体验最新的系统。这次 macOS Sierra 新增了很多实用的新功能，譬如整合 Siri 智能语音助手、照片回忆 / 脸部识别、AppleWatch 自动解锁、iCloud Drive、云端优化存储，以及最让人期待的跨设备「通用剪贴板」等功能！基本上所有主流 Mac 机型的用户都可以升级到这个最新的苹果操作系统……[  马上前往围观....  ]异次元还有这些值得一看：简单制作 macOS Sierra 正式版U盘USB启动安装盘方法教程 (全新安装 Mac 系统)苹果最新 Mac OS X El Capitan 正式版系统 dmg 镜像下载 / 升级安装程序简单制作 OS X Yosemite 10.10 正式版U盘USB启动安装盘方法教程 (全新安装 Mac 系统)苹果 Mac OS X 10.9 Mavericks 系统官方正式版免费下载与升级 (dmg镜像+U盘安装说明)异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>316<docid>     <title>[来自异次元] PDF Expert - 强大流畅的 PDF 阅读器与批注编辑应用 APP！(涂鸦/填表/签名)</title>     <link>http://www.iplaysoft.com/pdf-expert.html</link>     <content>PDF 虽然是很常见的办公文档格式，但各种电子书、资料不仅有时会有着非常复杂的排版、诸多的表格、嵌套的公式等，而且还有很多动辄几百 MB 的全彩高清扫描版 PDF 大文件。对于 iPhone 或 iPad 来说，想要流畅地阅读所有的 PDF 文件，比拼的不仅仅是硬件配置，还有各种软件算法和技术。虽然在 iOS 上 PDF 的 APP 应用简直是海量式的存在，但能真正做到高速、流畅打开大型文件的并不多，更别说额外还有对 PDF 进行批注、编辑、管理等需求了……[  马上前往围观....  ]异次元还有这些值得一看：Foxit Reader 福昕阅读器软件中文版下载 (好用快速免费，可制作创建PDF文档)经验分享：PDF 文件编辑修改与格式转换的技巧PDF Shaper 汉化绿色版多功能PDF工具集合 (格式转换Word/导出图片/加密解密)ExtractPDF.com - 在线免费批量提取导出 PDF 文档中的图片与文字的网站异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>317<docid>     <title>[来自异次元] Myscript Nebo - 好用到哭的手写笔记软件！你只管写画，它帮你识别转换成文字</title>     <link>http://www.iplaysoft.com/myscript-nebo.html</link>     <content>我始终认为，手写笔记与涂鸦才是最直接高效的记录方式。由于手写非常自由，无需理会排版换行，无论在学习课堂还是工作开会等场景，效率和直观性上都秒杀传统的打字输入方式。加上如今 Apple Pencil、Surface Pen 等触控笔的出现，使得在 iPad Pro、Surface 上面有着极佳的书写体验。然而，像印象笔记、OneNote、Notability、Word 等软件虽然支持手写，但却有一个很大的痛点没解决，那就是无法快速轻松地「将手写笔记转换成可搜索可编辑的文字版笔记」……[  马上前往围观....  ]异次元还有这些值得一看：XMind 7 中文版 - 免费好用的跨平台开源思维导图制作编辑软件MindNode 中文版 - 简单优雅易上手的思维导图制作软件 / 脑图制图 APP 应用iThoughts / iThoughtsX - iOS 和 Mac 上出色的思维导图制作编辑工具软件！印象笔记·扫描宝 (Scannable) - 快速免费高效的文档手机扫描软件应用异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>318<docid>     <title>[来自异次元] iPhone 7 蓝色泡泡壁纸 - 自带默认高清壁纸下载</title>     <link>http://www.iplaysoft.com/p/iphone7-wallpaper</link>     <content>苹果刚刚发布了 iPhone 7 手机，而在发布会上我们可以看到，今年 iPhone 7 自带的默认壁纸可能是苹果史上最“简单”的了。iPhone 7 的壁纸只是在一张纯黑的背景下，放上几个不同形状的蓝色泡泡，虽然看不出这到底是个什么意思，但如果你对这组壁纸有兴趣的话，咱们还是提供了打包供你下载的。这…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>319<docid>     <title>[来自异次元] Blek 手指画线 - 被埋没了的精品简约清新风格创意益智解谜游戏</title>     <link>http://www.iplaysoft.com/blek.html</link>     <content>好久没在异次元留下点东西，于是觉得应该写些什么，不如就来一篇游戏评测换换风格吧？本篇将介绍近期在 iOS 平台推出的一款清新创意的益智解谜游戏—— Blek (手指画线) 。或许是因为只推出了 iPad 版，又或许是定价稍高，更或许是玩法概念“非主流”，Blek 的推出似乎没激起一片水花，它的诞生伴只带起网络上只言片语的媒体敷衍的评语，然后迅速沉寂了。不过，Blek 的游戏创意以及带给玩家的思考或放松，并不输任何“大作”。试玩其所带给笔者的震撼，不亚于 Eufloria 或是 Zen Bound 等……[  马上前往围观....  ]异次元还有这些值得一看：hocus. - 又一款创意「视觉错位」解谜益智小游戏未上锁的房间 3 (The Room 3) - 含1、2历代全集下载，不可错过的高智商解谜游戏神作！Hack Run / Hack Time / Hack Net - 模拟黑客破解入侵解密的“高智商”解谜游戏！口袋妖怪 Pokemon GO - 精灵宝可梦手机版游戏 (超有趣的 AR 增强现实玩法)异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>320<docid>     <title>[来自异次元] 苹果发布 iPhone 7 以及 AirPods 无线耳机 - 中国首发，5388 元开始预售</title>     <link>http://www.iplaysoft.com/iphone7.html</link>     <content>在凌晨的发布会上，Apple 苹果正式推出了新一代的 iPhone 7 以及 Apple Watch 系列2、AirPods 无线耳机等新款数码产品。iPhone 7 将起价 5388 元，中国首发！将于9月9日正式在 Apple 中国官网上开始预售。是的，这次发布会的内容大多都被剧透也都被猜对了，大家可以尽情的吐槽，但 iPhone 7 和全新的 AirPods 无线耳机依然具诱惑力，相信最终大多数人还是会乖乖掏出 Money 的。那么，还是早点抢预售吧……[  马上前往围观....  ]异次元还有这些值得一看：苹果 iPad mini 2 (Retina视网膜) 国行已经正式在官网发售！伙伴们开抢吧！苹果发布最新 iPhone 6S / 6s Plus 手机、iPad Pro 以及新款 Apple TViTunes 最新正式版下载 - 完美支持 iOS7 同步，iPhone/iPad 必备管理工具苹果 iOS 7 内置全套高清壁纸与全部新铃声提取打包下载 (PNG+MP3格式适用于任何手机)异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>321<docid>     <title>[来自异次元] 熊猫免费杀毒软件 2016 官方中文版 - Panda Free Antivirus (云端防毒/轻量/快速)</title>     <link>http://www.iplaysoft.com/panda-free-antivirus.html</link>     <content>最近帮妹子装电脑后一直想找个免费好用的杀毒软件，但是对 360 之类的实在不喜欢，经常各种弹窗提示也很烦人，所以转而寻找其他靠谱的免费杀毒软件。熊猫免费杀毒软件 2016 (Panda Free Antivirus) 是一款使用云端扫描技术的防毒杀毒软件，传统的杀毒软件必须通过本地的病毒特征库来查毒，而熊猫则是采用云端技术，将病毒检测的工作交由云端来智能处理，从而大大增强扫描病毒的准确率以及防毒能力，同时也能节省本地的资源……[  马上前往围观....  ]异次元还有这些值得一看：微软官方免费杀毒软件中文版 Microsoft Security Essentials (MSE) 4.4 正式版更新下载Kaspersky Virus Removal Tool 2015 - 官方免费绿色版卡巴斯基杀毒软件/病毒清除工具VirusTotal Uploader - 谷歌出品 Google 云端免费病毒扫描软件工具卡巴斯基安全软件/反病毒软件 2014 中文正式版下载！最好用可靠的正版杀毒软件异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>322<docid>     <title>[来自异次元] 不服跑个分？Geekbench 4 电脑手机跑分软件 - 硬件配置性能对比 / 基准测试工具</title>     <link>http://www.iplaysoft.com/geekbench.html</link>     <content>随着手机、电脑的硬件不断更新换代，五花八门的配置不仅让用户看花了眼，而且对设备的性能也根本没有一个概念，花了钱也感觉糊里糊涂，完全不知道硬件的配置和速度到底怎么样。虽然跑分高并不代表电脑/手机就一定好用 (硬件使用体验好坏是一个综合因素)，但是跑分依然是最直观衡量一台电脑和手机性能的重要参考指标。当你并不熟悉各种硬件配置和参数的时候，Geekbench 这款流行的跑分软件还是能帮助你测试并挑选出速度更快性能更好的机器的……[  马上前往围观....  ]异次元还有这些值得一看：AIDA64 中文绿色版 - 专业全面的电脑PC软硬件信息检测查看工具，现已推出 Android 版Speccy 中文绿色版 - 小巧的电脑硬件配置详细信息检测查看工具 (硬件真伪辨别)现在起，看懂你电脑的性能！硬件测试软件大搜罗 - 单项性能与稳定性测试篇现在起，全面了解你电脑的性能！硬件测试软件大搜罗 - 综合性能篇异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>323<docid>     <title>[来自异次元] ACDSee Pro (iOS) - 增强相机 / 修图后期 / 制作拼贴画</title>     <link>http://www.iplaysoft.com/p/acdsee-pro-ios</link>     <content>ACDSee 曾经是 Windows 平台上最经典最流行的看图软件 / 照片管理器以及后期处理工具，也是全球最大的图片管理解决方案提供商之一。随着大家更多地在手机上拍照和管理照片之后，ACDSee Pro 也发布了 iOS 手机版本，同时也将拓展到相机增强、修图、摄影后期处理、制作拼贴画等等功能。「ACDSee Pro 限…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>324<docid>     <title>[来自异次元] 生命线 LifeLine 5 部全集中文版下载 - 帮主角活下去！扣人心弦的文字通讯冒险生存游戏</title>     <link>http://www.iplaysoft.com/lifeline.html</link>     <content>在如今游戏做得越来越炫丽的今天，很多游戏都以画面作为卖点了。而今天推荐的则是一个反行其道但却非常独特有意思的「文字冒险」科幻/魔幻/推理游戏系列——生命线！目前已推出四部作品。生命线 (LifeLine) 是一部纯文字通讯形式的冒险生存类游戏系列，但这并不妨碍它成为一款佳作！它曾获得苹果多次推荐，在设计上颇具创意。生命线1(初代)讲述了主角泰勒的飞船在一外星球坠毁，它的通讯设备巧合地与你联系上了，希望你能远程协助他解决各种难题，让他能在恶劣的外星环境中存活下来；生命线2代则是帮助魔法少女阿瑞卡拯救弟弟并复仇等，如今已经推出了5部作品……[  马上前往围观....  ]异次元还有这些值得一看：口袋妖怪 Pokemon GO - 精灵宝可梦手机版游戏 (超有趣的 AR 增强现实玩法)未上锁的房间 3 (The Room 3) - 含1、2历代全集下载，不可错过的高智商解谜游戏神作！Minecraft 我的世界中文版 - 自己当创世之神！超级经典的休闲沙盒游戏神作Mari0 马里奥传送门版游戏下载！两款经典游戏精粹结合重制的全新欢乐玩法，NB死了！异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>325<docid>     <title>[来自异次元] WiFi Commander - 专业 3D 图形化无线网络信号扫描分析器软件 (Win10 UWP)</title>     <link>http://www.iplaysoft.com/wifi-commander.html</link>     <content>我们之前曾介绍过《WiFi 无线上网速度慢怎么办？几招解决无线路由器网速慢的教程》，其中就需要用到一些 WiFi 信号分析软件来对家里的无线网络进行调教。除了上面文章里提到的 WiFi 分析仪、Acrylic WiFi、WirelessMon 等软件之外，其实还有一些很不错的选择，比如 Windows 10 平台上的 WiFi Commander: 3D Analyze &#38; Monitor。它是一款可以对周围 Wi-Fi 覆盖进行扫描分析的软件，而且很酷很专业……[  马上前往围观....  ]异次元还有这些值得一看：Advanced IP Scanner 中文版 - WIFI 防蹭网软件 / 扫描连接无线路由器的电脑手机WiFi 无线上网速度慢怎么办？几招解决无线路由器断网/丢包/不稳定/网速慢的办法教程Wireless Network Watcher 中文版 - 防蹭网监视工具，看看到底谁连上了你的WIFI无线路由器cFosSpeed - 网络速度优化加速工具软件典范，下载上网流畅不再卡！(支持WiFi/3G等)异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>326<docid>     <title>[来自异次元] 开太多网页变卡变慢？OneTab 一键收纳标签页，瞬间恢复谷歌浏览器速度！</title>     <link>http://www.iplaysoft.com/onetab.html</link>     <content>可能很多人像我一样有个坏习惯，就是一旦打开浏览器开始上网，总会打开几十个网页 (标签页) 留着不想关：没看完的、打算迟点再看的、提醒自己别忘事的，总之就一大堆。虽然现在谷歌浏览器和 Firefox 同时打开大量网页已基本不会崩溃，但加载几十个标签页后的浏览器瞬间就变成一个疯狂吃内存的怪兽了，CPU 使用率也会居高不下，一天下来整个系统可能都会被拖慢，效率很打折扣！加上大量标签挤在一起后，标题看不到了，想要辨认和找到想要的网页也很难……[  马上前往围观....  ]异次元还有这些值得一看：超实用一键破解网页不能复制/右键菜单限制的 Bookmarklet 收藏夹书签小工具Pin 剪贴板增强扩展工具神器 - 让 iOS/Mac 复制的文字变得魔法般强大Raindrop.io - 优雅精致的跨平台云端书签 / 网络同步收藏夹 / 文章稍后阅读器WGestures - 优秀实用的全局鼠标手势工具软件，高手必备效率神器！异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>327<docid>     <title>[来自异次元] Parallels Desktop 12 中文版下载 - Mac 系统最强虚拟机！(支持Win10/macOS Sierra)</title>     <link>http://www.iplaysoft.com/parallels-desktop.html</link>     <content>Parallels Desktop 被称为 Mac 上最强大的虚拟机软件。可以在 OS X 下同时模拟运行 Win、Linux、Chrome OS、Android 等多款操作系统及软件而不必重启电脑，并能在不同系统间随意切换。最新版的 Parallels Desktop 12 (PD12) 完美支持 macOS Sierra 并对 Windows 10 特别优化！可在 Mac 上运行 Win10 UWP 通用应用、使用 Cortana 小娜语音助手、用 IE 或 Edge 浏览器访问网页、可无缝集成 Office365 办公、支持 USB-C/3.0 等，并大幅改进性能，绝对是 Mac 用户必备神器……[  马上前往围观....  ]异次元还有这些值得一看：VirtualBox 5.0 中文正式版下载 - 免费开源/跨平台/高性能的虚拟机软件VMWare Player 12 中文版 - 好用免费的官方精简版虚拟机软件 (支持3D游戏与Win10系统)VMWare Fusion 8 Pro 中文版 - Mac OSX 系统虚拟机软件 (支持El Capitan 与 Win10)VMware Workstation Pro 12 官方中文版虚拟机软件专业版 - 支持 Win10/游戏3D加速异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>328<docid>     <title>[来自异次元] MindNode 中文版 - 简单优雅易上手的思维导图制作软件 / 脑图制图 APP 应用</title>     <link>http://www.iplaysoft.com/mindnode.html</link>     <content>在工作和学习过程中，我们常常都需要做一些总结，或有条理地整理思绪和想法。而「思维导图」或称「脑图」则是呈现你的大脑思维/想法、梳理思路、记录笔记和总结事物极其有效的工具。制作思维导图的软件有很多，譬如 Xmind、iThoughts、ProcessOn，而今天推荐的 MindNode 则是苹果 iOS 和 Mac 平台上的广受赞誉的思维导图制作软件标杆级 APP 应用。它易于上手，设计排版精美，制图过程轻松直观，支持云端同步和数据导出，是非常优秀的脑图制图工具……[  马上前往围观....  ]异次元还有这些值得一看：XMind 7 中文版 - 免费好用的跨平台开源思维导图制作编辑软件幕布 - 树形层级结构的笔记软件 (一键制作思维导图 / Outline 大纲总结工具)iThoughts / iThoughtsX - iOS 和 Mac 上出色的思维导图制作编辑工具软件！BooguNote - 碎片化信息收集与组织工具 (免费轻巧的树形笔记软件)异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>329<docid>     <title>[来自异次元] MarkdownX - 以成为最优秀的 Android 安卓 Markdown 编辑器为目标而生!</title>     <link>http://www.iplaysoft.com/markdownx.html</link>     <content>Markdown 是一种非常优秀的文本编辑器编写标记语言，语法简洁明了、学习容易，书写效率高，而且图文格式排版也整洁优雅，因此在全球范围内都已经越来越流行。如果你喜欢 Markdown 写博客/笔记/文档， 在 Win / Mac 电脑上我们有 Typora、VS Code、Day One、Leanote 等优秀的 MD 写作编辑器与笔记软件，iOS 上也有 iAWriter、Ulysses。然而 Android 安卓平台上优秀的 Markdown 编辑器却很少！所以今天这款免费的 MarkdownX 真的值得推荐……[  马上前往围观....  ]异次元还有这些值得一看：iA Writer - 简单专注的跨平台轻量级写作工具 (Markdown 编辑器)Typora - 颠覆写作体验的免费极简 Markdown 编辑器！好用的 MD 格式阅读器Simplenote - 简约极致、轻量高效的云同步纯文本笔记软件 (支持 Markdown 写作)微软 Office 2016 简体中文正式版发布下载 - 微软最新下一代办公软件异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>330<docid>     <title>[来自异次元] TimeUnlock / Screen Lock 时间锁屏软件 - 用时间作为密码解锁手机</title>     <link>http://www.iplaysoft.com/time-unlock-password-android.html</link>     <content>虽然现在任何安卓手机都可以设置锁屏密码，来防止熊孩子以及居心叵测的人偷窥和乱搞。但我们解锁手机时密码其实很容易被别人偷看，而且别人借手机时碍于情面有时也只能不情愿地交出手机密码。其实对于手机的锁屏解锁密码，我们还有更好的方法可以防止被偷看泄露！那就是设置一个“会变的密码”！TimeUnlock (时间解锁) 以及 Screen Lock - Time Password (时间锁屏) 是两款可以「将时间作为动态密码」的创意锁屏应用，可以让每次解锁的密码都不同，就算别人记下来也不怕了……[  马上前往围观....  ]异次元还有这些值得一看：Cryptomator - 专为网盘文件加密而生！开源免费的云同步网盘加密工具Encrypto - 优雅地给文件加个密！精致的 PC / Mac 免费文件夹加密工具软件VeraCrypt - 最佳免费开源跨平台的文件加密工具 (支持U盘加密/硬盘分区加密)1Password - 最佳跨电脑手机平台的账号密码管理工具软件 (高安全性/一键自动登录网站)异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>331<docid>     <title>[来自异次元] Win10 更新将带来高分屏显示器优化！DPI 缩放功能大幅改进</title>     <link>http://www.iplaysoft.com/news/3199</link>     <content>随着屏幕高分辨率的大幅提升，文字显示效果和显示比例不给力的 Windows 让许多用户沮丧不已！即便在最新的 Windows 10 上，文字和软件界面的缩放效果依然很差，跟苹果 Mac 对自家的 Retina 视网膜屏的优化相比简直只能用烂来形容。不过好消息来了！微软在 Windows 10 一周年未来的更新中，将为用户带来…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>332<docid>     <title>[来自异次元] The Great Coffee App 极品咖啡应用 - 轻松入门搞懂咖啡的区别和制作方法</title>     <link>http://www.iplaysoft.com/p/the-great-coffee-app</link>     <content>无论是工作疲惫时来一杯咖啡提提神，或在休闲娱乐时泡杯咖啡细细品尝，都是一件特别惬意的事情。然而对刚接触咖啡的人来说，咖啡品类繁多，譬如拿铁、卡布奇诺、美式咖啡、摩卡到底有什么区别？这种问题想其实很多人都分不清楚，更不用说手冲、虹吸式咖啡壶、法压壶、滴漏、爱乐压等等…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>333<docid>     <title>[来自异次元] NVIDIA GeForce 最新显卡驱动程序 372.54 下载</title>     <link>http://www.iplaysoft.com/p/nvidia-geforce-driver</link>     <content>英伟达 NVIDIA 作为最流行的显卡制造商，它会经常性地为旗下的 GeForce 显卡提供最新的驱动程序的更新。每一次显卡驱动的升级，都会增加一些新上市游戏的性能优化并修复一些 Bug 等。因此，无论你是台式机显卡还是笔记本的独显，只要你的显卡是 NVIDIA GeForce 系列，那么为了发挥其最佳的性能，都…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>334<docid>     <title>[来自异次元] Advanced IP Scanner 中文版 - WIFI 防蹭网软件 / 扫描连接无线路由器的电脑手机</title>     <link>http://www.iplaysoft.com/advanced-ip-scanner.html</link>     <content>我们常常遇到网速很慢，除了是信号问题，很多时候是因为 WIFI 万能钥匙之类的软件盛行，导致在公共地方、公司、学校、宿舍甚至自己家里的路由器被人蹭网了。如果你想知道有多少台电脑手机和网络设备正连接到你的 WIFI 无线路由器上使用，你可以使用 Advanced IP Scanner 局域网扫描工具 (防蹭网软件) 来找出它们！它不仅可以扫描出所有设备的 IP 地址、电脑名称、MAC 物理地址，还能检测出是否开启了 HTTP、FTP 或文件共享，甚至还能远程开关机、远程控制等……[  马上前往围观....  ]异次元还有这些值得一看：Wireless Network Watcher 中文版 - 防蹭网监视工具，看看到底谁连上了你的WIFI无线路由器WiFi Commander - 专业 3D 图形化无线网络信号扫描分析器软件 (Win10 UWP)WiFi 无线上网速度慢怎么办？几招解决无线路由器断网/丢包/不稳定/网速慢的办法教程360网络流量监控工具绿色提取版 - 查看限制软件网速/禁止联网/列出全部联网程序端口等异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>335<docid>     <title>[来自异次元] Google 悄悄开发全新 Fuchsia 融合操作系统，以后安卓怎办？</title>     <link>http://www.iplaysoft.com/news/3196</link>     <content>近日 Google 被曝光了他们正在悄悄开发的一款名为 “Fuchsia” 的全新开源操作系统！新的操作系统或将会打通 PC 和手机，替代 Android 和 Chrome OS 成为谷歌新形态的「融合」操作系统。由于 Fuchsia 项目的贡献者有 Travis Geiselbrecht 和 Brian Swetland，这两人是 Android 安卓系统的主力开发者，而 Dart，Flutter 又来…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>336<docid>     <title>[来自异次元] 微软更新 Office iPhone 手机版，支持手指绘画/标注/涂鸦功能</title>     <link>http://www.iplaysoft.com/news/3195</link>     <content>今天微软已经更新了 Office 办公软件手机版 Office for iPhone 三大应用 Word、PowerPoint 和 Excel，全面支持 iPhone 端手指绘画功能，可以直接用手指来写、画或标注文件。和 iPad 版类似，iPhone 版的 Office 现在已支持笔、高亮笔、橡皮擦功能，也可以选择粗细和颜色。对于喜欢随手涂鸦、写注释、圈点标注的朋…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>337<docid>     <title>[来自异次元] 微信电脑版下载 - 官方PC版 Windows / Mac 桌面客户端，像QQ一样聊微信！</title>     <link>http://www.iplaysoft.com/weixin.html</link>     <content>自从微信火起来后，很多重度使用者都非常渴望它能有类似 QQ 的电脑桌面版客户端，方便使用电脑键盘替代手机快速输入聊天。于是腾讯推出了微信的网页版，用户可以在浏览器上收发信息。不过人们对微信电脑版桌面客户端的呼声依然很高，在腾讯推出了 微信 for Mac 版一段时间后，终于也推出官方的 微信 Windows 版 以及 Win10 UWP 版客户端了！而且这个 PC 版也不再是网页版的封装，而是实实在在的客户端。有了电脑版微信，当你在电脑前工作时，终于也可以顾及到微信的联系人并高效地与多人同时沟通了……[  马上前往围观....  ]异次元还有这些值得一看：QQ 轻聊版 for Windows PC / Android - 纯净的腾讯官方去广告精简版 QQ 客户端腾讯 QQ 官方正式版最新版本，QQ 手机版 Android / iOS 下载 - 网络聊天装机必备工具苹果 QQ for Mac 5.0.1 正式版更新下载！支持视频聊天、文件传输、QQ表情、截图等QQ International 国际版最新官方中文版下载 - 清爽界面免费享受会员去广告特权异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>338<docid>     <title>[来自异次元] 谷歌下一代 Nexus 手机 (未发售) 内置壁纸铃声下载</title>     <link>http://www.iplaysoft.com/news/3194</link>     <content>尽管今年 2016 的新款谷歌 Nexus 手机还未发布，但现在其全套自带壁纸以及电话铃声已经在网上流出来了。根据之前的报道，今年的 Nexus 手机将由 HTC 代工，并且将会有两部不同的机型，分别代号为 Marlin（枪鱼）和 Sailfish（旗鱼）。国外媒体目前已放出了部分 Google Nexus 2016 新机型的自带壁纸，由于机…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>339<docid>     <title>[来自异次元] LICEcap 中文版 - 超简单的 GIF 动画制作软件神器 (屏幕录像生成 GIF 图片工具)</title>     <link>http://www.iplaysoft.com/licecap.html</link>     <content>之前我们在「Snipaste 屏幕截图利器」的文章里用了不少 GIF 动画来演示软件功能和用法，它们比普通静态图片要直观高效很多，更能吸引眼球。那么这些 GIF 动画图片是怎样制作的？其实，使用 LICEcap 就能很简单地制作 GIF 动画！我们之前就介绍过 GifCam、QGifer、GifRocket 等 GIF 动画制作工具了，而 LICEcap 则是又一款非常值得推荐的屏幕录制/录像生成 GIF 的软件，它体积小巧、开源、免费，跨平台支持 Windows 和 Mac，而且使用也非常简单……[  马上前往围观....  ]异次元还有这些值得一看：GifCam 2.0 中文绿色版 - 最简单好用的 GIF 动画图片录制利器  (动态图制作编辑软件)QGifer 中文版下载 - 截取电影视频片段转换成Gif格式动画图片的工具软件 (AVI/MKV/MP4)AZ Screen Recorder - 最强免费 Android 安卓屏幕录像工具 (不需ROOT)Jing - 小巧精致专注的免费截图截屏录屏软件 (可截图可录制屏幕视频，支持Win与Mac)异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>340<docid>     <title>[来自异次元] AfterDo Change Hotkey - 给系统/软件重新定义修改快捷键</title>     <link>http://www.iplaysoft.com/p/afterdo-change-hotkey</link>     <content>对于追求操作效率的老司机来说，键盘快捷键真是个超级方便的好东西。然而对于刚入门的新手，譬如你想让妹子记住多些复杂快捷键似乎就会有点困难了。就拿大家比较常用的 QQ 的 截图 功能来说，默认的快捷键是 CTRL+ALT+A，如果修改成最简单直接的「F1」键，那对于很多新手来说就好记好用多了。…… [  马上前往围观....  ]异次元正版数字商城&nbsp;&nbsp;|&nbsp;&nbsp;异次元首页&nbsp;&nbsp;|&nbsp;&nbsp;iPc.me&nbsp;&nbsp;|&nbsp;&nbsp;新浪微博&nbsp;&nbsp;|&nbsp;&nbsp;软件精选</content></doc>
<doc>     <docid>341<docid>     <title>c 语言宏定义 #define 的理解与资料整理</title>     <link>http://blog.jobbole.com/107047/</link>     <content>1. 利用 define 来定义 数值宏常量#define 宏定义是个演技非常高超的替身演员，但也会经常耍大牌的，所以我们用它要慎之又慎。它可以出现在代码的任何地方，从本行宏定义开始，以后的代码就就都认识这个宏了；也可以把任何东西定义成宏。因为编译器会在预编译的时候用真身替换替身，而在我们的代码里面却又用常常用替身来帮忙。看例子：#define PI 3.141592654在此后的代码中你尽可以使用PI 来代替3.141592654，而且你最好就这么做。不然的话，如果我要把PI 的精度再提高一些，你是否愿意一个一个的去修改这串数呢？你能保证不漏不出错？而使用PI 的话，我们却只需要修改一次（这是十分高效的）。这种情况还不是最要命的，我们再看一个例子：#define ERROR_POWEROFF  -1如果你在代码里不用ERROR_POWEROFF 这个宏而用-1，尤其在函数返回错误代码的时候（往往一个开发一个系统需要定义很多错误代码）。肯怕上帝都无法知道-1 表示的是什么意思吧。这个-1，我们一般称为“魔鬼数”，上帝遇到它也会发狂的。所以，我奉劝你代码里一定不要出现“魔鬼数”。(这里是从代码可读性的角度进行考虑！)但是我们利用define来定义数值类型的数据，一般只是用来定义  常量 ，如果 要定义一些变量，则可以使用c语言中const这个关键字。我们已经讨论了const 这个关键字，我们知道const 修饰的数据是有类型的，而define 宏定义的数据没有类型。为了安全，我建议你以后在定义一些宏常数的时候用const代替，编译器会给const 修饰的只读变量做类型校验，减少错误的可能。但一定要注意const修饰的不是常量而是readonly 的变量，const 修饰的只读变量不能用来作为定义数组的维数，也不能放在case 关键字后面。2.利用 define 来定义 字符串宏常量除了定义宏常数之外，经常还用来定义字符串，尤其是路径：A),#define ENG_PATH_1 E:\English\listen_to_this\listen_to_this_3B),#define ENG_PATH_2 “E:\English\listen_to_this\listen_to_this_3”噢，到底哪一个正确呢？如果路径太长，一行写下来比较别扭怎么办？用反斜杠接续符 &#8221; 啊：C), #define ENG_PATH_3 E:\English\listen_to_this\listen\_to_this_3还没发现问题？这里用了4 个反斜杠，到底哪个是接续符？回去看看接续符反斜杠。反斜杠作为接续符时，在本行其后面不能再有任何字符，空格都不行。所以，只有最后一个反斜杠才是接续符。至于A)和B)，那要看你怎么用了，既然define 宏只是简单的替换，那给ENG_PATH_1 加上双引号不就成了：“ENG_PATH_1”。但是请注意：有的系统里规定路径的要用双反斜杠“\”,比如（这是正确的版本）：#define ENG_PATH_4 E:\\English\\listen_to_this\\listen_to_this_33.用 define 宏定义 注释符号上面对define 的使用都很简单，再看看下面的例子：#define BSC //#define BMC /*#define EMC */ D),BSC my single-line commentE),BMC my multi-line comment EMCD)和E)都错误，为什么呢？因为注释先于预处理指令被处理,当这两行被展开成//…或/*…*/时,注释已处理完毕,此时再出现//…或/*…*/自然错误.（这一条需要对编译预处理有所理解，才能体会。看来我还得再写一篇这方面的文章。）因此,试图用宏开始或结束一段注释是不行的。4.用define 宏定义表达式这些都好理解，下面来点有“技术含量”的，定义一年有多少秒：#define SEC_A_YEAR 60*60*24*365这个定义没错吧？很遗憾，很有可能错了，至少不可靠。你有没有考虑在16 位系统下把这样一个数赋给整型变量的时候可能会发生溢出？一年有多少秒也不可能是负数吧。改一下：#define SEC_A_YEAR （60*60*24*365）UL又出现一个问题，这里的括号到底需不需要呢？继续看一个例子，定义一个宏函数，求x 的平方：#define SQR (x) x * x对不对？试试：假设x 的值为10，SQR (x)被替换后变成10*10。没有问题。再试试：假设x 的值是个表达式10+1，SQR (x)被替换后变成10+1*10+1。问题来了，这并不是我想要得到的。怎么办？括号括起来不就完了？#define SQR (x) （（x）*（x））最外层的括号最好也别省了，看例子，求两个数的和：#define SUM (x) （x）+（x）如果x 的值是个表达式5*3,而代码又写成这样：SUM (x)* SUM (x)。替换后变成：（5*3）+（5*3）*（5*3）+（5*3）。又错了！所以最外层的括号最好也别省了。我说过define 是个演技高超的替身演员，但也经常耍大牌。要搞定它其实很简单，别吝啬括号就行了。注意这一点：宏函数被调用时是以实参代换形参。而不是“值传送”。5.宏定义中的空格另外还有一个问题需要引起注意，看下面例子：#define SUM （x） （x）+（x）这还是定义的宏函数SUM（x）吗？显然不是。编译器认为这是定义了一个宏：SUM，其代表的是（x） （x）+（x）。为什么会这样呢？其关键问题还是在于SUM 后面的这个空格。所以在定义宏的时候一定要注意什么时候该用空格，什么时候不该用空格。这个空格仅仅在定义的时候有效，在使用这个宏函数的时候，空格会被编译器忽略掉。也就是说，上一节定义好的宏函数SUM（x）在使用的时候在SUM 和（x）之间留有空格是没问题的。比如：SUM（3）和SUM （3）的意思是一样的。6.#undef#undef 是用来撤销宏定义的，用法如下：#define PI 3.141592654…// code#undef PI//下面的代码就不能用PI 了，它已经被撤销了宏定义。写好C语言，漂亮的宏定义很重要，使用宏定义可以防止出错，提高可移植性，可读性，方便性 等等。下面列举一些成熟软件中常用得宏定义：1，防止一个头文件被重复包含#ifndef COMDEF_H#define COMDEF_H//头文件内容#endif2，重新定义一些类型，防止由于各种平台和编译器的不同，而产生的类型字节数差异，方便移植。这里已经不是#define的范畴了。typedef unsigned char boolean; /* Boolean value type. */typedef unsigned long int uint32; /* Unsigned 32 bit value */typedef unsigned short uint16; /* Unsigned 16 bit value */typedef unsigned char uint8; /* Unsigned 8 bit value */typedef signed long int int32; /* Signed 32 bit value */typedef signed short int16; /* Signed 16 bit value */typedef signed char int8; /* Signed 8 bit value *///下面的不建议使用typedef unsigned char byte; /* Unsigned 8 bit value type. */typedef unsigned short word; /* Unsinged 16 bit value type. */typedef unsigned long dword; /* Unsigned 32 bit value type. */typedef unsigned char uint1; /* Unsigned 8 bit value type. */typedef unsigned short uint2; /* Unsigned 16 bit value type. */typedef unsigned long uint4; /* Unsigned 32 bit value type. */typedef signed char int1; /* Signed 8 bit value type. */typedef signed short int2; /* Signed 16 bit value type. */typedef long int int4; /* Signed 32 bit value type. */typedef signed long sint31; /* Signed 32 bit value */typedef signed short sint15; /* Signed 16 bit value */typedef signed char sint7; /* Signed 8 bit value */3，得到指定地址上的一个字节或字#define MEM_B( x ) ( *( (byte *) (x) ) )#define MEM_W( x ) ( *( (word *) (x) ) )4，求最大值和最小值#define MAX( x, y ) ( ((x) &gt; (y)) ? (x) : (y) )#define MIN( x, y ) ( ((x) &lt; (y)) ? (x) : (y) )5，得到一个field在结构体(struct)中的偏移量#define FPOS( type, field ) \/*lint -e545 */ ( (dword) &amp;(( type *) 0)-&gt; field ) /*lint +e545 */6,得到一个结构体中field所占用的字节数#define FSIZ( type, field ) sizeof( ((type *) 0)-&gt;field )7，按照LSB格式把两个字节转化为一个Word#define FLIPW( ray ) ( (((word) (ray)[0]) * 256) + (ray)[1] )8，按照LSB格式把一个Word转化为两个字节#define FLOPW( ray, val ) \ (ray)[0] = ((val) / 256); \ (ray)[1] = ((val) &amp; 0xFF)9，得到一个变量的地址（word宽度）#define B_PTR( var ) ( (byte *) (void *) &amp;(var) ) #define W_PTR( var ) ( (word *) (void *) &amp;(var) )10，得到一个字的高位和低位字节#define WORD_LO(xxx) ((byte) ((word)(xxx) &amp; 255)) #define WORD_HI(xxx) ((byte) ((word)(xxx) &gt;&gt; 8))11，返回一个比X大的最接近的8的倍数#define RND8( x ) ((((x) + 7) / 8 ) * 8 )12，将一个字母转换为大写#define UPCASE( c ) ( ((c) &gt;= 'a' &amp;&amp; (c) &lt;= 'z') ? ((c) - 0x20) : (c) )13，判断字符是不是10进值的数字#define DECCHK( c ) ((c) &gt;= '0' &amp;&amp; (c) &lt;= '9')14，判断字符是不是16进值的数字#define HEXCHK( c ) ( ((c) &gt;= '0' &amp;&amp; (c) &lt;= '9') ||\ ((c) &gt;= 'A' &amp;&amp; (c) &lt;= 'F') ||\ ((c) &gt;= 'a' &amp;&amp; (c) &lt;= 'f') )15，防止溢出的一个方法#define INC_SAT( val ) (val = ((val)+1 &gt; (val)) ? (val)+1 : (val))16，返回数组元素的个数#define ARR_SIZE( a ) ( sizeof( (a) ) / sizeof( (a[0]) ) )17，返回一个无符号数n尾的值MOD_BY_POWER_OF_TWO(X,n)=X%(2^n)#define MOD_BY_POWER_OF_TWO( val, mod_by ) \( (dword)(val) &amp; (dword)((mod_by)-1) )18，对于IO空间映射在存储空间的结构，输入输出处理#define inp(port) (*((volatile byte *) (port))) #define inpw(port) (*((volatile word *) (port))) #define inpdw(port) (*((volatile dword *)(port))) #define outp(port, val) (*((volatile byte *) (port)) = ((byte) (val))) #define outpw(port, val) (*((volatile word *) (port)) = ((word) (val))) #define outpdw(port, val) (*((volatile dword *) (port)) = ((dword) (val)))19,使用一些宏跟踪调试A N S I标准说明了五个预定义的宏名。它们是：_ LINE __ FILE __ DATE __ TIME __ STDC _可以定义宏，例如:当定义了_DEBUG，输出数据信息和所在文件所在行#ifdef _DEBUG #define DEBUGMSG(msg,date) printf(msg);printf(“%d%d%d”,date,_LINE_,_FILE_) #else #define DEBUGMSG(msg,date) #endif20，宏定义防止使用是错误用小括号包含。 例如：#define ADD(a,b) （a+b）用do{}while(0)语句包含多语句防止错误例如：#define DO(a,b) a+b;\ a++;应用时：if(….) DO(a,b); //产生错误 else解决方法: 代码就只会执行一次。和直接加花括号有什么区别呢。哦对，不能随便在程序中，任意加｛｝，组成代码块的。#define DO(a,b) do{a+b;\ a++;}while(0)c 语言宏定义 #define 的理解与资料整理，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>342<docid>     <title>程序员如何保持身体健康？</title>     <link>http://blog.jobbole.com/107038/</link>     <content>最近听说公司的几个同事都大病了一场，有的还进行了大的手术，差点跟阎王爷报道了。努力工作固然重要，但是一定注意身体，身体不好了，随着来的就是，工作和生活双失。我根据自己的实践，列举了几点习惯，可能可以帮助程序员调整一下工作和生活的节奏，从而达到生活和工作平衡，进而改进身体体质和健康。1、请早睡早睡都做不到的话，其他就都别谈了。像要跑步，要健身，要努力工作，如果没有早睡作为前提，通通没用的。只有早睡，白天精神气才有可能足，精神气足了，干事情才有劲。熬夜的话，现在80后程序员真心是熬不起了，你可能经常有这样的感慨：怎么现在敖几次夜后，就浑身不爽呢？。2、请吃好像街边摊，大排档，这些地方就别去了，他们用的油不好，食材也不好，你把这些不健康的东西吃进肚子里，真心会把身体搞坏。如果公司有食堂了，就去食堂吃，如果没有食堂的话，就自己做饭，然后带饭到公司。你自己可以仔细对比观察周围的人，吃的健康的人的起色和精神气通常都非常好。3、请有规律的准时吃饭比如吃中午饭，你第一天11点吃，第二天12点半吃，第三天一点半吃，这种情况，你的胃是吃不消的。得有规律的吃。最好能跟同事一起吃，这样比较准时，同时，跟大家一起吃，你也自然会吃的比较慢。吃的慢是护胃的一种非常好的方式。千万不好因为工作忙，就不按时准时的吃饭。这种不准时吃饭，吃饭快的，可能会导致胃癌。4、请健身有了前面3点之后，你才来考虑健身的问题。健身除了塑形之外呢，还可以增强体质。健身不一定要去健身房的，在家里就可以了。你只要买了哑铃和杠铃，大部分健身动作就都可以完成了。不过健身一定要注意动作的正确性,这个是极其关键的，动作不对，除了健身效果不明显之外，还会伤到肌肉和骨头。如果周围没有熟悉健身的朋友，可以看一些健身视频，慢慢揣摩动作。本人就是个健身爱好者，每天都健身，不健身就浑身不爽。二话不说，附上本人的健身后效果图。(^__^) 嘻嘻……5、请跑步或者游泳游泳的效果是跑步的三倍，只是我自己的实践经验。当然女生的话，由于头发问题，游泳不能经常做，但是跑步则可以。游泳和跑步这些有氧运动，可以改进心肺机能。6、加班不要太严重了这个才是最关键的，经常性的频繁的加班，必定打乱你所有的生活节奏，节奏不对，身体就很快吃不消，各种健康问题也都随之而来。7、多掌握一些编程以外的技能程序员不能简单的做码农，日子也要过的精彩。平时可以多学习一些技能，像健身、乒乓球、羽毛球、溜冰、唱歌、保龄球、钢琴、吉他、做家常菜等等。可以帮助你把日子过的精彩些，要往自己身上多投资。程序员如何保持身体健康？，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>343<docid>     <title>全栈必备：DevOps</title>     <link>http://blog.jobbole.com/107021/</link>     <content>全栈不仅是一个研发多面手，而且必须要关注产品的最终交付，以及线上服务的稳定运行。工具化使开发、交付、运维紧密地联系在一起，于是DevOps 逐渐成为了全栈们手中的利器，但由于DevOps的复杂性，如果没有科学的人员、流程与工具相配合，DevOps根本无从谈起，因此，DevOps 更是一柄双刃剑。什么是DevOps呢？先看一下wiki百科给出的定义：DevOps (a clipped compound of development and operations) is a culture, movement or practice that emphasizes the collaboration and communication of both software developers and other information-technology (IT) professionals while automating the process of software delivery and infrastructure changes. It aims at establishing a culture and environment where building, testing, and releasing software can happen rapidly, frequently, and more reliably.简单地说，DevOps是一种开发、测试、运营、维护部门之间沟通、协作与整合的软件过程、方法与系统。DevOps是一种高度强调人与人间互动的工作方式，不能先入为主地认为参与者了解某方面技能，在完成高频率部署的同时，提高生产环境的可靠稳定和安全行。DevOps能够为团队提供一种极具凝聚力的文化氛围，DevOps不光是一个方法理念，而且是一个有力的技术手段，人员、文化、流程与工具这几大要素在DevOps中同样重要。为什么DevOps姗姗来迟DevOps 的概念在2009年就诞生了，但没有相关的技术支持，只是出现在教科书和论文里。然而，近年来所谓DevOps的最佳实践逐渐越来越多，原因何在？云服务的普遍使用，各种云服务成为IT基础设施中不可分隔的一部分。运维有一个很重要的概念就是Infrastructure as code。容器技术开始成熟，特别是Docker技术的大行其道。容器 Container是用来存储和组织其他对象的对象。Docker是一个开源的应用容器引擎。微服务架构技术的广泛使用。微服务 MicroService是指一个单纯的小型有意义的功能。微服务，是支撑DevOps方法的手段，传统开发是在一个服务器里面，把各种元素装在一起组合成一个程序，但微服务是每一个服务是一个单独的单元，可以部署在不同的服务器上，通过SOA的方法，把它连接起来，再提供整个功能。微服务是由一个个团队组成，每团队有自己的服务，做好后，可以独立的进行测试、开发、部署，然后整个应用组合到一起。张侠表示，开发运维一体化、微服务和Container是同等的，把它们组合起来，加上云的手段才成为可能。4.敏捷开发流程的深入人心。诸如Scrum, Agile, Kanban等敏捷方式被团队广泛使用，TDD、BDD、DDD这些测试驱动设计、行为驱动设计、域驱动设计等设计方式的采纳，CI和CD这些持续集成和持续部署等方式的实施，这些都是对DevOps的强烈需求。DevOps中的技术栈与工具链在全栈眼中，Everything is Code，所以DevOps 是通过技术工具链完成持续集成、持续交付、用户反馈和系统优化的整合，实现跨团队的无缝协作。DevOps 中涉及的技术栈与工具链如下：DevOps 流程门户： 这是统一操作的web网站，主要是进度看板，Sprint周期等。本着拿来主义，在一定条件下，可以采用类似Trello，worktile等工具代替。身份及访问管理： 用户权限管理的重要组成，可以采用RABC的方式实现，也可以与LDAP服务对接产品管理： 产品的需求，定义，依赖，推广等产品线的全面管理，confluence 可能是个不错的选择，禅道也可以满足一部分的功能配置管理： 提高产品的配置维护能力，zookeeper 大概是不二之选。持续集成： 提供持续集成任务调度和执行的能力，Jenkins的用武之地，提供产品和组件自动编译、打包和部署的能力，支持编译和部署的流程编制，进度跟踪和日志查看环境管理： 提供资源配给和负载均衡的能力，需要配合云服务的资源管理能力。初级的负载均衡可以选择nginx或者Haproxy，生产环境的入口最好采用云服务的SLB负载均衡，以便简单地解决HA的问题。资源的调度采用云的弹性能力，辅助脚本实现。同时，微服务的容器化（docker）管理需要特别关注。质量反馈： 提供产品的质量管理和监控能力，包括测试用例，缺陷跟踪和质量监控。Jira 是个不错的选择，其他的开源工具例如禅道，bugzila，mantis等等，因团队而异。版本控制： 代码库的创建和维护，分支管理等。Git 几乎是行业的标准，可以自建Git仓库的服务器，也可以使用github 或者bitbucket这样的第三方服务。自动化测试： 包括客户端与服务器端的自动化测试框架，例如Appium，Selenium 以及各种Mock技术和xUnit文档管理：各种开发、运维、部署文档的统一管理，同样最好放到git上，同时指出文档的自动化生成运营管理：这就是传说中的OAM 中心，这是广义的运营，其中还包括运维的部分。OAM 不但提供了业务系统的运营操作，还提供了面向运维的统一Monitor，alarm，fault handling等能力，以及产品的资源使用和运行状况等，涉及的技术很多，尽量采用云监控＋脚本的方式，规模较小时可以尝zZabbix 实现部分功能。沟通管理： 敏捷的一个原则就是沟通优于文档，IM是团队必备，微信和QQ可以满足大部分的需求，但是Slack 因为其强大的web hook 功能显得更加出色。DevOps 的双刃剑DevOps 的成功与技术、流程和组织的全面支撑是密不可分的。技术栈和工具链只是DevOps的一个前提和基础，技术方面的实践相对容易，流程较难，组织变革最为艰难。DevOps还是以工程实践为主，管理实践这块，像Scrum成体系的还比较少。DevOps玩得好，可以提高团队的生产力。若是玩不好，可能还不如传统的生产模式有效率。狭义上看，DevOps主要困难点在于开发和运维是两种完全不同性质的技术工作。很多开发的同事，看着运维人员整天就是玩几个工具，写几个脚本，觉得蛮简单，实际上，很多东西要在生产环境下快速稳定应用，并没有看上去那么容易。生产系统少出问题（软件本身bug除外）是运维的绩效，多实现业务需求是开发的绩效，这一少一多，体现了两种技术角色的根本性区别。业务部门压力往往导致技术部门的任务主要是求“快”，在这种情况下，DevOps必然失衡，因为只追求快，就不需要ops了，只需要dev加班加点即可，不重视ops，结果必然是可悲的，往往业务上线后鸡飞狗跳，各种问题不断。在激烈竞争环境中，出几次事故就可能对产品形象的伤害很大。对全栈来说，业务初期到底要不要考虑高可用？从Dev角度看，简洁明快的实现就行了，从Ops的角度看，高可用、监控、报表这些东西在业务正式上线前就是必须要考虑的。因此，DevOps实施成功的关键，涉及到团队管理，项目管理，技术管理等诸多方面。DevOps并非治病良药，如果团队正能量大，实施起来就相对容易，否则引入DevOps可能也无法改变什么。对于一个全栈而言，DevOps是一柄必备的双刃剑。全栈必备：DevOps，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>344<docid>     <title>C++ 的强制类型转换</title>     <link>http://blog.jobbole.com/107033/</link>     <content>Q:什么是C风格转换？什么是static_cast, dynamic_cast 以及 reinterpret_cast？区别是什么？为什么要注意？A:转换的含义是通过改变一个变量的类型为别的类型从而改变该变量的表示方式。为了类型转换一个简单对象为另一个对象你会使用传统的类型转换操作符。比如，为了转换一个类型为doubole的浮点数的指针到整型：代码int i;double d;i = (int) d;或者：i = int (d);对于具有标准定义转换的简单类型而言工作的很好。然而，这样的转换符也能不分皂白的应用于类（class）和类的指针。ANSI-C++标准定义了四个新的转换符：&#8217;reinterpret_cast&#8217;, &#8216;static_cast&#8217;, &#8216;dynamic_cast&#8217; 和 &#8216;const_cast&#8217;，目的在于控制类(class)之间的类型转换。代码:reinterpret_cast&lt;new_type&gt;(expression)dynamic_cast&lt;new_type&gt;(expression)static_cast&lt;new_type&gt;(expression)const_cast&lt;new_type&gt;(expression)1 reinterpret_castreinterpret_cast 转换一个指针为其它类型的指针。它也允许从一个指针转换为整数类型。反之亦然。（译注：是指针具体的地址值作为整数值？）这个操作符能够在非相关的类型之间转换。操作结果只是简单的从一个指针到别的指针的值的二进制拷贝。在类型之间指向的内容不做任何类型的检查和转换。如果情况是从一个指针到整型的拷贝，内容的解释是系统相关的，所以任何的实现都不是方便的。一个转换到足够大的整型能够包含它的指针是能够转换回有效的指针的。代码:class A {};class B {};A * a = new A;B * b = reinterpret_cast&lt;B *&gt;(a);reinterpret_cast 就像传统的类型转换一样对待所有指针的类型转换。2 static_caststatic_cast 允许执行任意的隐式转换和相反转换动作。（即使它是不允许隐式的）意思是说它允许子类类型的指针转换为父类类型的指针（这是一个有效的隐式转换），同时，也能够执行相反动作：转换父类为它的子类。在这最后例子里，被转换的父类没有被检查是否与目的类型相一致。代码：class Base {};class Derived : public Base {};Base *a = new Base;Derived *b = static_cast&lt;Derived *&gt;(a);static_cast 除了操作类型指针，也能用于执行类型定义的显式的转换，以及基础类型之间的标准转换:代码:double d = 3.14159265;int i = static_cast&lt;int&gt;(d);3 dynamic_castdynamic_cast只用于对象的指针和引用。当用于多态类型时，它允许任意的隐式类型转换以及相反过程。不过，与static_cast不同，在后一种情况里（注：即隐式转换的相反过程），dynamic_cast会检查操作是否有效。也就是说，它会检查转换是否会返回一个被请求的有效的完整对象。检测在运行时进行。如果被转换的指针不是一个被请求的有效完整的对象指针，返回值为NULL.代码：class Base { virtual dummy() {} };class Derived : public Base {};Base* b1 = new Derived;Base* b2 = new Base;Derived* d1 = dynamic_cast&lt;Derived *&gt;(b1); // succeedsDerived* d2 = dynamic_cast&lt;Derived *&gt;(b2); // fails: returns 'NULL'如果一个引用类型执行了类型转换并且这个转换是不可能的，一个bad_cast的异常类型被抛出：代码:class Base { virtual dummy() {} };class Derived : public Base { };Base* b1 = new Derived;Base* b2 = new Base;Derived d1 = dynamic_cast&lt;Derived &amp;*&gt;(b1); // succeedsDerived d2 = dynamic_cast&lt;Derived &amp;*&gt;(b2); // fails: exception thrown4 const_cast这个转换类型操纵传递对象的const属性，或者是设置或者是移除：代码:class C {};const C *a = new C;C *b = const_cast&lt;C *&gt;(a);其它三种操作符是不能修改一个对象的常量性的。注意：&#8217;const_cast&#8217;也能改变一个类型的volatile qualifier。C++ 的四种强制转型形式每一种适用于特定的目的dynamic_cast 主要用于执行“安全的向下转型（safe downcasting）”，也就是说，要确定一个对象是否是一个继承体系中的一个特定类型。它是唯一不能用旧风格语法执行的强制转型，也是唯一可能有重大运行时代价的强制转型。static_cast 可以被用于强制隐型转换（例如，non-const 对象转型为 const 对象，int 转型为 double，等等），它还可以用于很多这样的转换的反向转换（例如，void* 指针转型为有类型指针，基类指针转型为派生类指针），但是它不能将一个 const 对象转型为 non-const 对象（只有 const_cast 能做到），它最接近于C-style的转换。const_cast 一般用于强制消除对象的常量性。它是唯一能做到这一点的 C++ 风格的强制转型。reinterpret_cast 是特意用于底层的强制转型，导致实现依赖（implementation-dependent）（就是说，不可移植）的结果，例如，将一个指针转型为一个整数。这样的强制转型在底层代码以外应该极为罕见。C++ 的强制类型转换，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>345<docid>     <title>Go net/http 超时机制完全手册</title>     <link>http://blog.jobbole.com/107012/</link>     <content>当用Go写HTTP的服务器和客户端的时候，超时处理总是最易犯错和最微妙的地方之一。错误可能来自很多地方，一个错误可能等待很长时间没有结果，直到网络故障或者进程挂起。HTTP是一个复杂的、多阶段(multi-stage)协议，所以没有一个放之四海而皆准的超时解决方案，比如一个流服务、一个JSON API和一个Comet服务对超时的需求都不相同， 往往默认值不是你想要的。本文我将拆解需要超时设置的各个阶段，看看用什么不同的方式去处理它， 包括服务器端和客户端。SetDeadline首先，你需要了解Go实现超时的网络原语(primitive): Deadline (最后期限)。net.Conn为Deadline提供了多个方法Set[Read|Write]Deadline(time.Time)。Deadline是一个绝对时间值，当到达这个时间的时候，所有的 I/O 操作都会失败，返回超时(timeout)错误。Deadline不是超时(timeout)。一旦设置它们永久生效(或者直到下一次调用SetDeadline), 不管此时连接是否被使用和怎么用。所以如果想使用SetDeadline建立超时机制，你不得不每次在Read/Write操作之前调用它。你可能不想自己调用SetDeadline, 而是让net/http代替你调用，所以你可以调用更高级的timeout方法。但是请记住，所有的超时的实现都是基于Deadline, 所以它们不会每次接收或者发送重新设置这个值(so they do NOT reset every time data is sent or received)。江南雨的指正：应该是由于“Deadline是一个绝对时间值”，不是真的超时机制，所以作者特别提醒，这个值不会自动重置的，需要每次手动设置。服务器端超时设置对于暴露在网上的服务器来说，为客户端连接设置超时至关重要，否则巨慢的或者隐失的客户端可能导致文件句柄无法释放，最终导致服务器出现下面的错误:http: Accept error: accept tcp [::]:80: accept4: too many open files; retrying in 5mshttp.Server有两个设置超时的方法: ReadTimeout 和 andWriteTimeout`。你可以显示地设置它们：srv := &amp;http.Server{      ReadTimeout: 5 * time.Second,    WriteTimeout: 10 * time.Second,}log.Println(srv.ListenAndServe())ReadTimeout的时间计算是从连接被接受(accept)到request body完全被读取(如果你不读取body，那么时间截止到读完header为止)。它的内部实现是在Accept立即调用SetReadDeadline方法(代码行)。……  if d := c.server.ReadTimeout; d != 0 {	c.rwc.SetReadDeadline(time.Now().Add(d))}if d := c.server.WriteTimeout; d != 0 {	c.rwc.SetWriteDeadline(time.Now().Add(d))}  ……WriteTimeout的时间计算正常是从request header的读取结束开始，到 response write结束为止 (也就是 ServeHTTP 方法的声明周期), 它是通过在readRequest方法结束的时候调用SetWriteDeadline实现的(代码行)。func (c *conn) readRequest(ctx context.Context) (w *response, err error) {	if c.hijacked() {		return nil, ErrHijacked	}	if d := c.server.ReadTimeout; d != 0 {		c.rwc.SetReadDeadline(time.Now().Add(d))	}	if d := c.server.WriteTimeout; d != 0 {		defer func() {			c.rwc.SetWriteDeadline(time.Now().Add(d))		}()	}  ……}但是，当连接是HTTPS的时候，SetWriteDeadline会在Accept之后立即调用(代码)，所以它的时间计算也包括 TLS握手时的写的时间。 讨厌的是， 这就意味着(也只有这种情况) WriteTimeout设置的时间也包含读取Headerd到读取body第一个字节这段时间。if tlsConn, ok := c.rwc.(*tls.Conn); ok {		if d := c.server.ReadTimeout; d != 0 {			c.rwc.SetReadDeadline(time.Now().Add(d))		}		if d := c.server.WriteTimeout; d != 0 {			c.rwc.SetWriteDeadline(time.Now().Add(d))		}    ……当你处理不可信的客户端和网络的时候，你应该同时设置读写超时，这样客户端就不会因为读慢或者写慢长久的持有这个连接了。最后，还有一个http.TimeoutHandler方法。 它并不是Server参数，而是一个Handler包装函数，可以限制 ServeHTTP调用。它缓存response, 如果deadline超过了则发送 504 Gateway Timeout 错误。 注意这个功能在 1.6 中有问题，在1.6.2中改正了。http.ListenAndServe 的错误顺便提一句，net/http包下的封装的绕过http.Server的函数http.ListenAndServe, http.ListenAndServeTLS 和 http.Serve并不适合实现互联网的服务器。这些函数让超时设置默认不启用，并且你没有办法设置启用超时处理。所以如果你使用它们，你会很快发现连接泄漏，太多的文件句柄。我犯过这种错误至少五六次。取而代之，你应该创建一个http.Server示例，设置ReadTimeout和WriteTimeout,像上面的例子中一样使用相应的方法。关于流令人心塞的是， 没有办法从ServeHTTP中访问底层的net.Conn，所以提供流服务强制不去设置WriteTimeout（这也可能是为什么这些值的默认值总为0）。如果无法访问net.Conn就不能在每次Write的时候调用SetWriteDeadline来实现一个正确的idle timeout。而且，也没有办法取消一个阻塞的ResponseWriter.Write，因为ResponseWriter.Close没有文档指出它可以取消一个阻塞并发写。也没有办法使用Timer创建以俄国手工的timeout 杯具就是流服务器不能对于慢读的客户端进行防护。我提交的了一个［bug](https://github.com/golang/go/issues/16100)，欢迎大家反馈。编者按: 作者此处的说法是有问题的，可以通过Hijack获取net.Conn,既然可以可以获取net.Conn,我们就可以调用它的SetWriteDeadline方法。代码例子如下：package mainimport (	"fmt"	"log"	"net/http")func main() {	http.HandleFunc("/hijack", func(w http.ResponseWriter, r *http.Request) {		hj, ok := w.(http.Hijacker)		if !ok {			http.Error(w, "webserver doesn't support hijacking", http.StatusInternalServerError)			return		}		conn, bufrw, err := hj.Hijack()		if err != nil {			http.Error(w, err.Error(), http.StatusInternalServerError)			return		}		// Don't forget to close the connection:		defer conn.Close()		conn.SetWriteDeadline(time.Now().Add(10 * time.Second))		bufrw.WriteString("Now we're speaking raw TCP. Say hi: ")		bufrw.Flush()		s, err := bufrw.ReadString('\n')		if err != nil {			log.Printf("error reading string: %v", err)			return		}		fmt.Fprintf(bufrw, "You said: %q\nBye.\n", s)		bufrw.Flush()	})}客户端超时设置Client端的超时设置说复杂也复杂，说简单也简单，看你怎么用了，最重要的就是不要有资源泄漏的情况或者程序被卡住。最简单的方式就是使用http.Client的 Timeout字段。 它的时间计算包括从连接(Dial)到读完response body。c := &amp;http.Client{      Timeout: 15 * time.Second,}resp, err := c.Get("https://blog.filippo.io/")就像服务器端一样，http.GET使用Client的时候也没有超时设置,所以在互联网上使用也很危险。有一些更细粒度的超时控制：net.Dialer.Timeout 限制建立TCP连接的时间http.Transport.TLSHandshakeTimeout 限制 TLS握手的时间http.Transport.ResponseHeaderTimeout 限制读取response header的时间http.Transport.ExpectContinueTimeout 限制client在发送包含 Expect: 100-continue的header到收到继续发送body的response之间的时间等待。注意在1.6中设置这个值会禁用HTTP/2(DefaultTransport自1.6.2起是个特例)c := &amp;http.Client{      Transport: &amp;Transport{        Dial: (&amp;net.Dialer{                Timeout:   30 * time.Second,                KeepAlive: 30 * time.Second,        }).Dial,        TLSHandshakeTimeout:   10 * time.Second,        ResponseHeaderTimeout: 10 * time.Second,        ExpectContinueTimeout: 1 * time.Second,    }}如我所讲，没有办法限制发送request的时间。读取response body (原文是读取request body，按照理解应该是读取response可以手工控制)的时间花费可以手工的通过一个time.Timer来实现, 读取发生在调用Client.Do之后（详见下一节）。最后将一点，在Go 1.7中，增加了一个http.Transport.IdleConnTimeout， 它不控制client request的阻塞阶段，但是可以控制连接池中一个连接可以idle多长时间。注意一个Client缺省的可以执行 redirect。http.Client.Timeout包含所有的redirect，而细粒度的超时控制参数只针对单次请求有效， 因为http.Transport是一个底层的类型，没有redirect的概念。Cancel 和 Contextnet/http提供了两种方式取消一个client的请求: Request.Cancel以及Go 1.7新加的Context。Request.Cancel是一个可选的channel, 当设置这个值并且close它的时候，request就会终止，就好像超时了一样(实际它们的实现是一样的，在写本文的时候我还发现一个1.7 的 一个bug, 所有的cancel操作返回的错误还是timeout error )。我们可以使用Request.Cancel和time.Timer来构建一个细粒度的超时控制，允许读取流数据的时候推迟deadline:package mainimport (      "io"    "io/ioutil"    "log"    "net/http"    "time")func main() {      c := make(chan struct{})    timer := time.AfterFunc(5*time.Second, func() {        close(c)    })        // Serve 256 bytes every second.    req, err := http.NewRequest("GET", "http://httpbin.org/range/2048?duration=8&amp;chunk_size=256", nil)    if err != nil {        log.Fatal(err)    }    req.Cancel = c    log.Println("Sending request...")    resp, err := http.DefaultClient.Do(req)    if err != nil {        log.Fatal(err)    }    defer resp.Body.Close()    log.Println("Reading body...")    for {        timer.Reset(2 * time.Second)                // Try instead: timer.Reset(50 * time.Millisecond)        _, err = io.CopyN(ioutil.Discard, resp.Body, 256)        if err == io.EOF {            break        } else if err != nil {            log.Fatal(err)        }    }}上面的例子中我们为Do方法执行阶段设置5秒的超时，但是我们至少花费8秒执行8次才能读完所欲的body，每一次设置2秒的超时。我们可以为流 API这样处理避免程序死在那里。 如果超过两秒我们没有从服务器读取到数据， io.CopyN会返回net/http: request canceled错误。在1.7中， context包升级了，进入到标准库中。Context有很多值得学习的功能，但是对于本文介绍的内容来讲，你只需直到它可以用来替换和扔掉Request.Cancel。用Context取消请求很简单，我们只需得到一个新的Context和它的cancel()函数，这是通过context.WithCancel方法得到的，然后创建一个request并使用Request.WithContext绑定它。当我们想取消这个请求是，我们调用cancel()取消这个Context:ctx, cancel := context.WithCancel(context.TODO())  timer := time.AfterFunc(5*time.Second, func() {      cancel()})req, err := http.NewRequest("GET", "http://httpbin.org/range/2048?duration=8&amp;chunk_size=256", nil)  if err != nil {      log.Fatal(err)}req = req.WithContext(ctx)Context好处还在于如果parent context被取消的时候(在context.WithCancel调用的时候传递进来的)，子context也会取消， 命令会进行传递。Go net/http 超时机制完全手册，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>346<docid>     <title>全栈必备：Git</title>     <link>http://blog.jobbole.com/107027/</link>     <content>为什么使用GitGit 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。大神就是大神，在开发了Linux之后，Git 是又一抗鼎之作。这是唯一的理由么？Git在软件开发中位置——配置管理SCMSoftware configuration management (SCM, or just plain CM) is an organizational framework — that is, a discipline — for managing the evolution of computer systems throughout all stages of systems development.软件配置管理:通过执行版本控制、变更控制的规程，以及使用合适的配置管理软件，来保证所有配置资源的完整性和可跟踪性。配置管理是对工作成果的一种有效保护。没有软件配置管理，最大的麻烦是工作成果无法回溯。配置管理的内容和目标配置管理的内容：一类是属于产品的组成部分，例如需求文档、设计文档、源代码、测试用例等等；另一类是在管理过程中产生的文档，例如各种计划、报告等软件配置管理是在贯穿整个软件生命周期中建立和维护项目产品的完整性。它的基本目标包括：1. 软件配置管理的各项工作是有计划进行的。2. 被选择的项目产品得到识别，控制并且可以被相关人员获取。3. 已识别出的项目产品的更改得到控制。4. 使相关组别和个人及时了解软件基准的状态和内容。配置管理的主要任务软件配置管理的主要任务也就归结为以下几条：（1）制定项目的配置计划；（2）对配置项进行标识；（3）对配置项进行版本控制；（4）对配置项进行变更控制；（5）定期进行配置审计；（6）向相关人员报告配置的状态。版本控制版本控制是软件配置管理的核心功能。所有位于配置资源库中的元素都应自动予以版本的标识，并保证版本命名的唯一性。版本在生成过程中，自动依照设定的使用模型自动分支、演进。版本控制(Revision control)确保由不同人所编辑的同一档案都得到更新。版本控制中的基本概念1）签入，提交，检出2）冲突，解决，合并3）分支，版本4）锁定，hook常见的版本控制工具作为一个老码农，枚举一下曾经使用过的版本控制工具。1. VSS： visual source safe, 微软的东东，97年写VC程序时使用，人多的时候性能较差，不知道现在的升级版怎样了2. clearcase： 99年开发Unix 上分布式式应用时使用，功能强大，不只限于版本控制，有钱的大团队才去用3. CVS: 02年在互联网热潮的时候使用，开源产品，当时“Copy-Modify-Merge”开发模型眼前一亮。4. SVN：曾经的挚爱，在曾工作的合资公司使用，权限管理和分支合并等方面做的很出色，并在多个公司推广使用。还记得TortoiseSVN么?那只可爱的小乌龟。5. perforce:是一款具有轻便快速的SCM工具、真正的客户端/服务器系统等特点的商业软件。高通内部使用的版本管理工具。确实不错。6. git：现在的最爱……比较一下cvs,svn,和git：Git 简要GIT 是一款免费的、开源的、分布式的版本控制系统。每一个GIT克隆都是一个完整的文件库，含有全部历史记录和修订追踪能力。其最大特色就是“分支”及“合并”操作快速、简便。支持离线工作，GIT是整个项目范围的原子提交，而且GIT中的每个工作树都包含一个具有完整项目历史的仓库。核心特点：Git 底层自行维护的存储文件系统：存储的是文件快照，即整个文件内容，并保存指向快照的索引去中心化的分布式控制优缺点：优点：适合分布式开发，强调个体。公共服务器压力和数据量都不会太大， 速度快、灵活。任意两个开发者之间可以很容易的解决冲突。离线工作。缺点：学习周期相对而言比较长。不符合常规思维。代码保密性差，一旦开发者把整个库克隆下来就可以完全公开所有代码和版本信息。Git 原理Git的目录结构不论通过git init 还是克隆下来的git 仓库，都有如下的目录结构：主要目录结构描述见下表：子目录名简要描述branchesGit 项目分支信息，新版 Git 已经不再使用该目录configGit 项目配置信息descriptionGit 项目描述信息HEAD指向 Git 项目当前分支的头指针hooks默认的”hooks”脚本，被特定事件发生前后触发。info里面含一个 exclude 文件，指 Git 项目要忽略的文件。objectsGit 的数据对象，包括：commits, trees, blobs, tags。refs指向所有 Git 项目分支的指针所有的分支指针保存在 .git/refs/heads 目录下，HEAD 在 .git/HEAD 目录下，标签在 .git/refs/tags 目录下。快照例如： 一个工程中有两个文件A和B， 有3个版本:V1.0 A和B，V1.5 A1和B，V2.0 A1和B1在Git 的实际存储中实际存了3个快照 4个文件。Git对文件进行 SHA-1 计算作为文件的唯一ID，并校验了文件完整性。SHA-1 算法将文件中的内容通过计算生成一个 40 位的 Hash 值。SHA-1 算法的特点：由文件内容计算出的 Hash 值；Hash 值相同，文件内容相同。使用 SHA-1 的前两位创建了文件夹，剩下的 38 位为文件名。这些 Obj 文件，其实分为四种类型，分别是 Blob、Tree、Commit、Tag。Blob用来存放项目文件的内容，但是不包括文件的路径、名字、格式等其它描述信息。项目的任意文件的任意版本都是以 Blob 的形式存放的。TreeTree 用来表示目录。我们知道项目就是一个目录，目录中有文件、有子目录。因此 Tree 中有 Blob、子 Tree，且都是使用 SHA-1值引用的。这是与目录对应的。从顶层的 Tree 纵览整个树状的结构，叶子结点就是 Blob，表示文件的内容，非叶子结点表示项目的目录，顶层的 Tree 对象就代表了当前项目的快照。Commit表示一次提交，有 Parent 字段，用来引用父提交。指向了一个顶层 Tree，表示了项目的快照，还有一些其它的信息，比如上一个提交 Committer、Author、Message 等信息。存储区Git中有4个类型的存储区：远程仓库，工作区，本地仓库和缓存区。暂存区的好处：为了能够实现部分提交为了不在工作区创建状态文件、会污染工作区。暂存区记录文件的修改时间等信息，提高文件比较的效率。暂存区是用来构建项目快照的区域。暂存区是一个文件，路径为： .Git/index它是一个二进制文件，第四列是文件名，第三列是文件的冲突状态，第二列指的是文件的 Blob。Commit 命令，将暂存区的内容永久保存到本地仓库。提交时 Git 会使用暂存区的这些信息生成 Tree 对象，也就是项目快照，永久保存到数据库中。文件的状态可以分为两类。一类是暂存区与本地仓库比较得出的状态，另一类是工作区与暂存区比较得出的状态。为什么要分成两类的愿意也很简单，因为第一类状态在提交时，会直接写入本地仓库。而第二种则不会。一个文件可以同时拥有两种状态。分支分支的目的是让我们可以并行的进行开发。 .Git/HEAD 文件，它保存了当前的分支。分支指向了一次提交，也是 Git 中的分支为什么这么轻量的原因。因为分支就是指向了一个 Commit 的指针，当提交新的 Commit，这个分支的指向只需要跟着更新就可以了，而创建分支仅仅是创建一个指针。Git 必备技能常见命令速查git add 和 git commitAdd 操作是将修改保存到暂存区，Commit 是将暂存区的内容永久保存到本地仓库。每当将修改的文件加入到暂存区，Git 都会根据文件的内容计算出 SHA-1，并将内容转换成 Blob，写入数据库。然后使用 SHA-1 值更新该列表中的文件项。在暂存区的文件列表中，每一个文件名，都会对应一个 SHA-1 值，用于指向文件的实际内容。最后提交的那一刻，Git 会将这个列表信息转换为项目的快照，也就是 Tree 对象。写入数据库，并再构建一个 Commit 对象，写入数据库。然后更新分支指向。分支合并: merge 和rebase冲突的状态DELETED_BY_THEM;DELETED_BY_US;BOTH_ADDED;BOTH_MODIFIED遇到不可自动合并冲突时，Git 会将这些状态写入到暂存区。merge在解决完冲突后，我们可以将修改的内容提交为一个新的提交。这就是 Merge。Merge 之后仍可以做出新的提交。rebaseRebase 会把从 Merge Base 以来的所有提交，以补丁的形式一个一个重新达到目标分支上。这使得目标分支合并该分支的时候会直接 Fast Forward，即不会产生任何冲突。Rebase 主要在 .Git/Rebase-Merge 下生成了两个文件，分别为 Git-Rebase-todo 和 Done 文件，Git-Rebase-todo 存放了 Rebase 将要操作的 Commit。而 Done 存放正在操作或已经操作完毕的 Commit。Rebase 的一个缺点，那就是修改了分支的历史提交。如果已经将分支推送到了远程仓库，会导致无法将修改后的分支推送上去，必须使用 -f 参数（Force）强行推送。所以使用 Rebase 最好不要在公共分支上进行操作。checkout经常用来切换分支、或者切换到某一次提交。Checkout 找到目标提交（Commit），目标提交中的快照也就是 Tree 对象就是我们要检出的项目版本。Checkout 首先根据Tree生成暂存区的内容，再根据 Tree 与其包含的 Blob 转换成我们的项目文件。然后修改 HEAD 的指向，表示切换分支。Checkout 并没有修改提交的历史记录。只是将对应版本的项目内容提取出来。revertrevert 实现了反向提交，就是旧版本添加了的内容，要在新版本中删除；旧版本中删除了的内容，要在新版本中添加。这在分支已经推送到远程仓库的情境下非常有用。Revert 也不会修改历史提交记录，实际的操作相当于是检出目标提交的项目快照到工作区与暂存区，然后用一个新的提交完成版本的“回退”。reset在当前分支进行版本的“回退”，Reset 是会修改历史提交记录的。Reset 常用的选项有三个，分别是 —Soft, —Mixed, —Hard。他们的作用域依次增大。Soft 会仅仅修改分支指向。而不修改工作区与暂存区的内容，Mixed 比 Soft 的作用域多了一个 暂存区。实际上 Mixed 选项与 Soft 只差了一个 Add 操作。Hard 会比 Mixed作用域又多了一个工作区。注意：在丢失后可以使用 Git Reset –Hard ORIG_HEAD 立即恢复，或者使用 reflog 命令查看之前分支的引用stash有时，在一个分支上做了一些工作，修改了很多代码，而这时需要切换到另一个分支干点别的事。但又不想将只做了一半的工作提交。Stash 将工作区与暂存区中的内容做一个提交，保存起来，然后使用Reset Hard 选项恢复工作区与暂存区内容。我们可以随时使用 Stash Apply 将修改应用回来。Stash 实现思路将我们的修改提交到本地仓库，使用特殊的分支指针（.Git/refs/Stash）引用该提交，然后在恢复的时候，将该提交恢复即可。Git 典型实践一个典型的git 并行开发的流程模型如下：主要分支把origin/master作为主要分支，源码的HEAD总是表示production-ready(可随时部署)状态。origin/develop上的代码是为下一次的代码发布准备的。每日构建也是基于此分支。当develop分支达到了一个稳定状态并准备发布时，所有的改变都要合并到master分支，并标上版本号。辅助分支Feature branches继承与合并都与develop 分支相关，用来开发新特性的(短期，远期都可以)。当要创建一个新特性时，从develop分支上再创建一个 Feature branch。$ git checkout -b myfeature develop合并feature 到develop$ git checkout developSwitched to branch 'develop'$ git merge --no-ff myfeatureUpdating ea1b82a..05e9557 (Summary of changes)$ git branch -d myfeatureDeleted branch myfeature (was 05e9557).$ git push origin developRelease branches继承分支: develop合并分支：develop 和 master命名规范：release-*创建一个release 分支Release branch是通过develop分支而创建.$ git checkout -b release-1.2 develop    Switched to a new branch "release-1.2"$ ./bump-version.sh 1.2Files modified successfully, version bumped to 1.2.$ git commit -a -m "Bumped version number to 1.2"[release-1.2 74d9424] Bumped version number to 1.21 files changed, 1 insertions(+), 1 deletions(-)完成一个release 分支当release branch已经准备就绪，需要做几件事。release分支被合并到master分支上(每一个提交到master上的commit都是一个新版 本，切记)。master上的commit都要添加tag，方便将来查看和回滚。release上所做的修改必须合并到develop分支上，保证bug已被修补。前两个步骤：$ git checkout masterSwitched to branch 'master'$ git merge --no-ff release-1.2Merge made by recursive.(Summary of changes)$ git tag -a 1.2为了把release上的改变保存到develop，需要合并到develop。$ git checkout developSwitched to branch 'develop'$ git merge --no-ff release-1.2Merge made by recursive.(Summary of changes)这个步骤可能会导致冲突，如果这样的话，解决冲突，然后再提交。最后，可以删除release 分支。$ git branch -d release-1.2Deleted branch release-1.2 (was ff452fe).Hotfix branches继承分支: master合并分支：develop 和 master命名规范：hotfix-*运行过程中发现了bug，就必须快速解决，这时就可以创建一个Hotfix branch，解决完后合并到master分支上。好处是开发人员可以继续工作，有专人来负责搞定这个bug。创建hotfix分支$ git checkout -b hotfix-1.2.1 masterSwitched to a new branch "hotfix-1.2.1"$ ./bump-version.sh 1.2.1Files modified successfully, version bumped to 1.2.1.$ git commit -a -m "Bumped version number to 1.2.1"[hotfix-1.2.1 41e61bb] Bumped version number to 1.2.11 files changed, 1 insertions(+), 1 deletions(-)fix bug, 解决问题需要一次或几次commit$ git commit -m "Fixed severe production problem"[hotfix-1.2.1 abbe5d6] Fixed severe production problem5 files changed, 32 insertions(+), 17 deletions(-)完成Hotfix branch当结束时，bugfix要被合并到master，同时也要合并到develop，保证下个版本发布时该bug已被修复。这跟release branch完成时一样。首先更新master和tag release$ git checkout masterSwitched to branch 'master'$ git merge --no-ff hotfix-1.2.1Merge made by recursive.(Summary of changes)$ git tag -a 1.2.1接下来与develop合并$ git checkout developSwitched to branch 'develop'$ git merge --no-ff hotfix-1.2.1Merge made by recursive.(Summary of changes)有一个例外，就是当一个release branch存在时，bugfix要被合并到release而不是develop，因为release最终会被合并到develop。最后移除branch$ git branch -d hotfix-1.2.1 Deleted branch hotfix-1.2.1 (was abbe5d6).总结了解Git 在软件工程及敏捷开发中的地位，明白git与其他版本控制工具之间的区别，掌握Git 工作的基本原理和必备操作，复杂问题可以查找git的相关命令，应用git开发的流程模型，让Git 成为我们的真正利器。参考资料：1）http://nvie.com/posts/a-successful-git-branching-model/2）https://community.qingcloud.com/topic/457/%E6%8A%80%E6%9C%AF%E5%9F%B9%E8%AE%AD-git-%E4%BD%A0%E7%9C%9F%E7%9A%84%E4%BC%9A%E7%94%A8%E4%B9%88/2全栈必备：Git，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>347<docid>     <title>后端成长之路：从菜鸟到架构</title>     <link>http://blog.jobbole.com/107025/</link>     <content>有不少初学者问到，我想学习后端，但是又不知道该怎么学，所以我决定把这几年的经验和经历整理成一篇文章，分析后端的路该怎么走，先说明下面仅仅是个人心得，也许与外面的理论有所不同。（文章最后面会附上学习路线地图和一些自己看过的书籍）后端任务其实是实现接收输入响应输出后端初接触后端首先需要学习的是html，css和js，也许你会问做网页不是前端做的事情吗？答案是对于真实开发环境后端很多时候还兼顾了前端这个角色，对于架构来说优化不仅仅要考虑后端还需要考虑前端。要学到什么样的程度才可以学下一样技能呢？我的建议是能够搭建起一个简单的页面，最重要的是学会dom操作和ajax。语言选择我相信过来人或者正在入门的人都碰到过这个世纪难题，如果你是初学者我建议您使用java。这里并不是说我喜欢java才推荐你们用java入门，而是java的思想对我们以后开发有很不错的启发。当你学会一种语言的基本语法就可以到下一步了（仅仅是语法，任意语言）。hello world！没错，这个时候，你得让浏览器可以看到hello world！ 为了实现这个小目标，我们就需要根据语言配置不同的运行环境。由于入门，我建议可以使用一些集成的一键配置环境软件，例如php可以用phpstudy，java看看教程，下载一个tomcat然后跟eclipse集成就好，而python或则ruby则使用一个轻量级的web框架，copy一下官网提供的hello world！例子即可。高级一些的hello world这个阶段，你需要实现的是通过浏览器输入不同的网址，你可以输出不同的内容。然后要弄明白什么是get参数，什么是post参数。然后要实现根据不同get参数或者post参数输出不同内容。因为后端研发从根本上来说就是处理这些不同输入，输出特定的内容回去而已，所以这一步，最关键。数据库为什么我们要用数据库呢？以一个新闻网站为例，它要保存新闻数据，还得保存用户信息，也要保存评论信息。也许你会问用文件保存就好了，为何还要学习数据库这么庞大的东西呢？首先，我们来看一下什么是数据库，我们可以把数据库每一个table看成excel的sheet，每一个db就是一个excel文件。而sql语句就是一条条指令，可以帮我们操作里面的数据，可以节省我们大量的操作。开始学习数据库的时候，我建议学习mysql。数据库模板引擎一项技术的出现，往往在于解决了一些开发难题。在没有模板引擎之前，我们得使用字符串拼接方式，弄成html字符串，但是这种方式很容易出错的。而模板引擎无需字符串拼接，并且可以处理字符串转义问题，并且模板集成，模板引用等功能，可以使代码可以重用，大大提高了开发效率，工程也更容易维护。模板引擎MVC框架首先，我们得明白为什么要用框架？假如是第一次接触，我相信第一感受是用了框架加重自己的开发负担。然后框架存在必然有自己的合理性，我们来看看框架有什么优点。1. 框架提供了大量的方法封装，我们可以直接调用来解决业务问题，这可以大大提高开发效率。2. 框架能够帮我们分层编写代码，能够在后期更好的维护我们的项目。3. 做一些安全防护，处理一些常见的攻击。所以对于各种语言，大家可以选择一个对应的框架来学习。那么我们应该如何挑选一个框架呢？1. 多人用的（最起码使用过程中遇到问题，都能找到人问）2. 文档详细的（文档不详细，怎么去学习呢？）3. 简单的（未来的趋势估计都是往轻量级框架走的）MVC框架有利于维护Linux与应用部署开发用window没什么问题，但是我们做的应用绝大部分是要放在linux系统来对外提供服务器，所以不懂linux的操作是不行的，并且服务器为了尽可能节省资源，都是不使用界面的，所以我们要学好大量的linux命令。服务器环境我们一般就不会用外面的通用的一键安装环境，往往需要优化的。所以基本的软件安装和配置需要学会，特别是近年来很火的docker，越来越多都是基于docker来部署的啦。缓存缓存可是处理高并发的万能药，每当你写的功能慢的时候，基本上你都可以通过缓存来大大提高网站性能。实现缓存的方法很简单，但是一当在并发下和海量数据面前一切都不容易，还得上分布式集群这些。http协议如果上面的你都接触了，恭喜您普通开发估计是没问题了，如果你说很多需求还是做不出，没关系，其实你只是缺乏开发经验而已，只要多写多请教，你就会发现，其实后端研发也没什么难度。这个时候，如果我们想往高级研发工程师方向走，一些底层的高级的东西我们得学会。http协议浏览器与服务器通过http协议交互，其实就是相互之间传递一串特定格式的字符串。get参数，post参数，url，和cookie等信息其实都包含在这字符串里面。我们平时虽然没有怎么碰到这些底层的东西，其实是框架和tomcat这种软件帮我们处理了。就像平时一个重定向，其实就在header里面有一句Location: XXX。而我们平时声明返回的是html还是json其实是headers有一句Content-Type:XXX，一切神奇的功能其实仅仅是一段特定的字符串而已，所以http协议怎么可以不研究呢。nosql非关系型数据库有很多，例如memcached，redis，mongodb，coundb等。这些东西都有自己的适用场景，合理利用可以加快开发效率，对提高应用性能有很大的帮助的。消息中间件这种技术的出现是为了解耦，当我们业务过于庞大的时候，就会相应的拆分成几个小系统，系统之间的通讯往往是通过http协议调用和基于消息中间件。通过http协议有一个弊端，就是某个系统一旦修改了地址，那么就必须修改调用该服务的系统。如果通过消息中间件调用，那么应用如何迁移，也不会影响到别的系统。消息中间件一点点话你跟所谓的大牛差距在哪里呢？我的看法是差距仅仅在于项目经验。也许你会说后端怎么需要学习这么多东西，并且年年都有新的技术出现怎么学呢？其实对于一种新技术，我们主要是要弄明白我们为什么要用这种技术，因为存在即合理，新技术的出现必然有自己的原因，所以新技术不一定要追求，但是底层建议要理解。然后什么海量数据和高并发下系统优化，一个原则，找到性能瓶颈并解决它而已。附录路线图一个简单的学习路线图书单（下面仅仅是一些个人以前看过的书籍，并不是推荐要看，个人建议看看哪种讲解核心的书籍，怎么制作比怎么用更总要）LINUX操作系统(第2版)LINUX指令范例速查手册JSP &amp; SERVLET学习笔记STRUTS 2．X权威指南(第3版)HTML 5从入门到精通JAVA入门经典(第6版)看透Spring MVC：源代码分析与实践大型分布式网站架构设计与实践Docker 容器与容器云Python Cookbook（第3版）中文版Go语言程序设计MongoDB大数据处理权威指南（第2版）NoSQL数据库技术实战构建高可用Linux服务器（第3版）大型网站技术架构 核心原理与案例分析Linux运维之道高性能MySQL（第3版）Java核心技术 卷IJava核心技术 卷II后端成长之路：从菜鸟到架构，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>348<docid>     <title>一些实用的 Laravel 小技巧</title>     <link>http://blog.jobbole.com/107018/</link>     <content>Laravel 中一些常用的小技巧，额，说不定你就用上了。。。1.侧栏网站一般都有侧栏，用来显示分类，标签，热门文章，热门评论啥的，但是这些侧栏都是相对独立的模块，如果在每一个引入侧栏的视图中都单独导入与视图有关的数据的话，未免太冗余了。。。所以最佳的做法是：新建一个widgets视图文件夹，再利用Laravel 的ViewComposers单独为侧栏绑定数据，这样侧栏就可以随便引入而不用关心数据是否绑定啦~~~举个栗子？拿最常用的分类侧栏来说，在resources/views/widgets下新建你的分类侧栏视图文件categories.blade.php：&lt;div class="widget widget-default"&gt;    &lt;div class="widget-header"&gt;&lt;h6&gt;&lt;i class="fa fa-folder fa-fw"&gt;&lt;/i&gt;分类&lt;/h6&gt;&lt;/div&gt;    &lt;ul class="widget-body list-group"&gt;        @forelse($categories as $category)            @if(str_contains(urldecode(request()-&gt;getPathInfo()),'category/'.$category-&gt;name))                &lt;li href="{{ route('category.show',$category-&gt;name) }}"                    class="list-group-item active"&gt;                    {{ $category-&gt;name }}                    &lt;span class="badge"&gt;{{ $category-&gt;posts_count }}&lt;/span&gt;                &lt;/li&gt;            @else                &lt;a href="{{ route('category.show',$category-&gt;name) }}"                   class="list-group-item"&gt;                    {{ $category-&gt;name }}                    &lt;span class="badge"&gt;{{ $category-&gt;posts_count }}&lt;/span&gt;                &lt;/a&gt;            @endif        @empty            &lt;p class="meta-item center-block"&gt;No categories.&lt;/p&gt;        @endforelse    &lt;/ul&gt;&lt;/div&gt;新建app/Http/ViewComposers文件夹，然后创建CategoriesComposer.php：&lt;?phpnamespace App\Http\ViewComposers;use App\Http\Repositories\CategoryRepository;use Illuminate\View\View;class CategoriesComposer{    public function __construct(CategoryRepository $categoryRepository)    {        $this-&gt;categoryRepository = $categoryRepository;    }    public function compose(View $view)    {        $categories = $this-&gt;categoryRepository-&gt;getAll()-&gt;reject(function ($category) {            return $category-&gt;posts_count == 0;        });        $view-&gt;with('categories', $categories);    }}再在app/Providers文件夹下新建ComposerServiceProvider.php文件：&lt;?phpnamespace App\Providers;use Illuminate\Support\ServiceProvider;use Illuminate\Support\Facades\View;class ComposerServiceProvider extends ServiceProvider{    public function boot()    {        View::composer('widget.categories', 'App\Http\ViewComposers\CategoriesComposer');    }    public function register(){}}最后别忘了在config/app.php中的providers数组中添加AppProvidersComposerServiceProvider::class啊。好了，现在你可以随时随地@include('widget.categories')了。对了，要善于在ViewComposer中利用Collection的强大方法进行数据处理幺~~2.善用路由别名Laravel 最让人喜欢的地方之一是可以给路由起一个别名，比如：Route::get('user/profile', 'UserController@showProfile')-&gt;name('user.profile');// 等价于：Route::get('user/profile', ['uses' =&gt; 'UserController@showProfile' , 'as' =&gt; 'user.profile']);;然后，就可以在试图中就可以使用route()方法引用了：// 例如：&lt;a href="{{ route('user.profile') }}"&gt;lufficc&lt;/a&gt;因为一个普通的项目路由至少也得有几十个，如果使用url()方法的话，你不但要记住具体的路由，更麻烦的是如果你将来想要改变某个路由（比如把'user/profile'改为'u/profile'，或者加个前缀啥的），必须改变所有相关的视图文件，这。。。这。。。不敢相信，而使用命名路由的话，只要命名不变，毫不受影响。所以视图文件中尽量避免使用url()方法，为每一个路由命名，一个默认的命名规则为：资源名称.或者，如post.show，image.upload。3.全局动态设置仅仅是.env的配置还无法满足我们的需求，有时我们需要可以在后台动态的进行一些设置，比如网站的标题，网站的背景图片或者是否允许评论等等。那么实现这个的最佳实践是什么？熟悉wordpress的同学知道，wordpress可以进行很多自定义，因为wordpress有一张键值对数据库表，它就是靠这个实现个性化的。因此我们也可以参考这种思路，增加一个键值对表，以Xblog为例子，新建一个maps表：Schema::create('maps', function (Blueprint $table) {       $table-&gt;increments('id');       $table-&gt;string('key')-&gt;unique();       $table-&gt;string('tag')-&gt;index();       $table-&gt;text('value')-&gt;nullable(true);});maps表的作用就是实现键值对key-value存储，tag的是为了可以有一个分类。然后后台进行存储的话，不要写死，这样就可以随时在变单中添加设置而无需更改代码：$inputs = $request-&gt;except('_token');foreach ($inputs as $key =&gt; $value) {            $map = Map::firstOrNew([                'key' =&gt; $key,            ]);            $map-&gt;tag = 'settings';            $map-&gt;value = $value;            $map-&gt;save();}注意firstOrNew的用法：如果不存在这个选项我们就新增一个并保存，否则就更新它。然后我们就可以在视图中随便增加任意多个表单了（或者也可以用js动态生成表单）。有了数据，怎么在视图中利用呢？利用ViewComposer，新建一个SettingsComposer.php，然后将查询的数据以数组的形式传递给视图：//在SettingsComposer.php的compose方法中绑定数据public function compose(View $view){    $settings = Map::where('tag', 'settings')-&gt;get();    $arr = [];    foreach ($settings as $setting) {      $arr[$setting-&gt;key] = $setting-&gt;value;    }   $view-&gt;with($arr);}然后就可以在视图中随便引用了，如你表单新增加了一个description&lt;input type="text" name="description" value="{{ $description or ''}}"&gt;然后就可以在任何视图引用了:{{ $description or ''}}。另外还可以绑定一个单例Facades到容器，这样就可以在代码中随时获取配置信息啦~~~比如：//1.注册public function register(){    $this-&gt;app-&gt;singleton('XblogConfig', function ($app) {       return new MapRepository();   });}//2.注册Facadeclass XblogConfig extends Facade{    public static function getFacadeAccessor()    {        return 'XblogConfig';    }}//3.添加到aliases数组'aliases' =&gt; [        *****************  省略  *************************        'XblogConfig' =&gt; App\Facades\XblogConfig::class,    ],//4.愉快的使用，可爽$page_size = XblogConfig::getValue('page_size', 7);4.数据库查询怎么统计一篇文章有多少评论？最快的方法是：$post = Post::where('id',1)-&gt;withCount('comments')-&gt;first();这样$post变量就有一个属性comments_count了：$post-&gt;comments_count;如果想获取点赞数大于的100的评论个数怎么办？这样：$post = Post::where('id',1)-&gt;withCount('comments',function($query){       $query-&gt;where('like', '&gt;', 100);   })-&gt;first();简单吧~~5.多态关联文章可以有评论，页面可以有评论，评论也可以有评论，但是总不能建三张评论表吧？如果自己写条件判断也太麻烦了吧。。。Laravel的多态关联上场了！！//1.第一步在Comment模型中说明我是可以多态的public function commentable(){    return $this-&gt;morphTo();}//2.在想要评论的模型中增加comments方法，public function comments(){    return $this-&gt;morphMany(Comment::class, 'commentable');}//3.使用，就像普通的一对多关系一样：$model-&gt;comments;原理很简单，comments表中增加两个列就行：Schema::create('comments', function (Blueprint $table) {     ***************省略*******************     $table-&gt;morphs('commentable');     //等价于     $table-&gt;integer('commentable_id')-&gt;index();     $table-&gt;string('commentable_type')-&gt;index();    ****************省略******************});然后 laravel 会自动维持这些关系。注意，保存的评论的时候是有小技巧的，你的表单中至少要传两个参数：commentable_id和commentable_type：$comment = new Comment();$commentable_id = $request-&gt;get('commentable_id');//commentable_type取值例如：AppPost，AppPage等等$commentable = app($request-&gt;get('commentable_type'))-&gt;where('id', $commentable_id)-&gt;firstOrFail();****************省略******************$commentable-&gt;comments()-&gt;save($comment);保存评论的时候并不知道是谁的评论，而是使用容器根据commentable_type生成一个模型实例，这样也就和具体的模型解耦了，你可以让任何东西可以评论，而不需要修改代码。6.缓存优化相关如果你想要在.env文件中添加自己的配置，记住一定要在config文件夹下某个配置文件的数组中添加对应的。记住，除了config文件夹下的配置文件，永远不要在其它地方使用env函数，因为部署到线上时，配置文件缓存（php artisan config:cache）后，env函数无法获得正确的值。另外注意的是，路由文件中尽量不使用闭包函数，统一使用控制器，因为缓存路由的时候php artisan route:cache，无法缓存闭包函数。7.Redis如果你缓存使用Redis，session也使用了Redis，队列已使用了Redis，这样没问题，速度很快，但是！！当你运行php artisan cache:clear清除缓存时，会把你的登录信息清除，也会把队列清除。。。这就不优雅了。解决办法很简单，为它们分配不同的连接即可。首先在configdatabase.php中增加连接，注意database序号：'redis' =&gt; [        'cluster' =&gt; false,        'default' =&gt; [            'host' =&gt; env('REDIS_HOST', 'localhost'),            'password' =&gt; env('REDIS_PASSWORD', null),            'port' =&gt; env('REDIS_PORT', 6379),            'database' =&gt; 0,        ],        'session' =&gt; [            'host' =&gt; env('REDIS_HOST', 'localhost'),            'password' =&gt; env('REDIS_PASSWORD', null),            'port' =&gt; env('REDIS_PORT', 6379),            'database' =&gt; 1,        ],        'queue' =&gt; [            'host' =&gt; env('REDIS_HOST', 'localhost'),            'password' =&gt; env('REDIS_PASSWORD', null),            'port' =&gt; env('REDIS_PORT', 6379),            'database' =&gt; 2,        ],    ],然后分别为session和queue更换连接：//queue.php中的connections数组中：'redis' =&gt; [            'driver' =&gt; 'redis',            'connection' =&gt; 'queue',            'queue' =&gt; 'default',            'retry_after' =&gt; 90,        ],//session.php中的connection选项：'connection' =&gt; 'session',这样他们就互不相干了~~以上经验来自Xblog，示例均可以在Xblog找到一些实用的 Laravel 小技巧，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>349<docid>     <title>深入Go UDP编程</title>     <link>http://blog.jobbole.com/107004/</link>     <content>用户数据报协议（User Datagram Protocol，缩写为UDP），又称用户数据报文协议，是一个简单的面向数据报(package-oriented)的传输层协议，正式规范为RFC 768。UDP只提供数据的不可靠传递，它一旦把应用程序发给网络层的数据发送出去，就不保留数据备份（所以UDP有时候也被认为是不可靠的数据报协议）。UDP在IP数据报的头部仅仅加入了复用和数据校验。由于缺乏可靠性且属于非连接导向协议，UDP应用一般必须允许一定量的丢包、出错和复制粘贴。但有些应用，比如TFTP，如果需要则必须在应用层增加根本的可靠机制。但是绝大多数UDP应用都不需要可靠机制，甚至可能因为引入可靠机制而降低性能。流媒体（流技术）、即时多媒体游戏和IP电话（VoIP）一定就是典型的UDP应用。如果某个应用需要很高的可靠性，那么可以用传输控制协议（TCP协议）来代替UDP。由于缺乏拥塞控制（congestion control），需要基于网络的机制来减少因失控和高速UDP流量负荷而导致的拥塞崩溃效应。换句话说，因为UDP发送者不能够检测拥塞，所以像使用包队列和丢弃技术的路由器这样的网络基本设备往往就成为降低UDP过大通信量的有效工具。数据报拥塞控制协议（DCCP）设计成通过在诸如流媒体类型的高速率UDP流中，增加主机拥塞控制，来减小这个潜在的问题。典型网络上的众多使用UDP协议的关键应用一定程度上是相似的。这些应用包括域名系统（DNS）、简单网络管理协议（SNMP）、动态主机配置协议（DHCP）、路由信息协议（RIP）和某些影音流服务等等。UDP报头IPv4伪头部IPv6伪头部以上大段的背景介绍引自维基百科。而TCP是面向连接(connection-oriented)的协议，可以提供可靠的数据传输。本文讲介绍Go语言的UDP库及其使用方法，以及了解使用过程中的细节和陷阱。一个简单的例子首先看一个简单的UDP的例子，这个例子演示了Go UDP通过Dial方式发送数据报的例子。package mainimport (	"fmt"	"net")func main() {	listener, err := net.ListenUDP("udp", &amp;net.UDPAddr{IP: net.ParseIP("127.0.0.1"), Port: 9981})	if err != nil {		fmt.Println(err)		return	}	fmt.Printf("Local: &lt;%s&gt; \n", listener.LocalAddr().String())	data := make([]byte, 1024)	for {		n, remoteAddr, err := listener.ReadFromUDP(data)		if err != nil {			fmt.Printf("error during read: %s", err)		}		fmt.Printf("&lt;%s&gt; %s\n", remoteAddr, data[:n])		_, err = listener.WriteToUDP([]byte("world"), remoteAddr)		if err != nil {			fmt.Printf(err.Error())		}	}}package mainimport (	"fmt"	"net")func main() {	sip := net.ParseIP("127.0.0.1")	srcAddr := &amp;net.UDPAddr{IP: net.IPv4zero, Port: 0}	dstAddr := &amp;net.UDPAddr{IP: ip, Port: 9981}	conn, err := net.DialUDP("udp", srcAddr, dstAddr)	if err != nil {		fmt.Println(err)	}	defer conn.Close()	conn.Write([]byte("hello"))	fmt.Printf("&lt;%s&gt;\n", conn.RemoteAddr())}可以看到, Go UDP的处理类似TCP的处理，虽然不像TCP面向连接的方式ListenTCP和Accept的方式建立连接,但是它通过ListenUDP和ReadFromUDP可以接收各个客户端发送的数据报，并通过WriteToUDP写数据给特定的客户端。我们稍微修改一下client1.go,让它保持UDP Socket文件一直打开：func main() {	ip := net.ParseIP("127.0.0.1")	srcAddr := &amp;net.UDPAddr{IP: net.IPv4zero, Port: 0}	dstAddr := &amp;net.UDPAddr{IP: ip, Port: 9981}	conn, err := net.DialUDP("udp", srcAddr, dstAddr)	if err != nil {		fmt.Println(err)	}	defer conn.Close()	b := make([]byte, 1)	os.Stdin.Read(b)	conn.Write([]byte("hello"))	fmt.Printf("&lt;%s&gt;\n", conn.RemoteAddr())}使用 netstat可以看到这个网络文件描述符(因为我在同一台机器上运行服务器，所以你会看到两条记录，一个是服务器打开的，一个是客户端打开的)。udp4       0      0  localhost.54676        localhost.9981udp4       0      0  localhost.9981         *.*或者使用lsof命令查看：server1   59312 smallnest    3u  IPv4 0xad793a9a54467f61      0t0  UDP localhost:9981client1   59323 smallnest    3u  IPv4 0xad793a9a544681c1      0t0  UDP localhost:54676-&gt;localhost:9981更复杂的例子我们还可以将上面的例子演化一下，实现双向的读写。服务器端代码不用修改，因为它已经实现了读写，读是通过listener.ReadFromUDP,写通过listener.WriteToUDP。客户端修改为读写：package mainimport (	"fmt"	"net")func main() {	ip := net.ParseIP("127.0.0.1")	srcAddr := &amp;net.UDPAddr{IP: net.IPv4zero, Port: 0}	dstAddr := &amp;net.UDPAddr{IP: ip, Port: 9981}	conn, err := net.DialUDP("udp", srcAddr, dstAddr)	if err != nil {		fmt.Println(err)	}	defer conn.Close()	conn.Write([]byte("hello"))	data := make([]byte, 1024)	n, err := conn.Read(data)	fmt.Printf("read %s from &lt;%s&gt;\n", data[:n], conn.RemoteAddr())}这里client的写是Write,读是Read。等价的客户端和服务器下面这个是两个服务器通信的例子，互为客户端和服务器，在发送数据报的时候，我们可以将发送的一方称之为源地址，发送的目的地一方称之为目标地址。package mainimport (	"fmt"	"net"	"os"	"time")func read(conn *net.UDPConn) {	for {		data := make([]byte, 1024)		n, remoteAddr, err := conn.ReadFromUDP(data)		if err != nil {			fmt.Printf("error during read: %s", err)		}		fmt.Printf("receive %s from &lt;%s&gt;\n", data[:n], remoteAddr)	}}func main() {	addr1 := &amp;net.UDPAddr{IP: net.ParseIP("127.0.0.1"), Port: 9981}	addr2 := &amp;net.UDPAddr{IP: net.ParseIP("127.0.0.1"), Port: 9982}	go func() {		listener1, err := net.ListenUDP("udp", addr1)		if err != nil {			fmt.Println(err)			return		}		go read(listener1)		time.Sleep(5 * time.Second)		listener1.WriteToUDP([]byte("ping to #2: "+addr2.String()), addr2)	}()	go func() {		listener1, err := net.ListenUDP("udp", addr2)		if err != nil {			fmt.Println(err)			return		}		go read(listener1)		time.Sleep(5 * time.Second)		listener1.WriteToUDP([]byte("ping to #1: "+addr1.String()), addr1)	}()	b := make([]byte, 1)	os.Stdin.Read(b)}Read和Write方法集的比较前面的例子中客户端有时使用DialUDP建立数据报的源对象和目标对象(地址和端口), 它会创建UDP Socket文件描述符,然后调用内部的connect为这个文件描述符设置源地址和目标地址，这时Go将它称之为connected,尽管我们知道UDP是无连接的协议，Go这种叫法我想根源来自Unix/Linux的UDP的实现。这个方法返回*UDPConn。有的时候却可以通过ListenUDP返回的*UDPConn直接往某个目标地址发送数据报，而不是通过DialUDP方式发送，原因在于两者返回的*UDPConn是不同的。前者是connected，后者是unconnected。你必须清楚知道你的UDP是连接的(connected)还是未连接(unconnected)的，这样你才能正确的选择的读写方法。如果*UDPConn是connected,读写方法是Read和Write。如果*UDPConn是unconnected,读写方法是ReadFromUDP和WriteToUDP（以及ReadFrom和WriteTo)。事实上Go的这种设计和Unix/Linux设计一致，下面是Linux关于UDP的文档：When a UDP socket is created, its local and remote addresses are unspecified. Datagrams can be sent immediately using sendto or sendmsg with a valid destination address as an argument. When connect is called on the socket, the default destination address is set and datagrams can now be sent using send or write without specifying a destination address. It is still possible to send to other destinations by passing an address to sendto or sendmsg. In order to receive packets, the socket can be bound to a local address first by using bind. Otherwise, the socket layer will automatically assign a free local port out of the range defined by /proc/sys/net/ipv4/ip_local_port_range and bind the socket to INADDR_ANY.ReadFrom和WriteTo是为了实现PacketConn接口而实现的方法，它们的实现基本上和ReadFromUDP和WriteToUDP一样，只不过地址换成了更通用的Addr,而不是具体化的UDPAddr。还有几种情况需要弄清楚:1、因为unconnected的*UDPConn还没有目标地址，所以需要把目标地址当作参数传入到WriteToUDP的方法中，但是unconnected的*UDPConn可以调用Read方法吗？答案是可以,但是在这种情况下，客户端的地址信息就被忽略了。func main() {	listener, err := net.ListenUDP("udp", &amp;net.UDPAddr{IP: net.ParseIP("127.0.0.1"), Port: 9981})	if err != nil {		fmt.Println(err)		return	}	fmt.Printf("Local: &lt;%s&gt; \n", listener.LocalAddr().String())	data := make([]byte, 1024)	for {		n, err := listener.Read(data)		if err != nil {			fmt.Printf("error during read: %s", err)		}		fmt.Printf("&lt;%s&gt;\n", data[:n])	}}2、unconnected的*UDPConn可以调用Write方法吗？答案是不可以， 因为不知道目标地址。func main() {	listener, err := net.ListenUDP("udp", &amp;net.UDPAddr{IP: net.ParseIP("127.0.0.1"), Port: 9981})	if err != nil {		fmt.Println(err)		return	}	fmt.Printf("Local: &lt;%s&gt; \n", listener.LocalAddr().String())	_, err = listener.Write([]byte("hello"))	if err != nil {		fmt.Printf(err.Error())	}}出错：write udp 127.0.0.1:9981: write: destination address requiredsmallnestMBP:udp smallnest3、connected的*UDPConn可以调用WriteToUDP方法吗？答案是不可以， 因为目标地址已经设置。即使是相同的目标地址也不可以。func main() {	ip := net.ParseIP("127.0.0.1")	srcAddr := &amp;net.UDPAddr{IP: net.IPv4zero, Port: 0}	dstAddr := &amp;net.UDPAddr{IP: ip, Port: 9981}	conn, err := net.DialUDP("udp", srcAddr, dstAddr)	if err != nil {		fmt.Println(err)	}	defer conn.Close()	_, err = conn.WriteToUDP([]byte("hello"), dstAddr)	if err != nil {		fmt.Println(err)	}}报错:write udp 127.0.0.1:50141-&gt;127.0.0.1:9981: use of WriteTo with pre-connected connection4、connected的*UDPConn如果调用Closed以后可以调用WriteToUDP方法吗？答案是不可以。func main() {	ip := net.ParseIP("127.0.0.1")	srcAddr := &amp;net.UDPAddr{IP: net.IPv4zero, Port: 0}	dstAddr := &amp;net.UDPAddr{IP: ip, Port: 9981}	conn, err := net.DialUDP("udp", srcAddr, dstAddr)	if err != nil {		fmt.Println(err)	}	err = conn.Close()	if err != nil {		fmt.Println(err)	}	_, err = conn.WriteToUDP([]byte("hello"), dstAddr)	if err != nil {		fmt.Println(err)	}}同样的报错：write udp 127.0.0.1:59074-&gt;127.0.0.1:9981: use of WriteTo with pre-connected connection5、connected的*UDPConn可以调用ReadFromUDP方法吗？答案是可以,但是它的功能基本和Read一样，只能和它connected的对端通信。看下面的client的例子：func main() {	ip := net.ParseIP("127.0.0.1")	srcAddr := &amp;net.UDPAddr{IP: net.IPv4zero, Port: 0}	dstAddr := &amp;net.UDPAddr{IP: ip, Port: 9981}	conn, err := net.DialUDP("udp", srcAddr, dstAddr)	if err != nil {		fmt.Println(err)	}	defer conn.Close()	go func() {		data := make([]byte, 1024)		for {			n, remoteAddr, err := conn.ReadFromUDP(data)			if err != nil {				fmt.Printf("error during read: %s", err)			}			fmt.Printf("&lt;%s&gt; %s\n", remoteAddr, data[:n])		}	}()	conn.Write([]byte("hello"))	b := make([]byte, 1)	os.Stdin.Read(b)}6、*UDPConn还有一个通用的WriteMsgUDP(b, oob []byte, addr *UDPAddr)，同时支持connected和unconnected的UDPConn:如果UDPConn还未连接，那么它会发送数据报给addr如果UDPConn已连接，那么它会发送数据报给连接的对端，这种情况下addr应该为nil通用多播编程Go标准库也支持多播，但是我们首先我们看通用的多播是如何实现的，它使用golang.org/x/net/ipv4或者golang.org/x/net/ipv6进行控制。首先找到要进行多播所使用的网卡,然后监听本机合适的地址和服务端口。将这个应用加入到多播组中，它就可以从组中监听包信息，当然你还可以对包传输进行更多的控制设置。应用收到包后还可以检查包是否来自这个组的包。完整的代码如下：package mainimport (	"fmt"	"net"	"golang.org/x/net/ipv4")func main() {	//1. 得到一个interface	en4, err := net.InterfaceByName("en4")	if err != nil {		fmt.Println(err)	}	group := net.IPv4(224, 0, 0, 250)	//2. bind一个本地地址	c, err := net.ListenPacket("udp4", "0.0.0.0:1024")	if err != nil {		fmt.Println(err)	}	defer c.Close()	//3.	p := ipv4.NewPacketConn(c)	if err := p.JoinGroup(en4, &amp;net.UDPAddr{IP: group}); err != nil {		fmt.Println(err)	}	//4.更多的控制	if err := p.SetControlMessage(ipv4.FlagDst, true); err != nil {		fmt.Println(err)	}	//5.接收消息	b := make([]byte, 1500)	for {		n, cm, src, err := p.ReadFrom(b)		if err != nil {			fmt.Println(err)		}		if cm.Dst.IsMulticast() {			if cm.Dst.Equal(group) {				fmt.Printf("received: %s from &lt;%s&gt;\n", b[:n], src)				n, err = p.WriteTo([]byte("world"), cm, src)				if err != nil {					fmt.Println(err)				}			} else {				fmt.Println("Unknown group")				continue			}		}	}}同一个应用可以加入到多个组中，多个应用也可以加入到同一个组中。多个UDP listener可以监听同样的端口，加入到同一个group中。It is possible for multiple UDP listeners that listen on the same UDP port to join the same multicast group. The net package will provide a socket that listens to a wildcard address with reusable UDP port when an appropriate multicast address prefix is passed to the net.ListenPacket or net.ListenUDP.c1, err := net.ListenPacket("udp4", "224.0.0.0:1024")if err != nil {	// error handling}defer c1.Close()c2, err := net.ListenPacket("udp4", "224.0.0.0:1024")if err != nil {	// error handling}defer c2.Close()p1 := ipv4.NewPacketConn(c1)if err := p1.JoinGroup(en0, &amp;net.UDPAddr{IP: net.IPv4(224, 0, 0, 248)}); err != nil {	// error handling}p2 := ipv4.NewPacketConn(c2)if err := p2.JoinGroup(en0, &amp;net.UDPAddr{IP: net.IPv4(224, 0, 0, 248)}); err != nil {	// error handling}还支持Source-specific multicasting特性。标准库多播编程标准库的多播编程简化了上面的操作，当然也减少了更多的控制。如果想实现一个简单的多播程序，可以使用这样的方法。服务器端的代码：func main() {	//如果第二参数为nil,它会使用系统指定多播接口，但是不推荐这样使用	addr, err := net.ResolveUDPAddr("udp", "224.0.0.250:9981")	if err != nil {		fmt.Println(err)	}	listener, err := net.ListenMulticastUDP("udp", nil, addr)	if err != nil {		fmt.Println(err)		return	}	fmt.Printf("Local: &lt;%s&gt; \n", listener.LocalAddr().String())	data := make([]byte, 1024)	for {		n, remoteAddr, err := listener.ReadFromUDP(data)		if err != nil {			fmt.Printf("error during read: %s", err)		}		fmt.Printf("&lt;%s&gt; %s\n", remoteAddr, data[:n])	}}写个客户端测试一下：func main() {	ip := net.ParseIP("224.0.0.250")	srcAddr := &amp;net.UDPAddr{IP: net.IPv4zero, Port: 0}	dstAddr := &amp;net.UDPAddr{IP: ip, Port: 9981}	conn, err := net.DialUDP("udp", srcAddr, dstAddr)	if err != nil {		fmt.Println(err)	}	defer conn.Close()	conn.Write([]byte("hello"))	fmt.Printf("&lt;%s&gt;\n", conn.RemoteAddr())}广播广播的编程方式和多播的编程方式有所不同。简单说，广播意味着你吼一嗓子，局域网内的所有的机器都会收到。服务器端代码：func main() {	listener, err := net.ListenUDP("udp", &amp;net.UDPAddr{IP: net.IPv4zero, Port: 9981})	if err != nil {		fmt.Println(err)		return	}	fmt.Printf("Local: &lt;%s&gt; \n", listener.LocalAddr().String())	data := make([]byte, 1024)	for {		n, remoteAddr, err := listener.ReadFromUDP(data)		if err != nil {			fmt.Printf("error during read: %s", err)		}		fmt.Printf("&lt;%s&gt; %s\n", remoteAddr, data[:n])		_, err = listener.WriteToUDP([]byte("world"), remoteAddr)		if err != nil {			fmt.Printf(err.Error())		}	}}客户端代码有所不同，它不是通过DialUDP “连接” 广播地址，而是通过ListenUDP创建一个unconnected的 *UDPConn,然后通过WriteToUDP发送数据报，这和你脑海中的客户端不太一致：func main() {	ip := net.ParseIP("172.24.14.255")	srcAddr := &amp;net.UDPAddr{IP: net.IPv4zero, Port: 0}	dstAddr := &amp;net.UDPAddr{IP: ip, Port: 9981}	conn, err := net.ListenUDP("udp", srcAddr)	if err != nil {		fmt.Println(err)	}	n, err := conn.WriteToUDP([]byte("hello"), dstAddr)	if err != nil {		fmt.Println(err)	}	data := make([]byte, 1024)	n, _, err = conn.ReadFrom(data)	if err != nil {		fmt.Println(err)	}	fmt.Printf("read %s from &lt;%s&gt;\n", data[:n], conn.RemoteAddr())	b := make([]byte, 1)	os.Stdin.Read(b)}你局域网内的广播地址可能和例子中的不同，你可以通过ifconfig查看。广播地址(Broadcast Address)是专门用于同时向网络中所有工作站进行发送的一个地址。在使用TCP/IP 协议的网络中，主机标识段host ID 为全1 的IP 地址为广播地址，广播的分组传送给host ID段所涉及的所有计算机。例如，对于10.1.1.0 （255.255.255.0 ）网段，其广播地址为10.1.1.255 （255 即为2 进制的11111111 ），当发出一个目的地址为10.1.1.255 的分组（封包）时，它将被分发给该网段上的所有计算机。任播在互联网中，通常使用边界网关协议来实现任播。比如域名根服务器就是通过任播的方式提供。13台根服务器使用13个任播地址，但是有500多台实际服务器。你可以通过单播的方式发送数据包，只有最快的(最近的)的一个UDP服务器接收到。Anycasting最初是在RFC1546中提出并定义的，它的最初语义是，在IP网络上通过一个Anycast地址标识一组提供特定服务的主机，同时服务访问方并不关心提供服务的具体是哪一台主机(比如DNS或者镜像服务)，访问该地址的报文可以被IP网络路由到这一组目标中的任何一台主机上，它提供的是一种无状态的、尽力而为的服务。RFC2373(IP Version 6 Addressing Architecture, July 1998)提供了较新的说明和动机：任播地址的一个期望应用是标识属于某个提供互联网服务的机构的路由器集合。这种地址可以用作IPv6路由标题的中间地址,使数据分组通过某一聚合或聚合序列传递。其他可能的用途是标识属于某一子网的路由器组或提供进入某一路由范围入口的路由器组。RFC2373标准对任播的定义是，当一个单播地址被分配到多于一个的接口上时，发到该接口的报文被网络路由到由路由协议度量的“最近”的目标接口上。与Unicast和Multicast类似，Anycast也是IP网络的一种通信模式。Unicast允许源结点向单一目标结点发送数据报，Multicast允许源结点向一组目标结点发送数据报，而Anycast则允许源结点向一组目标结点中的一个结点发送数据报，而这个结点由路由系统选择，对源结点透明；同时，路由系统选择“最近”的结点为源结点提供服务，从而在一定程序上为源结点提供了更好的服务也减轻了网络负载。参考文档https://zh.wikipedia.org/wiki/用户数据报协议https://golang.org/pkg/net/http://man7.org/linux/man-pages/man7/udp.7.htmlhttps://godoc.org/golang.org/x/net/ipv4https://github.com/golang/go/issues/13391http://baike.baidu.com/view/473043.htmhttp://baike.baidu.com/view/2032315.htm深入Go UDP编程，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>350<docid>     <title>测试自动化后，我们还需要QA吗？</title>     <link>http://blog.jobbole.com/106995/</link>     <content>QA的职责我们先讨论一下传统的瀑布模型下QA是如何工作的，其中最主要的问题是什么；然后作为对比，我们来看看在敏捷团队里QA又是如何工作的，工作重点又是什么；最后，我们详细看一看在新的职责下，QA应该如何做。瀑布开发模型即使在今天，在很多企业中，瀑布模型仍然是主流。每一个需求都需要经过分析，设计，开发，测试，上线部署，运维等阶段。虽然一些企业已经在实施敏捷开发，比如项目/产品以迭代的方式运作，也有诸如每日站会，代码检视等敏捷实践，但是如果仔细审视，你会发现其实开发模式骨子里还是瀑布：按照软件组件划分的部门结构（详见康威定律），按照职能划分的团队（开发和测试分属不同部门），过长的反馈周期，永远无法摆脱的集成难题等等。随着软件变得越来越复杂，团队里没有任何一个人可以说出系统是如何运作的，也不知道最终用户是谁，以及最终用户会以何种方式来使用最终的软件。更糟糕的是，按照职能划分的团队在物理上都是隔离的，比如独立的测试部门，独立的运维部门，整日忙碌而难以预约到档期的业务人员，当然还有经常疲于交付，无处吐槽的苦逼开发。由于这些隔离，信息的反馈周期会非常长，一个本来很容易修复的缺陷可能在4周之后才可能被另一个部门的测试发现，然后通过复杂的工作流（比如某种形式的缺陷追踪系统）流到开发那里，而开发可能还在拼命的完成早就应该交付的功能，从而形成恶性循环。瀑布模式中的QA在这样的环境中，QA们能做的事情非常有限。在需求开始时会他们参加需求澄清的会议，制定一些测试计划，然后进行测试用例的设计。有的企业会用诸如Excel之类的工具来记录这些用例。这些写在Excel里的，死的用例用处非常有限。而最大的问题在于：它们无法自动化执行。另外，在实际软件开发中，需求总是会经常发生变化，需求的优先级也会有调整，然后这些记录在Excel中的死的用例会很快过期，变得无人问津。除此之外，QA中的有些成员会使用工具来录制一些UI测试的场景，然后在每个新版本出来之后进行回放即可。然而，当UI发生一点变化之后，这些自动化的用例就会失效：比如HTML片段中元素位置的调整，JavaScript的异步调用超时等等。显然，这种单纯以黑盒的形式来检查功能点的测试方式是不工作的，要真正有效的提升软件质量，仅仅通过事后检查是远远不够的，软件的质量也应该内建于软件之中。QA的工作也应该是一个贯穿软件生命周期的活动，从商业想法，到真实上线，这其中的所有环节，都应该有QA的参与。系统思考如果不从一个系统的角度来思考软件质量，就无法真正构建出健壮的、让业务和团队都有信心的软件系统。质量从来都不只是QA的职责，而是整个团队的职责。关于软件质量，一个根深蒂固的误解是：缺陷在开发过程中被引入，然后在测试阶段被发现，最后在QA和开发的来来回回的撕扯中被解决（或者数量被大规模降低），最后在生产环境中，就只会有很少的，优先级很低的缺陷。然而事实上，很多需求就没有仔细分析，业务价值不很确定，验收条件模糊，流入开发后又会引入一些代码级别的错误，以及业务规则上的缺陷，测试阶段会漏掉一些功能点，上线之后更是问题百出（网络故障，缓存失效，黑客攻击，操作系统补丁，甚至内存溢出，log文件将磁盘写满等等）。在一个敏捷团队中，每个个人都应该对质量负责，而QA则以自己的丰富经验和独特视角来发掘系统中可能的质量隐患，并帮助团队将这些隐患消除。我在ThoughtWorks的同事Anand Bagmar在他的演讲What is Agile testing- How does automation help?中详细讨论过这部分内容。QA到底应该干什么？本质上来说，任何软件项目的目标都应该是：更快地将高质量的软件从想法变成产品。将这个大目标细分一下，会得到这样几个子项，即企业需要：更多的商业回报（发掘业务价值）更快的上线时间（做最简单，直接的版本）更好的软件质量（质量内嵌）更少的资源投入（减少浪费）其实就是传说中的多、快、好、省。如果说这是每一个软件项目的目标的话，那么团队里的每一个个人都应该向着这个目标而努力，任何其他形式的工作都可以归类为浪费。用Excel记录那些经常会失效，而且无法自动执行的测试用例是浪费，会因为页面布局变化而大面积失效的UI测试也是浪费，一个容易修复的缺陷要等到数周之后才被发现也是浪费。在这个大前提下，我们再来思考QA在团队里应该做什么以及怎么做。QA的职责Lisa Crispin在《敏捷软件测试》中提到过一个很著名的模型：敏捷测试四象限。这个模型是QA制定测试策略时的一个重要参考：如果按照纵向划分的话，图中的活动，越向上越面向业务；越向下越面向技术。横向划分的话，往左是支撑团队；往右是评价产品。其实简化一下，QA在团队里的工作，可以分为两大类：确保我们在正确的交付产品确保我们交付了正确的产品根据这个四象限的划分，大部分团队可能都会从Q2起步：QA会和BA，甚至UX一起，从需求分析入手，进行需求分析，业务场景梳理，这时候没有具体的可以被测试的软件代码。不过这并不妨碍测试活动，比如一些纸上原型的设计（感谢刘海生供图）：通过这一阶段之后，我们已经有了用户故事，这时候QA需要和开发一起编写用户故事的自动化验收测试。当开发交付一部分功能之后，QA就可以做常规的用户故事测试，几个迭代之后，QA开始进行跨功能需求测试和探索性测试等。根据探索性测试的结果，QA可能会调整测试策略，调整测试优先级，完善测试用例等等。根据项目的不同，团队可以从不同的象限开始测试策略的制定。事实上，Q1-Q4仅仅是一个编号，与时间、阶段并无关系，Lisa Crispin还专门撰文解释过。关于QA如何在软件分析的上游就介入，然后通过BDD的方式与业务分析师一起产出软件的各种规格描述，并通过实例的方式来帮助整个团队对需求的理解，ThoughtWorks的林冰玉有一篇文章很好的介绍了BDD的正确做法。如果将QA的外延扩展到在线的生产环境，制定合理的测量指标，调整测试策略，强烈推荐林冰玉写的另一篇文章产品环境中的QA。其他职责事实上，软件生命周期中有很多的活动，有很多处于灰色地段。既可以说是应该开发做，又可以说应该QA做，甚至可以推给其他角色（比如OPs）。不过我们知道，一旦涉及角色，人们就再也不会按照全局优化的思路来应对问题了。这种灰色的活动包括：持续集成的搭建测试环境的创建于维护UAT上的数据准备代码中的测试代码的维护测试代码的重构在团队实践中，这些活动我们通常会让QA和开发或者OPs同事一起结对来完成。一方面避免知识孤岛的形成，另一方面在跨角色的工作中，也可以激发出更多不同的思路。万能的QA？虽然在这些活动中，QA都会参与，但是并不是说团队里只要有一个QA就可以了。QA在参与这些活动时，侧重点还是有很大不同的。比如需求分析阶段，如果有QA的加入，一些从QA角度可以发现的有明显缺陷的场景，则可以在分析阶段就得到很好的处理。另一方面，尽早介入可以设计出更合理的测试计划（比如哪些功能的优先级比较高，用户更会频繁使用，那么对应的测试比重也会更高）。在Story分析与书写阶段，QA可以帮助写出更加合理的验收条件，既满足业务需求，又可以很好的指导开发。在和开发一起编写澄清需求时，主要是编写自动化验收测试，而不是实际编写业务逻辑的实现（虽然QA应该参与Code Reivew环节，学习并分享自己的观点）；甚至在上线运维阶段，QA还需要和OPs一起来设计用户数据的采集指标（比如用户访问的关键路径，浏览器版本，地区的区分等），从而制定出新的测试策略。扩展阅读What is Agile testing &#8211; How does automation help?敏捷实践Showcase的七宗罪产品环境下的QA《敏捷软件测试》测试自动化后，我们还需要QA吗？，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>351<docid>     <title>C++ 文件操作详解</title>     <link>http://blog.jobbole.com/106992/</link>     <content>C++ 通过以下几个类支持文件的输入输出：ofstream: 写操作（输出）的文件类 (由ostream引申而来)ifstream: 读操作（输入）的文件类(由istream引申而来)fstream: 可同时读写操作的文件类 (由iostream引申而来)打开文件(Open a file)对这些类的一个对象所做的第一个操作通常就是将它和一个真正的文件联系起来，也就是说打开一个文件。被打开的文件在程序中由一个流对象(stream object)来表示 (这些类的一个实例) ，而对这个流对象所做的任何输入输出操作实际就是对该文件所做的操作。要通过一个流对象打开一个文件，我们使用它的成员函数open()：void open (const char * filename, openmode mode);这里filename 是一个字符串，代表要打开的文件名，mode 是以下标志符的一个组合： ios::in 为输入(读)而打开文件ios::out 为输出(写)而打开文件ios::ate 初始位置：文件尾ios::app 所有输出附加在文件末尾ios::trunc 如果文件已存在则先删除该文件ios::binary 二进制方式这些标识符可以被组合使用，中间以”或”操作符(|)间隔。例如，如果我们想要以二进制方式打开文件&#8221;example.bin&#8221; 来写入一些数据，我们可以通过以下方式调用成员函数open（）来实现：ofstream file;file.open ("example.bin", ios::out | ios::app | ios::binary);ofstream, ifstream 和 fstream所有这些类的成员函数open 都包含了一个默认打开文件的方式，这三个类的默认方式各不相同： 类 参数的默认方式ofstream ios::out | ios::truncifstream ios::infstream ios::in | ios::out只有当函数被调用时没有声明方式参数的情况下，默认值才会被采用。如果函数被调用时声明了任何参数，默认值将被完全改写，而不会与调用参数组合。由 于对类ofstream, ifstream 和 fstream 的对象所进行的第一个操作通常都是打开文件，这些类都有一个构造函数可以直接调用open 函数，并拥有同样的参数。这样，我们就可以通过以下方式进行与上面同样的定义对象和打开文件的操作：ofstream file ("example.bin", ios::out | ios::app | ios::binary);两种打开文件的方式都是正确的。你可以通过调用成员函数is_open()来检查一个文件是否已经被顺利的打开了：bool is_open();它返回一个布尔(bool)值，为真（true）代表文件已经被顺利打开，假( false )则相反。关闭文件(Closing a file)当文件读写操作完成之后，我们必须将文件关闭以使文件重新变为可访问的。关闭文件需要调用成员函数close()，它负责将缓存中的数据排放出来并关闭文件。它的格式很简单：void close ();这个函数一旦被调用，原先的流对象(stream object)就可以被用来打开其它的文件了，这个文件也就可以重新被其它的进程(process)所有访问了。为防止流对象被销毁时还联系着打开的文件，析构函数(destructor)将会自动调用关闭函数close。文本文件(Text mode files)类ofstream, ifstream 和fstream 是分别从ostream, istream 和iostream 中引申而来的。这就是为什么 fstream 的对象可以使用其父类的成员来访问数据。一般来说，我们将使用这些类与同控制台(console)交互同样的成员函数(cin 和 cout)来进行输入输出。如下面的例题所示，我们使用重载的插入操作符// writing on a text file#include &lt;fstream&gt;using namespace std;int main(){    ofstream examplefile("example.txt");    if (examplefile.is_open())    {        examplefile &lt;&lt; "This is a line.\n";        examplefile &lt;&lt; "This is another line.\n";        examplefile.close();    }    return 0;}从文件中读入数据也可以用与 cin的使用同样的方法：// reading a text file#include &lt;iostream&gt;#include &lt;fstream&gt;#include &lt;cstdlib&gt;using namespace std;int main (){    char buffer[256];    ifstream examplefile("example.txt");    if (! examplefile.is_open())    {        cout &lt;&lt; "Error opening file"; exit (1);    }    while (!examplefile.eof())    {        examplefile.getline(buffer,100);        cout&lt;&lt;buffer&lt;&lt; endl;    }    return 0;}//This is a line.//This is another line.上面的例子读入一个文本文件的内容，然后将它打印到屏幕上。注意我们使用了一个新的成员函数叫做eof ，它是ifstream 从类 ios 中继承过来的，当到达文件末尾时返回true 。状态标志符的验证(Verification of state flags)除了eof()以外，还有一些验证流的状态的成员函数（所有都返回bool型返回值）：bad()如果在读写过程中出错，返回 true 。例如：当我们要对一个不是打开为写状态的文件进行写入时，或者我们要写入的设备没有剩余空间的时候。fail()除了与bad() 同样的情况下会返回 true 以外，加上格式错误时也返回true ，例如当想要读入一个整数，而获得了一个字母的时候。eof()如果读文件到达文件末尾，返回true。good()这是最通用的：如果调用以上任何一个函数返回true 的话，此函数返回 false 。要想重置以上成员函数所检查的状态标志，你可以使用成员函数clear()，没有参数。获得和设置流指针(get and put stream pointers)所有输入/输出流对象(i/o streams objects)都有至少一个流指针：ifstream， 类似istream, 有一个被称为get pointer的指针，指向下一个将被读取的元素。ofstream, 类似 ostream, 有一个指针 put pointer ，指向写入下一个元素的位置。fstream, 类似 iostream, 同时继承了get 和 put我们可以通过使用以下成员函数来读出或配置这些指向流中读写位置的流指针：tellg() 和 tellp()这两个成员函数不用传入参数，返回pos_type 类型的值(根据ANSI-C++ 标准) ，就是一个整数，代表当前get 流指针的位置 (用tellg) 或 put 流指针的位置(用tellp).seekg() 和seekp()这对函数分别用来改变流指针get 和put的位置。两个函数都被重载为两种不同的原型：seekg ( pos_type position );seekp ( pos_type position );使用这个原型，流指针被改变为指向从文件开始计算的一个绝对位置。要求传入的参数类型与函数 tellg 和tellp 的返回值类型相同。seekg ( off_type offset, seekdir direction );seekp ( off_type offset, seekdir direction );使用这个原型可以指定由参数direction决定的一个具体的指针开始计算的一个位移(offset)。它可以是：ios::beg 从流开始位置计算的位移ios::cur 从流指针当前位置开始计算的位移ios::end 从流末尾处开始计算的位移流指针 get 和 put 的值对文本文件(text file)和二进制文件(binary file)的计算方法都是不同的，因为文本模式的文件中某些特殊字符可能被修改。由于这个原因，建议对以文本文件模式打开的文件总是使用seekg 和 seekp的第一种原型，而且不要对tellg 或 tellp 的返回值进行修改。对二进制文件，你可以任意使用这些函数，应该不会有任何意外的行为产生。以下例子使用这些函数来获得一个二进制文件的大小：// obtaining file size#include &lt;iostream&gt;#include &lt;fstream&gt;using namespace std;int main (){    const char * filename = "example.txt";    long l,m;    ifstream file(filename, ios::in|ios::binary);    l = file.tellg();    file.seekg(0, ios::end);    m = file.tellg();    file.close();    cout &lt;&lt;"size of "&lt;&lt; filename;    cout &lt;&lt;" is "&lt;&lt; (m-l)&lt;&lt;" bytes.\n";    return 0;}//size of example.txt is 40 bytes.二进制文件(Binary files)在二进制文件中，使用&gt;，以及函数（如getline）来操作符输入和输出数据，没有什么实际意义，虽然它们是符合语法的。文 件流包括两个为顺序读写数据特殊设计的成员函数：write 和 read。第一个函数 (write) 是ostream 的一个成员函数，都是被ofstream所继承。而read 是istream 的一个成员函数，被ifstream 所继承。类 fstream 的对象同时拥有这两个函数。它们的原型是：write ( char * buffer, streamsize size );read ( char * buffer, streamsize size );这里 buffer 是一块内存的地址，用来存储或读出数据。参数size 是一个整数值，表示要从缓存（buffer）中读出或写入的字符数。// reading binary file#include &lt;iostream&gt;#include &lt;fstream&gt;using namespace std;int main (){    const char * filename = "example.txt";    char * buffer;    long size;    ifstream file(filename, ios::in|ios::binary|ios::ate);    size = file.tellg();    file.seekg(0, ios::beg);    buffer = new char [size];    file.read(buffer, size);    file.close();    cout &lt;&lt;"the complete file is in a buffer";    delete[] buffer;    return 0;}//The complete file is in a buffer缓存和同步(Buffers and Synchronization)当我们对文件流进行操作的时候，它们与一个streambuf 类型的缓存(buffer)联系在一起。这个缓存（buffer）实际是一块内存空间，作为流(stream)和物理文件的媒介。例如，对于一个输出流， 每次成员函数put (写一个单个字符)被调用，这个字符不是直接被写入该输出流所对应的物理文件中的，而是首先被插入到该流的缓存（buffer）中。当缓存被排放出来(flush)时，它里面的所有数据或者被写入物理媒质中（如果是一个输出流的话），或者简单的被抹掉(如果是一个输入流的话)。这个过程称为同步(synchronization)，它会在以下任一情况下发生：当文件被关闭时: 在文件被关闭之前，所有还没有被完全写出或读取的缓存都将被同步。当缓存buffer 满时:缓存Buffers 有一定的空间限制。当缓存满时，它会被自动同步。控制符明确指明:当遇到流中某些特定的控制符时，同步会发生。这些控制符包括：flush 和endl。明确调用函数sync(): 调用成员函数sync() (无参数)可以引发立即同步。这个函数返回一个int 值，等于-1 表示流没有联系的缓存或操作失败在C++中，有一个stream这个类，所有的I/O都以这个“流”类为基础的，包括我们要认识的文件I/O，stream这个类有两个重要的运算符：1、插入器(&lt;&lt;) 向流输出数据。比如说系统有一个默认的标准输出流(cout)，一般情况下就是指的显示器，所以，cout2、析取器(&gt;&gt;)从流中输入数据。比如说系统有一个默认的标准输入流(cin)，一般情况下就是指的键盘，所以，cin&gt;&gt;x;就表示从标准输入流中读取一个指定类型(即变量x的类型)的数据。在C++中，对文件的操作是通过stream的子类fstream(file stream)来实现的，所以，要用这种方式操作文件，就必须加入头文件fstream.h。下面就把此类的文件操作过程一一道来。一、打开文件在fstream类中，有一个成员函数open()，就是用来打开文件的，其原型是：void open(const char* filename,int mode,int access);参数：filename： 要打开的文件名mode： 要打开文件的方式access： 打开文件的属性打开文件的方式在类ios(是所有流式I/O类的基类)中定义，常用的值如下：ios::app： 以追加的方式打开文件ios::ate： 文件打开后定位到文件尾，ios:app就包含有此属性ios::binary： 以二进制方式打开文件，缺省的方式是文本方式。两种方式的区别见前文ios::in： 文件以输入方式打开ios::out： 文件以输出方式打开ios::nocreate： 不建立文件，所以文件不存在时打开失败ios::noreplace：不覆盖文件，所以打开文件时如果文件存在失败ios::trunc： 如果文件存在，把文件长度设为0可以用“或”把以上属性连接起来，如ios::out|ios::binary打开文件的属性取值是：0：普通文件，打开访问1：只读文件2：隐含文件4：系统文件可以用“或”或者“+”把以上属性连接起来 ，如3或1|2就是以只读和隐含属性打开文件。例如：以二进制输入方式打开文件c:config.sysfstream file1;file1.open("c:config.sys",ios::binary|ios::in,0);如果open函数只有文件名一个参数，则是以读/写普通文件打开，即：file1.open("c:config.sys");&lt;=&gt;file1.open("c:config.sys",ios::in|ios::out,0);另外，fstream还有和open()一样的构造函数，对于上例，在定义的时侯就可以打开文件了：fstream file1("c:config.sys");特别提出的是，fstream有两个子类：ifstream(input file stream)和ofstream(outpu file stream)，ifstream默认以输入方式打开文件，而ofstream默认以输出方式打开文件。ifstream file2("c:pdos.def");//以输入方式打开文件ofstream file3("c:x.123");//以输出方式打开文件所以，在实际应用中，根据需要的不同，选择不同的类来定义：如果想以输入方式打开，就用ifstream来定义；如果想以输出方式打开，就用ofstream来定义；如果想以输入/输出方式来打开，就用fstream来定义。二、关闭文件打开的文件使用完成后一定要关闭，fstream提供了成员函数close()来完成此操作，如：file1.close();就把file1相连的文件关闭。三、读写文件读写文件分为文本文件和二进制文件的读取，对于文本文件的读取比较简单，用插入器和析取器就可以了；而对于二进制的读取就要复杂些，下要就详细的介绍这两种方式1、文本文件的读写文本文件的读写很简单：用插入器(&gt;)从文件输入。假设file1是以输入方式打开，file2以输出打开。示例如下：file2"I Love You";//向文件写入字符串"I Love You"int i;file1&gt;&gt;i;//从文件输入一个整数值。这种方式还有一种简单的格式化能力，比如可以指定输出为16进制等等，具体的格式有以下一些操纵符 功能 输入/输出dec 格式化为十进制数值数据 输入和输出endl 输出一个换行符并刷新此流 输出ends 输出一个空字符 输出hex 格式化为十六进制数值数据 输入和输出oct 格式化为八进制数值数据 输入和输出setpxecision(int p) 设置浮点数的精度位数 输出比如要把123当作十六进制输出：file1&lt;&lt;hex&lt;&lt;123;要把3.1415926以5位精度输出：file1&lt;&lt;setpxecision(5)&lt;&lt;3.1415926。2、二进制文件的读写①put()put()函数向流写入一个字符，其原型是ofstream &amp;put(char ch)，使用也比较简单，如file1.put(&#8216;c&#8217;);就是向流写一个字符&#8217;c&#8217;。②get()get()函数比较灵活，有3种常用的重载形式：一种就是和put()对应的形式：ifstream &amp;get(char &amp;ch);功能是从流中读取一个字符，结果保存在引用ch中，如果到文件尾，返回空字符。如file2.get(x);表示从文件中读取一个字符，并把读取的字符保存在x中。另一种重载形式的原型是： int get();这种形式是从流中返回一个字符，如果到达文件尾，返回EOF，如x=file2.get();和上例功能是一样的。还 有一种形式的原型是：ifstream &amp;get(char *buf,int num,char delim=&#8217;n&#8217;)；这种形式把字符读入由 buf 指向的数组，直到读入了 num 个字符或遇到了由 delim 指定的字符，如果没使用 delim 这个参数，将使用缺省值换行符&#8217;n&#8217;。例如：file2.get(str1,127,&#8217;A&#8217;);//从文件中读取字符到字符串str1，当遇到字符&#8217;A&#8217;或读取了127个字符时终止。③读写数据块要读写二进制数据块，使用成员函数read()和write()成员函数，它们原型如下：read(unsigned char *buf,int num);write(const unsigned char *buf,int num);read() 从文件中读取 num 个字符到 buf 指向的缓存中，如果在还未读入 num 个字符时就到了文件尾，可以用成员函数 int gcount();来取得实际读取的字符数；而 write() 从buf 指向的缓存写 num 个字符到文件中，值得注意的是缓存的类型是 unsigned char *，有时可能需要类型转换。例：unsigned char str1[]="I Love You";int n[5];ifstream in("xxx.xxx");ofstream out("yyy.yyy");out.write(str1,strlen(str1));//把字符串str1全部写到yyy.yyy中in.read((unsigned char*)n,sizeof(n));//从xxx.xxx中读取指定个整数，注意类型转换in.close();out.close();四、检测 EOF成员函数eof()用来检测是否到达文件尾，如果到达文件尾返回非0值，否则返回0。原型是int eof();例：if(in.eof())ShowMessage("已经到达文件尾！");五、文件定位和 C的文件操作方式不同的是，C++ I/O系统管理两个与一个文件相联系的指针。一个是读指针，它说明输入操作在文件中的位置；另一个是写指针，它下次写操作的位置。每次执行输入或输出时， 相应的指针自动变化。所以，C++的文件定位分为读位置和写位置的定位，对应的成员函数是 seekg()和 seekp()，seekg()是设置读位置，seekp是设置写位置。它们最通用的形式如下：istream &amp;seekg(streamoff offset,seek_dir origin);ostream &amp;seekp(streamoff offset,seek_dir origin);streamoff定义于 iostream.h 中，定义有偏移量 offset 所能取得的最大值，seek_dir 表示移动的基准位置，是一个有以下值的枚举：ios::beg： 文件开头ios::cur： 文件当前位置ios::end： 文件结尾这两个函数一般用于二进制文件，因为文本文件会因为系统对字符的解释而可能与预想的值不同。例：file1.seekg(1234,ios::cur);//把文件的读指针从当前位置向后移1234个字节file2.seekp(1234,ios::beg);//把文件的写指针从文件开头向后移1234个字节C++ 文件操作详解，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>352<docid>     <title>漫画算法：最小栈的实现</title>     <link>http://blog.jobbole.com/106940/</link>     <content>小灰回忆起当时的情景&#8230;&#8230;题目：实现一个栈，带有出栈（pop），入栈（push），取最小元素（getMin）三个方法。要保证这三个方法的时间复杂度都是O（1）。小灰的想法：1.创建一个整型变量 min，初始值-12.当第一个元素进栈时，让min=0，即把唯一的元素当做最小值。3.之后每当一个新元素近栈，让新元素和min指向位置的元素比较大小。如果Stack[min]大于新元素，则min等于新元素的下标；Stack[min]小于新元素，则不做改变。4.当调用getMin方法的时候，直接返回min所指向位置的元素即可。按这个思路，近栈、出栈、取最小值的时间复杂度都是O(1)，空间复杂度也是O(1)。回忆到此结束&#8230;&#8230;解法：1.设原有的栈叫做栈A，此时创建一个额外的栈B，用于辅助原栈A。2.当第一个元素进入栈A的时候，让新元素的下标进入栈B。这个唯一的元素是栈A的当前最小值。（考虑到栈中元素可能不是类对象，所以B栈存储的是A栈元素的下标）3.每当新元素进入栈A时，比较新元素和栈A当前最小值的大小，如果小于栈A当前最小值，则让新元素的下标进入栈B，此时栈B的栈顶元素就是栈A当前最小值的下标。4.每当栈A有元素出栈时，如果出栈元素是栈A当前最小值，则让栈B的栈顶元素也出栈。此时栈B余下的栈顶元素所指向的，是栈A当中原本第二小的元素，代替刚才的出栈元素成为了栈A的当前最小值。（备胎转正）5.当调用getMin方法的时候，直接返回栈B的栈顶所指向的栈A对应元素即可。这个解法中近栈、出栈、取最小值的时间复杂度都是O(1)，最坏情况空间复杂度是O(N)。扩展题目：实现一个队列，带有出队（deQueue），入队（enQueue），取最小元素（getMin）三个方法。要保证这三个方法的时间复杂度都尽可能小。漫画算法：最小栈的实现，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>353<docid>     <title>Go 中的锁源码实现：Mutex</title>     <link>http://blog.jobbole.com/106981/</link>     <content>上一篇文章《当我们谈论锁，我们谈什么》 中我提到了锁，准确地说是信号量（semaphore, mutext是semaphore的一种）的实现方式有两种：wait的时候忙等待或者阻塞自己。//忙等待wait(S) {    while(S&lt;=0)        ;   //no-op    S--}//阻塞wait(semaphore *S) {    S-&gt;value--;    if (S-&gt;value &lt; 0) {        add this process to S-&gt;list;        block()    }}忙等待和阻塞方式各有优劣：忙等待会使CPU空转，好处是如果在当前时间片内锁被其他进程释放，当前进程直接就能拿到锁而不需要CPU进行进程调度了。适用于锁占用时间较短的情况，且不适合于单处理器。阻塞不会导致CPU空转，但是进程切换也需要代价，比如上下文切换，CPU Cache Miss。下面看一下golang的源码里面是怎么实现锁的。golang里面的锁有两个特性：1.不支持嵌套锁2.可以一个goroutine lock，另一个goroutine unlock互斥锁golang中的互斥锁定义在src/sync/mutex.go// A Mutex is a mutual exclusion lock.// Mutexes can be created as part of other structures;// the zero value for a Mutex is an unlocked mutex.//// A Mutex must not be copied after first use.type Mutex struct {    state int32    sema  uint32}const (    mutexLocked = 1 &lt;&lt; iota // mutex is locked    mutexWoken    mutexWaiterShift = iota)看上去也是使用信号量的方式来实现的。sema就是信号量，一个非负数；state表示Mutex的状态。mutexLocked表示锁是否可用（0可用，1被别的goroutine占用），mutexWoken=2表示mutex是否被唤醒，mutexWaiterShift=2表示统计阻塞在该mutex上的goroutine数目需要移位的数值。将3个常量映射到state上就是state:   |32|31|...|3|2|1|         \__________/ | |               |      | |               |      | mutex的占用状态（1被占用，0可用）               |      |               |      mutex的当前goroutine是否被唤醒               |               当前阻塞在mutex上的goroutine数1.Lock下面看一下mutex的lock。func (m *Mutex) Lock() {    // Fast path: grab unlocked mutex.    if atomic.CompareAndSwapInt32(&amp;m.state, 0, mutexLocked) {        if race.Enabled {            race.Acquire(unsafe.Pointer(m))        }        return    }    awoke := false    iter := 0    for {        old := m.state        new := old | mutexLocked        if old&amp;mutexLocked != 0 {            if runtime_canSpin(iter) {                // Active spinning makes sense.                // Try to set mutexWoken flag to inform Unlock                // to not wake other blocked goroutines.                if !awoke &amp;&amp; old&amp;mutexWoken == 0 &amp;&amp; old&gt;&gt;mutexWaiterShift != 0 &amp;&amp;                    atomic.CompareAndSwapInt32(&amp;m.state, old, old|mutexWoken) {                    awoke = true                }                runtime_doSpin()                iter++                continue            }            new = old + 1&lt;&lt;mutexWaiterShift        }        if awoke {            // The goroutine has been woken from sleep,            // so we need to reset the flag in either case.            if new&amp;mutexWoken == 0 {                panic("sync: inconsistent mutex state")            }            new &amp;^= mutexWoken        }        if atomic.CompareAndSwapInt32(&amp;m.state, old, new) {            if old&amp;mutexLocked == 0 {                break            }            runtime_Semacquire(&amp;m.sema)            awoke = true            iter = 0        }    }    if race.Enabled {        race.Acquire(unsafe.Pointer(m))    }}这里要解释一下atomic.CompareAndSwapInt32()，atomic包是由golang提供的low-level的原子操作封装，主要用来解决进程同步为题，官方并不建议直接使用。我在上一篇文章中说过，操作系统级的锁的实现方案是提供原子操作，然后基本上所有锁相关都是通过这些原子操作来实现。CompareAndSwapInt32()就是int32型数字的compare-and-swap实现。cas(&amp;addr, old, new)的意思是if *addr==old, *addr=new。大部分操作系统支持CAS，x86指令集上的CAS汇编指令是CMPXCHG。下面我们继续看上面的lock函数。if atomic.CompareAndSwapInt32(&amp;m.state, 0, mutexLocked) {    if race.Enabled {        race.Acquire(unsafe.Pointer(m))    }    return}首先先忽略race.Enabled相关代码，这个是go做race检测时候用的，这个时候需要带上-race，则race.Enabled被置为true。Lock函数的入口处先调用CAS尝试去获得锁，如果m.state==0，则将其置为1，并返回。继续往下看，首先将m.state的值保存到old变量中，new=old|mutexLocked。直接看能让for退出的第三个if条件，首先调用CAS试图将m.state设置成new的值。然后看一下if里面，如果m.state之前的值也就是old如果没有被占用则表示当前goroutine拿到了锁，则break。我们先看一下new的值的变化，第一个if条件里面new = old + 1&lt;&lt;mutexWaiterShift，结合上面的mutex的state各个位的意义，这句话的意思表示mutex的等待goroutine数目加1。还有awoke为true的情况下，要将m.state的标志位取消掉，也就是这句new &amp;^= mutexWoken的作用。继续看第三个if条件里面，如果里面的if判断失败，则走到runtime_Semacquire()。看一下这个函数runtime_Semacquire()函数，由于golang1.5之后把之前C语言实现的代码都干掉了，所以现在很低层的代码都是go来实现的。通过源码中的定义我们可以知道这个其实就是信号量的wait操作：等待*s&gt;0，然后减1。编译器里使用的是sync_runtime.semacquire()函数。// Semacquire waits until *s &gt; 0 and then atomically decrements it.// It is intended as a simple sleep primitive for use by the synchronization// library and should not be used directly.func runtime_Semacquire(s *uint32)//go:linkname sync_runtime_Semacquire sync.runtime_Semacquirefunc sync_runtime_Semacquire(addr *uint32) {    semacquire(addr, true)}func semacquire(addr *uint32, profile bool) {    gp := getg()    if gp != gp.m.curg {        throw("semacquire not on the G stack")    }    // Easy case.    if cansemacquire(addr) {        return    }    // Harder case:    //  increment waiter count    //  try cansemacquire one more time, return if succeeded    //  enqueue itself as a waiter    //  sleep    //  (waiter descriptor is dequeued by signaler)    s := acquireSudog()    root := semroot(addr)    t0 := int64(0)    s.releasetime = 0    if profile &amp;&amp; blockprofilerate &gt; 0 {        t0 = cputicks()        s.releasetime = -1    }    for {        lock(&amp;root.lock)        // Add ourselves to nwait to disable "easy case" in semrelease.        atomic.Xadd(&amp;root.nwait, 1)        // Check cansemacquire to avoid missed wakeup.        if cansemacquire(addr) {            atomic.Xadd(&amp;root.nwait, -1)            unlock(&amp;root.lock)            break        }        // Any semrelease after the cansemacquire knows we're waiting        // (we set nwait above), so go to sleep.        root.queue(addr, s)        goparkunlock(&amp;root.lock, "semacquire", traceEvGoBlockSync, 4)        if cansemacquire(addr) {            break        }    }    if s.releasetime &gt; 0 {        blockevent(s.releasetime-t0, 3)    }    releaseSudog(s)}上面的代码有点多，我们只看和锁相关的代码。root := semroot(addr)   //seg 1atomic.Xadd(&amp;root.nwait, 1) // seg 2root.queue(addr, s) //seg 3seg 1代码片段semroot()返回结构体semaRoot。存储方式是先对信号量的地址做移位，然后做哈希（对251取模，这个地方为什么是左移3位和对251取模不太明白）。semaRoot相当于和mutex.sema绑定。看一下semaRoot的结构：一个sudog链表和一个nwait整型字段。nwait字段表示该信号量上等待的goroutine数目。head和tail表示链表的头和尾巴，同时为了线程安全，需要使用一个互斥量来保护链表。这个时候细心的同学应该注意到一个问题，我们前面不是从Mutex跟过来的吗，相当于Mutex的实现了使用了Mutex本身？实际上semaRoot里面的mutex只是内部使用的一个简单版本，和sync.Mutex不是同一个。现在把这些倒推回去，runtime_Semacquire()的作用其实就是semaphore的wait(&amp;s)：如果*s&lt;0，则将当前goroutine塞入信号量s关联的goroutine waiting list，并休眠。func semroot(addr *uint32) *semaRoot {    return &amp;semtable[(uintptr(unsafe.Pointer(addr))&gt;&gt;3)%semTabSize].root}type semaRoot struct {    lock  mutex    head  *sudog    tail  *sudog    nwait uint32 // Number of waiters. Read w/o the lock.}// Prime to not correlate with any user patterns.const semTabSize = 251var semtable [semTabSize]struct {    root semaRoot    pad  [sys.CacheLineSize - unsafe.Sizeof(semaRoot{})]byte}现在mutex.Lock()还剩下runtime_canSpin(iter)这一段，这个地方其实就是锁的自旋版本。golang对于自旋锁的取舍做了一些限制：1.多核; 2.GOMAXPROCS&gt;1; 3.至少有一个运行的P并且local的P队列为空。golang的自旋尝试只会做几次，并不会一直尝试下去，感兴趣的可以跟一下源码。func sync_runtime_canSpin(i int) bool {    // sync.Mutex is cooperative, so we are conservative with spinning.    // Spin only few times and only if running on a multicore machine and    // GOMAXPROCS&gt;1 and there is at least one other running P and local runq is empty.    // As opposed to runtime mutex we don't do passive spinning here,    // because there can be work on global runq on on other Ps.    if i &gt;= active_spin || ncpu &lt;= 1 || gomaxprocs &lt;= int32(sched.npidle+sched.nmspinning)+1 {        return false    }    if p := getg().m.p.ptr(); !runqempty(p) {        return false    }    return true}func sync_runtime_doSpin() {    procyield(active_spin_cnt)}UnlockMutex的Unlock函数定义如下// Unlock unlocks m.// It is a run-time error if m is not locked on entry to Unlock.//// A locked Mutex is not associated with a particular goroutine.// It is allowed for one goroutine to lock a Mutex and then// arrange for another goroutine to unlock it.func (m *Mutex) Unlock() {    if race.Enabled {        _ = m.state        race.Release(unsafe.Pointer(m))    }    // Fast path: drop lock bit.    new := atomic.AddInt32(&amp;m.state, -mutexLocked)    if (new+mutexLocked)&amp;mutexLocked == 0 {        panic("sync: unlock of unlocked mutex")    }    old := new    for {        // If there are no waiters or a goroutine has already        // been woken or grabbed the lock, no need to wake anyone.        if old&gt;&gt;mutexWaiterShift == 0 || old&amp;(mutexLocked|mutexWoken) != 0 {            return        }        // Grab the right to wake someone.        new = (old - 1&lt;&lt;mutexWaiterShift) | mutexWoken        if atomic.CompareAndSwapInt32(&amp;m.state, old, new) {            runtime_Semrelease(&amp;m.sema)            return        }        old = m.state    }}函数入口处的四行代码和race detection相关，暂时不用管。接下来的四行代码是判断是否是嵌套锁。new是m.state-1之后的值。我们重点看for循环内部的代码。if old&gt;&gt;mutexWaiterShift == 0 || old&amp;(mutexLocked|mutexWoken) != 0 {    return}这两句是说：如果阻塞在该锁上的goroutine数目为0或者mutex处于lock或者唤醒状态，则返回。new = (old - 1&lt;&lt;mutexWaiterShift) | mutexWokenif atomic.CompareAndSwapInt32(&amp;m.state, old, new) {    runtime_Semrelease(&amp;m.sema)    return}这里先将阻塞在mutex上的goroutine数目减一，然后将mutex置于唤醒状态。runtime_Semrelease和runtime_Semacquire的作用刚好相反，将阻塞在信号量上goroutine唤醒。有人可能会问唤醒的是哪个goroutine，那么我们可以看一下goroutine wait list的入队列和出队列代码。func (root *semaRoot) queue(addr *uint32, s *sudog) {    s.g = getg()    s.elem = unsafe.Pointer(addr)    s.next = nil    s.prev = root.tail    if root.tail != nil {        root.tail.next = s    } else {        root.head = s    }    root.tail = s}func (root *semaRoot) dequeue(s *sudog) {    if s.next != nil {        s.next.prev = s.prev    } else {        root.tail = s.prev    }    if s.prev != nil {        s.prev.next = s.next    } else {        root.head = s.next    }    s.elem = nil    s.next = nil    s.prev = nil}如上所示，wait list入队是插在队尾，出队是从头出。参考《Go语言学习笔记》Go 中的锁源码实现：Mutex，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>354<docid>     <title>Linux 新的API signalfd、timerfd、eventfd使用说明</title>     <link>http://blog.jobbole.com/106933/</link>     <content>三种新的fd加入linux内核的的版本：signalfd：2.6.22timerfd：2.6.25eventfd：2.6.22三种fd的意义：lsignalfd传统的处理信号的方式是注册信号处理函数；由于信号是异步发生的，要解决数据的并发访问，可重入问题。signalfd可以将信号抽象为一个文件描述符，当有信号发生时可以对其read，这样可以将信号的监听放到select、poll、epoll等监听队列中。ltimerfd可以实现定时器的功能，将定时器抽象为文件描述符，当定时器到期时可以对其read，这样也可以放到监听队列的主循环中。leventfd实现了线程之间事件通知的方式，也可以用于用户态和内核通信。eventfd的缓冲区大小是sizeof(uint64_t)；向其write可以递增这个计数器，read操作可以读取，并进行清零；eventfd也可以放到监听队列中，当计数器不是0时，有可读事件发生，可以进行读取。三种新的fd都可以进行监听，当有事件触发时，有可读事件发生。signalfd涉及API：点击(此处)折叠或打开#include &lt;sys/signalfd.h&gt; int signalfd(int fd, const sigset_t *mask, int flags);参数fd：如果是-1则表示新建一个，如果是一个已经存在的则表示修改signalfd所关联的信号；参数mask：信号集合；参数flag：内核版本2.6.27以后支持SFD_NONBLOCK、SFD_CLOEXEC；成功返回文件描述符，返回的fd支持以下操作：read、select(poll、epoll)、closel例子#include &lt;sys/signalfd.h&gt;   #include &lt;signal.h&gt;   #include &lt;unistd.h&gt;   #include &lt;stdlib.h&gt;   #include &lt;stdio.h&gt;    #define handle_error(msg) \   do { perror(msg); exit(EXIT_FAILURE); } while (0)    int main(int argc, char *argv[])   {     sigset_t mask;     int sfd;     struct signalfd_siginfo fdsi;     ssize_t s;      sigemptyset(&amp;mask);     sigaddset(&amp;mask, SIGINT);     sigaddset(&amp;mask, SIGQUIT);      if (sigprocmask(SIG_BLOCK, &amp;mask, NULL) == -1)         handle_error("sigprocmask");      sfd = signalfd(-1, &amp;mask, 0);     if (sfd == -1)         handle_error("signalfd");      for (;;) {         s = read(sfd, &amp;fdsi, sizeof(struct signalfd_siginfo));         if (s != sizeof(struct signalfd_siginfo))             handle_error("read");          if (fdsi.ssi_signo == SIGINT) {            printf("Got SIGINT\n");         } else if (fdsi.ssi_signo == SIGQUIT) {         printf("Got SIGQUIT\n");         exit(EXIT_SUCCESS);         } else {         printf("Read unexpected signal\n");         }      }   }L17-L21：将感兴趣的信号加入到sigset_t中；L24：调用signalfd，把信号集与fd关联起来，第一个参数为-1表示新建一个signalfd，不是-1并且是一个合法的signalfd表示向其添加新的信号。L29：阻塞等待信号的发生并读取。根据读取的结果可以知道发生了什么信号。timerfd涉及的API#include &lt;sys/timerfd.h&gt; int timerfd_create(int clockid, int flags); int timerfd_settime(int fd, int flags, const struct itimerspec *new_value,struct itimerspec *old_value); int timerfd_gettime(int fd, struct itimerspec *curr_value);timerfd_create：创建一个timerfd；返回的fd可以进行如下操作：read、select(poll、epoll)、closetimerfd_settime：设置timer的周期，以及起始间隔timerfd_gettime：获取到期时间。//函数参数中数据结构如下： struct timespec {     time_t tv_sec; /* Seconds */     long tv_nsec; /* Nanoseconds */ };   struct itimerspec {     struct timespec it_interval; /* Interval for periodic timer */     struct timespec it_value; /* Initial expiration */ };l例子#include &lt;sys/timerfd.h&gt;   #include &lt;sys/time.h&gt;   #include &lt;time.h&gt;   #include &lt;unistd.h&gt;   #include &lt;stdlib.h&gt;   #include &lt;stdio.h&gt;   #include &lt;stdint.h&gt; /* Definition of uint64_t */    #define handle_error(msg) \   do { perror(msg); exit(EXIT_FAILURE); } while (0)    void printTime()   {       struct timeval tv;       gettimeofday(&amp;tv, NULL);       printf("printTime: current time:%ld.%ld ", tv.tv_sec, tv.tv_usec);   }    int main(int argc, char *argv[])   {       struct timespec now;       if (clock_gettime(CLOCK_REALTIME, &amp;now) == -1)           handle_error("clock_gettime");        struct itimerspec new_value;       new_value.it_value.tv_sec = now.tv_sec + atoi(argv[1]);       new_value.it_value.tv_nsec = now.tv_nsec;       new_value.it_interval.tv_sec = atoi(argv[2]);       new_value.it_interval.tv_nsec = 0;        int fd = timerfd_create(CLOCK_REALTIME, 0);       if (fd == -1)       handle_error("timerfd_create");        if (timerfd_settime(fd, TFD_TIMER_ABSTIME, &amp;new_value, NULL) == -1)           handle_error("timerfd_settime");        printTime();       printf("timer started\n");        for (uint64_t tot_exp = 0; tot_exp &lt; atoi(argv[3]);)       {           uint64_t exp;           ssize_t s = read(fd, &amp;exp, sizeof(uint64_t));           if (s != sizeof(uint64_t))               handle_error("read");            tot_exp += exp;           printTime();           printf("read: %llu; total=%llu\n",exp, tot_exp);   }    exit(EXIT_SUCCESS);  }代码L25-L29：初始化定时器的参数，初始间隔与定时间隔。L32：创建定时器fd，CLOCK_REALTIME：真实时间类型，修改时钟会影响定时器；CLOCK_MONOTONIC：相对时间类型，修改时钟不影响定时器。L35：设置定时器的值。L44：阻塞等待定时器到期。返回值是未处理的到期次数。比如定时间隔为2秒，但过了10秒才去读取，则读取的值是5。编译运行：编译时要加rt库(g++ -lrt timerfd.cc -o timerfd)[root@localhost appTest]# ./timerfd 5 2 10printTime:  current time:1357391736.146196 timer startedprintTime:  current time:1357391741.153430 read: 1; total=1printTime:  current time:1357391743.146550 read: 1; total=2printTime:  current time:1357391745.151483 read: 1; total=3printTime:  current time:1357391747.161155 read: 1; total=4printTime:  current time:1357391749.153934 read: 1; total=5printTime:  current time:1357391751.157309 read: 1; total=6printTime:  current time:1357391753.158384 read: 1; total=7printTime:  current time:1357391755.150470 read: 1; total=8printTime:  current time:1357391757.150253 read: 1; total=9printTime:  current time:1357391759.149954 read: 1; total=10[root@localhost appTest]#第一个参数5为第一次定时器到期间隔，第二个参数2为定时器的间隔，第三个参数为定时器到期10次则退出。程序运行(5+2*10)S退出。详细信息可以：man timerfd_createeventfd涉及API：#include &lt;sys/eventfd.h&gt; int eventfd(unsigned int initval, int flags);创建一个eventfd，这是一个计数器相关的fd，计数器不为零是有可读事件发生，read以后计数器清零，write递增计数器；返回的fd可以进行如下操作：read、write、select(poll、epoll)、close。这个函数会创建一个事件对象 (eventfd object), 用来实现，进程(线程)间的等待/通知(wait/notify) 机制. 内核会为这个对象维护一个64位的计数器(uint64_t)。并且使用第一个参数(initval)初始化这个计数器。调用这个函数就会返回一个新的文件描述符(event object)。2.6.27版本开始可以按位设置第二个参数(flags)。有如下的一些宏可以使用：lEFD_NONBLOCK功能同open(2)的O_NONBLOCK，设置对象为非阻塞状态，如果没有设置这个状态的话，read(2)读eventfd,并且计数器的值为0 就一直堵塞在read调用当中，要是设置了这个标志， 就会返回一个 EAGAIN 错误(errno = EAGAIN)。效果也如同 额外调用select(2)达到的效果。lEFD_CLOEXEC这个标识被设置的话，调用exec后会自动关闭文件描述符，防止泄漏。如果是2.6.26或之前版本的内核，flags 必须设置为0。创建这个对象后，可以对其做如下操作：1) write： 将缓冲区写入的8字节整形值加到内核计数器上。2) read： 读取8字节值， 并把计数器重设为0. 如果调用read的时候计数器为0， 要是eventfd是阻塞的， read就一直阻塞在这里，否则就得到 一个EAGAIN错误。如果buffer的长度小于8那么read会失败， 错误代码被设置成 EINVAL。3) poll select epoll4) close: 当不需要eventfd的时候可以调用close关闭， 当这个对象的所有句柄都被关闭的时候，内核会释放资源。 为什么不是close就直接释放呢， 如果调用fork 创建进程的时候会复制这个句柄到新的进程，并继承所有的状态。l例子#include &lt;sys/eventfd.h&gt; #include &lt;unistd.h&gt; #include &lt;stdio.h&gt; #include &lt;stdint.h&gt; #include &lt;stdlib.h&gt; #include &lt;errno.h&gt; #define handle_error(msg) \    do { perror(msg); exit(1); } while (0)int main( int argc, char **argv ){     uint64_t u;     ssize_t s;5 int j;     if ( argc &lt; 2 ) {        fprintf(stderr, "input in command argument");         exit(1);     }      int efd;     if ( (efd = eventfd(0, EFD_NONBLOCK)) == -1 )             handle_error("eventfd failed");       switch (fork()) {         case 0:             for( j = 1; j &lt; argc; j ++ ) {                 printf("Child writing %s to efd\n", argv[j] );                              u = strtoull(argv[j], NULL, 0); /* analogesly atoi */                 s = write(efd, &amp;u, sizeof(uint64_t));/*append u to counter */                 if ( s != sizeof(uint64_t) )                     handle_error("write efd failed");              }             printf("child completed write loop\n");              exit(0);         default:             sleep (2);                          printf("parent about to read\n");             s = read(efd, &amp;u, sizeof(uint64_t));             if ( s != sizeof(uint64_t) ) {                 if (errno = EAGAIN) {                     printf("Parent read value %d\n", s);                     return 1;                 }                 handle_error("parent read failed");             }             printf("parent read %d , %llu (0x%llx) from efd\n",                     s, (unsigned long long)u, (unsigned long long) u);             exit(0);          case -1:             handle_error("fork ");     }     return 0;}Linux 新的API signalfd、timerfd、eventfd使用说明，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>355<docid>     <title>C++ 内存分配(new，operator new)详解</title>     <link>http://blog.jobbole.com/106923/</link>     <content>本文主要讲述C++ new运算符和operator new, placement new之间的种种关联，new的底层实现，以及operator new的重载和一些在内存池，STL中的应用。一 new 运算符和 operator new()：new：指我们在C++里通常用到的运算符，比如A* a = new A;  对于new来说，有new和::new之分，前者位于stdoperator new()：指对new的重载形式，它是一个函数，并不是运算符。对于operator new来说，分为全局重载和类重载，全局重载是void* ::operator new(size_t size)，在类中重载形式 void* A::operator new(size_t size)。还要注意的是这里的operator new()完成的操作一般只是分配内存，事实上系统默认的全局::operator new(size_t size)也只是调用malloc分配内存，并且返回一个void*指针。而构造函数的调用(如果需要)是在new运算符中完成的。先简单解释一下new和operator new之间的关系：关于这两者的关系，我找到一段比较经典的描述（来自于www.cplusplus.com 见参考文献）：operator new can be called explicitly as a regular function, but in C++, new is an operator with a very specific behavior: An expression with the new operator, first calls function operator new (i.e., this function) with the size of its type specifier as first argument, and if this is successful, it then automatically initializes or constructs the object (if needed). Finally, the expression evaluates as a pointer to the appropriate type.比如我们写如下代码：A* a = new A;我们知道这里分为两步：1.分配内存，2.调用A()构造对象。事实上，分配内存这一操作就是由operator new(size_t)来完成的，如果类A重载了operator new，那么将调用A::operator new(size_t )，如果没有重载，就调用::operator new(size_t )，全局new操作符由C++默认提供。因此前面的两步也就是：1.调用operator new 2.调用构造函数。这里再一次提出来是因为后面关于这两步会有一些变形，在关于placement new那里会讲到。先举个简单例子//平台：Visual Stdio 2008  #include&lt;iostream&gt;  class A  {  public:       A()       {            std::cout&lt;&lt;"call A constructor"&lt;&lt;std::endl;       }         ~A()       {            std::cout&lt;&lt;"call A destructor"&lt;&lt;std::endl;       }  }  int _tmain(int argc, _TCHAR* argv[])  {         A* a = new A;       delete a;         system("pause");       return 0;  }下面我们跟踪一下A反汇编代码，由于Debug版本反汇编跳转太多，因此此处通过Release版本在A* a = new A;处设断点反汇编：在Release版本中，构造函数和析构函数都是直接展开的。A* a = new A;  01301022  push        1    ;不含数据成员的类占用一字节空间，此处压入sizeof(A)  01301024  call        operator new (13013C2h) ;调用operator new(size_t size)  01301029  mov         esi,eax ;返回值保存到esi  0130102B  add         esp,4 ;平衡栈  0130102E  mov         dword ptr [esp+8],esi ;  01301032  mov         dword ptr [esp+14h],0   0130103A  test        esi,esi ;在operator new之后，检查其返回值，如果为空(分配失败)，则不调用A()构造函数  0130103C  je          wmain+62h (1301062h) ;为空 跳过构造函数部分  0130103E  mov         eax,dword ptr [__imp_std::endl (1302038h)] ;构造函数内部，输出字符串  01301043  mov         ecx,dword ptr [__imp_std::cout (1302050h)]   01301049  push        eax    0130104A  push        offset string "call A constructor" (1302134h)   0130104F  push        ecx    01301050  call        std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt; &gt; (13011F0h)   01301055  add         esp,8   01301058  mov         ecx,eax   0130105A  call        dword ptr [__imp_std::basic_ostream&lt;char,std::char_traits&lt;char&gt; &gt;::operator&lt;&lt; (1302040h)]   01301060  jmp         wmain+64h (1301064h) ;构造完成，跳过下一句  01301062  xor         esi,esi ;将esi置空，这里的esi即为new A的返回值  01301064  mov         dword ptr [esp+14h],0FFFFFFFFh       delete a;  0130106C  test        esi,esi ;检查a是否为空  0130106E  je          wmain+9Bh (130109Bh) ;如果为空，跳过析构函数和operator delete  01301070  mov         edx,dword ptr [__imp_std::endl (1302038h)] ;析构函数 输出字符串  01301076  mov         eax,dword ptr [__imp_std::cout (1302050h)]   0130107B  push        edx    0130107C  push        offset string "call A destructor" (1302148h)   01301081  push        eax    01301082  call        std::operator&lt;&lt;&lt;std::char_traits&lt;char&gt; &gt; (13011F0h)   01301087  add         esp,8   0130108A  mov         ecx,eax   0130108C  call        dword ptr [__imp_std::basic_ostream&lt;char,std::char_traits&lt;char&gt; &gt;::operator&lt;&lt; (1302040h)]   01301092  push        esi  ;压入a   01301093  call        operator delete (13013BCh) ;调用operator delete   01301098  add         esp,4   通过反汇编可以看出A* = new A包含了operator new(sizeof(A))和A()两个步骤(当然，最后还要将值返回到a)           delete a包含了~A()和operator delete(a)两个步骤。二 operator new 的三种形式：operator new有三种形式：throwing (1)void* operator new (std::size_t size) throw (std::bad_alloc);nothrow (2)void* operator new (std::size_t size, const std::nothrow_t&amp; nothrow_value) throw();placement (3)void* operator new (std::size_t size, void* ptr) throw();(1)(2)的区别仅是是否抛出异常，当分配失败时，前者会抛出bad_alloc异常，后者返回null，不会抛出异常。它们都分配一个固定大小的连续内存。用法示例：A* a = new A; //调用throwing(1)A* a = new(std::nothrow) A; //调用nothrow(2)（3）是placement new，它也是对operator new的一个重载，定义于中，它多接收一个ptr参数，但它只是简单地返回ptr。其在new.h下的源代码如下：#define __PLACEMENT_NEW_INLINE  inline void *__cdecl operator new(size_t, void *_P)          {return (_P); }  #if     _MSC_VER &gt;= 1200  inline void __cdecl operator delete(void *, void *)      {return; }  #endif  #endif那么它究竟有什么用呢？事实上，它可以实现在ptr所指地址上构建一个对象(通过调用其构造函数)，这在内存池技术上有广泛应用。它的调用形式为：new(p) A(); //也可用A(5)等有参构造函数。前面说到，new运算符都会调用operator new，而这里的operator new(size_t, void*)并没有什么作用，真正起作用的是new运算符的第二个步骤：在p处调用A构造函数。这里的p可以是动态分配的内存，也可以是栈中缓冲，如char buf[100]; new(buf) A();我们仍然可以通过一个例子来验证：#include &lt;iostream&gt;  class A  {  public:      A()      {          std::cout&lt;&lt;"call A constructor"&lt;&lt;std::endl;      }        ~A()      {          std::cout&lt;&lt;"call A destructor"&lt;&lt;std::endl;      }  };  int _tmain(int argc, _TCHAR* argv[])  {        A* p = (A*)::operator new(sizeof(A)); //分配        new(p) A(); //构造            p-&gt;~A(); //析构        ::operator delete(p); //释放        system("pause");      return 0;  }上面的代码将对象的分配，构造，析构和释放分离开来，这也是new和delete运算符两句就能完成的操作。先直接运行可以看到程序输出：再分别注释掉new(a) A();和a-&gt;~A();两句，可以看到对应的构造和析构函数将不会被调用。然后查看反汇编：平台: Visual Studio 2008 Debug版A* a = (A*)::operator new(sizeof(A)); //分配  00F9151D  push        1      00F9151F  call        operator new (0F91208h) ;调用::operator new(size_t size)也就是throwing(1)版本  00F91524  add         esp,4   00F91527  mov         dword ptr [ebp-14h],eax ;返回地址放入[ebp-14h] 即为p        new(a) A(); //构造  00F9152A  mov         eax,dword ptr [ebp-14h]   00F9152D  push        eax    00F9152E  push        1    ;压入p  00F91530  call        operator new (0F91280h);调用operator new(size_t, void* p)即placement(3)版本 只是简单返回p  00F91535  add         esp,8   00F91538  mov         dword ptr [ebp-0E0h],eax ;将p放入[ebp-0E0h]  00F9153E  mov         dword ptr [ebp-4],0   00F91545  cmp         dword ptr [ebp-0E0h],0   ;判断p是否为空  00F9154C  je          wmain+81h (0F91561h)     ;如果为空 跳过构造函数  00F9154E  mov         ecx,dword ptr [ebp-0E0h] ;取出p到ecx  00F91554  call        A::A (0F91285h)          ;调用构造函数 根据_thiscall调用约定 this指针通过ecx寄存器传递  00F91559  mov         dword ptr [ebp-0F4h],eax ;将返回值(this指针)放入[ebp-0F4h]中  00F9155F  jmp         wmain+8Bh (0F9156Bh)     ;跳过下一句  00F91561  mov         dword ptr [ebp-0F4h],0   ;将[ebp-0F4h]置空 当前面判断p为空时执行此语句  00F9156B  mov         ecx,dword ptr [ebp-0F4h] ;[ebp-0F4h]为最终构造完成后的this指针(或者为空) 放入ecx  00F91571  mov         dword ptr [ebp-0ECh],ecx ;又将this放入[ebp-0ECh] 这些都是调试所用  00F91577  mov         dword ptr [ebp-4],0FFFFFFFFh             a-&gt;~A(); //析构  00F9157E  push        0      00F91580  mov         ecx,dword ptr [ebp-14h] ;从[ebp-14h]中取出p  00F91583  call        A::`scalar deleting destructor' (0F91041h) ;调用析构函数(跟踪进去比较复杂 如果在Release下，构造析构函数都是直接展开的)        ::operator delete(a); //释放  00F91588  mov         eax,dword ptr [ebp-14h]   ;将p放入eax  00F9158B  push        eax           ;压入p  00F9158C  call        operator delete (0F910B9h);调用operator delete(void* )  00F91591  add         esp,4 &lt;/span&gt;从反汇编中可以看出，其实operator new调用了两次，只不过每一次调用不同的重载函数，并且placement new的主要作用只是将p放入ecx，并且调用其构造函数。事实上，在指定地址上构造对象还有另一种方法，即手动调用构造函数：p-&gt;A::A(); 这里要加上A::作用域，否则编译器会报错：error C2273: “函数样式转换”: 位于“-&gt;”运算符右边时非法用p-&gt;A::A();替换掉new(p) A();仍然能达到同样的效果，反汇编：A* a = (A*)::operator new(sizeof(A)); //分配  010614FE  push        1      01061500  call        operator new (1061208h)   01061505  add         esp,4   01061508  mov         dword ptr [a],eax         //new(a) A();   //构造      a-&gt;A::A();  0106150B  mov         ecx,dword ptr [a]   0106150E  call        operator new (1061285h)         a-&gt;~A(); //析构  01061513  push        0      01061515  mov         ecx,dword ptr [a]   01061518  call        A::`scalar deleting destructor' (1061041h)         ::operator delete(a); //释放  0106151D  mov         eax,dword ptr [a]   01061520  push        eax    01061521  call        operator delete (10610B9h)   01061526  add         esp,4比之前的方法更加简洁高效(不需要调用placement new)。不知道手动调用构造函数是否有违C++标准或有什么隐晦，我在其他很多有名的内存池(包括SGI STL alloc)实现上看到都是用的placement new，而不是手动调用构造函数。三 operator new 重载：前面简单提到过 A* p = new A；所发生的事情：先调用operator new，如果类A重载了operator new，那么就使用该重载版本，否则使用全局版本::operatro new(size_t size)。那么类中可以重载operator new的哪些版本？全局operator new可以重载吗？全局和类中重载分别会在什么时机调用？1.在类中重载 operator new上面提到的throwing(1)和nothrow(2)的operator new是可以被重载的，比如：#include &lt;iostream&gt;  class A  {  public:      A()      {          std::cout&lt;&lt;"call A constructor"&lt;&lt;std::endl;      }        ~A()      {          std::cout&lt;&lt;"call A destructor"&lt;&lt;std::endl;      }      void* operator new(size_t size)      {          std::cout&lt;&lt;"call A::operator new"&lt;&lt;std::endl;          return malloc(size);      }        void* operator new(size_t size, const std::nothrow_t&amp; nothrow_value)      {          std::cout&lt;&lt;"call A::operator new nothrow"&lt;&lt;std::endl;          return malloc(size);      }  };  int _tmain(int argc, _TCHAR* argv[])  {      A* p1 = new A;      delete p1;        A* p2 = new(std::nothrow) A;      delete p2;        system("pause");      return 0;  }如果类A中没有对operator new的重载，那么new A和new(std::nothrow) A;都将会使用全局operator new(size_t size)。可将A中两个operator new注释掉，并且在A外添加一个全局operator new重载：void* ::operator new(size_t size)  {      std::cout&lt;&lt;"call global operator new"&lt;&lt;std::endl;      return malloc(size);  }程序输出：注意，这里的重载遵循作用域覆盖原则，即在里向外寻找operator new的重载时，只要找到operator new()函数就不再向外查找，如果参数符合则通过，如果参数不符合则报错，而不管全局是否还有相匹配的函数原型。比如如果这里只将A中operator new(size_t, const std::nothrow_t&amp;)删除掉，就会报错：error C2660: “A::operator new”: 函数不接受 2 个参数。至于placement new，它本身就是operator new的一个重载，不需也尽量不要对它进行改写，因为它一般是搭配 new(p) A(); 工作的，它的职责只需简单返回指针。对operator new的重载还可以添加自定义参数，如在类A中添加void* operator new(size_t size, int x, int y, int z)  {      std::cout&lt;&lt;"X="&lt;&lt;x&lt;&lt;"  Y="&lt;&lt;y&lt;&lt;" Z="&lt;&lt;z&lt;&lt;std::endl;      return malloc(size);  }这种重载看起来没有什么大作用，因为它operator new需要完成的任务只是分配内存，但是通过对这类重载的巧妙应用，可以让它在动态分配内存调试和检测中大展身手。这将在后面operator new重载运用技巧中，展现。2.重载全局 operator new全局operator new的重载和在类中重载并无太大区别，当new A;时，如果类A中没有重载operator new，那么将调用全局operator new函数，如果没有重载全局operator new，最后会调用默认的全局operator new。3.类中operator new和全局 operator new 的调用时机前面已经提到了在new时的调用顺序，但是这里提出来的原因是还存在一个全局的new运算符，也就是::new，这个运算符会直接调用全局operator new，并且也会调用构造函数。这可能让人很犯迷糊，只做了解即可。这里提到的调用时机都是指通过new运算符调用，没有讨论其他情况，比如主动调用。四 operator new运用技巧和一些实例探索1.operator new 重载运用于调试：前面提到如何operator new的重载是可以有自定义参数的，那么我们如何利用自定义参数获取更多的信息呢，这里一个很有用的做法就是给operator new添加两个参数:char* file, int line,这两个参数记录new运算符的位置，然后再在new时将文件名和行号传入，这样我们就能在分配内存失败时给出提示：输出文件名和行号。那么如何获取当前语句所在文件名和行号呢，windows提供两个宏：__FILE__和__LINE__。利用它们可以直接获取到文件名和行号，也就是 new(__FILE__, __LINE__) 由于这些都是不变的，因此可以再定义一个宏：#define new new(__FILE__, __LINE__)。这样我们就只需要定义这个宏，然后重载operator new即可。源代码如下，这里只是简单输出new的文件名和行号。//A.h  class A  {  public:      A()      {          std::cout&lt;&lt;"call A constructor"&lt;&lt;std::endl;      }        ~A()      {          std::cout&lt;&lt;"call A destructor"&lt;&lt;std::endl;      }        void* operator new(size_t size, const char* file, int line)      {          std::cout&lt;&lt;"call A::operator new on file:"&lt;&lt;file&lt;&lt;"  line:"&lt;&lt;line&lt;&lt;std::endl;          return malloc(size);          return NULL;      }    };  //Test.cpp  #include &lt;iostream&gt;  #include "A.h"  #define new new(__FILE__, __LINE__)    int _tmain(int argc, _TCHAR* argv[])  {      A* p1 = new A;      delete p1;        A* p2 = new A;      delete p2;        system("pause");      return 0;  }输出：注意：需要将类的声明实现与new的使用隔离开来。并且将类头文件放在宏定义之前。否则在类A中的operator new重载中的new会被宏替换，整个函数就变成了： void* operator new(__FILE__, __LINE__)(size_t size, char* file, int line)编译器自然会报错。2.内存池优化operator new的另一个大用处就是内存池优化，内存池的一个常见策略就是分配一次性分配一块大的内存作为内存池(buffer或pool)，然后重复利用该内存块，每次分配都从内存池中取出，释放则将内存块放回内存池。在我们客户端调用的是new运算符，我们可以改写operator new函数，让它从内存池中取出(当内存池不够时，再从系统堆中一次性分配一块大的)，至于构造和析构则在取出的内存上进行，然后再重载operator delete，它将内存块放回内存池。关于内存池和operator new在参考文献中有一篇很好的文章。这里就不累述了。3.STL中的 new在SGI STL源码中,defalloc.h和stl_construct.h中提供了最简单的空间配置器(allocator)封装，见《STL源码剖析》P48。它将对象的空间分配和构造分离开来，虽然在defalloc.h中仅仅是对::operator new和::operator delete的一层封装，但是它仍然给STL容器提供了更加灵活的接口SGI STL真正使用的并不是defalloc.h中的分配器，而是stl_alloc.h中的SGI精心打造的&#8221;双层级配置器&#8221;，它将内存池技术演绎得淋漓尽致，值得细细琢磨。顺便提一下，在stl_alloc.h中并没有使用::operator new/delete 而直接使用malloc和free。具体缘由均可参见《STL源码剖析》。五 delete 的使用delete的使用基本和new一致，包括operator delete的重载方式这些都相似，只不过它的参数是void*，返回值为void。但是有一点需要注意，operator delete的自定义参数重载并不能手动调用。比如void* operator new(size_t size, int x)  {      cout&lt;&lt;" x = "&lt;&lt;x&lt;&lt;endl;      return malloc(size);      }  void operator delete(void* p, int x)  {      cout&lt;&lt;" x = "&lt;&lt;x&lt;&lt;endl;      free(p);  }如下调用是无法通过的：A* p = new(3) A;//Okdelete(3) p;//error C2541: “delete”: 不能删除不是指针的对象那么重载operator delete有什么作用？如何调用？事实上以上自定义参数operator delete 只在一种情况下被调用：当new运算符抛出异常时。可以这样理解，只有在new运算符中，编译器才知道你调用的operator new形式，然后它会调用对应的operator delete。一旦出了new运算符，编译器对于你自定义的new将一无所知，因此它只会按照你指定的delete运算符形式来调用operator delete，而至于为什么不能指定调用自定义delete(也就是只能老老实实delete p)，这个就不知道了。细心观察的话，上面operator new用于调试的例子代码中，由于我们没有给出operator new对应的operator delete。在VS2008下会有如下警告：warning C4291: “void *A::operator new(size_t,const char *,int)”: 未找到匹配的删除运算符；如果初始化引发异常，则不会释放内存六 关于 new 和内存分配的其他 1.set_new_handler还有一些零散的东西没有介绍到，比如set_new_handler可以在malloc(需要调用set_new_mode(1))或operator new内存分配失败时指定一个入口函数new_handler，这个函数完成自定义处理(继续尝试分配，抛出异常，或终止程序)，如果new_handler返回，那么系统将继续尝试分配内存，如果失败，将继续重复调用它，直到内存分配完毕或new_handler不再返回(抛出异常，终止)。下面这段程序完成这个测试：#include &lt;iostream&gt;  #include &lt;new.h&gt;// 使用_set_new_mode和set_new_handler  void nomem_handler()  {      std::cout&lt;&lt;"call nomem_handler"&lt;&lt;std::endl;  }  int main()  {      _set_new_mode(1);  //使new_handler有效      set_new_handler(nomem_handler);//指定入口函数 函数原型void f();      std::cout&lt;&lt;"try to alloc 2GB memory...."&lt;&lt;std::endl;      char* a = (char*)malloc(2*1024*1024*1024);      if(a)          std::cout&lt;&lt;"ok...I got it"&lt;&lt;std::endl;      free(a);      system("pause");  }程序运行后会一直输出call nomem_handler 因为函数里面只是简单输出，返回，系统尝试分配失败后，调用nomem_handler函数，由于该函数并没有起到实际作用(让可分配内存增大)，因此返回后系统再次尝试分配失败，再调用nomem_handler，循环下去。在SGI STL中的也有个仿new_handler函数:oom_malloc2.new 分配数组A* p = new A[3];中，会直接调用全局的operator new[](size_t size)，而不管A中是否有operator new[]的重载。而delete[]p却会优先调用A::operator delete[](void*)(如果A中有重载)。另外还要注意的是，在operator new[](size_t size)中传入的并不是sizeof(A)*3。而要在对象数组的大小上加上一个额外数据，用于编译器区分对象数组指针和对象指针以及对象数组大小。在VS2008下这个额外数据占4个字节，一个int大小。测试代码如下//A.h  class A  {  public:      A()      {          std::cout&lt;&lt;"call A constructor"&lt;&lt;std::endl;      }        ~A()      {          std::cout&lt;&lt;"call A destructor"&lt;&lt;std::endl;      }        void* operator new(size_t size)      {          std::cout&lt;&lt;"call A::operator new[] size:"&lt;&lt;size&lt;&lt;std::endl;          return malloc(size);      }      void operator delete[](void* p)      {          std::cout&lt;&lt;"call A::operator delete[]"&lt;&lt;std::endl;          free(p);      }       void operator delete(void* p)      {          free(p);      }   };//Test.cpp  #include &lt;iostream&gt;  #include "A.h"    void* operator new[](size_t size)  {      std::cout&lt;&lt;"call global new[] size: "&lt;&lt;size&lt;&lt;std::endl;      return malloc(size);  }    void operator delete[](void* p)  {      std::cout&lt;&lt;"call global delete[] "&lt;&lt;std::endl;  }  int _tmain(int argc, _TCHAR* argv[])  {      std::cout&lt;&lt;"sizeof A "&lt;&lt;sizeof(A)&lt;&lt;std::endl;      A* p1 = new A[3];      delete []p1;         system("pause");      return 0;  }输出：简单跟踪了一下：operator new[]返回的是0x005b668 而最后new运算符返回给p的是0x005b66c。也就是说p就是数组的起始地址，这样程序看到的内存就是线性的，不包括前面的额外数据。在内存中，可以看到前面的四个字节额外数据是0x00000003 也就是3，代表数组元素个数。后面三个cd是堆在Debug中的默认值(中文的cdcd就是&#8221;屯&#8221;，栈的初始值为cc，0xcccc中文&#8221;烫&#8221;)。再后面的0xfdfdfdfd应该是堆块的结束标志，前面我有博客专门跟踪过。注：其实在malloc源码中也有内存池的运用，而且也比较复杂。最近在参考dlmalloc版本和STL空间适配器，真没有想到一个内存分配能涉及这么多的东西。C++ 内存分配(new，operator new)详解，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>356<docid>     <title>制作你的第一个 Atom 文本编辑器插件</title>     <link>http://blog.jobbole.com/106919/</link>     <content>序言这篇教程将会教你怎么制作你的第一个 Atom 文本编辑器的插件。我们将会制作一个山寨版的 Sourcerer，这是一个从 StackOverflow 查询并使用代码片段的插件。到教程结束时，你将会制作好一个将编程问题（用英语描述的）转换成获取自 StackOverflow 的代码片段的插件，像这样：教程须知Atom 文本编辑器是用 web 技术创造出来的。我们将完全使用 JavaScript 的 EcmaScript 6 规范来制作插件。你需要熟悉以下内容：使用命令行JavaScript 编程PromisesHTTP教程的仓库你可以跟着教程一步一步走，或者看看 放在 GitHub 上的仓库，这里有插件的源代码。这个仓库的历史提交记录包含了这里每一个标题。开始安装 Atom根据 Atom 官网 的说明来下载 Atom。我们同时还要安装上 apm（Atom 包管理器的命令行工具）。你可以打开 Atom 并在应用菜单中导航到 Atom &gt; Install Shell Commands 来安装。打开你的命令行终端，运行apm -v 来检查 apm 是否已经正确安装好，安装成功的话打印出来的工具版本和相关环境信息应该是像这样的：apm -v&gt; apm  1.9.2&gt; npm  2.13.3&gt; node 0.10.40&gt; python 2.7.10&gt; git 2.7.4生成骨架代码让我们使用 Atom 提供的一个实用工具创建一个新的 package（软件包）来开始这篇教程。启动编辑器，按下 Cmd+Shift+P（MacOS）或者 Ctrl+Shift+P（Windows/Linux）来打开命令面板Command Palette。搜索“Package Generator: Generate Package”并点击列表中正确的条目，你会看到一个输入提示，输入软件包的名称：“sourcefetch”。按下回车键来生成这个骨架代码包，它会自动在 Atom 中打开。如果你在侧边栏没有看到软件包的文件，依次按下 Cmd+K Cmd+B（MacOS）或者 Ctrl+KCtrl+B（Windows/Linux）。Command Palette可以让你通过模糊搜索来找到并运行软件包。这是一个执行命令比较方便的途径，你不用去找导航菜单，也不用刻意去记快捷键。我们将会在整篇教程中使用这个方法。运行骨架代码包在开始编程前让我们来试用一下这个骨架代码包。我们首先需要重启 Atom，这样它才可以识别我们新增的软件包。再次打开命令面板，执行 Window: Reload 命令。重新加载当前窗口以确保 Atom 执行的是我们最新的源代码。每当需要测试我们对软件包的改动的时候，就需要运行这条命令。通过导航到编辑器菜单的 Packages &gt; sourcefetch &gt; Toggle 或者在命令面板执行 sourcefetch:toggle 来运行软件包的 toggle 命令。你应该会看到屏幕的顶部出现了一个小黑窗。再次运行这条命令就可以隐藏它。“toggle”命令打开 lib/sourcefetch.js，这个文件包含有软件包的逻辑和 toggle 命令的定义。&nbsp;toggle() { console.log('Sourcefetch was toggled!'); return (   this.modalPanel.isVisible() ?   this.modalPanel.hide() :   this.modalPanel.show() );}toggle 是这个模块导出的一个函数。根据模态面板的可见性，它通过一个三目运算符 来调用 show 和hide 方法。modalPanel 是 Panel（一个由 Atom API 提供的 UI 元素） 的一个实例。我们需要在 export default 内部声明 modalPanel 才可以让我们通过一个实例变量 this 来访问它。this.subscriptions.add(atom.commands.add('atom-workspace', {  'sourcefetch:toggle': () =&gt; this.toggle()}));上面的语句让 Atom 在用户运行 sourcefetch:toggle 的时候执行 toggle 方法。我们指定了一个 匿名函数() =&gt; this.toggle()，每次执行这条命令的时候都会执行这个函数。这是事件驱动编程（一种常用的 JavaScript 模式）的一个范例。Atom 命令命令只是用户触发事件时使用的一些字符串标识符，它定义在软件包的命名空间内。我们已经用过的命令有：package-generator:generate-packageWindow:reloadsourcefetch:toggle软件包对应到命令，以执行代码来响应事件。进行你的第一次代码更改让我们来进行第一次代码更改——我们将通过改变 toggle 函数来实现逆转用户选中文本的功能。改变 “toggle” 函数如下更改 toggle 函数。toggle() {  let editor  if (editor = atom.workspace.getActiveTextEditor()) {    let selection = editor.getSelectedText()    let reversed = selection.split('').reverse().join('')    editor.insertText(reversed)  }}测试你的改动通过在命令面板运行 Window: Reload 来重新加载 Atom。通过导航到 File &gt; New 来创建一个新文件，随便写点什么并通过光标选中它。通过命令面板、Atom 菜单或者右击文本然后选中 Toggle sourcefetch 来运行sourcefetch:toggle 命令。更新后的命令将会改变选中文本的顺序：在 sourcefetch 教程仓库 查看这一步的全部代码更改。Atom 编辑器 API我们添加的代码通过用 TextEditor API 来访问编辑器内的文本并进行操作。让我们来仔细看看。let editorif (editor = atom.workspace.getActiveTextEditor()) { /* ... */ }头两行代码获取了 TextEditor 实例的一个引用。变量的赋值和后面的代码被包在一个条件结构里，这是为了处理没有可用的编辑器实例的情况，例如，当用户在设置菜单中运行该命令时。let selection = editor.getSelectedText()调用 getSelectedText 方法可以让我们访问到用户选中的文本。如果当前没有文本被选中，函数将返回一个空字符串。let reversed = selection.split('').reverse().join('')editor.insertText(reversed)我们选中的文本通过一个 JavaScript 字符串方法 来逆转。最后，我们调用 insertText 方法来将选中的文本替换为逆转后的文本副本。通过阅读 Atom API 文档，你可以学到更多关于 TextEditor 的不同的方法。浏览骨架代码现在我们已经完成第一次代码更改了，让我们浏览骨架代码包的代码来深入了解一下 Atom 的软件包是怎样构成的。主文件主文件是 Atom 软件包的入口文件。Atom 通过 package.json 里的条目设置来找到主文件的位置："main": "./lib/sourcefetch",这个文件导出一个带有生命周期函数（Atom 在特定的事件发生时调用的处理函数）的对象。activate 会在 Atom 初次加载软件包的时候调用。这个函数用来初始化一些诸如软件包所需的用户界面元素的对象，以及订阅软件包命令的处理函数。deactivate 会在软件包停用的时候调用，例如，当用户关闭或者刷新编辑器的时候。serialize Atom 调用它在使用软件包的过程中保存软件包的当前状态。它的返回值会在 Atom 下一次加载软件包的时候作为一个参数传递给 activate。我们将会重命名我们的软件包命令为 fetch，并移除一些我们不再需要的用户界面元素。按照如下更改主文件：'use babel';import { CompositeDisposable } from 'atom'export default {  subscriptions: null,  activate() {    this.subscriptions = new CompositeDisposable()    this.subscriptions.add(atom.commands.add('atom-workspace', {      'sourcefetch:fetch': () =&gt; this.fetch()    }))  },  deactivate() {    this.subscriptions.dispose()  },  fetch() {    let editor    if (editor = atom.workspace.getActiveTextEditor()) {      let selection = editor.getSelectedText()      selection = selection.split('').reverse().join('')      editor.insertText(selection)    }  }};“启用”命令为了提升性能，Atom 软件包可以用时加载。我们可以让 Atom 在用户执行特定的命令的时候才加载我们的软件包。这些命令被称为 启用命令，它们在 package.json 中定义："activationCommands": {  "atom-workspace": "sourcefetch:toggle"},有一些软件包需要在 Atom 启动的时候被加载，例如那些改变 Atom 外观的软件包。在那样的情况下，activationCommands 会被完全忽略。“触发”命令菜单项menus 目录下的 JSON 文件指定了哪些菜单项是为我们的软件包而建的。让我们看看menus/sourcefetch.json："context-menu": {  "atom-text-editor": [    {      "label": "Toggle sourcefetch",      "command": "sourcefetch:toggle"    }  ]},这个 context-menu 对象可以让我们定义右击菜单的一些新条目。每一个条目都是通过一个显示在菜单的label 属性和一个点击后执行的命令的 command 属性来定义的。"context-menu": {  "atom-text-editor": [    {      "label": "Fetch code",      "command": "sourcefetch:fetch"    }  ]},同一个文件中的这个 menu 对象用来定义插件的自定义应用菜单。我们如下重命名它的条目："menu": [  {    "label": "Packages",    "submenu": [      {        "label": "sourcefetch",        "submenu": [          {            "label": "Fetch code",            "command": "sourcefetch:fetch"          }        ]      }    ]  }]键盘快捷键命令还可以通过键盘快捷键来触发。快捷键通过 keymaps 目录的 JSON 文件来定义：{  "atom-workspace": {    "ctrl-alt-o": "sourcefetch:toggle"  }}以上代码可以让用户通过 Ctrl+Alt+O（Windows/Linux） 或 Cmd+Alt+O（MacOS） 来触发 toggle 命令。重命名引用的命令为 fetch："ctrl-alt-o": "sourcefetch:fetch"通过执行 Window: Reload 命令来重启 Atom。你应该会看到 Atom 的右击菜单更新了，并且逆转文本的功能应该还可以像之前一样使用。在 sourcefetch 教程仓库 查看这一步所有的代码更改。使用 NodeJS 模块现在我们已经完成了第一次代码更改并且了解了 Atom 软件包的结构，让我们介绍一下 Node 包管理器（npm） 中的第一个依赖项模块。我们将使用 request 模块发起 HTTP 请求来下载网站的 HTML 文件。稍后将会用到这个功能来扒 StackOverflow 的页面。安装依赖打开你的命令行工具，切换到你的软件包的根目录并运行：npm install --save request@2.73.0apm install这两条命令将 request 模块添加到我们软件包的依赖列表并将模块安装到 node_modules 目录。你应该会在package.json 看到一个新条目。@ 符号的作用是让 npm 安装我们这篇教程需要用到的特定版本的模块。运行 apm install 是为了让 Atom 知道使用我们新安装的模块。"dependencies": {  "request": "^2.73.0"}下载 HTML 并将记录打印在开发者控制台通过在 lib/sourcefetch.js 的顶部添加一条引用语句引入 request 模块到我们的主文件：import { CompositeDisposable } from 'atom'import request from 'request'现在，在 fetch 函数下面添加一个新函数 download 作为模块的导出项：export default {    /* subscriptions, activate(), deactivate() */  fetch() {    ...  },  download(url) {    request(url, (error, response, body) =&gt; {      if (!error &amp;&amp; response.statusCode == 200) {        console.log(body)      }    })  }}这个函数用 request 模块来下载一个页面的内容并将记录输出到控制台。当 HTTP 请求完成之后，我们的回调函数会将响应体作为参数来被调用。最后一步是更新 fetch 函数以调用 download 函数：fetch() {  let editor  if (editor = atom.workspace.getActiveTextEditor()) {    let selection = editor.getSelectedText()    this.download(selection)  }},fetch 函数现在的功能是将 selection 当作一个 URL 传递给 download 函数，而不再是逆转选中的文本了。让我们来看看这次的更改：通过执行 Window: Reload 命令来重新加载 Atom。打开开发者工具。为此，导航到菜单中的 View &gt; Developer &gt; Toggle Developer Tools。新建一个文件，导航到 File &gt; New。输入一个 URL 并选中它，例如：http://www.atom.io。用上述的任意一种方法执行我们软件包的命令：开发者工具让 Atom 软件包的调试更轻松。每个 console.log 语句都可以将信息打印到交互控制台，你还可以使用 Elements 选项卡来浏览整个应用的可视化结构——即 HTML 的文本对象模型（DOM）。在 sourcefetch 教程仓库 查看这一步所有的代码更改。用 Promises 来将下载好的 HTML 插入到编辑器中理想情况下，我们希望 download 函数可以将 HTML 作为一个字符串来返回，而不仅仅是将页面的内容打印到控制台。然而，返回文本内容是无法实现的，因为我们要在回调函数里面访问内容而不是在 download 函数那里。我们会通过返回一个 Promise 来解决这个问题，而不再是返回一个值。让我们改动 download 函数来返回一个 Promise：download(url) {  return new Promise((resolve, reject) =&gt; {    request(url, (error, response, body) =&gt; {      if (!error &amp;&amp; response.statusCode == 200) {        resolve(body)      } else {        reject({          reason: 'Unable to download page'        })      }    })  })}Promises 允许我们通过将异步逻辑封装在一个提供两个回调方法的函数里来返回获得的值（resolve 用来处理请求成功的返回值，reject 用来向使用者报错）。如果请求返回了错误我们就调用 reject，否则就用resolve 来处理 HTML。让我们更改 fetch 函数来使用 download 返回的 Promise：fetch() {  let editor  if (editor = atom.workspace.getActiveTextEditor()) {    let selection = editor.getSelectedText()    this.download(selection).then((html) =&gt; {      editor.insertText(html)    }).catch((error) =&gt; {      atom.notifications.addWarning(error.reason)    })  }},在我们新版的 fetch 函数里，我们通过在 download 返回的 Promise 调用 then 方法来对 HTML 进行操作。这会将 HTML 插入到编辑器中。我们同样会通过调用 catch 方法来接收并处理所有的错误。我们通过用Atom Notification API 来显示警告的形式来处理错误。看看发生了什么变化。重新加载 Atom 并在一个选中的 URL 上执行软件包命令：如果这个 URL 是无效的，一个警告通知将会弹出来：在 sourcefetch 教程仓库 查看这一步所有的代码更改。编写一个爬虫来提取 StackOverflow 页面的代码片段下一步涉及用我们前面扒到的 StackOverflow 的页面的 HTML 来提取代码片段。我们尤其关注那些来自采纳答案（提问者选择的一个正确答案）的代码。我们可以在假设这类答案都是相关且正确的前提下大大简化我们这个软件包的实现。使用 jQuery 和 Chrome 开发者工具来构建查询这一部分假设你使用的是 Chrome 浏览器。你接下来可以使用其它浏览器，但是提示可能会不一样。让我们先看看一张典型的包含采纳答案和代码片段的 StackOverflow 页面。我们将会使用 Chrome 开发者工具来浏览 HTML：打开 Chrome 并跳到任意一个带有采纳答案和代码的 StackOverflow 页面，比如像这个用 Python 写的 hello world 的例子或者这个关于 用 C 来读取文本内容的问题。滚动窗口到采纳答案的位置并选中一部分代码。右击选中文本并选择 检查。使用元素侦察器来检查代码片段在 HTML 中的位置。注意文本结构应该是这样的：&lt;div class="accepted-answer"&gt;  ...    ...      &lt;pre&gt;        &lt;code&gt;          ...snippet elements...        &lt;/code&gt;      &lt;/pre&gt;    ...  ...&lt;/div&gt;采纳的答案通过一个 class 为 accepted-answer 的 div 来表示代码块位于 pre 元素的内部呈现代码片段的元素就是里面那一对 code 标签现在让我们写一些 jQuery 代码来提取代码片段：在开发者工具那里点击 Console 选项卡来访问 Javascript 控制台。在控制台中输入 $('div.accepted-answer pre code').text() 并按下回车键。你应该会看到控制台中打印出采纳答案的代码片段。我们刚刚运行的代码使用了一个 jQuery 提供的特别的 $函数。$ 接收要选择的查询字符串并返回网站中的某些 HTML 元素。让我们通过思考几个查询案例看看这段代码的工作原理：$('div.accepted-answer')&gt; [&lt;div id="answer-1077349" class="answer accepted-answer" ... &gt;&lt;/div&gt;]上面的查询会匹配所有 class 为 accepted-answer 的 &lt;div&gt; 元素，在我们的案例中只有一个 div。$('div.accepted-answer pre code')&gt; [&lt;code&gt;...&lt;/code&gt;]在前面的基础上改造了一下，这个查询会匹配所有在之前匹配的 &lt;div&gt; 内部的 &lt;pre&gt; 元素内部的 &lt;code&gt;元素。$('div.accepted-answer pre code').text()&gt; "print("Hello World!")"text 函数提取并连接原本将由上一个查询返回的元素列表中的所有文本。这也从代码中去除了用来使语法高亮的元素。介绍 Cheerio我们的下一步涉及使用我们创建好的查询结合 Cheerio（一个服务器端实现的 jQuery）来实现扒页面的功能。安装 Cheerio打开你的命令行工具，切换到你的软件包的根目录并执行：npm install --save cheerio@0.20.0apm install实现扒页面的功能在 lib/sourcefetch.js 为 cheerio 添加一条引用语句：import { CompositeDisposable } from 'atom'import request from 'request'import cheerio from 'cheerio'现在创建一个新函数 scrape，它用来提取 StackOverflow HTML 里面的代码片段：fetch() {  ...},scrape(html) {  $ = cheerio.load(html)  return $('div.accepted-answer pre code').text()},download(url) {  ...}最后，让我们更改 fetch 函数以传递下载好的 HTML 给 scrape 而不是将其插入到编辑器：fetch() {  let editor  let self = this  if (editor = atom.workspace.getActiveTextEditor()) {    let selection = editor.getSelectedText()    this.download(selection).then((html) =&gt; {      let answer = self.scrape(html)      if (answer === '') {        atom.notifications.addWarning('No answer found :(')      } else {        editor.insertText(answer)      }    }).catch((error) =&gt; {      console.log(error)      atom.notifications.addWarning(error.reason)    })  }},我们扒取页面的功能仅仅用两行代码就实现了，因为 cheerio 已经替我们做好了所有的工作！我们通过调用load 方法加载 HTML 字符串来创建一个 $ 函数，然后用这个函数来执行 jQuery 语句并返回结果。你可以在官方 开发者文档 查看完整的 Cheerio API。测试更新后的软件包重新加载 Atom 并在一个选中的 StackOverflow URL 上运行 soucefetch:fetch 以查看到目前为止的进度。如果我们在一个有采纳答案的页面上运行这条命令，代码片段将会被插入到编辑器中：如果我们在一个没有采纳答案的页面上运行这条命令，将会弹出一个警告通知：我们最新的 fetch 函数给我们提供了一个 StackOverflow 页面的代码片段而不再是整个 HTML 内容。要注意我们更新的 fetch 函数会检查有没有答案并显示通知以提醒用户。在 sourcefetch 教程仓库 查看这一步所有的代码更改。实现用来查找相关的 StackOverflow URL 的谷歌搜索功能现在我们已经将 StackOverflow 的 URL 转化为代码片段了，让我们来实现最后一个函数——search，它应该要返回一个相关的 URL 并附加一些像“hello world”或者“快速排序”这样的描述。我们会通过一个非官方的google npm 模块来使用谷歌搜索功能，这样可以让我们以编程的方式来搜索。安装这个 Google npm 模块通过在软件包的根目录打开命令行工具并执行命令来安装 google 模块：npm install --save google@2.0.0apm install引入并配置模块在 lib/sourcefetch.js 的顶部为 google 模块添加一条引用语句：import google from "google"我们将配置一下 google 以限制搜索期间返回的结果数。将下面这行代码添加到引用语句下面以限制搜索返回最热门的那个结果。google.resultsPerPage = 1实现 search 函数接下来让我们来实现我们的 search 函数：fetch() {  ...},search(query, language) {  return new Promise((resolve, reject) =&gt; {    let searchString = `${query} in ${language} site:stackoverflow.com`    google(searchString, (err, res) =&gt; {      if (err) {        reject({          reason: 'A search error has occured :('        })      } else if (res.links.length === 0) {        reject({          reason: 'No results found :('        })      } else {        resolve(res.links[0].href)      }    })  })},scrape() {  ...}以上代码通过谷歌来搜索一个和指定的关键词以及编程语言相关的 StackOverflow 页面，并返回一个最热门的 URL。让我们看看这是怎样来实现的：let searchString = `${query} in ${language} site:stackoverflow.com`我们使用用户输入的查询和当前所选的语言来构造搜索字符串。比方说，当用户在写 Python 的时候输入“hello world”，查询语句就会变成 hello world in python site:stackoverflow.com。字符串的最后一部分是谷歌搜索提供的一个过滤器，它让我们可以将搜索结果的来源限制为 StackOverflow。google(searchString, (err, res) =&gt; {  if (err) {    reject({      reason: 'A search error has occured :('    })  } else if (res.links.length === 0) {    reject({      reason: 'No results found :('    })  } else {    resolve(res.links[0].href)  }})我们将 google 方法放在一个 Promise 里面，这样我们可以异步地返回我们的 URL。我们会传递由 google返回的所有错误并且会在没有可用的搜索结果的时候返回一个错误。否则我们将通过 resolve 来解析最热门结果的 URL。更新 fetch 来使用 search我们的最后一步是更新 fetch 函数来使用 search 函数：fetch() {  let editor  let self = this  if (editor = atom.workspace.getActiveTextEditor()) {    let query = editor.getSelectedText()    let language = editor.getGrammar().name    self.search(query, language).then((url) =&gt; {      atom.notifications.addSuccess('Found google results!')      return self.download(url)    }).then((html) =&gt; {      let answer = self.scrape(html)      if (answer === '') {        atom.notifications.addWarning('No answer found :(')      } else {        atom.notifications.addSuccess('Found snippet!')        editor.insertText(answer)      }    }).catch((error) =&gt; {      atom.notifications.addWarning(error.reason)    })  }}让我们看看发生了什么变化：我们选中的文本现在变成了用户输入的 query我们使用 TextEditor API 来获取当前编辑器选项卡使用的 language我们调用 search 方法来获取一个 URL，然后通过在得到的 Promise 上调用 then 方法来访问这个 URL我们不在 download 返回的 Promise 上调用 then 方法，而是在前面 search 方法本身链式调用的另一个then 方法返回的 Promise 上面接着调用 then 方法。这样可以帮助我们避免回调地狱在 sourcefetch 教程仓库 查看这一步所有的代码更改。测试最终的插件大功告成了！重新加载 Atom，对一个“问题描述”运行软件包的命令来看看我们最终的插件是否工作，不要忘了在编辑器右下角选择一种语言。下一步现在你知道怎么去 “hack” Atom 的基本原理了，通过 分叉 sourcefetch 这个仓库并添加你的特性 来随心所欲地实践你所学到的知识。制作你的第一个 Atom 文本编辑器插件，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>357<docid>     <title>C++ 虚函数和虚继承浅析</title>     <link>http://blog.jobbole.com/106912/</link>     <content>本文针对C++里的虚函数，虚继承表现和原理进行一些简单分析，有不对的地方请指出。下面都是以VC2008编译器对这两种机制内部实现为例。虚函数　　一下是百度百科对于虚函数的解释：定义：在某基类中声明为 virtual 并在一个或多个派生类中被重新定 义的成员函数[1]语法：virtual 函数返回类型 函数名（参数表） { 函数体 }用途：实现多态性，通过指向派生类的基类指针，访问派生类中同名覆盖成员函数函数声明和定义和普通的类成员函数一样，只是在返回值之前加入了关键字“virtual”声明为虚函数。而虚函数是实现多态的重要手段，意思是只有对虚函数的调用才能动态决定调用哪一个函数，这是相对于普通成员函数而言的，普通的成员函数在编译阶段就能确定调用哪一个函数。举个栗子：#include &lt;stdio.h&gt;class A {public:    void fn() { printf("fn in A\n"); }    virtual void v_fn() { printf("virtual fn in A\n"); }};class B : public A {public:    void fn() { printf("fn in B\n"); }    virtual void v_fn() { printf("virtual fn in B\n"); }};int main() {    A *a = new B();    a-&gt;fn();    a-&gt;v_fn();    return 0;}基类A有两个成员函数fn和v_fn，派生类B继承自基类A，同样实现了两个函数，然后在main函数中用A的指针指向B的实例（向上转型，也是实现多态的必要手段），然后分别调用fn和v_fn函数。结果是“fn in A&#8221;和&#8221;virtual fn in B&#8221;。这是因为fn是普通成员函数，它是通过类A的指针调用的，所以在编译的时候就确定了调用A的fn函数。而v_fn是虚函数，编译时不能确定，而是在运行时再通过一些机制来调用指针所指向的实例（B的实例）中的v_fn函数。假如派生类B中没有实现（完全一样，不是重载）v_fn这个函数，那么依然会调用基类类A中的v_fn；如果它实现了，就可以说派生类B覆盖了基类A中的v_fn这个虚函数。这就是虚函数的表现和使用，只有通过虚函数，才能实现面向对象语言中的多态性。以上只是虚函数的表现和用途，下面来探讨它的实现机制。在此之前，先来看一个问题，还是以上的代码，基类A的大小为多少，也就是“printf(&#8220;%dn&#8221;, sizeof(A));&#8221;的输出会是多少呢？A中一个成员变量都没有，有人可能会说是0。额，0是绝对错误的，因为在C++中，即时是空类，它的大小也为1，这是另外的话题，不在本文讨论。当然1也是不对的，实际结果是4（32位系统），4刚好是一个int，一个指针（32位）的大小，派生类B的大小同样为4。这四个字节和实现多态，虚函数的机制有着很重要的关系。其实用VC2008调试上面代码的时候，就会发现指针a所指向的实力中有一个成员常量（const），它的名字叫做vftable，全称大概叫做virtual function table（虚函数表）。它实际指向了一个数组，数组里面保存的是一系列函数指针，而上面的程序中，这个表只有一项，它就是派生类B中的v_fn函数入口地址。假如我们用一个A的指针指向一个A的实例呢？它同样有一个vftable，而它指向的表中也只有一项，这项保存的基类的v_fn函数入口地址。这用代码表示，就类似于下面这样：void* vftable_of_A[] = {    A::v_fn,    ...};class A {    const void* vftable = vftable_of_A;    virtual void v_fn() {}};void* vftable_of_B[] = {    B::v_fn,    ...};class B {    const void *vftable = vftable_of_B;    vritual void v_fn() {}};上面vftable的类型之所以用void*表示，实际上一个类中所有虚函数的地址都被放到这个表中，不同虚函数对应的函数指针类型不尽相同，所以这个表用C++的类型不好表述，但是在机器级里都是入口地址，即一个32位的数字（32位系统），等到调用时，因为编译器预先知道了函数的参数类型，返回值等，可以自动做好处理。这样我们就能更好的理解虚函数和多态了。第一个代码中，a指针虽然是A*类型的，但是它却调用了B中的v_fn，因为不管是A类，还是A的基类，都会有一个变量vftable，它指向的虚函数表中保存了正确的v_fn入口。所以a-&gt;v_fn()实际做的工作就是从a指向的实例中取出vftable的值，然后找到虚函数表，再从表中去的v_fn的入口，进行调用。不管a是指向A的实例，还是指向B的实例，a-&gt;fn()所做的步骤都是上面说的一样，只是A的实例和B的实例有着不同的虚函数表，虚函数表里也保存着可能不同的虚函数入口，所以最终将进入不同的函数调用中。通过表来达到不用判断类型，亦可实现多态的作用。还有一点指的提醒的是，因为虚函数表是一个常量表，在编译时，编译器会自动生成，并且不会改变，所以如果有多个B类的实例，每个实例中都会有一个vftable指针，但是它们指向的是同一个虚函数表。上面一段中说到了，A和B的实例有着不同的虚函数表，但是虚函数表中只是可能保存着不同的v_fn，那是因为C++允许派生类不覆盖基类中的虚函数，意思就是假如派生类B中没有实现v_fn这个函数（不是重载），那么B的实例的虚函数表会保存着基类A中v_fn的入口地址。也就是说B类不实现v_fn函数，但是它同样提供了这个接口，实际上是调用基类A中的v_fn。假如某个类只是一个抽象类，抽象出一些列接口，但是又不能实现这些接口，而要有派生类来实现，那么就可以把这些接口声明为纯虚函数，包含有纯虚函数的类称为抽象类。纯虚函数是一类特殊的虚函数，它的声明方式如下：class A {public:virtual 返回值 函数名（参数表）= 0；};在虚函数声明方式后加一个“=0”，并且不提供实现。抽象类不允许实例化（这样做编译器会报错，因为有成员函数没有实现，编译器不知道怎么调用）。纯虚函数的实现机制和虚函数类似，只是要求派生类类必须自己实现一个（也可以不实现，但是派生类也会是个抽象类，不能实例化）。顺带提一下，java中的每一个成员函数都可以以理解为C++中的virtual函数，不用显式声明都可以实现重载，多态。而java的接口类似于C++中的抽象类，需要实现里面的接口。虚继承C++支持多重继承，这和现实生活很类似，任何一个物体都不可能单一的属于某一个类型。就像马，第一想到的就是它派生自动物这个基类，但是它在某系地方可不可以说也派生自交通工具这一个基类呢？所以C++的多重继承很有用，但是又引入了一个问题（专业术语叫做菱形继承？）。动物和交通工具都是从最根本的基类——“事物”继承而来，事物包含了两个最基本的属性，体积和质量。那么动物和交通工具都保存了基类成员变量——体积和质量的副本。而马有继承了这两个类，那么马就有两份体积和质量，这是不合理的，编译器无法确定使用哪一个，所以就会报错。JAVA中不存在这样的问题，因为JAVA不允许多重继承，它只可能实现多个接口，而接口里面只包含一些函数声明不包含成员变量，所以也不存在这样的问题。这个问题用具体代码表述如下所示：class A {public:    int a;};class B : public A {};class C : public A {};class D : public B, public C {};int main() {    D d;    d.a = 1;    return 0;}这个代码会报错，因为d中保存了两份A的副本，即有两个成员变量a，一般不会报错，但是一旦对D中的a使用，就会报一个“对a的访问不明确”。虚继承就可以解决这个问题。在探讨虚函数之前，先来一个sizeof的问题。#include &lt;stdio.h&gt;class A {public:    int a;};class B : virtual public A {};int main() {    printf("%d\n", sizeof(B));    return 0;}B的大小是？首先回答0的是绝对错的，理由我之前都说了。1也是错的，不解释。4也是错的，如果B不是虚继承自A的，那么4就是对的。正确答案是8，B虚继承A了之后，比预想中的多了4个字节，这是怎么回事呢？这个通过调试是看不出来的，因为看不到类似于vftable的成员变量（实际上编译器生成了一个类似的东西，但是调试时看不到，但是在观察反汇编的时候，可以见到vbtable的字样，应该是virtual base table的意思）。虚继承的提出就是为了解决多重继承时，可能会保存两份副本的问题，也就是说用了虚继承就只保留了一份副本，但是这个副本是被多重继承的基类所共享的，该怎么实现这个机制呢？编译器会在派生类B的实例中保存一个A的实例，然后在B中加入一个变量，这个变量是A的实例在实际B实例中的偏移量，实际上B中并不直接保存offset的值，而是保存的一个指针，这个指针指向一个表vbtable，vbtable表中保存着所有虚继承的基类在实例中的offset值，多个B的实例共享这个表，每个实例有个单独的指针指向这个表，这样就很好理解为什么多了4个字节了。用代码表示就像下面这样。class A {public:    ...};int vbtable_of_B[] = {　　offset(B::_a),    ...};class B ：virtual public A{private:    const int* vbtable = vbtable_of_B;    A _a;};每一个A的虚派生类，都会有自己的vbtable表，这个派生类的所有实例共享这个表，然后每个实例各自保存了一个指向vbtable表的指针。假如还有一个类C虚继承了A，那么编译器就会为它自动生成一个vbtable_of_C的表，然后C的实例都会有一个指向这个vbtable表的指针。假如有多级的虚继承会发生什么情况，就像下面这段代码一样：#include &lt;stdio.h&gt;class A {public:    int a;};class B : virtual public A {public:　　int b;};class C : virtual public B {};int main() {    printf("%d\n", sizeof(C));    return 0; }程序运行的结果是16，按照之前的理论，大概会这么想。基类A里有1个变量，4个字节。B类虚继承了A，所以它有一个A的副本和一个vbtable，还有自己的一个变量，那就是12字节。然后C类又虚继承了B类，那么它有一个B的副本，一个vbtable，16字节。但实际上通过调试和反汇编发现，C中保存分别保存了A和B的副本（不包括B类的vbtable），8字节。然后有一个vbtable指针，4字节，表里面包含了A副本和B副本的偏移量。最后还有一个无用的4字节（？），一共16字节。不仅是这样，每经过一层的虚继承，便会多出4字节。这个多出来的四字节在反汇编中没发现实际用途，所以这个有待探讨，不管是编译器不够智能，还是有待其它作用，虚继承和多重继承都应该谨慎使用。还是以上面的例子，假如C类是直接继承B类，而不是使用虚继承，那么C类的大小为12字节。它里面是直接保存了A和B的副本（不包含B的vbtable），然后还有一个自己的vbtable指针，所以一共12字节，没有了上一段所说的最后的4个字节。但是如果想下面一种继承，会是什么情况？#include &lt;stdio.h&gt;class A {public:    int a;};class B : virtual public A {};class C : virtual public A {};class D : public B, public C{};int main() {    printf("%d\n", sizeof(D));    return 0; }D从B，C类派生出来，而B和C又同时虚继承了A。输出的结构是12，实际调试反汇编的时候发现，D中继承了B和C的vbtable，这就是8字节，而同时还保存了一个A的副本，4字节，总共12字节。它和上面的多重虚继承例子里的12字节是不一样的。之前一个例子中只有一个vbtable，一个A的实例，末尾还有一个未知的4字节。而这个例子中是有两个仅挨着的vbtable（都有效）和一个A的实例。C++ 虚函数和虚继承浅析，首发于文章 - 伯乐在线。</content></doc>
<doc>     <docid>358<docid>     <title>[转]反对修订《美国联邦刑事诉讼规则和证据规则》第 41 条</title>     <link>https://xbeta.info/rule-41.htm</link>     <content>收到一位国外朋友的邮件，建议转发对美国拟修订第41条规则的抵制。大概研究了一下， 《美国联邦刑事诉讼规则和证据规则》第 41 条为「搜查和扣押」 。美国政府准备修订相关条款，而该修订行为会对个人信息安全造成损害。美国很多科技媒体、社群、个人，都在抵制这一修订。转发一下，也欢迎大家发表意见。毕竟，这个世界是紧密联系在一起的！不要让美国政府侵入个人的计算机 – 停止修订第41条规则Ariel Hochstadt (前谷歌雇员，国际科技讲师)美国政府希望采用一种模糊不清的程序——修订一条称为第41条规则的联邦规定——从而充分扩大他们侵入我们计算机的权限。第41条规则的修订将会使其更容易闯入我们的计算机、收集数据、进行远程监控。这些修订可能会影响在世界任何地方使用联网计算机的任何人。然而，他们对采用隐私保护技术如Tor和 VPN的人员的影响则不尽相同。美国国会直到12月1日才可阻止修订的生效。我们需要大声疾呼。与你的朋友以及在你的博客上分享这个帖子。提高人们对修订第41条规则的意识！什么是第41条规则？它如何对生活在美国之外的你产生影响？第41条规则授权联邦治安法官签发执法搜索和查封的许可。但它含有一条重要限制：它要求政府必须获得其所欲执行搜索的管辖区域法官的许可，某些有限的情况除外。第41条规则的修订将会削弱这条限制，允许政府在某一管辖区域申请许可，执行对位于另一管辖区域的计算机的远程搜索。修订将会适用于下列情况：* 有人采用“技术手段”隐藏其计算机的位置时；或* 调查僵尸网络时，此时受损的计算机位于5个或更多行政区。50家组织 – 包括公共利益集团、隐私工具提供商以及因特网公司 – 团结起来，大声疾呼，反对修订第41条规则。vpnMentor与noglobalwarrants.org协调一致，领导要求撤销所提议的第41条规则修订的全球性努力。虽然noglobalwarrants.org专注于美国公民，鼓励他们联系其国会代表，但对这条规则的全球性意识依然极为重要，因为美国政府也将能够侵入采用 VPN 或 Tor 浏览器的全球用户。这就是我们将“行动呼吁”翻译为26种语言、尽最大努力在全球分享的原因。reject rule 41 changes修订第41条规则错在哪里？规则修订可能会极大增加执法人员侵入我们计算机的频率。这是因为修订条款将会授权这个国家几乎任何联邦治安法官签发这类许可。执法人员可择地诉讼，找到美国最利于起诉或最不懂技术的地方法官，签发这些危险的许可。根据这些规则的修订条款，如果人们的隐私保护技术使其计算机的位置模糊不清，美国几乎任何行政区的法官都可能授权执法人员远程搜索或侵入他们的计算机。这就意味着，极其在意隐私的人有可能受到这一规则修订大小不一的影响。在很多情况下，地方法官可能会不顾其他国家的法律保护，在不知情的情况下签发侵入位于世界各地，而非只是美国的计算机的许可。规则修订还会致使执法人员寻求远程搜索成千上万计算机的单一许可 – 违反美国宪法第四条修正案和国际人权法的保护条款。非法侵入 – 秘密闯入计算机、复制数据、删除数据或执行代码 – 可能会对用户及其设备产生严重后果。比之僵尸网络本身，政府代表实际上可能会在僵尸网络调查期间对无辜用户的计算机造成更大的损害。如果国会采取极端措施，授权政府非法侵入，则必须对何时允许此类行动进行严格限制，对遵守美国宪法和国际法的用户给予强有力的保护。如果美国国会不采取行动，这条新规则的更新则将于2016年12月1日生效。这就是我们必须大声疾呼，要求否决这一规则修订的原因。在社交网络和你的博客上分享这条帖子吧。-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>359<docid>     <title>【转载+补充】最强免费萤幕录影软体 ActivePresenter 教学影片神器</title>     <link>https://xbeta.info/activepresenter.htm</link>     <content>2016-04-12 更新：感恩 yuxiaoxu 网友，AP 的简体/繁体中文语言包已经翻译并发布了。大家可以下载后，解压到 AP 安装目录的 ……\ActivePresenter\locales\ 下，然后 view → language 切换到「简体中文」，重新启动即可生效。下载 http://xici800.cn/5opXo2xbeta序看到电脑玩物发了ActivePresenter 的文章，非常高兴和激动。我几年来介绍ActivePresenter的愿望，终于由老朋友代为实现了。先说结论：来自越南的 ActivePresenter 是最强大的免费录屏软件，相当于 BB FlashBack 的收费版，非常适合『有更高要求+愿花时间学习复杂软件+愿花时间精心编辑录屏视频』的用户。1、令人赞叹的 ActivePresenterActivePresenter 绝对是功能最强大的免费录屏软件（另有收费版）。但非常可惜，无论在国内还是国外，它的知名度都很低。从技术角度，AP是一款非常强大的软件，并且无论官网设计还是软件UI，都是大公司风范。如果其他软件算是“录屏软件”的话，那对AP来说，“录”只是它的1/3功能，此外的“制作”和“编辑”的功能，也极为强大。比如，一个视频项目可以由多个slide（本意是幻灯片的一页，但我认为理解为一节视频更合适）组成，每个slide可以是图片、ppt、视频；每个slide可以添加多层对象、多音轨；每个对象/音轨，可以进行多种编辑——分割、起止时间、截取片段……从商业角度，AP的免费版提供了大量在其他软件的收费版才具有的功能。甚至，一般用户都没有必要购买它昂贵的收费版。而还有两项一般用户不太注意的地方，也令人赞叹：它的帮助文档（如图），简直可与早期的电器说明手册相媲美。而它的出处，更是让人意想不到：ActivePresenter 来自越南~ 公司所在地就在越南河内。这大概是它没能被搜索引擎、科技媒体、软件爱好者广泛发现的原因。2、为什么迟迟没有介绍 ActivePresenter我早期写博客文章，无知无畏，所以写了很多Vim和Total Commander的文章。越到后面，越感觉难以下笔，尤其是面对一些极其优秀的软件。比如当时面对 ActivePresenter ，我的感觉是：从文章看，要写近万字才有介绍全它的功能。但如此长文，如何还能引起读者的阅读兴趣？如何让文章与作品同样优秀？在当时的精力下，都比较困难。这样复杂的软件，只有文章恐怕仍不易入门，最好有视频教程……竟然出自越南，我应该采访一下开发团队，并促成国内合作。不过，联系采访之前是不是应该把官网先翻译了……其实上面每一项都启动过，但也都没有完成。所以，积累了一些素材，但文章始终没发。3、接触与使用 ActivePresenter 的历程2013年12月，研究录屏软件时，在为知笔记中记录了 ActivePresenter 3个版本（当时只有免费/标准/专业版，尚无现在的教育版）之功能对比，做了大部分翻译。此后有大量各软件录制视频的参数对比记录。2013年2月，用它制作了一段给女儿讲故事的视频：①把女儿的绘本每页拍照；②各照片导入ActivePresenter，成为N个片段；③讲故事并录音；④把录音文件用Audacity去除噪音，并分割；④在AP中，N幅照片与N段录音融合；⑤导出视频。2015年7月，用ActivePresenter录制了一些公开发布的视频（当时是刚发现B站的无二压上传）。用AP主要是为了添加封面和目录。比如 《在TC中一键压制x264视频》 中明显不是直接录制的视频，实际前几段都是用ActivePresenter制作的，导入图片再添加文字（或者直接在PowerPoint中制作并导入ActivePresenter）；后面的目录字幕，也是用AP添加的。如图：邮箱大师 Windows版的安装与基本界面 视频中，开篇的语音就是利用AP的功能自动生成的！也就是说，我标注上文字，就可以让AP来自己配音：男声、女声、时长……见图：4、ActivePresenter的功能补充A。各版本功能比较3个版本（免费/标准/专业）共有的功能：导出图片 (PNG, JPEG)导出视频(AVI, MPEG4, WMV, WebM, MKV)导出SCORM 1.2, SCORM 2004标准版和专业版的额外功能：导出flash（flv）导出HTML幻灯片导出PDF导出MS Word导出MS Excel导出MS PowerPoint导入MS PowerPoint专业版独有的功能：导出HTML5交互导出flash交互从上面的对比来看，免费版仿佛功能很少。但实际上，上述对比仅限于导入/导出功能。而该软件强大的录制、编辑功能，在各个版本都是具备的。它们包括——智能录制：在鼠标或键盘按下时，捕获屏蔽。每个动作将形成独立的片段（slide），这样既方便后续编辑，也方便观众/用户仔细了解每个操作步骤。完整动作录制（FMR：Full Motion Recording）：把完整的屏幕操作录制下来，并作为一个片段（slide），后续可以编辑——文字注释、语音解说、点击声音、标题、过渡效果……交互与分支：录制教程并用AJAX/Flash模拟格式发布后，用户可以通过点击等方式进行交互，教程会根据用户的行为反馈不同内容。音频视频编辑：可以同时或分别对视频、音频的不同音轨进行编辑：剪切、删除、裁剪、合并、分割、改变音量、添加冻结帧。事件与动作：丰富灵活的事件-动作机制，可以定义不同的学习场景、步骤，来响应用户的不同行为。比如，用户鼠标左击如何，右击如何，正确如何，错误如何……标注样式：录制内容上还可以添加各种标注。并且这些标注支持不同的边框线型、填充、文字效果、阴影。过渡效果：对片段、视频、标注对象，都可以添加丰富的过渡效果。智能标注：会根据你的动作自动添加标注，比如“双击xx图标”。这样制作教程非常迅速。关于导出，不仅可以导出AVI, FLV, WMV,  MP4，WebM（较新格式，目前实用性不强，但体现了软件的前瞻性）等视频格式，并且支持帧频、关键帧、质量等参数，以便于平衡视频质量与文件大小。并且可以导出HTML5，这样在PC、平板、手机的浏览器中都能正常运行。注：SCORM是一种数字教学内容的格式规范。全称 Shareable Content Object Reference Model，译为共享内容对象参考模型或共享组件引用模式，由ADL (Advanced Distribution Learning Initiative)集成各个学习标准制定而成。5、录屏方案的选择对ActivePresenter的赞叹和欣赏是一方面，但从实用角度，估计大多数人是不需要它的。功能虽然强大，但操作起来也比较繁琐。实际上，我自己的录屏方案是这样的：wink 已经停用：最早推荐方案是Wink，原因是录制flash教程画面无损、体积超小、精确交互。但现在，flash时代已经过去，尤其难以找到上传空间。并且，软件久不更新（该团队后面还开发过手机上录屏直播的app）。屏幕录像专家：界面很简陋但性能很好的国产软件。我是付费用户，但不注册的使用限制也比较少。它的优点是适合长时间录制，占用资源少，操作便捷，转码mp4很快很方便。如果只发给少数人，则独有的lxe文件格式更清晰小巧。1小时的录屏可以压缩到100MB。ActivePresenter：如果需要制作封面、目录页、或添加文字注释，我就使用ActivePresenter。转码/压缩工具：小丸工具箱（强力推荐）如果别人问起，我通常推荐 BB FlashBack Express：因为它免费、入门易、网站的介绍也比较多。6、录屏之后的发布现在是在线视频的时代，但PC操作录屏发布，却没有特别好的普遍方案。大家看一下各软件博客偶尔录制并发布的在线视频就明白：明明录制时极为清晰，上传后却画质极渣。实际上，我在这方面投入的研究实验时间，比研究录屏软件更长。用不同的参数录制、压制，上传到不同网站，做过各种对比。最早找到的是sina无二压方案；后来也用过土豆的原画方案——但这些方法现在已经过期。目前可用的，主要是B站上传方案。说起来又是一篇长文，也曾在知乎介绍过，此处不展开。我现在如需发布，是操作录屏则发B站（低码率而清晰，真正高效环保）；拍摄的视频则直接iPhone录制，用优酷/腾讯等视频客户端直接上传。好，序言结束，下面开始转载：最强免费萤幕录影软体 ActivePresenter 教学影片神器作者：电脑玩物 　　 出处：http://www.playpcesor.com/2016/01/activepresenter.htmlWindows 上有很多免费萤幕录影软体，例如我之前介绍过的：免费萤幕录影神器！推荐这款比软体好用 Chrome 套件 、桌面萤幕录影免费软体推荐：超简单在教学影片上画重点解说这些萤幕录影软体都各有优点，今天要跟大家推荐的这款「 ActivePresenter 」也有自己的特色。或许我不会说「 ActivePresenter 」是最好用或是最佳桌面录影工具，但是「 ActivePresenter 」绝对是「最强大」的免费萤幕录影软体，这是什麽意思呢？因为「 ActivePresenter 」介面或许不是那麽好上手，但丰富的功能却可以满足真正要「製作专业教学影片」、「编辑各种数位教材」的需求！所以最强大当之无愧。如果你是一位老师、训练人员、产品客服，或是你在任何情况下要製作一段包含短片、包含简报、包含语音、包含各种操作说明特效的完整教学影片，而你发现一般萤幕录影软体没办法满足你进阶需求时，免费的「 ActivePresenter 」或许能帮上你的忙。1. 最快上手！录製包含点击特效的软体操作影片「 ActivePresenter 」功能有点複杂，介面也很有特色，或许刚刚安装后的你会有点摸不着头绪。没关係，在还没有搞清楚他的所有进阶功能前，我们还是可以把「 ActivePresenter 」当作一款简单的桌面萤幕录影软体来使用！只要点击［ New Capture ］，选择第一项「 Record Software Demo 」，也就是录製桌面软体操作影片即可。这时候会弹出「 ActivePresenter 」的录影工具列，我们可以决定要全萤幕或局部录影，可以选择高画质，可以录下系统的声音，或是外接麦克风的声音。更棒的是，录影过程中我们的每一次滑鼠或操作点击，都会在影片中自动加上特效！按下红色的录影按钮，就开始录製桌面操作影片。而录製中按下［ Ctrl ］+［ End ］，就可以结束录影。结束录影后，会进入「 ActivePresenter 」的影片编辑介面，你会看到「 ActivePresenter 」也是一个很完整的影片编辑器，我们可以在这裡剪接影片，去掉教学影片中不想要的段落，或是继续录製其他片段，最后把它们合併成完整教学影片。2. 进阶需求！聪明录影功能，自动帮每次操作建立分段影片教材开始慢慢熟悉「 ActivePresenter 」后，就让我们来看看他更强大的教学教材製作功能，这时候我们在［ Capture ］中选择［ Smart Capture ］。这个「聪明录製」模式有什麽特色呢？他会在录影过程中，根据我们每一次的操作点击，自动把教学影片分割成一段一段的短片。并且会在每一个操作动作的短片简报中，在正确操作位置自动加上教学说明图解。这样一来，是不是更轻鬆的产生一个可以自动重组、修改的教学影片专桉？我们可以像是製作简报那样，开始在这些分段的短片中快速编辑，产生有模有样的教学影片。3. 更全面的免费版本：无浮水印、无时间限制、个人非商业使用而本文提到的所有「 ActivePresenter 」录影与编辑功能，都是可以提供个人非商业性免费使用的！这对学校老师来说非常有帮助。而且「 ActivePresenter 」的免费版不会有浮水印，也没有影片製作的时间限制。4. 有动有静的影片简报编辑「 ActivePresenter 」既然是为了製作教学影片、数位教材而诞生的软体，那麽除了前面的录影与剪接外，他还具备了很多额外的注解互动特效。例如你真的可以在影片中插入其他简报、插入图片，快速在「 ActivePresenter 」类似简报软体的编辑画面中，製作有动（操作短片）有静（说明简报）的教学影片。5. 针对录製教学影片的丰富教学特效元素「 ActivePresenter 」也有丰富的教学特效素材可以使用，让我们放到简报或影片上！例如可以用聚光灯效果来聚焦影片中的某个重要操作动作，或是加上新的滑鼠游标说明轨迹等等，大家可以在製作教学影片的过程慢慢研究。6. 支援输出各种影片格式而最后「 ActivePresenter 」编辑而成的教学教材，可以转档输出成许多格式，免费版就支援输出成各种格式的影片档桉。「 ActivePresenter 」或许不是最简单易用的萤幕录影软体，但却是最强大的教学影片製作工具，想要製作数位教材的老师、训练人员、产品客服，都值得好好利用。（转载结束）-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>360<docid>     <title>[已结束]过完节，关爱一下牙齿吧~</title>     <link>https://xbeta.info/aiya.htm</link>     <content>【2016-02-26 星期五 更新】活动结束，已经给如下朋友发出邮件（按评论所留邮箱），请按要求于2月28日中午前提供收货地址。prcgolf 补习生 心如新入 Baldur Rockey 蠢蛋小丑鱼春节前收到一份有意思的礼物——牙膏+牙刷+杯子。有意思，是因为：（1）此前深刻感悟：日常实用之物为礼，每次都能睹物思人，感情效率极高。（2）曾对蜂产品比较了解，所以，见到propolis （蜂胶）自动脑补了很多信息。（3）2015回顾，我最满意的新硬件就是电动牙刷（爱妻所赠），远超小米手环。后面聊天才得知，赠礼的朋友在「爱牙」工作。「爱牙」是一款集牙齿健康问题免费在线咨询牙医、实时预约牙科看牙、牙友互动交流和口腔护理用品一站式购买等众多功能于一身的牙齿健康管理 APP。就此创业项目，我认为，在牙齿健康方面，国内还有极大增长空间。而此种消费，很适合订阅模式。而用户在知识、用品选择上，也非常需要可信的推荐精选、新鲜尝试。只是我并没有试用 app，感觉从网站切入，远比app 要轻便很多。更多礼物来了！朋友说，也愿意给善用佳软的其他朋友们，也提供一些福利。我认为是好事，并思考了「软件」博客，与牙齿这款「硬件」的关系。先想起老子。我的记忆中，关于软硬之辩，最早源于《道德经》，比如“柔弱胜刚强” “天下之至柔，驰骋天下之至坚”。甚至，也产生了最早的心灵鸡汤，传说孔子拜访老子时，老子曾经让他看自己的牙——差不多掉光了；再看舌头——完好无损；所以，柔弱胜刚强。今天的苏州金鸡湖畔，还有一尊如此场景的刚柔之道老子像，露仅有的一颗门牙，吐出长长的舌头，受到网友吐嘈。又想起鲁迅。年前在读许寿裳所著《鲁迅传》；春节期间到绍兴，参观了先生故居；回来后整理补充了故居族谱中未显示的部分（xbeta 整理的鲁迅族谱）。毛泽东曾称“鲁迅的骨头是最硬的”，这当然是指“没有丝毫的奴颜和媚骨”的精神品质，而非生理意义。因为骨头最硬的鲁迅先生，自己及父亲曾经饱受牙病困扰。1925年先生在《从胡须说到牙齿》中称，“我从小就是牙痛党之一”。1930年3月，因左联及自己被通缉严压，49岁的鲁迅焦愤上火、牙齿肿痛，最后拔去全部牙齿，改以假牙。鲁迅先生的名字，很容易令人联想起一句古话：一年树谷，十年树木，百年树人。而我又联想到近人的话：想一年领先，可每天多工作一小时；想十年领先，可每天多学习一小时；想一生领先，请每天多锻炼一小时。锻炼一小时太难，那就从更容易的爱牙 10 分钟做起吧。珍爱牙齿，用心留言，就有机会收到 爱牙 app 送出的惊喜（名额有限）。Who Will Write My Essay For Me Thank god for thousands of viruses incessantly caused him college paperweights Our name of truehearted reversive customers whobuy essaysof the highest timbre from us is getting yearner day by day. Buy Sociology Essays Online Secure Hua had demonstrated so rapidly that in the close an with-it, outside-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>361<docid>     <title>顶级免费看图软件IrfanView v4.41发布：提供平板UI</title>     <link>https://xbeta.info/irfanview-v441.htm</link>     <content>顶级免费看图软件 IrfanView 升级到 v4.41，加强了对平板电脑的支持。推荐平板用户尝试、反馈。现翻译其版本更新日志，以示支持。  [下载IrfanView 4.41]IrfanView 4.41（2015-11-29发布，xbeta译）64位版本：如果64位扫描驱动未安装，自动改用32位驱动。为平板电脑设计的新对话框/图形界面。新热键：shift+tab 用来启动/结束平板模式的对话框。新热键：ctrl+insert：复制新热键：Q 暂停/继续，用于定时翻页的幻灯播放新命令行参数：写入到csv文件: /info=infofile.csv安装插件的新参数：/silent 静默安装， /folder 指定目录。详见 FAQ。移除了&#8221;Amazon 1Button App&#8221;。修正其他bug（自动颜色校正；PNG压缩；64位路径）Version 4.41 ( &#8211; CURRENT VERSION &#8211; ) (Release date: 2015-11-29)64-bit version: Use 32-bit TWAIN drivers if 64-bit drivers not installedNew dialog/GUI on Windows tablets (&#8220;2 in 1&#8221;, Thanks to Arun Anbu from Intel)New hotkey: SHIFT + Tab: Start/End Tablet mode dialogNew hotkey: CTRL + Insert: Edit-&gt;CopyNew Slideshow hotkey: Q = Pause/Resume a timer slideshowNew option for /info command line: write CSV file: /info=infofile.csvAdded PlugIns-Installer options for: /silent and /folder (Check FAQs page)&#8220;Amazon 1Button App&#8221; offer removedSome fixes (Auto color correction, PNG compression, UNC-Paths in 64-bit)-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>362<docid>     <title>欢迎加入微信：一些准备工作</title>     <link>https://xbeta.info/wechat.htm</link>     <content>因工作繁忙，本博客更新日益减少。微博更新相对多一些：@善用佳软  http://weibo.com/xbeta微信公众号（扫码添加）偶尔会写一些内容。关注微信公众号之后，也可以按操作找朋友拉入微信群：xbeta微信试验群 ——如何使用，还没想好  。加入后保先持沉默即可，不用打招呼。反正我不太聊天。-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>363<docid>     <title>Ditto:首选的剪贴板增强软件（更新）</title>     <link>https://xbeta.info/ditto.htm</link>     <content>注重效率的用户都喜欢剪贴板增强软件[1]。早期，我推荐免费小巧的 ClipX 和 CLCL 。而最近几年，善用佳软明确推荐：Ditto 是最好的免费剪贴板增强软件，是提高效率的首选方案。目录：一、Ditto简介二、界面展示三、Ditto 亮点与不足1. 搜索2. 合并粘贴3. 纯文本粘贴4. 基于永久条目的命名粘贴（推荐）5. 网络分享6. 文件回收站7. 支持主题8. Ditto的不足之处四、Ditto使用指南：入门篇1. 下载与安装2. 使用中文语言3. 中文字体设定（重要）4. 开始使用：复制/粘贴五、Ditto使用指南：进阶篇（待补）六、常见问题（Ditto FAQ）附录总体内容亦可参见下图：一、Ditto简介　　[返回目录]Ditto 是一款开源、免费、强大的剪贴板增强工具。可以把复制过的所有内容保存起来（可以设定保存日期或条目总数），快捷地供后续调用。还可以合并粘贴，纯文本粘贴，支持分组、置顶、快速搜索、热键粘贴功能。并且，还可以通过网络共享剪贴板内容。主页：http://ditto-cp.sourceforge.net/教程：http://xbeta.info/ditto.htm最新语言包：http://jianguoyun.com/p/DUxYPEIQpvLnBRi1-A0 （比官方语言包翻译更完整，且优化了alt热键。2015-09）二、界面展示　　[返回目录]平常情况下，Ditto只是系统托盘中的图标。按下热键（默认 ctrl+`）后，会出现的粘贴主界面；再点击右键会弹出功能丰富的菜单。参见下图：通过其较为复杂的设置界面，你可以间接了解，Ditto的功能是如何丰富。参见flash（566&#215;498，60+KB）：三、Ditto 亮点与不足　　[返回目录]我最看重的优点有：搜索、合并、命名粘贴。1. 搜索Ditto中可以保留大量（取决于数据库容量）的历史记录。如果想搜索某条记录，只须在主界面的搜索框中输入文字，过滤后的结果会实时展现出来。说明：&#8211; 实时过滤的方式，比传统的“搜索词→回车→搜索结果列表”更为易用。&#8211; 支持中文。&#8211; 早期中文显示会旋转90°，新版已经修复。&#8211; 并非对每条记录的“全文”进行搜索，而是前N个字符，这是为了搜索效率。[2]2. 合并粘贴Ditto允许合并粘贴，就是把多条记录，一次性粘贴到目标窗口。在收集资料时，这点尤其有用。使用方法：弹出窗口中，按住Shift或Ctrl再点击鼠标左键。3. 纯文本粘贴　　[返回目录]如果复制了带格式文本（比如，来自网页、office文件），默认是带格式粘贴，但 Shift+Enter 表示纯文本粘贴。以前很多人还要通过记事本中转来消除格式，有了Ditto后，一切简单了。4. 快捷粘贴经常有一些内容需要重复使用。比如，电话号码、邮箱、公司地址…… 。这些信息可以通过输入法实现，也可以用剪贴板工具实现。早期Ditto 有一项非常强大的功能——命名粘贴（Named Paste）。很多用户（包括我）是此功能的粉丝，但开发者自己对此功能并不喜欢，在2010年12月23日发布的 v3.17.0.17 版本中，取消了该功能的热键。受到了很多用户的反对。尽管作者声称，也可以按照用户呼吁恢复此热键，但迄今为止，此功能仍然缺失。快速粘贴的基本原理是这样的：首先，某些复制的条目要设置为“不自动删除”，防止过期后自动清理。其次，要为它们提供快捷调用方式。和其他剪贴板工具一样，Ditto也支持设置全局热键、鼠标调用。但条目数量较多后，用类似“缩写输入”的方式更为有效。而新旧版的差异，在于调用“缩写输入”的方式变化。使用步骤举例：&#8211; 在任何程序中打出一段常用文本，比如“——善用佳软，免费软件义工”。&#8211; 选中，复制。&#8211; 进入 Ditto，选中此条目：右键→“属性” 或 直接按下 Alt+Enter。&#8211; 在如下界面中，设定此条目为“不自动删除”（因为是常用文本）；Quick Paste Text 为“x1”（就是设定缩写）；热键和组也十分有用，但此处暂且略过。确定，保存。&#8211; 要使用这一条目时，早期操作如下：进入任一程序（比如记事本）。按下热键win+v（取决于你的设定，上述演示flash中设定为win+v），会弹出一个窗口，“Ditto-给粘贴指定”，这时输入“x1”——不要引号，不用在意显示的大写。奇迹就发生了：“——善用佳软，免费软件义工”自动上屏。&#8211; 而目前的做法只能是：按下普通的热键（默认ctrl+`）显示Ditto主界面，在查询框键入 『\q x1』 ，然后回车。相比之前要多输入『tab \q 空格』。取消命名粘贴后，此功能近乎鸡肋。完全可以不使用 quick paste text，而通过修改 title 来实现。比如在常用的条目title中加一个 cy 表示常用，然后，在搜索时除一般关键词再增加 cy 即可。对于要求最高的快捷上屏条目，建议改用条目属性中的热键实现。比如上屏中指定了x键，则按下 Ditto 主热键后，再按 x 可实现文字上屏。这里的条目热键，既可以定义单键，也可以定义 ctrl-x, ctrl-shift-x 这样的组合键。需要说明的是，快速粘贴常用条目的功能，可以理解为输入法、常用文本输入工具。但Ditto比通常工具更为强大的是，它能输入的不仅是一个“词条”，而可以是“多行文本、带格式的文本、图片和文件”。&nbsp;5. 网络分享即一个组内，多人共享剪贴板。暂从略。6. 文件回收站这是一个变通应用。但是，软件的变通应用非常重要！如果你 ctrl+x 方式把一个文件删除了，过后又想恢复，就可通过Ditto的历史记录来实现。7. 支持主题　　[返回目录]我虽然自己喜欢简近乎陋的界面，并且主张软件是拿来用的，不是拿来欣赏的。但很多网友对美化、DIY有一些需求，而 Ditto 是支持更换主题（themes）的，可参见 http://ditto-cp.wiki.sourceforge.net/Current+Themes 。8. Ditto的不足之处顺序粘贴：和大多数免费剪贴板软件一样，Ditto也缺乏“顺序粘贴” 或 “强力粘贴”功能。有需求者，可参照 Hamsin Clipboard 顺序粘贴功能 进行试用。支持此功能的免费软件，目前只发现 Hamsin Clipboard 一款。”四、Ditto使用指南：入门篇　　[返回目录]1. 下载与安装好的下载习惯是到官方网站，这样可以得到最新、安全的软件。Ditto官网 首页上，有多个下载链接：区分了32位和64位版本，区分了便携版与安装版。有网友反映，便携版遇到过Ditto窗口背后的程序无法操作的问题（鸣谢 dexter，2015-09），而安装版则无此问题。2. 使用中文语言下载包中，已经包含了简体中文语言文件 &#8230;\Ditto\Language\Chinese.xml 。但该语言包过于陈旧，请使用本文开头提供的链接，由我补充翻译。某些内容仍为英文，原因是开发者未提供这些文字对应的翻译资源。为了精简，可删除多余的语言文件，只保留简体中文和English。3. 中文字体设定（最新版已经不需要）　　[返回目录]　　早期版本有如下bug，最新版本已经修复。问题一：主界面字体太小，汉字躺倒显示。解决方法：请修改字体（如下图）。第1：改用合适的字号。第2：字体选择“宋体”等，不要选择“@宋体”这样的（@ 表示横向字体）。第3：保存设定，重启Ditto。问题二：经过上述设置后，搜索框键入的字体是躺倒的，如下图。解决方法：方法1：和善用佳软一样，无视之。方法2：chen bin 网友提供修了bug改版。『这里是重新编译的ditto (unicode版本)，修复了中文字体躺倒的问题。https://files.getdropbox.com/u/858862/Ditto.exe (提示:从非官方网站下载的版本,例如我的版本,可能中毒,感染木马,风险自负)』方法3：暂时忍受，待官方修复版。热心的 chen bin 网友已经提交bug报告和修复，见 https://sourceforge.net/forum/forum.php?thread_id=3313122&amp;forum_id=287511 。4. 开始使用：复制/粘贴复制……复制……复制……到需要粘贴的程序中，按下热键（默认 Ctrl+`），在弹出的条目列表上，按下对应数字，或用鼠标点击所需条目，相应内容就粘贴好了。五、Ditto使用指南：进阶篇（待完善）Ditto v3.16.8.0 新增了如下功能：按下热键（默认ctrl+`）后，弹出ditto剪贴条目列表，此时不要放开ctrl键，可以：&#8211; 继续键入`移动光标，至合适条目放开，则此条目上屏。（适用于v3.16.8.0）&#8211; 键入数字，直接第N条上屏。（v3.16.8.0之前或许有效）六、常见问题（Ditto FAQ）　　[返回目录]问：在 cmd 或 gvim.exe 等程序中，Ditto无法粘贴？(Custom key strokes)答：这是因为你用了免安装版，缺少了某些配置。手工修改注册表，或用重新安装 Ditto 可以修复。原理是这样的：正常情况下，在 Ditto 中双击某一条目后，Ditto 会首先把此内容放在windows粘贴板，然后，向目标程序发送模拟按键 Ctrl+V。这样大家就清楚了，因为在 cmd 或 gvim.exe 中，Ctrl+v 并不是粘贴。有鉴于此，Ditto 提供了个性化按键的配置方法（参见 Ditto-clip\Help\DittoCustomKeys.htm）。就是在注册表的 [HKEY_CURRENT_USER\Software\Ditto] 项下，新建三组键值，分别个性化“复制”“剪切”“粘贴”功能。当然，最主要的是“粘贴”。安装版 Ditto 会默认添加对gvim.exe 和 cmd 的支持，参见下图：上图表示，在 cmd 中，ditto 发送“% {Delay100}ep”，即先按下“alt+空格”（弹出菜单），延时100毫秒，再按下e（编辑）p（粘贴）。这样，就在cmd中实现了粘贴。参见下图：同理，gvim.exe 中的粘贴采用了 &#8220;+gP 的按键。需要注意的是，模拟按键时，一定要避免处于中文输入法状态。另外，还要注意上述设定对应的是 gvim 的 normal 状态，而不是插入状态。问：粘贴图片或带格式文字时，输出的格式有错误？答：此问题是关于剪贴板格式的，Ditto有相关配置。参见下面的两个例子。例1：“貌似在第二次粘贴带有图片的内容时会直接变成纯文本！？” “找到了解决方法：在选项里有个支持的类型，选上里面的html 和其他rich text 等等，就可以了。”例2：“似乎还不够完美,我复制的动态gif图像通过Ditto粘贴出来变成静态的了,复制的透明背景的png粘贴出来也成了黑色背景色~不知该如何解决?” 【善用佳软：剪贴板相当于是一个动态多格式混合体，而保存和调用时，需要支持某种特定格式才可以。出于效率，默认情况下Ditto仅支持少数主要格式，所以，出现了上述情况。“选项”→“支持的类型”→“添加”相关类型即可。具体上述问题需要何种格式，不是很清楚（你也可以逐一尝试），但我添加全部格式后，至少透明背景动态gif是支持的。】“试过了,gif如果与文本混排可以通过HTML方式粘贴出来而不改变图像格式,但如果是单张gif图像就只能以CF_DIB类型粘贴为png图像。”问：删除条目太慢？答：最新的 Ditto v3.17.0.17 已经修复删除条目太慢的问题。（正文完）附录　　[返回目录]附录：注释[1]：更多同类软件参见 http://xbeta.info/clipx-clcl-ditto.htm[2]: 过滤框的快速搜索，严格说来，并不是搜索“剪贴板条目”本身，而是搜索此条目的“描述（Description）”。Ditto 选项中，General 下 有一条 Amount of text to save for description ，就是设定把剪贴板内容的前多少个字符当作描述。默认值是 500 。在 官方帮助 中也提到：Every Clip also has a Description that is extracted from the beginning of the Clip’s CF_TEXT Format. The Description is used to represent the Clip in Ditto’s list and is searchable using the Filter Box。明白这一点，对Ditto的应用有如下几点指导意义：　　① 搜索（称过滤更准确）并非全文。所以，某些时候认为有相应条目但搜不到，请考虑一下，是否关键字在剪贴内容的前N个字符以外。　　② 描述可以手工修改，可以与剪贴内容不同。举例来说，“唵嘛呢叭咪吽” “897932384626”“10311019491001123”“http://www.ghisler.com/”这样的剪贴内容不容易通过搜索调用，但如果把描述改为“六字大明咒”“圆周率N位”“身份证号”“tc website”，就容易搜索得多了。变通使用，也可提高安全性。附录：文章更新历史2015-09-21：重写很多文字，更易读；更新了新版本的特性；推荐安装版（感谢dexter）。2011-01-13：新版弱化了命名粘贴功能，本文给出新的推荐做法；补充新版修复删除条目速度过慢的问题。感谢sandox。2009-09-26：增加注释 [2]。2009-07-15：增加目录。2009-06-29：增加 FAQ 之格式；修改“命名粘贴”；补充缺点。2009-06-28：重写 FAQ 之 Custom key strokes 部分。2009-06-25：增加了入门篇和FAQ部分内容。2009-06-24：初稿，未完稿。-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>364<docid>     <title>剪贴板增强软件综述:CLCL,ClipX,Ditto等（更新CLCL v2.0）</title>     <link>https://xbeta.info/clipx-clcl-ditto.htm</link>     <content>剪贴板是一个伟大的创新。它让跨程序、跨文档传递数据变得前所未有的轻松，让 Ctrl+C、Ctrl+V （或Ctrl+Insert、Shift+Insert）成为最常用的快捷键。但是，windows 自身的剪贴板管理功能太弱（只能容纳一条记录），远不足以发挥剪贴板的真正功能。于是，世界各地的程序员开发了上百种增强工具，来“升级”剪贴板。如何从中选择最合适的一款呢？如果你愿意支付 35 usd 的注册费，并且愿意承受庞大的体积，不会因为众多功能而困惑，你可以选择最经典（但现在过于臃肿）的 ClipMate。但是，我并不推荐一般用户这样做。因为这个世界上还有很多优秀免费软件可供选择。其中最优秀的 3 款，都体积小巧，运行快速，使用方便——这就是善用佳软推荐的 Ditto、CLCL、ClipX。我自己长期使用的，是 Ditto。一、概述本部分待整理各款软件的差异：普遍性的差异：不同的剪贴板增强软件，除了体积大小、占用资源多少方面的差距剪贴板功能方面：强化思路方面：数量、格式（图/文/文件）、临时vs管理，内存共享，存储，合并，导出强化思路：输入：历史，多个（软件，vim）。输出：转格式、合并、自动化这类软件的基本功能：支持多个剪贴板，数量可以自己设定。我常用9个（好处是可以按数字键调用）。不仅支持文本，也支持图片。没有其他工具时，可以兼职用作图片收集器。(注:复制图象，和复制一个图像文件是不一样的)热键操作方便。多次Ctrl+C后，到要粘贴的地方，CLCL按Alt+C再按数字或用鼠标选中适当的条目即可。ClipX的呼出热键可自定义。关机后剪贴内容不消失。支持固定内容（模板）作为剪贴板条目，比如常用的信息（地址、签名档、电话、Email等）顺序粘贴真方便。比如要填一个表格，有8个字段。用CLCL的方式是：先清空历史，把8条内容依次复制。到第一个空处，按Alt+C 8，就把第一条（因为最先复制，所以被后面的7条新内容挤到了第8位）粘贴了；再到第二个空处，仍按Alt+C 8（因为原第8位的被应用后，排到了第一位，其他顺延），第2条就上屏了。这样，实际上实现了依次粘贴的功能。二、CLCL、ClipX、Ditto：三强详介CLCL、ClipX、Ditto是三款最实用的软件。追求资源节约、易用的用户，可以选择 CLCL 和 ClipX；追求功能多，存储数据量大的用户，则可选择 Ditto。详细介绍如下。(1) CLCL：Alt+C呼出真方便CLCL 是一款强大、小巧、绿色、免费、开源、日本出品的免费剪贴板增强工具。官网（日文、英文）：http://www.nakka.com/soft/clcl/index_eng.html最新版本：v2.0，2015-09-05汉化版（旧版）：http://www.hanzify.org/index.php?Go=Show::List&amp;ID=7712支持丰富的剪贴板格式：纯文本、Unicode文本、RTF富文本、位图……热键 &#8220;Alt+C&#8221; 弹出剪贴列表菜单，非常方便。然后就可以用鼠标选择条目，或者按数字键选择条目。自定义“模板”：模板的作用，就是把常用内容保存为固定条目，可以是纯文本（比如地址、电话）、图片（比如图像文件）。模板可以新建，也可以把已经采集到剪贴板的内容，直接设定为模板模板可以按文件夹进行组织，可以设定名称（比如“我的手机号”）模板支持热键调用：比如，F8，alt+F8，win+shift+u ……能够设置忽略的窗口，比如不想把记事本的复制内容保存到CLCL中，可如下设定： 可使用插件来扩展功能。官方提供了几款扩展，带有若干功能，但感觉比较鸡肋。下图展示了对文字添加&lt;tag&gt;标签，及变为小写的功能。  能够为每个窗口设置粘贴热键（没感觉有太大意义）能够设置格式过滤。丰富的选项：(2) ClipX：占用内存更小汉化下载｜原版下载｜主页｜CLCL如此好，为什么还推荐ClipX？是因为ClipX不比CLCL差（除了在Maxthon和其他一些IE外挂中不能用）CLCL是日本产软件，一些用户会介意ClipX占用内存更少（几百K。CLCL近2M）ClipX支持Unicode——对一些用户，这一点很重要。（如下图所示。如果显示其他字符集不正确，很可能是显示所用的字体不支持Unicode，换一种应该就OK了）ClipX可以通过菜单清除历史记录，比CLCL更方便。下图：点击系统托盘区的 Clipx ，所显示的菜单。来自官网。下图：在应用程序中使用 ClipX 的情况。来自官网。下图：ClipX 的设置界面。善用佳软+ClipX汉化版+GIMP 制作。(3) 于两者间选择这些人用ClipX：需Unicode的对于日系软件有抵触心理的（其实不必）喜欢一个exe，不要dll的（CLCL运行并不要dll，但设置时需要）喜欢内存占用更少的这些人用CLCL：经常向Maxthon中贴入内容的（ClipX对IE外壳的部分浏览器扩展支持有问题）另外，有意思的是，CLCL要插件才支持Unicode，ClipX直接支持；而CLCL直接支持固定条目（模板），但ClipX则要插件才能做到这点。再一点，我认为 CLCL 的 Alt+C 按键很方便，但在 ClipX 中无法定义此键（呵呵，很有意思。因为在自定义界面上，按Alt+C，就响应了&amp;Cancel，即取消设置）。好软件并非没有缺点，比如：CLCL如果能直接在菜单上清除某些条目、把所有历史合并（代替文本收集器之类的小工具）就更好用了。(4) 最推荐：开源的 Ditto【说明】关于Ditto，请详见 http://xbeta.info/ditto.htm，下文不再更新：上述两款软件均为免费，而 Ditto 则属于开源软件，即懂编程的朋友可以修改它的源代码，让它更符合自己的需求。相对于前2款，它的特点是可以存放更多剪贴板记录，并通过滚动条来翻查，或者输入部分内容进行匹配。另外，它还可以在局域网内共享剪贴板内容。&#8211; 到主页下载，这是便携版 (zip file，1+MB)&#8211; 如果喜欢不同的视觉效果，可下载主题&#8211; 如果需要其他语言文件（xml格式）（下载包已含简体中文），可在主页下载，存放于Language目录。为了精简，可删除多余的语言文件，只保留简体中文和English。&#8211; 这样设置为中文。&#8211; 默认情况下，字体太小，且中文躺倒显示，请修改字体（如下图），然后重启 Ditto。&#8211; 但是，搜索框中的中文字体无法设定（仍保持躺倒方向），暂时忍受一下吧。从使用来看，有3种使用方式：&#8211; 极度频繁使用时，可以设为窗口总处于顶层&#8211; 少数条目频繁使用时，可设定启用 ctrl+0~ctrl+9 快捷键&#8211; 通常情况下，通过热键 Ctrl+` 调用3款推荐软件的内存占用情况：四、以下这些软件也不错1. Hamsin Clipboard v3.03免费的剪贴板增强软件Hamsin Clipboard v3.03 ，除了体积非常小巧（100KB，1exe）外，最大优点是支持顺序粘贴，缺点是历史条目固定为10条。顺序粘贴（Incremental paste）使用方法：尽管作者自称软件非常易用，但此功能的设计、文字说明，对用户都不友好，故做如下说明。关键点是“先激活Incremental paste，再复制” 。如果先复制，再激活，是无效的。1、清空：考虑到只能存储10条剪贴历史，请先清空历史（右键菜单&#8211;special&#8211;clear history，默认热键win+del)2、设定：激活 Incremental paste 选项。3、复制：选中内容1，ctrl+c；选中内容2，ctrl+c……。4、粘贴：到目标程序中，ctrl+v、ctrl+v……由此可知，它的顺序粘贴（Incremental paste）相当于共享软件 ClipMate 的强力粘贴（power paste）的一半功能。所谓强力粘贴，或顺序粘贴，是指先多次ctrl+c，然后只管按下ctrl+v，先后复制的内容会依次粘贴过来。所谓一半功能，是指 Hamsin Clipboard 并不能对已经复制过的内容，进行顺序粘贴。而只能是先进入顺序粘贴模式，再多次复制，再多次ctrl+v，才会顺序粘贴。实际上，称为“临时顺序复制/粘贴”更准确。从原理上，可以这样理解：Hamsin 的顺序粘贴，并不是对原有功能的增强（增强理解为乘法 [1]），而是增加的一个新功能（理解为加法）。进入此模式后，它会重新做一个序列记录，当你按下ctrl+v之后，自动加载下一条记录。并且，只能使用一次，如果要再使用，必须再依次ctrl+c。这与ClipMate可以对任意选中的记录，进行正/逆序的强力粘贴是有较大差距的。但无论如何，Hamsin Clipboard 是唯一具备顺序粘贴功能的免费软件。【善用佳软/2009-12-08补充：Clipboard Magic 也支持。】Incremental paste：官方相关说明　　When &#8216;Incremental paste&#8217; option is on, several clips can be copied to the clipboard one after another and pasted in the same order (Actually, in this mode each clip is placed into the history only, whereas each pasting automatically places the next clip onto the clipboard for the next pasting operation).另外，它从3.0版开始写注册表，以前配置记录于ini文件。除了顺序粘贴外，还支持 Win+数字键 直接粘贴内容、合并剪贴板、常用条目。支持很多格式，但历史条目仅包含10条，加多不行，减少也不行；只能以有限长度的文字显示已记录内容（不如CLCL那样可以在图标上显示图片格式内容的缩略图、可以在鼠标移到菜单的条目上时可以用工具提示显示全部内容）等。2. ArsClip：多热键、分场景、支持表格模式（2010-07-08更新）软件主页：http://www.joejoesoft.com/vcms/120/最新版本： ArsClip v3.1.4，2010-07-06性质：免费、开源（下载包含源代码）最佳免费剪贴板增强工具是这样评价 ArsClip 的：在软件功能与简洁方面实现了较好的平衡。它和Clipomatic、ClipX一样小巧快速，又能记录更长的剪贴历史。它的聪明之处在于，记录全部历史， 但只显示一小部分。要显示另外一部分，需要再点一下按钮或菜单。它的历史记录也是可以搜索的。ArsClip 也支持永久条目，并且通过分组（比如论坛发文、邮件地址、签名档等）扩展了功能，在弹出菜单上分级显示。ArsClip 还提供了一键编辑内容的功能。它还有一大优点就是，ArsClip无须安装，可以运行在便携介质上，这样剪贴内容就可以永随身边。”默认使用方法：运行ArsClip后，照旧应用 Ctrl+X/C/V，按下 Ctrl+Shift+Z 会弹出菜单。优点（*表示优于Ditto）：永久条目支持快捷键，比如按下 ctrl+alt+x，一长串文字就可上屏。* 有表格粘贴模式。* 条目列表中，有来源程序的图标，便于识别。支持图片。支持Unicode。* 条目操作有些快捷键：比如按住F1点击仅放发送到剪贴板。* 可以针对不同程序，设定不同粘贴方式（如下图）。* 永久条目组，可以针对不同程序。比如，让Email组仅在邮件程序中启用。有搜索功能，但需要进入搜索界面，不如Ditto唤出后直接键入搜索方便；搜中文崩溃。缺点（与Ditto相比）：搜索不便；无合并粘贴功能；无命名粘贴。ArsClip更多介绍： 《ArsClip：超強圖文剪貼簿》 by Dr.J.Clipomatichttp://www.mlin.net/Clipomatic.shtml 很小啊很小，100KB级clip magic好象是freeware，小巧，安装文件 1.5MB。功能好象很强大 http://www.clipmagic.com/more.html 下载 http://www.clipmagic.com/software/cmsetup.exe其他 Kana Clip（对剪贴内容进行加工）、Clipguru、Yankee Clipper 3、Freeclip也都是不错的软件。四、相关软件除了纯正的剪贴板增强软件，还有一些软件也具备相关功能。比如资料管理类软件，甚至是某些编辑器，都具有剪贴板监视功能。AutoHotkey 等脚本工具，也能实现类似功能。还有一些小工具，把选中文本发送到 notepad 等。（此部分未完成）（正文完）注释[1]: 乘法与加法是一个重大区别。乘法是融会贯通，一通百通。而加法只是简单堆积。乘法的例子：Total Commander、Vim、Google 增加一项小功能后，这个小功能可以与以前的N个基本功能结合起来，效果提升非常明显。文章更新历史2015-09-07：CLCL从Ver 1.1.2更新到 Ver 2.0.0，重写本部分。2012-02-14：说明Hamsin Clipboard 的顺序粘贴功能使用方法。2010-07-08：重写ArsClip的介绍。2009-08-21：重写 Hamsin Clipboard 的顺序粘贴功能。2009-06-25：更新小标题及多处文字，突出 Hamsin Clipboard 的顺序粘贴功能。2008-06-23：增加Ditto部分。2005-09-09：初稿。-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>365<docid>     <title>RightNote:让Evernote支持树状目录的经典桌面笔记软件</title>     <link>https://xbeta.info/rightnote.htm</link>     <content>2015-8-20更新：点击查看flash演示，内容：基本界面；设置项；与Evernote集成。【善用佳软注】在我看来，Tranglos KeyNote 是笔记软件类的经典与鼻祖。而它的最佳继承者则是 RightNote。今天发现，RightNote 已经可与Evernote集成同步，让Evernote支持多层级结构。我非常赞赏这一特性，故志愿推广RightNote。以下内容摘自RightNote官网，感谢 Tingxun Shi、guestwind、封畅的翻译。RightNote：更佳组织信息，让Evernote也支持树状笔记RightNote 能帮助你免于信息过载。它可以把海量的零散信息集中保存，并通过全局搜索，实时找到所需信息！使用RightNote，你就能掌控信息碎片：知道如何存储，随时找到所需。它拥有丰富的功能。软件类型：免费版；标准版（$29.95）；专业版（$59.95）最新版本：V3.31（2015-08-06）下载链接：http://bauerapps.com/downloads/二、RightNote特性支持更多层级每个 RightNote 笔记本，可包含无数个页面(page)；每个页面，可建立自己的树状笔记结构。用户在组织海量信息方面，具有极高的灵活性，和强大的功能。处理不同类型的信息RightNode的笔记可以有多种类型——文字处理、电子表格以及源代码类型。这允许你在单个笔记本中无缝囊括不同类型的信息。Evernote同步——在云端存储笔记可以把选中的笔记存储在Evernote并与之同步，这样你就可以从任何浏览器、移动设备或者操作系统上访问它们（仅限专业版）。快速查找！内置的全文搜索引擎允许你超快找到你想要的东西。没有复杂的搜索对话框——输入文字时，搜索结果即刻高亮！保证安全RightNote含有一种灵活的保护体系结构，允许你在任何笔记、树或者笔记本中，使用工业标准的128位加密安全地保护信息。强大的web导入RightNote的高级HTML粘贴功能，可准确导入网页中的图片、样式，使得导入的内容与原始网页高度一致。高效各种键盘快捷键、预定义的热键、预定义的文字和背景颜色，以及近期/经常使用的笔记列表，可更容易、更有效地处理常见的、重复性的任务。让数据自由强力的导入和导出选项，允许你从各种数据源导入数据；也可以把数据导出成常见的文件格式，如.txt, .rtf, .rvf, .html和.xls等。可定制的界面RightNote含有很多应用选项，允许你根据个人喜好定制界面。程序便携你可以随身携带你的重要信息。在任何电脑上插入优盘，并在其上运行程序即可，不会影响宿主电脑的设置。免费版也足够强大免费版包含大量与商业版共有的特性，可用在个人用途，亦可用在商业用途。三、更高效地管理信息把所有笔记存放在唯一的地方。当你遇到新的信息时，可立刻想到该放在何处。可以在这里存储各种类型的信息。RightNote可以处理文本、html、财务数据、源代码、一般列表、待办事项列表、联系人列表等。知道在何处找到你的信息。如果你把信息放在一处，你自然知道该去哪儿找！高效的工作空间、工作流。让RightNode最小化在系统托盘图标中：需要时以全局热键呼出，不再使用时用esc将其最小化。四、独特功能文件夹树：使用新的“文件夹树”功能，轻松导航，管理含有大量节点的树。自动添加标签：对于一个文件夹笔记，其所有子笔记自动获得父笔记的标注。这允许你把笔记组织和添加标签同时进行。Evernote同步：Evernote同步功能允许你在任意移动设备、桌面或浏览器上访问选定的笔记（通过Evernote服务）五、RightNote 注册与购买购买后，我们会给你的邮箱发一封邮件，包括一个注册码（序列号），通过这个来解锁试用版，并允许你继续使用程序。注册用户在接下来12个月内，或下一个大的版本号升级之前（可能比12个月还长！）可以免费升级。通过MYCOMMERCE进行付款，它可以提供安全的交易处理功能。六、各版本的功能比较1、免费、标准、专业版的共有功能&#8211; 支持的笔记类型* 富文本笔记：支持基本的文本格式能力（如写字板）* 源代码笔记：可以对大多数常见编程语言进行语法高亮* 纯文本笔记* 链接笔记类型：快速、容易的访问你硬盘上的相关文件&#8211; 富文本笔记，包括一个预先定义的格式工具，以及文本高亮工具&#8211; 即刻搜索：输入搜索内容，即可看到搜索结果&#8211; 高亮的搜索结果：方便看到该看哪条搜索结果&#8211; 新：文件夹笔记和文件夹树可以轻易在大的树中导航&#8211; 新：自动添加标签：文件夹笔记和子笔记自动从文件夹标注中获取标签&#8211; 笔记保护：使用工业标准的AES加密方法，加密选定笔记的内容&#8211; 包含海量图标（用于树节点和标签），您也可以添加自己的图标&#8211; 强大的标签系统，允许你通过不同方式对笔记节能型分类&#8211; 可以给标签添加图标，这样树中的笔记可以高亮，分外突出&#8211; 从常见格式的文件中导入笔记，可将笔记导出成常见格式的文件&#8211; “最爱”工具条，可以快速访问常用文件&#8211; 可以使用页面转换和浮动树工具，轻松在文件之间传输页面和笔记&#8211; 截屏工具，可以把屏幕保存到你的笔记中&#8211; 使用全局剪切热键，从其它应用中把文本剪切进RightNote&#8211; 同时提供便携版（USB）和安装版&#8211; 个人、商业均可使用2、标准版、专业版增加的功能&#8211; 富格式笔记类型：支持高级的文本编辑功能，包括多图像支持、高级表格支持、高级段落布局和格式调节、预定以文本和段落样式工具&#8211; 拼写检查（对富格式笔记）&#8211; 电子表格笔记类型：支持大多数excel函数、可以对列进行排序、填充命令、固定头部的行、合并/拆分单元格、单元格备注、单元格链接和图像&#8211; 从MS Excel文件导入及导出&#8211; 创建到其它笔记的链接（富格式笔记和电子表格笔记）&#8211; 附件笔记类型 &#8211; 在一个RightNote数据库（文件）中存储文件的任何类型&#8211; 高级剪切功能：对网页内容进行剪切可以保留格式和图像&#8211; 新：分枝提升功能：把树的某个分枝提升，仅显示该部分，有助于注意力集中。 3、RightNote 专业版增值功能&#8211; 索引附件：txt, rtf, htm, html, pdf, doc, docx, csv, xls 和 xlsx 。&#8211; 多笔记本搜索：同时搜索你的所有笔记本。&#8211; 保存网页为网页类型的笔记。&#8211; 并排视图：便于在不同页面（同一笔记本，或不同笔记本）间移动笔记。&#8211; 新:Evernote 同步：全面支持所有的 Evernote 笔记元素，包括图片、checkboxes、锁定、附件。可通过任意移动设备、桌面 (Mac/Windows) 、浏览器访问同步的笔记。-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
<doc>     <docid>366<docid>     <title>极点五笔完整更新历史: v1.0-v7.2内测版（2012-01-16）</title>     <link>https://xbeta.info/freewb-history.htm</link>     <content>极点五笔是善用佳软使用超过10年的输入法。出于感激和对优秀软件的宣传，很希望为它做点事情。考虑到极点五笔没有官方的完整版本更新记录，特此整理如下，供极点爱好者参考。相关链接：官网｜@心系极点｜非官方博客｜旧版下载｜五笔学习经验｜杜志民专访-1｜专访-2官方介绍：极点五笔，全称为“极点中文汉字输入平台”，作者杜志民。 极点五笔输入法是一款免费的多功能五笔、拼音输入软件平台，同时完美支持一笔、二笔等各种以 a-z 为编码的“型码”、“音型码”。我的评价：在善用佳软看来，极点五笔是后起之秀（相对于早期的五笔而言），却已成经典；它始终免费纯净，并且促使（迫使）另外几款五笔输入法也走向免费；它的作者无暇宣传，却有一大批粉丝积极（而不偏激）地推广；它功能丰富，却从来不让人感觉多余；它自定义能力极强，却依然稳定、快速、小巧；它简洁质朴，但拥有众多粉丝制作的各种词库、皮肤。并且，杜志民老师的人品也深为广大用户尊敬。“已所不欲，勿施于人；已所欲，勿强施于人”——很认同杜志民老师的这句话。能在学习五笔后不久接触到极点，我也感到很幸运。鸣谢：以下信息源自极点官网、五笔爱好者论坛、维基百科，由xbeta整理。感谢dinosaurhxe、today等网友补充指正。目前正式发布的最高版本为7.15十周年纪念版。论坛上流出的最高内测版为7.2内测版（2012-01-16）。目前，杜志民先生忙于工作、家庭，继续更新极点五笔的可能性很小。一、简明版：极点五笔版本历史2012-01-16，极点五笔7.2内测版，这是极点五笔的最高版本，但未正式发布，是内测网友在论坛上传的2011-12-30，极点五笔7.15十周年纪念版发布，这是正式发布的最后版本2010-08-09，极点五笔7.13版发布 （极点五笔官网信息似乎丢失过，恢复后停留在此版本）2010-04-28，极点五笔7.12版发布2009-08-07，极点五笔7.0 预览版2009-??-??，极点五笔6.6正在准备中……2009-02-09，极点五笔6.5版2008-10-31，极点五笔6.4正式版2008-09-20，极点五笔6.3版（标准版及便携版）发布2008-06-12，极点五笔汶川地震纪念版2007-11-11，极点6.1正式版（Unicode版）2006-11-07，极点五笔Unicode第二测试版；2006-10-23，极点五笔支持中日韩三国大字符集的Unicode测试版；2006-03-18，极点五笔5.1版；2005-12-25，极点五笔5.0正式版；2005-10-01，极点五笔4.5SE（简体版）发布；2005-08-23，极点五笔4.5《电脑商情报》专版；2004-08-26，极点五笔4.0；2003-12-31，极点五笔3.5；2003-12-24，极点五笔“便携”版；2003-06-22，极点五笔3.2；2003-03-31，极点五笔3.1；2003-02-01，五笔拼音输入法（极点前身）3.1；2003-01-06，五笔拼音输入法3.01；2002-12-14，五笔拼音输入法3.0beta2；2002-11-25，五笔拼音输入法2.5；2002-11-19，五笔拼音输入法2.4；2002-11-15，五笔拼音2.3；2002-11-03，五笔拼音2.0a；2002-10-30，五笔拼音2.0beta6；2002-09-16，五笔拼音1.8；2002-08月底或9月初，五笔拼音1.7试用版在输入法论坛提供下载；2001-09-10，五笔拼音1.0测试版供内部使用、测试。二、详尽版：极点五笔更新历史极点五笔7.2内测版（2012-01-16），通过论坛流出的，这是极点五笔的最高版本，但未正式发布下载链接: http://pan.baidu.com/s/1qWsXWQg 密码: zuj4使用方法：将下载的升级包解压到极点安装目录，覆盖同名文件。在极点没有使用的情况下运行registry.exe进行升级即可。7.2内测版更新记录2012年1月3日1、修正64位系统下IE9中不能使用智能标点输入——和……问题。2、修正删除一个逗号或句号后，接着输入逗号或句号删除前一个字符的问题。3、修正联想提示框词组提示框不消失的问题。2012年01月4日1、修正标点配对中单字输入，系统提示词组后，回车换行的问题。2012年1月9日1、修正切换词库时不更新快捷码表问题。2012年1月121、数字,数字,输入——的问题(“3，3，”输出的是“3，——”)3,3,3,3,3,3, 3 ，3,3,2、Excel2010执行VBA后退出非法3、状态栏自动缩展时显示多余图标的问题4、微调候选窗的显示处理（刷新方式）2012年1月15日1、修正：切换到自动缩展皮肤时，皮肤处于扩展状态的问题。2、完善：新造词后将系统词调到首位，再编辑用户词库后又跑到后面的问题。2012年01月16日1、恢复：查询及造词时自动判断是否为剪切板造词2、完善：启用智能标点时，判断用户是否进行了鼠标定位操作，防止误输出2011-12-30，极点五笔7.15十周年纪念版本版主要是增强程序稳定性。1.修正：使用极点造成应用软件异常退出的问题2.修正：切换或编辑词库失效的问题3.修正：在PE系统下无法注册的问题4.修正：桌面上显示多个极点状态栏的问题5.添加：候选窗鼠标划词查询功能6.添加：智能标点功能附：2011年对极点五笔所做的详细更新记录 [via]2011年12月10日修正：备份文件日期有误引起状态栏右键非法的问题修正：自定义[元]后，数字转换不正确的问题2011年12月5日完善：Excel及WPS 电子表格标点配对功能修正：IE页面内无法用键盘切换全半角/中英文的问题完善：状态栏的显示与定位2011年11月30日1、修正：用鼠标打开极点后快捷键不能立即使用的问题2、修正：在线调序未保存的问题3、修正：www.转英文后不能用鼠标切回中文4、修正：切换词库后状态栏未及时刷新5、修正：多状态栏的问题6、添加：日期0自定义功能[system]段零=[0]7、完善：系统设置快捷键设置以中文键名显示2011年11月20日1、修正：极点设为默认输入法有时切换词库失败的问题2011年11月8日1、修正：重写词库的加载与卸载模块2、添加：用复制内容造词快捷键：ctrl+alt+=3、修正：精简状态栏菜单与系统设置项2011年11月3日1、修正：极点作为默认输入法无法切换词库的问题2、完善：状态栏的定位与显示2011年10月28日1、修正：恢复词库与配置时，新配置未起作用的问题2、修正：恢复极点原有配置文件管理方式3、完善：鼠标查询提示窗4、添加：剪切板查询快捷键：ctrl+alt+/2011年10月21日1、二笔中参与编码的标点无法顶字上屏2、切换皮肤时，被关闭的极点再打开时皮肤未换3、尝试解决某些软件中复制无响应2011年10月6日1、wps2012下候选窗越界问题2、编码中有万能键时可输入第5码问题3、鼠标查询结果显示4、用户词组不受“全码出词”选项限制5、;abc/会上屏的问题6、词库加载的一个逻辑错2011年9月23日1、完善：简入繁出状态下鼠标取词查询2、修正：简入繁出快捷键失效的问题3、修正：多个程序使用极点，其中一个关掉极点后其他程序不出中文的问题2011年9月22日1、完善：词库切换流程2、修正：用安装包安装时freeime.bin等文件打开错的问题3、完善：微调状态栏菜单，添加了快捷命令帮助4、完善：快捷命令的处理流程2011年9月14日1、完善：状态栏的显示（通过skin.ini中[状态栏2]项来自定义此状态栏哪些按钮不再显示）2、添加：skin.ini中添加“显示提示信息&#8221;决定是否显示状态栏鼠标提示2011年8月11日1、修正：切换状态栏时未自动定位的问题2、添加：快捷命令“pp.”进入专家设置模式2011年8月10日1、完善：恢复了状态栏自动缩展功能2、添加：快捷命令“vv.”，用于显示极点版本号3、完善：大写状态下标点强制为半角4、完善：完善状态栏切换功能5、完善：微调状态栏和候选窗提示信息的显示2011年7月28日1、完善：恢复了全角英文字母输出功能2、完善：隐藏修改窗选项仅在当前软件中起作用的问题3、完善：切换到没有图片皮肤，程序非法的问题4、完善：自定义鼠标查询字体大小[system]::sztipToolC 及sztipToolS2011年7月9日1、修正：鼠标在状态栏上乱跳的问题2、修正：临时生僻字状态，校对模式误上屏的问题2011年7月3日1、修正：编码n一直翻页后出错的问题2、添加：自定义大写金额中“元”（专家设置模式中，在[system]下加一行：RMB=[圆]）3、添加：标点配对切换键（可到图形设置模式中设置，默认为ctrl+del）2011年6月28日1、修正：状态栏位于屏幕4角无法显示提示的问题2、修正：某些情况下空格选项亦上屏校对项的问题2011年6月27日1、完善：鼠标悬停提示遮挡候选窗时，鼠标移出悬停窗提示自动消失2、修正：上版状态栏无法拖动的问题2011年6月23日1、完善：鼠标查询汉语拼音显示不清的问题2011年6月20日1、完善：状态栏提示信息及候选窗鼠标查询显示2、完善：将版本号微调为7.152011年6月15日1、完善：美化鼠标查询结果窗2、添加：鼠标查询拓展插件（默认查询“极点汉语词典.db”，如果要查其他字典，请到“专家设置模式”中[system]段下添加一行：TiptoolDB=字典名称）2011年6月13日1、修正：传统候选窗不显示边框的问题2、修正：某些软件中候选窗被遮挡的问题3、修正：方形候选窗下鼠标查询功能在尾字上不执行的问题2011年6月3日1、完善：状态栏自动定位时，切换状态栏模式时定位异常的问题2、添加：候选窗顶层显示（默认打开，如若关闭到专家设置模式中添加：CandShowOnTop=0）2011年5月25日1、完善：隐藏状态栏后再显示时跑到屏幕左上角问题2、优化：检索速度2011年5月19日1、完善：所有类型的候选窗均支持鼠标查询拼音与编码2、完善：所有类型的候选窗均支持鼠标选词3、完善：registry.exe 加入/ns参数，在PE类系统上加快执行速度2011年5月16日1、完善：极点有时自动转到英文状态的问题2、完善：状态栏提示信息的显隐方式3、完善：恢复状态栏自动定位选项2011年5月6日1、使用极点时应用软件异常退出的问题2、完善系统设置，在设置界面上提供实时帮助信息3、完善：PE系统下registry.exe执行失败的问题2011年4月18日1、长时间使用极点出错2、自定义软键盘“/”键不能输出的问题2011年4月3日1、Ctrl+-仅能删第一候选项的问题2、Shift作中英文切换键时，Shift+！打开软键盘的问题2011年3月28日1、打开极点置为英文不起作用2、shift、ctrl可不分左右设为中、英文切换键（到专家设置模式中将CN_EN项设为shift或ctrl即可）3、自动组词出错时给出提示2010-04-28：极点五笔7.12版本版主要增强程序稳定性与兼容性，优化速度，修正已知问题，并完善使用说明与设置界面的实时帮助。建议所有极点用户更新到此版。（xbeta注：无论从实时帮助、帮助文档、设置向导这些用户细节，还是对云端、64位等新情况的迎对，还是标点符号自动匹配功能，都能看出极点五笔永续的进步。）具体修正内容如下：2010年4月17日1、添加：系统设置界面添加实时帮助了2010年4月16日1、添加：图形设置界面：标点自动配对输出选项2、完善：有时状态栏显示&#8221;大写字母&#8221;后,再按capslock,capslock熄灭后,状态栏仍为&#8221;大写字母&#8221;2010年4月15日1、添加：标点符号自动配对功能 [system]::SmartSymbol=1。标点配对输出后，第一个回车相当于右方向键2010年4月13日1、修正：某些系统下候选窗无法隐藏并显示于桌面左上角的问题2、修正：组字过程中隐藏状态栏，之后候选窗不显示的问题2010年4月12日1、修正：自定义标点后symbol.txt文件被删除的bug2、完善：_固定输出“——”，如果定义到其他键上，输出“—”3、添加：状态栏无法自动定位时，可选状态栏定位位置4、完善：状态栏无故跑到左上角的问题5、添加：skin.ini::[状态栏]添加“边距x”和“边距y”两个选项——状态栏不能自动定位时距屏幕的边距2010年4月11日1、修正：某些系统+特定皮肤备份非法的问题2010年4月9日1、完善：状态栏与候选窗的拖动显示2、修正：切换皮肤后，如果原候选窗不跟随，则新候选窗首次不能正常定位3、修正：二笔下编码;不起作用的问题4、修正：启用背景图、不用边框时，左上角出黑线的问题5、修正：云端中启用极点，windows中极点不可用的问题2010年4月8日1、完善：候选窗的拖动处理及跟随2、修正：极点设为默认输入法DeamonLite无响应问题3、修正：某些情况下，64位与32位程序同时使用时，不能输入中文的问题2009-08-07：极点五笔7.0 预览版 下载地址从极点6.5发布到现在半年多了，各种原因对极点无法像之前那样投入。感谢一直以来大家对极点的关注与帮助。这个版本只是经过内测网友的测试，故无法保证其100%运行顺利。如果有什么问题欢迎留言反馈。极点五笔输入法 7.0预览版修改记录1、添加了对win7的支持2、添加了对X64的支持3、修正由于词库损坏造成非法或丢单字的问题4、可以，但不建议设为默认输入法5、只要是候选窗上的词可以任意调频6、每次批量加词数量理论上没有限制7、根据登录用户自动切换设置9、完善候选窗设置：同一皮肤中各类型候选窗选项可单独设置待完善部分：1、X64下的反查只能查拼音与编码2、打包到别的机器上只能使用默认设置&#8230;&#8230;&#8230;..极点五笔v6.6（开发中……）极点五笔v6.6正在研发中，目前已基本实现：&#8211; 任意调频——以前只能全码且编码相同才能调&#8211; 多用户的支持——根据登录用户自动选择配置文件&#8211; 批量加词——不再限制容量&#8211; 任意月、日录入——“;月.日”格式，“.”键上屏&#8211; 编辑用户码表功能完善&#8211; 支持x64操作系统及软件（更多……）2009-02-09，极点五笔6.5版1、修正：某些设置下输入编码非法的问题2、完善：候选窗的定位与显示3、添加：字根拆分提示插件（学习版）4、添加：输入速度统计功能5、完善：一些细节问题2008-10-31，极点五笔6.4正式版本版为极点6.3及其SP1的完整版，同时修正了以下内容：1、完善：五笔拼音模式下临时生僻字的检索算法2、完善：简入繁出功能3、完善：自动调频时，zz系列也参与调频的问题4、添加：切换皮肤快捷键5、添加：候选项后自动添加空格快捷键6、完善：选中 回车键编码上屏时 时对快捷英文等键的处理&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2008-09-21 极点五笔 6.3 SP11、修正：启用自动造词，而索引文件freeime.dat内容有误时，输入某些单字非法的问题2、完善：启用全屏模式隐藏输入框功能——待确认&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2008-09-20 极点五笔 6.31、修正已知问题，增强程序的稳定性与兼容性2、优化检索算法，提高反应速度3、以《现代汉语（第五版）》为标准，整理了极点汉语词典，共收单字：24,450个、词组48,253组（新旧词典不能同时使用，仅标准版内含）4、添加了笔画辅助输入功能（标准版）5、完善编码反查，既提示单字全码，也提示简码6、完善拼音输入功能，实现五笔拼音混合输入且拼音对五笔盲打几乎无影响，全拼、简拼、混拼任君选择（标准版），让您真正体会：行云输入，流水感觉7、增加网络同步接口，供有需要或有能力开发用户使用8、修正与完善其他细节问题&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2008-07-08 之后小更新：设置界面改动了一点,主要的是设为默认时,word等其它地方支持剪贴板(涂黑)查询了&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2008-07-08日 极点五笔汶川地震纪念版SP1安装本版极点请注意：如装有旧版极点，请注销或重启系统后再安装。本版修正了地震纪念版发布以来发现的绝大多数问题，建议所有极点用户，特别是使用极点6和VISTA的用户升级到此版。注：1、不建议将极点设为默认输入法，如将极点设为默认，剪切板查询、造词功能会失效；2、非方形候选窗某些情况下定位会有问题3、游戏兼容性未完全测试&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2008-06-12 极点五笔汶川地震纪念版1、自动转换旧版本词库，以后升级极点不用担心词库不兼容了：）2、可直接编辑用户词组3、优化算法，提高速度！4、完善对VISTA下非管理员的用户的支持5、完善简入繁出，并提供大五码输出功能6、完善联想功能，不标记联想词组也能联想7、状态栏可自动透明，增加显/隐候选窗快捷键8、重新规划了状态栏右键菜单&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2007-11-11，极点6.1正式版（Unicode版）增加的功能列表1、添加快捷码表及在线编辑功能2、重码上屏校对模式，适宜快速盲打录入后整篇校对3、编码打开软键盘4、shift选重码5、连击中英文切换键（默认是右shift)打开软键盘完善的功能列表1、简入繁出全面超 越极点5，五笔与拼音同时支持一简对繁的显示与输出2、根据人民日报词频完善了联想功能3、词典在非简体系统下亦可正常使用4、安装程序支持各种非简体系统5、在WOW等游戏下Shift键粘滞的问题&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-极点五笔 5.2版 982K （日期未知：2007-12-31？）因开发极点6，此版未曾公开发行。它修正了5.1版某些bug，是最后一个ansi版本。&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-极点五笔6.0 RC版（日期未知：2006-10-23？）说明：1、本版暂不支持简入繁出功能；2、本版无法直接使用旧版词库（切记，用之前极点的词库，极5或极6的都会非法！！！），请安装到全新目录；3、本版为测试版，请勿用于关键工作场合4、时间、精力关系，本版主要做兼容性测试，功能方面的要求正式版不会再添加了。相较宝宝出生纪念版，本版基本完成了以下功能：1、自动词组2、万能键3、词组联想4、提示系统已有词组5、智能隐藏词组功能6、维护词库的相关功能7、打字音效8、系统配置与词库的备份与恢复&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2006-03-18，极点五笔5.1版；注：最后一个公开发布、支持win95和Win98的版本，从极点6开始只支持Win2000及以上的版本的Windows。1、在迷迷糊糊的帮助下完善了候选窗的跟随2、解决了魔兽下启用词组联想会造成丢键的问题3、优化极点的检索效能4、彻底解决了guest用户无法使用极点的问题5、完善了极点在使用中的安装与卸载6、采用了wozy 4.3版为基础，集一剑、海峰和物理之大成的4精词库7、更便利的系统设置，符号与设置向普通输入习惯靠拢8、重新改写了皮肤架构，方便皮肤交流&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2005-12-25，极点五笔5.0正式版；xbeta：感谢杜老师在极点5.0中更正了极点设置后VIM会崩溃的问题。一、本次重要更新1、第一个自带字典功能的输入法2、第一个插件化的输入法3、漂亮、实用的状态栏4、命令直通车扩展了如下功能：①$F输出本地文本功能；②$P输出位置功能；（相应功能说明见极点5.0帮助）③用编码：zzka、zzkb来打开相应软键盘功能；④最小化桌面窗口：tray $xtray⑤打开光驱：opencd $xopencd⑥开关扬声器：mute $xmute⑦极点目录变量：dirr $X[极点目录]%freewb%5、增加打字音效功能。默认关闭，高级设置中设置，关闭时不占资源；6、更漂亮、更实用的状态栏。极点对状态栏皮肤进行了进一步的扩展，具收缩、扩展两种状态，更漂亮、更实用，输入法的各种状态与常用功能一目了然。7、进一步优化检索算法，既减少了资源占用，并同时提高的检索速度。8、修正了此前版本中发现的各种问题，特别是启用扬声器报警非法等关键性错误，同时也完善了音箱报警功能，用户可以自定义空码与重码所用报警声音文件。提示：极点5.0的状态条作了重大改进，原来4.5版的状态条已经不适用了。如果覆盖安装的，建议在“输入法设置→界面设置→状态条设置”中选择新版的IPurple.ini状态条。当然，选择4.4及以前的版本的简单状态条也行。&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-2005-10-01，极点五笔4.5SE（简体版）发布；注：极点第二个成熟、稳定版本，也是极点的第一个成熟平台版本。本版主要修正了一些细节问题，对设置做了一定的调整，并添加了“临时GBK”功能。1、全面调整设置界面。对设置的功能选项力求简洁与便捷，使极点的新用户能够获得更好地易上手性。将一部分设置功能转移到高级设置中，为方便高级用户，改进了码表用户码表的格式，增加查找选项。2、“临时GBK”。默认快捷键为“]”,此功能类似于极点的临时拼音功能。在GB2312下启动临时GBK后，检索范围为GBK单字，输出GBK单字上屏后自动切换回GB2312状态。&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-发布: 极点4.51、可以自定义极点的绝大部分快捷键2、通过编码调用windows的一些常用功能：如浏览指定网址、打开我的电脑、我的文件夹或打开指定文件等。&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-发布: 极点五笔4.3正式版 (5月11日更新)一、本次重要更新本版主要修正了上个公测版的一些细节问题并根据潜龙勿用网友和Ahaman先生的建议添加了“命令直通车”功能。1、命令直通车格式可以定义为“$X[说明]命令”，录入时仅显示“说明”部分。如码表中加入： wubi $X[五笔论坛]/bbs/，输入时候选窗显示为：[五笔论坛]2、短文标签功能(不支持普通词组)。可以防止候选窗显示过长。如码表中加入： dwja [春晓]【春晓】$13$13$20$20$20$20$13春眠不觉晓，$13处处闻啼鸟；$13夜来风雨声，$13花落知多少。 　　输入时候选窗显示为：[春晓]二、详细更新记录5月9日 *修正：临拼时不检索单字的问题 *完善：命令直通车格式可以定义为“$X[说明]命令”，录入时仅显示“说明”部分2005年5月5日22时36分更新： *完善：windows登录窗下禁用“命令直通车”功能 *完善：Windows接口命令仅定义在用户码表中有效 2005年5月1日更新 *完善$X功能，本版开始支持文件名和路径参数（^ 和#)。 如：①$Xcmd#d:tools 则在打开CMD窗口的同时并进入到d:tools目录中 ②$Xnotepad^c:test.txt 则用打开记事本c:test.txt文件2005.4.30更新 *修正：命令功能支持文件路径中空格，用$20表示2005.4.28更新 *自动词组最大长度20 *添加:支持用户词库中加入文件路径打开命令$x 和$X,x表示后面，X表示前台例如：abcd $xC:文件唐诗蜀道难.txt mydoc $Xc:document$20and$settingsxxxxMy$documents等2003.4.25更新 *修正:部分快捷键设置没有禁止选项 2003.4.24更新 *修正:五笔拼音下拼音重码调频的问题 *修正:临拼下自动调频的问题2003.4.23更新 *修正：词组中包括空格或回车时无法在线调频的问题 *修正：临拼可以选用Fx系列快捷键&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-发布: 极点4.2 2005-03-081、修正了公测版发现的一些细节问题,如：①快捷英文下，如果录入的是快捷命令给出提示②屏幕取词与查询的处理方式,不再执行清空剪切板的动作③完善对状态栏显示代码段的处理2、彻底解决win9x下无法使用系统设置的问题3、完善输入法设置的在线帮助功能4、添加了在线速度测试功能5、添加了单字输出模式6、“屏幕取词”：将屏幕上的内容复制到剪切板再按Ctrl+；7、“屏幕查询”：将屏幕上的内容复制到剪切板再按Ctrl+?。如想复制查询结果按Ctrl+c8、可以选择候选窗的字体及风格了9、英文和大写字母状态下强制半角的选项等10、词组最多可以包含512个汉字11、完善静默安装及卸载等一些细节问题。&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-发布: 极点4 2004-08-26今天极点两岁了！在过去的700多个日日夜夜里，极点得到了无数朋友的关心、帮助与支持。正是大家的帮助，也才使极点坚持并走了下来，也才有了今天极点4的诞生，在此感谢所有参与内测的朋友们！感谢你们对极点的支持与帮助！谢谢！也特别感谢LoveEB和npwjm等二笔朋友，极点4的平台特性等许多功能是在LoveEB的帮助下完成的，谢谢你们！极点4虽然经过了长时间的内部测试和公开测试，但囿于我们的水平和软、硬件环境，它可能还会有这样或那样的问题，我们真心的欢迎您反馈您的使用意见与建议，使极点更加符合大家所需并为大家的工作带去一丝便利，这是我们最大的心愿！ 再次感谢所有一直帮助极点到深夜的朋友们！——杜志民 2004年8月26日22时52分&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;&#8212;-发布: 极点3.5正式版 2003-12-31注：极点第一个稳定、成熟版本。下载请至极点主页：http://freewb.y365.com 发布的比较匆忙，附一下修改记录：解决IE下第一个窗口被关闭后其他子窗口状态栏不跟随的问题。暂屏蔽掉汉字候选窗顶层显示功能；12月30日修正了退出IE查找框后，背景不加载及全半角标志不显示等问题；12月30日将“使用旧式输入接口”改名为“游戏输入接口”并放到了freewb.ini中；12月29日修正了切换到临时拼音状态后马上按BackSpace键会删已录入内容的问题；12月28日 .修正了输出大写金额时，如果以“.”结尾数字被缩小10倍的问题；12月28日 .修正了98下读取系统目录出错的问题；12月27日 .完善了极点的出错处理机制,当极点安装目录不存在或有错时不再退出宿主程序 .重新改写了一下消息处理机制；2003-12-25（完。文章最后更新于2015年8月18日）-- http://xbeta.info　　( 6793ee6ca67cfacc9d4333d9ae43a11b)</content></doc>
1 6387 6387
2 16368 9981
3 24282 7914
4 28635 4353
5 35428 6793
6 41675 6247
7 44882 3207
8 47446 2564
9 49041 1595
10 53071 4030
11 56341 3270
12 60199 3858
13 63198 2999
14 70460 7262
15 76740 6280
16 78515 1775
17 80325 1810
18 81879 1554
19 83114 1235
20 88082 4968
21 96080 7998
22 100686 4606
23 104143 3457
24 108039 3896
25 113036 4997
26 115273 2237
27 117154 1881
28 119644 2490
29 123905 4261
30 127170 3265
31 130311 3141
32 134527 4216
33 137319 2792
34 145652 8333
35 147719 2067
36 148620 901
37 151047 2427
38 152898 1851
39 155633 2735
40 158944 3311
41 161327 2383
42 162999 1672
43 165392 2393
44 167071 1679
45 168417 1346
46 173528 5111
47 177078 3550
48 179396 2318
49 180708 1312
50 184338 3630
51 189024 4686
52 189325 301
53 189615 290
54 189916 301
55 190230 314
56 190530 300
57 190848 318
58 201857 11009
59 214411 12554
60 215579 1168
61 221122 5543
62 226255 5133
63 244784 18529
64 250196 5412
65 255330 5134
66 259785 4455
67 273583 13798
68 277163 3580
69 278858 1695
70 279473 615
71 293275 13802
72 306579 13304
73 314041 7462
74 343204 29163
75 346805 3601
76 349351 2546
77 354401 5050
78 358083 3682
79 361842 3759
80 366625 4783
81 370313 3688
82 373570 3257
83 378068 4498
84 380863 2795
85 387298 6435
86 401523 14225
87 402313 790
88 402770 457
89 403076 306
90 407837 4761
91 415962 8125
92 425842 9880
93 427137 1295
94 434608 7471
95 450924 16316
96 457500 6576
97 466172 8672
98 471468 5296
99 474115 2647
100 475524 1409
101 479287 3763
102 482940 3653
103 484422 1482
104 494012 9590
105 506073 12061
106 514317 8244
107 517774 3457
108 522576 4802
109 524607 2031
110 527416 2809
111 551323 23907
112 553279 1956
113 556206 2927
114 557348 1142
115 559502 2154
116 576972 17470
117 580781 3809
118 586730 5949
119 594982 8252
120 606940 11958
121 611885 4945
122 635086 23201
123 639217 4131
124 641492 2275
125 644196 2704
126 648378 4182
127 657136 8758
128 662546 5410
129 662790 244
130 666051 3261
131 674598 8547
132 677002 2404
133 681315 4313
134 683308 1993
135 685997 2689
136 688102 2105
137 694677 6575
138 697933 3256
139 702804 4871
140 710183 7379
141 710494 311
142 715483 4989
143 718367 2884
144 728824 10457
145 731144 2320
146 738603 7459
147 744139 5536
148 755210 11071
149 768370 13160
150 768772 402
151 769450 678
152 769872 422
153 770245 373
154 770951 706
155 771551 600
156 772053 502
157 772706 653
158 773220 514
159 773828 608
160 774441 613
161 774862 421
162 775280 418
163 775870 590
164 776340 470
165 777102 762
166 777647 545
167 778164 517
168 778685 521
169 779073 388
170 779547 474
171 779935 388
172 780366 431
173 780783 417
174 781225 442
175 781701 476
176 782099 398
177 791937 9838
178 803576 11639
179 812910 9334
180 820027 7117
181 833936 13909
182 850277 16341
183 864774 14497
184 878787 14013
185 900069 21282
186 920873 20804
187 935805 14932
188 936119 314
189 936432 313
190 936775 343
191 937077 302
192 937444 367
193 937739 295
194 938045 306
195 938332 287
196 938627 295
197 938932 305
198 939251 319
199 939531 280
200 939811 280
201 940148 337
202 940449 301
203 940750 301
204 941048 298
205 941376 328
206 941707 331
207 944029 2322
208 952644 8615
209 965222 12578
210 974374 9152
211 978843 4469
212 984274 5431
213 986244 1970
214 992696 6452
215 996652 3956
216 1004507 7855
217 1009070 4563
218 1014721 5651
219 1016857 2136
220 1021036 4179
221 1024944 3908
222 1027814 2870
223 1037213 9399
224 1041793 4580
225 1044689 2896
226 1047081 2392
227 1056729 9648
228 1061441 4712
229 1066719 5278
230 1070324 3605
231 1074066 3742
232 1078505 4439
233 1081011 2506
234 1084598 3587
235 1089527 4929
236 1092111 2584
237 1095327 3216
238 1100523 5196
239 1107581 7058
240 1116375 8794
241 1138004 21629
242 1155866 17862
243 1161258 5392
244 1166352 5094
245 1170319 3967
246 1177359 7040
247 1180065 2706
248 1185116 5051
249 1195177 10061
250 1199678 4501
251 1204323 4645
252 1212391 8068
253 1218000 5609
254 1220409 2409
255 1224881 4472
256 1233071 8190
257 1237005 3934
258 1248549 11544
259 1257440 8891
260 1261392 3952
261 1263304 1912
262 1267299 3995
263 1271706 4407
264 1275202 3496
265 1280710 5508
266 1283537 2827
267 1287083 3546
268 1289288 2205
269 1293407 4119
270 1296989 3582
271 1299482 2493
272 1309063 9581
273 1311696 2633
274 1314634 2938
275 1318789 4155
276 1322359 3570
277 1325267 2908
278 1338898 13631
279 1342296 3398
280 1343285 989
281 1347616 4331
282 1350870 3254
283 1358574 7704
284 1358796 222
285 1359023 227
286 1359242 219
287 1359474 232
288 1359720 246
289 1359964 244
290 1360188 224
291 1360434 246
292 1360666 232
293 1360904 238
294 1361734 830
295 1363152 1418
296 1363991 839
297 1365484 1493
298 1366311 827
299 1367149 838
300 1368583 1434
301 1370025 1442
302 1371571 1546
303 1373128 1557
304 1374011 883
305 1375512 1501
306 1376397 885
307 1377906 1509
308 1379343 1437
309 1380220 877
310 1381740 1520
311 1383221 1481
312 1384046 825
313 1384889 843
314 1386328 1439
315 1387763 1435
316 1389180 1417
317 1390631 1451
318 1391456 825
319 1392951 1495
320 1394320 1369
321 1395784 1464
322 1397294 1510
323 1398121 827
324 1399817 1696
325 1401241 1424
326 1402723 1482
327 1404175 1452
328 1405615 1440
329 1407002 1387
330 1408527 1525
331 1409360 833
332 1410219 859
333 1411041 822
334 1412585 1544
335 1413417 832
336 1414250 833
337 1415816 1566
338 1416637 821
339 1418110 1473
340 1418950 840
341 1429828 10878
342 1433189 3361
343 1440984 7795
344 1446306 5322
345 1457677 11371
346 1473604 15927
347 1481571 7967
348 1492826 11255
349 1512386 19560
350 1521575 9189
351 1539718 18143
352 1541941 2223
353 1554704 12763
354 1565228 10524
355 1588976 23748
356 1612690 23714
357 1625116 12426
358 1629572 4456
359 1643371 13799
360 1646952 3581
361 1648648 1696
362 1649264 616
363 1663067 13803
364 1676372 13305
365 1683835 7463
366 1712999 29164
